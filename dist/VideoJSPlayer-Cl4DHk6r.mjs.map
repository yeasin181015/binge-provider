{"version":3,"file":"VideoJSPlayer-Cl4DHk6r.mjs","sources":["../node_modules/global/window.js","../node_modules/global/document.js","../node_modules/is-function/index.js","../node_modules/@videojs/xhr/lib/interceptors.js","../node_modules/@videojs/xhr/lib/retry.js","../node_modules/@videojs/xhr/lib/http-handler.js","../node_modules/@videojs/xhr/lib/index.js","../node_modules/videojs-vtt.js/lib/vtt.js","../node_modules/videojs-vtt.js/lib/vttcue.js","../node_modules/videojs-vtt.js/lib/vttregion.js","../node_modules/videojs-vtt.js/lib/browser-index.js","../node_modules/@videojs/vhs-utils/es/resolve-url.js","../node_modules/@videojs/vhs-utils/es/stream.js","../node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","../node_modules/m3u8-parser/dist/m3u8-parser.es.js","../node_modules/@videojs/vhs-utils/es/codecs.js","../node_modules/@videojs/vhs-utils/es/media-types.js","../node_modules/@videojs/vhs-utils/es/byte-helpers.js","../node_modules/@videojs/vhs-utils/es/media-groups.js","../node_modules/@xmldom/xmldom/lib/conventions.js","../node_modules/@xmldom/xmldom/lib/dom.js","../node_modules/@xmldom/xmldom/lib/entities.js","../node_modules/@xmldom/xmldom/lib/sax.js","../node_modules/@xmldom/xmldom/lib/dom-parser.js","../node_modules/@xmldom/xmldom/lib/index.js","../node_modules/mpd-parser/dist/mpd-parser.es.js","../node_modules/mux.js/lib/utils/numbers.js","../node_modules/mux.js/lib/tools/parse-sidx.js","../node_modules/@videojs/vhs-utils/es/id3-helpers.js","../node_modules/@videojs/vhs-utils/es/mp4-helpers.js","../node_modules/@videojs/vhs-utils/es/ebml-helpers.js","../node_modules/@videojs/vhs-utils/es/nal-helpers.js","../node_modules/@videojs/vhs-utils/es/containers.js","../node_modules/mux.js/lib/utils/clock.js","../node_modules/video.js/dist/video.es.js","../node_modules/@mui/icons-material/VolumeOff.js","../node_modules/@mui/icons-material/VolumeUp.js","../src/components/VolumeButton.tsx","../src/components/VideoJSPlayer.tsx"],"sourcesContent":["var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  if (!fn) {\n    return false\n  }\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","\"use strict\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar InterceptorsStorage = /*#__PURE__*/function () {\n  function InterceptorsStorage() {\n    this.typeToInterceptorsMap_ = new Map();\n    this.enabled_ = false;\n  }\n\n  var _proto = InterceptorsStorage.prototype;\n\n  _proto.getIsEnabled = function getIsEnabled() {\n    return this.enabled_;\n  };\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n  };\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n  };\n\n  _proto.reset = function reset() {\n    this.typeToInterceptorsMap_ = new Map();\n    this.enabled_ = false;\n  };\n\n  _proto.addInterceptor = function addInterceptor(type, interceptor) {\n    if (!this.typeToInterceptorsMap_.has(type)) {\n      this.typeToInterceptorsMap_.set(type, new Set());\n    }\n\n    var interceptorsSet = this.typeToInterceptorsMap_.get(type);\n\n    if (interceptorsSet.has(interceptor)) {\n      // already have this interceptor\n      return false;\n    }\n\n    interceptorsSet.add(interceptor);\n    return true;\n  };\n\n  _proto.removeInterceptor = function removeInterceptor(type, interceptor) {\n    var interceptorsSet = this.typeToInterceptorsMap_.get(type);\n\n    if (interceptorsSet && interceptorsSet.has(interceptor)) {\n      interceptorsSet.delete(interceptor);\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.clearInterceptorsByType = function clearInterceptorsByType(type) {\n    var interceptorsSet = this.typeToInterceptorsMap_.get(type);\n\n    if (!interceptorsSet) {\n      return false;\n    }\n\n    this.typeToInterceptorsMap_.delete(type);\n    this.typeToInterceptorsMap_.set(type, new Set());\n    return true;\n  };\n\n  _proto.clear = function clear() {\n    if (!this.typeToInterceptorsMap_.size) {\n      return false;\n    }\n\n    this.typeToInterceptorsMap_ = new Map();\n    return true;\n  };\n\n  _proto.getForType = function getForType(type) {\n    return this.typeToInterceptorsMap_.get(type) || new Set();\n  };\n\n  _proto.execute = function execute(type, payload) {\n    var interceptors = this.getForType(type);\n\n    for (var _iterator = _createForOfIteratorHelperLoose(interceptors), _step; !(_step = _iterator()).done;) {\n      var interceptor = _step.value;\n\n      try {\n        payload = interceptor(payload);\n      } catch (e) {//ignore\n      }\n    }\n\n    return payload;\n  };\n\n  return InterceptorsStorage;\n}();\n\nmodule.exports = InterceptorsStorage;","\"use strict\";\n\nvar RetryManager = /*#__PURE__*/function () {\n  function RetryManager() {\n    this.maxAttempts_ = 1;\n    this.delayFactor_ = 0.1;\n    this.fuzzFactor_ = 0.1;\n    this.initialDelay_ = 1000;\n    this.enabled_ = false;\n  }\n\n  var _proto = RetryManager.prototype;\n\n  _proto.getIsEnabled = function getIsEnabled() {\n    return this.enabled_;\n  };\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n  };\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n  };\n\n  _proto.reset = function reset() {\n    this.maxAttempts_ = 1;\n    this.delayFactor_ = 0.1;\n    this.fuzzFactor_ = 0.1;\n    this.initialDelay_ = 1000;\n    this.enabled_ = false;\n  };\n\n  _proto.getMaxAttempts = function getMaxAttempts() {\n    return this.maxAttempts_;\n  };\n\n  _proto.setMaxAttempts = function setMaxAttempts(maxAttempts) {\n    this.maxAttempts_ = maxAttempts;\n  };\n\n  _proto.getDelayFactor = function getDelayFactor() {\n    return this.delayFactor_;\n  };\n\n  _proto.setDelayFactor = function setDelayFactor(delayFactor) {\n    this.delayFactor_ = delayFactor;\n  };\n\n  _proto.getFuzzFactor = function getFuzzFactor() {\n    return this.fuzzFactor_;\n  };\n\n  _proto.setFuzzFactor = function setFuzzFactor(fuzzFactor) {\n    this.fuzzFactor_ = fuzzFactor;\n  };\n\n  _proto.getInitialDelay = function getInitialDelay() {\n    return this.initialDelay_;\n  };\n\n  _proto.setInitialDelay = function setInitialDelay(initialDelay) {\n    this.initialDelay_ = initialDelay;\n  };\n\n  _proto.createRetry = function createRetry(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        maxAttempts = _ref.maxAttempts,\n        delayFactor = _ref.delayFactor,\n        fuzzFactor = _ref.fuzzFactor,\n        initialDelay = _ref.initialDelay;\n\n    return new Retry({\n      maxAttempts: maxAttempts || this.maxAttempts_,\n      delayFactor: delayFactor || this.delayFactor_,\n      fuzzFactor: fuzzFactor || this.fuzzFactor_,\n      initialDelay: initialDelay || this.initialDelay_\n    });\n  };\n\n  return RetryManager;\n}();\n\nvar Retry = /*#__PURE__*/function () {\n  function Retry(options) {\n    this.maxAttempts_ = options.maxAttempts;\n    this.delayFactor_ = options.delayFactor;\n    this.fuzzFactor_ = options.fuzzFactor;\n    this.currentDelay_ = options.initialDelay;\n    this.currentAttempt_ = 1;\n  }\n\n  var _proto2 = Retry.prototype;\n\n  _proto2.moveToNextAttempt = function moveToNextAttempt() {\n    this.currentAttempt_++;\n    var delayDelta = this.currentDelay_ * this.delayFactor_;\n    this.currentDelay_ = this.currentDelay_ + delayDelta;\n  };\n\n  _proto2.shouldRetry = function shouldRetry() {\n    return this.currentAttempt_ < this.maxAttempts_;\n  };\n\n  _proto2.getCurrentDelay = function getCurrentDelay() {\n    return this.currentDelay_;\n  };\n\n  _proto2.getCurrentMinPossibleDelay = function getCurrentMinPossibleDelay() {\n    return (1 - this.fuzzFactor_) * this.currentDelay_;\n  };\n\n  _proto2.getCurrentMaxPossibleDelay = function getCurrentMaxPossibleDelay() {\n    return (1 + this.fuzzFactor_) * this.currentDelay_;\n  }\n  /**\n   * For example fuzzFactor is 0.1\n   * This means ±10% deviation\n   * So if we have delay as 1000\n   * This function can generate any value from 900 to 1100\n   */\n  ;\n\n  _proto2.getCurrentFuzzedDelay = function getCurrentFuzzedDelay() {\n    var lowValue = this.getCurrentMinPossibleDelay();\n    var highValue = this.getCurrentMaxPossibleDelay();\n    return lowValue + Math.random() * (highValue - lowValue);\n  };\n\n  return Retry;\n}();\n\nmodule.exports = RetryManager;","\"use strict\";\n\nvar window = require('global/window');\n\nvar httpResponseHandler = function httpResponseHandler(callback, decodeResponseBody) {\n  if (decodeResponseBody === void 0) {\n    decodeResponseBody = false;\n  }\n\n  return function (err, response, responseBody) {\n    // if the XHR failed, return that error\n    if (err) {\n      callback(err);\n      return;\n    } // if the HTTP status code is 4xx or 5xx, the request also failed\n\n\n    if (response.statusCode >= 400 && response.statusCode <= 599) {\n      var cause = responseBody;\n\n      if (decodeResponseBody) {\n        if (window.TextDecoder) {\n          var charset = getCharset(response.headers && response.headers['content-type']);\n\n          try {\n            cause = new TextDecoder(charset).decode(responseBody);\n          } catch (e) {}\n        } else {\n          cause = String.fromCharCode.apply(null, new Uint8Array(responseBody));\n        }\n      }\n\n      callback({\n        cause: cause\n      });\n      return;\n    } // otherwise, request succeeded\n\n\n    callback(null, responseBody);\n  };\n};\n\nfunction getCharset(contentTypeHeader) {\n  if (contentTypeHeader === void 0) {\n    contentTypeHeader = '';\n  }\n\n  return contentTypeHeader.toLowerCase().split(';').reduce(function (charset, contentType) {\n    var _contentType$split = contentType.split('='),\n        type = _contentType$split[0],\n        value = _contentType$split[1];\n\n    if (type.trim() === 'charset') {\n      return value.trim();\n    }\n\n    return charset;\n  }, 'utf-8');\n}\n\nmodule.exports = httpResponseHandler;","\"use strict\";\n\nvar window = require(\"global/window\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar isFunction = require('is-function');\n\nvar InterceptorsStorage = require('./interceptors.js');\n\nvar RetryManager = require(\"./retry.js\");\n\ncreateXHR.httpHandler = require('./http-handler.js');\ncreateXHR.requestInterceptorsStorage = new InterceptorsStorage();\ncreateXHR.responseInterceptorsStorage = new InterceptorsStorage();\ncreateXHR.retryManager = new RetryManager();\n/**\n * @license\n * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\n * Copyright (c) 2014 David Björklund\n * Available under the MIT license\n * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\n */\n\nvar parseHeaders = function parseHeaders(headers) {\n  var result = {};\n\n  if (!headers) {\n    return result;\n  }\n\n  headers.trim().split('\\n').forEach(function (row) {\n    var index = row.indexOf(':');\n    var key = row.slice(0, index).trim().toLowerCase();\n    var value = row.slice(index + 1).trim();\n\n    if (typeof result[key] === 'undefined') {\n      result[key] = value;\n    } else if (Array.isArray(result[key])) {\n      result[key].push(value);\n    } else {\n      result[key] = [result[key], value];\n    }\n  });\n  return result;\n};\n\nmodule.exports = createXHR; // Allow use of default import syntax in TypeScript\n\nmodule.exports.default = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\n\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i++) {\n    iterator(array[i]);\n  }\n}\n\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n\n  return true;\n}\n\nfunction initParams(uri, options, callback) {\n  var params = uri;\n\n  if (isFunction(options)) {\n    callback = options;\n\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = _extends({}, options, {\n      uri: uri\n    });\n  }\n\n  params.callback = callback;\n  return params;\n}\n\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\n\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  } // call all registered request interceptors for a given request type:\n\n\n  if (options.requestType && createXHR.requestInterceptorsStorage.getIsEnabled()) {\n    var requestInterceptorPayload = {\n      uri: options.uri || options.url,\n      headers: options.headers || {},\n      body: options.body,\n      metadata: options.metadata || {},\n      retry: options.retry,\n      timeout: options.timeout\n    };\n    var updatedPayload = createXHR.requestInterceptorsStorage.execute(options.requestType, requestInterceptorPayload);\n    options.uri = updatedPayload.uri;\n    options.headers = updatedPayload.headers;\n    options.body = updatedPayload.body;\n    options.metadata = updatedPayload.metadata;\n    options.retry = updatedPayload.retry;\n    options.timeout = updatedPayload.timeout;\n  }\n\n  var called = false;\n\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n\n  function readystatechange() {\n    // do not call load 2 times when response interceptors are enabled\n    // why do we even need this 2nd load?\n    if (xhr.readyState === 4 && !createXHR.responseInterceptorsStorage.getIsEnabled()) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n\n    return body;\n  }\n\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n    clearTimeout(options.retryTimeout);\n\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n\n    evt.statusCode = 0; // we would like to retry on error:\n\n    if (!aborted && createXHR.retryManager.getIsEnabled() && options.retry && options.retry.shouldRetry()) {\n      options.retryTimeout = setTimeout(function () {\n        options.retry.moveToNextAttempt(); // we want to re-use the same options and the same xhr object:\n\n        options.xhr = xhr;\n\n        _createXHR(options);\n      }, options.retry.getCurrentFuzzedDelay());\n      return;\n    } // call all registered response interceptors for a given request type:\n\n\n    if (options.requestType && createXHR.responseInterceptorsStorage.getIsEnabled()) {\n      var responseInterceptorPayload = {\n        headers: failureResponse.headers || {},\n        body: failureResponse.body,\n        responseUrl: xhr.responseURL,\n        responseType: xhr.responseType\n      };\n\n      var _updatedPayload = createXHR.responseInterceptorsStorage.execute(options.requestType, responseInterceptorPayload);\n\n      failureResponse.body = _updatedPayload.body;\n      failureResponse.headers = _updatedPayload.headers;\n    }\n\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n    clearTimeout(options.retryTimeout);\n\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n\n    var response = failureResponse;\n    var err = null;\n\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    } // call all registered response interceptors for a given request type:\n\n\n    if (options.requestType && createXHR.responseInterceptorsStorage.getIsEnabled()) {\n      var responseInterceptorPayload = {\n        headers: response.headers || {},\n        body: response.body,\n        responseUrl: xhr.responseURL,\n        responseType: xhr.responseType\n      };\n\n      var _updatedPayload2 = createXHR.responseInterceptorsStorage.execute(options.requestType, responseInterceptorPayload);\n\n      response.body = _updatedPayload2.body;\n      response.headers = _updatedPayload2.headers;\n    }\n\n    return callback(err, response, response.body);\n  }\n\n  var xhr = options.xhr || null;\n\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n\n  var key;\n  var aborted;\n  var uri = xhr.url = options.uri || options.url;\n  var method = xhr.method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = xhr.headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = JSON.stringify(options.json === true ? body : options.json);\n    }\n  }\n\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n\n  xhr.onabort = function () {\n    aborted = true;\n    clearTimeout(options.retryTimeout);\n  };\n\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n\n  xhr.send(body || null);\n  return xhr;\n}\n\nfunction getXml(xhr) {\n  // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n  // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n  try {\n    if (xhr.responseType === \"document\") {\n      return xhr.responseXML;\n    }\n\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n      return xhr.responseXML;\n    }\n  } catch (e) {}\n\n  return null;\n}\n\nfunction noop() {}","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar document = require('global/document');\n\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{1,2})(:\\d{1,2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0].trim();\n    var v = kv[1].trim();\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"center\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    try {\n      cue.line = settings.get(\"line\", \"auto\");\n    } catch (e) {}\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    // Safari still uses the old middle value and won't accept center\n    try {\n      cue.align = settings.get(\"align\", \"center\");\n    } catch (e) {\n      cue.align = settings.get(\"align\", \"middle\");\n    }\n    try {\n      cue.position = settings.get(\"position\", \"auto\");\n    } catch (e) {\n      cue.position = settings.get(\"position\", {\n        start: 0,\n        left: 0,\n        center: 50,\n        middle: 50,\n        end: 100,\n        right: 100\n      }, cue.align);\n    }\n\n\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      center: \"center\",\n      middle: \"center\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\n// When evaluating this file as part of a Webpack bundle for server\n// side rendering, `document` is an empty object.\nvar TEXTAREA_ELEMENT = document.createElement && document.createElement(\"textarea\");\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\n// 5.1 default text color\n// 5.2 default text background color is equivalent to text color with bg_ prefix\nvar DEFAULT_COLOR_CLASS = {\n  white: 'rgba(255,255,255,1)',\n  lime: 'rgba(0,255,0,1)',\n  cyan: 'rgba(0,255,255,1)',\n  red: 'rgba(255,0,0,1)',\n  yellow: 'rgba(255,255,0,1)',\n  magenta: 'rgba(255,0,255,1)',\n  blue: 'rgba(0,0,255,1)',\n  black: 'rgba(0,0,0,1)'\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  function unescape(s) {\n    TEXTAREA_ELEMENT.innerHTML = s;\n    s = TEXTAREA_ELEMENT.textContent;\n    TEXTAREA_ELEMENT.textContent = \"\";\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        var classes = m[2].split('.');\n\n        classes.forEach(function(cl) {\n          var bgColor = /^bg_/.test(cl);\n          // slice out `bg_` if it's a background color\n          var colorName = bgColor ? cl.slice(3) : cl;\n\n          if (DEFAULT_COLOR_CLASS.hasOwnProperty(colorName)) {\n            var propName = bgColor ? 'background-color' : 'color';\n            var propValue = DEFAULT_COLOR_CLASS[colorName];\n\n            node.style[propName] = propValue;\n          }\n        });\n\n        node.className = classes.join(' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except middle instead of center on Safari.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n  case \"line-left\":\n    textPos = cue.position;\n    break;\n  case \"center\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n  case \"line-right\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"center\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          // Safari still uses the old middle value and won't accept center\n          try {\n            self.cue.align = \"center\";\n          } catch (e) {\n            self.cue.align = \"middle\";\n          }\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line.replace(/\\u2028/g, '\\n').replace(/u2029/g, '\\n');\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"center\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1,\n  \"auto\": 1,\n  \"line-left\": 1,\n  \"line-right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = \"auto\";\n  var _positionAlign = \"auto\";\n  var _size = 100;\n  var _align = \"center\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"Vertical: an invalid or illegal direction string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"Line: an invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"lineAlign: an invalid or illegal string was specified.\");\n        } else {\n          _lineAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"positionAlign: an invalid or illegal string was specified.\");\n        } else {\n          _positionAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"align: an invalid or illegal alignment string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          console.warn(\"Scroll: an invalid or illegal string was specified.\");\n        } else {\n          _scroll = setting;\n        }\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","import window from 'global/window';\nvar DEFAULT_LOCATION = 'https://example.com';\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n  if (/^data:/.test(baseUrl)) {\n    baseUrl = window.location && window.location.href || '';\n  }\n\n  var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n  // and if baseUrl isn't an absolute url\n\n  var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n  baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n  var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n  // and if we're location-less, remove the location\n  // otherwise, return the url unmodified\n\n  if (removeLocation) {\n    return newUrl.href.slice(DEFAULT_LOCATION.length);\n  } else if (protocolLess) {\n    return newUrl.href.slice(newUrl.protocol.length);\n  }\n\n  return newUrl.href;\n};\n\nexport default resolveUrl;","/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = /*#__PURE__*/function () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  }\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n  ;\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n    // In Video.js we slice listener functions\n    // on trigger so that it does not mess up the order\n    // while we loop through.\n    //\n    // Here we slice on off so that the loop in trigger\n    // can continue using it's old reference to loop without\n    // messing up the order.\n\n    this.listeners[type] = this.listeners[type].slice(0);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n  ;\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  }\n  /**\n   * Destroys the stream and cleans up.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  }\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n  ;\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\nexport { Stream as default };","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","/*! @name m3u8-parser @version 7.2.0 @license Apache-2.0 */\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n\n/**\n * @file m3u8/line-stream.js\n */\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nclass LineStream extends Stream {\n  constructor() {\n    super();\n    this.buffer = '';\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  push(data) {\n    let nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  }\n\n}\n\nconst TAB = String.fromCharCode(0x09);\n\nconst parseByterange = function (byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  const match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  const result = {};\n\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n\n  return result;\n};\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nconst attributeSeparator = function () {\n  const key = '[^=]*';\n  const value = '\"[^\"]*\"|[^,]*';\n  const keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nconst parseAttributes = function (attributes) {\n  const result = {};\n\n  if (!attributes) {\n    return result;\n  } // split the string using attributes as the separator\n\n\n  const attrs = attributes.split(attributeSeparator());\n  let i = attrs.length;\n  let attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * Converts a string into a resolution object\n *\n * @param {string} resolution a string such as 3840x2160\n *\n * @return {Object} An object representing the resolution\n *\n */\n\n\nconst parseResolution = resolution => {\n  const split = resolution.split('x');\n  const result = {};\n\n  if (split[0]) {\n    result.width = parseInt(split[0], 10);\n  }\n\n  if (split[1]) {\n    result.height = parseInt(split[1], 10);\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nclass ParseStream extends Stream {\n  constructor() {\n    super();\n    this.customParsers = [];\n    this.tagMappers = [];\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  push(line) {\n    let match;\n    let event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    const newLines = this.tagMappers.reduce((acc, mapper) => {\n      const mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(newLine => {\n      for (let i = 0; i < this.customParsers.length; i++) {\n        if (this.customParsers[i].call(this, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        this.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n        return;\n      }\n\n      match = /^#EXTINF:([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = _extends(parseByterange(match[1]), {\n          type: 'tag',\n          tagType: 'byterange'\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MAP:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          const attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            event.byterange = parseByterange(attributes.BYTERANGE);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            event.attributes.RESOLUTION = parseResolution(event.attributes.RESOLUTION);\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['FRAME-RATE']) {\n            event.attributes['FRAME-RATE'] = parseFloat(event.attributes['FRAME-RATE']);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-KEY:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-START:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'skip'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n        }\n\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'server-control'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part-inf'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['PART-TARGET'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'preload-hint'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n            const subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n            event.attributes.byterange = event.attributes.byterange || {};\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n            delete event.attributes[key];\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'rendition-report'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DATERANGE:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'daterange'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['ID', 'CLASS'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = String(event.attributes[key]);\n          }\n        });\n        ['START-DATE', 'END-DATE'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = new Date(event.attributes[key]);\n          }\n        });\n        ['DURATION', 'PLANNED-DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['END-ON-NEXT'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/i.test(event.attributes[key]);\n          }\n        });\n        ['SCTE35-CMD', ' SCTE35-OUT', 'SCTE35-IN'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = event.attributes[key].toString(16);\n          }\n        });\n        const clientAttributePattern = /^X-([A-Z]+-)+[A-Z]+$/;\n\n        for (const key in event.attributes) {\n          if (!clientAttributePattern.test(key)) {\n            continue;\n          }\n\n          const isHexaDecimal = /[0-9A-Fa-f]{6}/g.test(event.attributes[key]);\n          const isDecimalFloating = /^\\d+(\\.\\d+)?$/.test(event.attributes[key]);\n          event.attributes[key] = isHexaDecimal ? event.attributes[key].toString(16) : isDecimalFloating ? parseFloat(event.attributes[key]) : String(event.attributes[key]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-INDEPENDENT-SEGMENTS/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'independent-segments'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-I-FRAMES-ONLY/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'i-frames-only'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-CONTENT-STEERING:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'content-steering'\n        };\n        event.attributes = parseAttributes(match[1]);\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-I-FRAME-STREAM-INF:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'i-frame-playlist'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.URI) {\n          event.uri = event.attributes.URI;\n        }\n\n        if (event.attributes.BANDWIDTH) {\n          event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n        }\n\n        if (event.attributes.RESOLUTION) {\n          event.attributes.RESOLUTION = parseResolution(event.attributes.RESOLUTION);\n        }\n\n        if (event.attributes['AVERAGE-BANDWIDTH']) {\n          event.attributes['AVERAGE-BANDWIDTH'] = parseInt(event.attributes['AVERAGE-BANDWIDTH'], 10);\n        }\n\n        if (event.attributes['FRAME-RATE']) {\n          event.attributes['FRAME-RATE'] = parseFloat(event.attributes['FRAME-RATE']);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DEFINE:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'define'\n        };\n        event.attributes = parseAttributes(match[1]);\n        this.trigger('data', event);\n        return;\n      } // unknown tag type\n\n\n      this.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser({\n    expression,\n    customType,\n    dataParser,\n    segment\n  }) {\n    if (typeof dataParser !== 'function') {\n      dataParser = line => line;\n    }\n\n    this.customParsers.push(line => {\n      const match = expression.exec(line);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType,\n          segment\n        });\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper({\n    expression,\n    map\n  }) {\n    const mapFn = line => {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  }\n\n}\n\nconst camelCase = str => str.toLowerCase().replace(/-(\\w)/g, a => a[1].toUpperCase());\n\nconst camelCaseKeys = function (attributes) {\n  const result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\n\nconst setHoldBack = function (manifest) {\n  const {\n    serverControl,\n    targetDuration,\n    partTargetDuration\n  } = manifest;\n\n  if (!serverControl) {\n    return;\n  }\n\n  const tag = '#EXT-X-SERVER-CONTROL';\n  const hb = 'holdBack';\n  const phb = 'partHoldBack';\n  const minTargetDuration = targetDuration && targetDuration * 3;\n  const minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: `${tag} defaulting HOLD-BACK to targetDuration * 3 (${minTargetDuration}).`\n    });\n  }\n\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping HOLD-BACK (${serverControl[hb]}) to targetDuration * 3 (${minTargetDuration})`\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: `${tag} defaulting PART-HOLD-BACK to partTargetDuration * 3 (${serverControl[phb]}).`\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping PART-HOLD-BACK (${serverControl[phb]}) to partTargetDuration * 2 (${minPartDuration}).`\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @param {Object} [opts] Options for the constructor, needed for substitutions\n * @param {string} [opts.uri] URL to check for query params\n * @param {Object} [opts.mainDefinitions] Definitions on main playlist that can be imported\n * @extends Stream\n */\n\n\nclass Parser extends Stream {\n  constructor(opts = {}) {\n    super();\n    this.lineStream = new LineStream();\n    this.parseStream = new ParseStream();\n    this.lineStream.pipe(this.parseStream);\n    this.mainDefinitions = opts.mainDefinitions || {};\n    this.params = new URL(opts.uri, 'https://a.com').searchParams;\n    this.lastProgramDateTime = null;\n    /* eslint-disable consistent-this */\n\n    const self = this;\n    /* eslint-enable consistent-this */\n\n    const uris = [];\n    let currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    let currentMap; // if specified, the active decryption key\n\n    let key;\n    let hasParts = false;\n\n    const noop = function () {};\n\n    const defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    const widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    let currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      dateRanges: [],\n      iFramePlaylists: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    let lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    let lastPartByterangeEnd = 0;\n    const dateRangeTags = {};\n    this.on('end', () => {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n\n      if (!currentUri.key && key) {\n        currentUri.key = key;\n      }\n\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n\n      this.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n    this.parseStream.on('data', function (entry) {\n      let mediaGroup;\n      let rendition; // Replace variables in uris and attributes as defined in #EXT-X-DEFINE tags\n\n      if (self.manifest.definitions) {\n        for (const def in self.manifest.definitions) {\n          if (entry.uri) {\n            entry.uri = entry.uri.replace(`{$${def}}`, self.manifest.definitions[def]);\n          }\n\n          if (entry.attributes) {\n            for (const attr in entry.attributes) {\n              if (typeof entry.attributes[attr] === 'string') {\n                entry.attributes[attr] = entry.attributes[attr].replace(`{$${def}}`, self.manifest.definitions[def]);\n              }\n            }\n          }\n        }\n      }\n\n      ({\n        tag() {\n          // switch based on the tag type\n          (({\n            version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n\n            'allow-cache'() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n\n            byterange() {\n              const byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  /*\n                   * From the latest spec (as of this writing):\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                   *\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                   *\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\n                   * following the sub-range of the previous media segment.\"\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n\n            endlist() {\n              this.manifest.endList = true;\n            },\n\n            inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.title) {\n                currentUri.title = entry.title;\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n\n            key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.microsoft.playready'] = {\n                  uri: entry.attributes.URI\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                const VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                key.iv = entry.attributes.IV;\n              }\n            },\n\n            'media-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n\n            'discontinuity-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n\n            'playlist-type'() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n\n            map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n\n              if (key) {\n                currentMap.key = key;\n              }\n            },\n\n            'stream-inf'() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n\n            media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              const mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n\n            discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n\n            'program-date-time'() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n              const {\n                lastProgramDateTime\n              } = this;\n              this.lastProgramDateTime = new Date(entry.dateTimeString).getTime(); // We should extrapolate Program Date Time backward only during first program date time occurrence.\n              // Once we have at least one program date time point, we can always extrapolate it forward using lastProgramDateTime reference.\n\n              if (lastProgramDateTime === null) {\n                // Extrapolate Program Date Time backward\n                // Since it is first program date time occurrence we're assuming that\n                // all this.manifest.segments have no program date time info\n                this.manifest.segments.reduceRight((programDateTime, segment) => {\n                  segment.programDateTime = programDateTime - segment.duration * 1000;\n                  return segment.programDateTime;\n                }, this.lastProgramDateTime);\n              }\n            },\n\n            targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n\n            start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n\n            'cue-out'() {\n              currentUri.cueOut = entry.data;\n            },\n\n            'cue-out-cont'() {\n              currentUri.cueOutCont = entry.data;\n            },\n\n            'cue-in'() {\n              currentUri.cueIn = entry.data;\n            },\n\n            'skip'() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n\n            'part'() {\n              hasParts = true; // parts are always specifed before a segment\n\n              const segmentIndex = this.manifest.segments.length;\n              const part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n\n              const partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PART #${partIndex} for segment #${segmentIndex}`, entry.attributes, ['URI', 'DURATION']);\n\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach((r, i) => {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    this.trigger('warn', {\n                      message: `#EXT-X-RENDITION-REPORT #${i} lacks required attribute(s): LAST-PART`\n                    });\n                  }\n                });\n              }\n            },\n\n            'server-control'() {\n              const attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n\n              setHoldBack.call(this, this.manifest);\n\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n\n            'preload-hint'() {\n              // parts are always specifed before a segment\n              const segmentIndex = this.manifest.segments.length;\n              const hint = camelCaseKeys(entry.attributes);\n              const isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n\n              const index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex}`, entry.attributes, ['TYPE', 'URI']);\n\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n\n              for (let i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                const otherHint = currentUri.preloadHints[i];\n\n                if (!otherHint.type) {\n                  continue;\n                }\n\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: `#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex} has the same TYPE ${hint.type} as preload hint #${i}`\n                  });\n                }\n              }\n            },\n\n            'rendition-report'() {\n              const report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              const index = this.manifest.renditionReports.length - 1;\n              const required = ['LAST-MSN', 'URI'];\n\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n\n              this.warnOnMissingAttributes_(`#EXT-X-RENDITION-REPORT #${index}`, entry.attributes, required);\n            },\n\n            'part-inf'() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n\n              setHoldBack.call(this, this.manifest);\n            },\n\n            'daterange'() {\n              this.manifest.dateRanges.push(camelCaseKeys(entry.attributes));\n              const index = this.manifest.dateRanges.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-DATERANGE #${index}`, entry.attributes, ['ID', 'START-DATE']);\n              const dateRange = this.manifest.dateRanges[index];\n\n              if (dateRange.endDate && dateRange.startDate && new Date(dateRange.endDate) < new Date(dateRange.startDate)) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE END-DATE must be equal to or later than the value of the START-DATE'\n                });\n              }\n\n              if (dateRange.duration && dateRange.duration < 0) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE DURATION must not be negative'\n                });\n              }\n\n              if (dateRange.plannedDuration && dateRange.plannedDuration < 0) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE PLANNED-DURATION must not be negative'\n                });\n              }\n\n              const endOnNextYes = !!dateRange.endOnNext;\n\n              if (endOnNextYes && !dateRange.class) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must have a CLASS attribute'\n                });\n              }\n\n              if (endOnNextYes && (dateRange.duration || dateRange.endDate)) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must not contain DURATION or END-DATE attributes'\n                });\n              }\n\n              if (dateRange.duration && dateRange.endDate) {\n                const startDate = dateRange.startDate;\n                const newDateInSeconds = startDate.getTime() + dateRange.duration * 1000;\n                this.manifest.dateRanges[index].endDate = new Date(newDateInSeconds);\n              }\n\n              if (!dateRangeTags[dateRange.id]) {\n                dateRangeTags[dateRange.id] = dateRange;\n              } else {\n                for (const attribute in dateRangeTags[dateRange.id]) {\n                  if (!!dateRange[attribute] && JSON.stringify(dateRangeTags[dateRange.id][attribute]) !== JSON.stringify(dateRange[attribute])) {\n                    this.trigger('warn', {\n                      message: 'EXT-X-DATERANGE tags with the same ID in a playlist must have the same attributes values'\n                    });\n                    break;\n                  }\n                } // if tags with the same ID do not have conflicting attributes, merge them\n\n\n                const dateRangeWithSameId = this.manifest.dateRanges.findIndex(dateRangeToFind => dateRangeToFind.id === dateRange.id);\n                this.manifest.dateRanges[dateRangeWithSameId] = _extends(this.manifest.dateRanges[dateRangeWithSameId], dateRange);\n                dateRangeTags[dateRange.id] = _extends(dateRangeTags[dateRange.id], dateRange); // after merging, delete the duplicate dateRange that was added last\n\n                this.manifest.dateRanges.pop();\n              }\n            },\n\n            'independent-segments'() {\n              this.manifest.independentSegments = true;\n            },\n\n            'i-frames-only'() {\n              this.manifest.iFramesOnly = true;\n              this.requiredCompatibilityversion(this.manifest.version, 4);\n            },\n\n            'content-steering'() {\n              this.manifest.contentSteering = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-CONTENT-STEERING', entry.attributes, ['SERVER-URI']);\n            },\n\n            /** @this {Parser} */\n            define() {\n              this.manifest.definitions = this.manifest.definitions || {};\n\n              const addDef = (n, v) => {\n                if (n in this.manifest.definitions) {\n                  // An EXT-X-DEFINE tag MUST NOT specify the same Variable Name as any other\n                  // EXT-X-DEFINE tag in the same Playlist.  Parsers that encounter duplicate\n                  // Variable Name declarations MUST fail to parse the Playlist.\n                  this.trigger('error', {\n                    message: `EXT-X-DEFINE: Duplicate name ${n}`\n                  });\n                  return;\n                }\n\n                this.manifest.definitions[n] = v;\n              };\n\n              if ('QUERYPARAM' in entry.attributes) {\n                if ('NAME' in entry.attributes || 'IMPORT' in entry.attributes) {\n                  // An EXT-X-DEFINE tag MUST contain either a NAME, an IMPORT, or a\n                  // QUERYPARAM attribute, but only one of the three.  Otherwise, the\n                  // client MUST fail to parse the Playlist.\n                  this.trigger('error', {\n                    message: 'EXT-X-DEFINE: Invalid attributes'\n                  });\n                  return;\n                }\n\n                const val = this.params.get(entry.attributes.QUERYPARAM);\n\n                if (!val) {\n                  // If the QUERYPARAM attribute value does not match any query parameter in\n                  // the URI or the matching parameter has no associated value, the parser\n                  // MUST fail to parse the Playlist.  If more than one parameter matches,\n                  // any of the associated values MAY be used.\n                  this.trigger('error', {\n                    message: `EXT-X-DEFINE: No query param ${entry.attributes.QUERYPARAM}`\n                  });\n                  return;\n                }\n\n                addDef(entry.attributes.QUERYPARAM, decodeURIComponent(val));\n                return;\n              }\n\n              if ('NAME' in entry.attributes) {\n                if ('IMPORT' in entry.attributes) {\n                  // An EXT-X-DEFINE tag MUST contain either a NAME, an IMPORT, or a\n                  // QUERYPARAM attribute, but only one of the three.  Otherwise, the\n                  // client MUST fail to parse the Playlist.\n                  this.trigger('error', {\n                    message: 'EXT-X-DEFINE: Invalid attributes'\n                  });\n                  return;\n                }\n\n                if (!('VALUE' in entry.attributes) || typeof entry.attributes.VALUE !== 'string') {\n                  // This attribute is REQUIRED if the EXT-X-DEFINE tag has a NAME attribute.\n                  // The quoted-string MAY be empty.\n                  this.trigger('error', {\n                    message: `EXT-X-DEFINE: No value for ${entry.attributes.NAME}`\n                  });\n                  return;\n                }\n\n                addDef(entry.attributes.NAME, entry.attributes.VALUE);\n                return;\n              }\n\n              if ('IMPORT' in entry.attributes) {\n                if (!this.mainDefinitions[entry.attributes.IMPORT]) {\n                  // Covers two conditions, as mainDefinitions will always be empty on main\n                  //\n                  // EXT-X-DEFINE tags containing the IMPORT attribute MUST NOT occur in\n                  // Multivariant Playlists; they are only allowed in Media Playlists.\n                  //\n                  // If the IMPORT attribute value does not match any Variable Name in the\n                  // Multivariant Playlist, or if the Media Playlist loaded from a\n                  // Multivariant Playlist, the parser MUST fail the Playlist.\n                  this.trigger('error', {\n                    message: `EXT-X-DEFINE: No value ${entry.attributes.IMPORT} to import, or IMPORT used on main playlist`\n                  });\n                  return;\n                }\n\n                addDef(entry.attributes.IMPORT, this.mainDefinitions[entry.attributes.IMPORT]);\n                return;\n              } // An EXT-X-DEFINE tag MUST contain either a NAME, an IMPORT, or a QUERYPARAM\n              // attribute, but only one of the three.  Otherwise, the client MUST fail to\n              // parse the Playlist.\n\n\n              this.trigger('error', {\n                message: 'EXT-X-DEFINE: No attribute'\n              });\n            },\n\n            'i-frame-playlist'() {\n              this.manifest.iFramePlaylists.push({\n                attributes: entry.attributes,\n                uri: entry.uri,\n                timeline: currentTimeline\n              });\n              this.warnOnMissingAttributes_('#EXT-X-I-FRAME-STREAM-INF', entry.attributes, ['BANDWIDTH', 'URI']);\n            }\n\n          })[entry.tagType] || noop).call(self);\n        },\n\n        uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (key) {\n            currentUri.key = key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n\n          lastPartByterangeEnd = 0; // Once we have at least one program date time we can always extrapolate it forward\n\n          if (this.lastProgramDateTime !== null) {\n            currentUri.programDateTime = this.lastProgramDateTime;\n            this.lastProgramDateTime += currentUri.duration * 1000;\n          } // prepare for the next URI\n\n\n          currentUri = {};\n        },\n\n        comment() {// comments are not important for playback\n        },\n\n        custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n\n      })[entry.type].call(self);\n    });\n  }\n\n  requiredCompatibilityversion(currentVersion, targetVersion) {\n    if (currentVersion < targetVersion || !currentVersion) {\n      this.trigger('warn', {\n        message: `manifest must be at least version ${targetVersion}`\n      });\n    }\n  }\n\n  warnOnMissingAttributes_(identifier, attributes, required) {\n    const missing = [];\n    required.forEach(function (key) {\n      if (!attributes.hasOwnProperty(key)) {\n        missing.push(key);\n      }\n    });\n\n    if (missing.length) {\n      this.trigger('warn', {\n        message: `${identifier} lacks required attribute(s): ${missing.join(', ')}`\n      });\n    }\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n\n    if (this.manifest.dateRanges.length && this.lastProgramDateTime === null) {\n      this.trigger('warn', {\n        message: 'A playlist with EXT-X-DATERANGE tag must contain atleast one EXT-X-PROGRAM-DATE-TIME tag'\n      });\n    }\n\n    this.lastProgramDateTime = null;\n    this.trigger('end');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  }\n\n}\n\nexport { LineStream, ParseStream, Parser };\n","import window from 'global/window';\nvar regexs = {\n  // to determine mime types\n  mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,\n  webm: /^(vp0?[89]|av0?1|opus|vorbis)/,\n  ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,\n  // to determine if a codec is audio or video\n  video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,\n  audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,\n  text: /^(stpp.ttml.im1t)/,\n  // mux.js support regex\n  muxerVideo: /^(avc0?1)/,\n  muxerAudio: /^(mp4a)/,\n  // match nothing as muxer does not support text right now.\n  // there cannot never be a character before the start of a string\n  // so this matches nothing.\n  muxerText: /a^/\n};\nvar mediaTypes = ['video', 'audio', 'text'];\nvar upperMediaTypes = ['Video', 'Audio', 'Text'];\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string} codec\n *        Codec string to translate\n * @return {string}\n *         The translated codec string\n */\n\nexport var translateLegacyCodec = function translateLegacyCodec(codec) {\n  if (!codec) {\n    return codec;\n  }\n\n  return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n    var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n    var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n    return 'avc1.' + profileHex + '00' + avcLevelHex;\n  });\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec strings with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string[]} codecs\n *        An array of codec strings to translate\n * @return {string[]}\n *         The translated array of codec strings\n */\n\nexport var translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(translateLegacyCodec);\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param {string} codecString\n *        The codec string\n * @return {string}\n *         The codec string with old apple-style codecs replaced\n *\n * @private\n */\n\nexport var mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * @typedef {Object} ParsedCodecInfo\n * @property {number} codecCount\n *           Number of codecs parsed\n * @property {string} [videoCodec]\n *           Parsed video codec (if found)\n * @property {string} [videoObjectTypeIndicator]\n *           Video object type indicator (if found)\n * @property {string|null} audioProfile\n *           Audio profile\n */\n\n/**\n * Parses a codec string to retrieve the number of codecs specified, the video codec and\n * object type indicator, and the audio profile.\n *\n * @param {string} [codecString]\n *        The codec string to parse\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var parseCodecs = function parseCodecs(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  var codecs = codecString.split(',');\n  var result = [];\n  codecs.forEach(function (codec) {\n    codec = codec.trim();\n    var codecType;\n    mediaTypes.forEach(function (name) {\n      var match = regexs[name].exec(codec.toLowerCase());\n\n      if (!match || match.length <= 1) {\n        return;\n      }\n\n      codecType = name; // maintain codec case\n\n      var type = codec.substring(0, match[1].length);\n      var details = codec.replace(type, '');\n      result.push({\n        type: type,\n        details: details,\n        mediaType: name\n      });\n    });\n\n    if (!codecType) {\n      result.push({\n        type: codec,\n        details: '',\n        mediaType: 'unknown'\n      });\n    }\n  });\n  return result;\n};\n/**\n * Returns a ParsedCodecInfo object for the default alternate audio playlist if there is\n * a default alternate audio playlist for the provided audio group.\n *\n * @param {Object} master\n *        The master playlist\n * @param {string} audioGroupId\n *        ID of the audio group for which to find the default codec info\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var codecsFromDefault = function codecsFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS);\n    }\n  }\n\n  return null;\n};\nexport var isVideoCodec = function isVideoCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.video.test(codec.trim().toLowerCase());\n};\nexport var isAudioCodec = function isAudioCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.audio.test(codec.trim().toLowerCase());\n};\nexport var isTextCodec = function isTextCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.text.test(codec.trim().toLowerCase());\n};\nexport var getMimeForCodec = function getMimeForCodec(codecString) {\n  if (!codecString || typeof codecString !== 'string') {\n    return;\n  }\n\n  var codecs = codecString.toLowerCase().split(',').map(function (c) {\n    return translateLegacyCodec(c.trim());\n  }); // default to video type\n\n  var type = 'video'; // only change to audio type if the only codec we have is\n  // audio\n\n  if (codecs.length === 1 && isAudioCodec(codecs[0])) {\n    type = 'audio';\n  } else if (codecs.length === 1 && isTextCodec(codecs[0])) {\n    // text uses application/<container> for now\n    type = 'application';\n  } // default the container to mp4\n\n\n  var container = 'mp4'; // every codec must be able to go into the container\n  // for that container to be the correct one\n\n  if (codecs.every(function (c) {\n    return regexs.mp4.test(c);\n  })) {\n    container = 'mp4';\n  } else if (codecs.every(function (c) {\n    return regexs.webm.test(c);\n  })) {\n    container = 'webm';\n  } else if (codecs.every(function (c) {\n    return regexs.ogg.test(c);\n  })) {\n    container = 'ogg';\n  }\n\n  return type + \"/\" + container + \";codecs=\\\"\" + codecString + \"\\\"\";\n};\n/**\n * Tests whether the codec is supported by MediaSource. Optionally also tests ManagedMediaSource.\n *\n * @param {string} codecString\n *        Codec to test\n * @param {boolean} [withMMS]\n *        Whether to check if ManagedMediaSource supports it\n * @return {boolean}\n *          Codec is supported\n */\n\nexport var browserSupportsCodec = function browserSupportsCodec(codecString, withMMS) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  if (withMMS === void 0) {\n    withMMS = false;\n  }\n\n  return window.MediaSource && window.MediaSource.isTypeSupported && window.MediaSource.isTypeSupported(getMimeForCodec(codecString)) || withMMS && window.ManagedMediaSource && window.ManagedMediaSource.isTypeSupported && window.ManagedMediaSource.isTypeSupported(getMimeForCodec(codecString)) || false;\n};\nexport var muxerSupportsCodec = function muxerSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return codecString.toLowerCase().split(',').every(function (codec) {\n    codec = codec.trim(); // any match is supported.\n\n    for (var i = 0; i < upperMediaTypes.length; i++) {\n      var type = upperMediaTypes[i];\n\n      if (regexs[\"muxer\" + type].test(codec)) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n};\nexport var DEFAULT_AUDIO_CODEC = 'mp4a.40.2';\nexport var DEFAULT_VIDEO_CODEC = 'avc1.4d400d';","var MPEGURL_REGEX = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\nvar DASH_REGEX = /^application\\/dash\\+xml/i;\n/**\n * Returns a string that describes the type of source based on a video source object's\n * media type.\n *\n * @see {@link https://dev.w3.org/html5/pf-summary/video.html#dom-source-type|Source Type}\n *\n * @param {string} type\n *        Video source object media type\n * @return {('hls'|'dash'|'vhs-json'|null)}\n *         VHS source type string\n */\n\nexport var simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  if (MPEGURL_REGEX.test(type)) {\n    return 'hls';\n  }\n\n  if (DASH_REGEX.test(type)) {\n    return 'dash';\n  } // Denotes the special case of a manifest object passed to http-streaming instead of a\n  // source URL.\n  //\n  // See https://en.wikipedia.org/wiki/Media_type for details on specifying media types.\n  //\n  // In this case, vnd stands for vendor, video.js for the organization, VHS for this\n  // project, and the +json suffix identifies the structure of the media type.\n\n\n  if (type === 'application/vnd.videojs.vhs+json') {\n    return 'vhs-json';\n  }\n\n  return null;\n};","import window from 'global/window'; // const log2 = Math.log2 ? Math.log2 : (x) => (Math.log(x) / Math.log(2));\n\nvar repeat = function repeat(str, len) {\n  var acc = '';\n\n  while (len--) {\n    acc += str;\n  }\n\n  return acc;\n}; // count the number of bits it would take to represent a number\n// we used to do this with log2 but BigInt does not support builtin math\n// Math.ceil(log2(x));\n\n\nexport var countBits = function countBits(x) {\n  return x.toString(2).length;\n}; // count the number of whole bytes it would take to represent a number\n\nexport var countBytes = function countBytes(x) {\n  return Math.ceil(countBits(x) / 8);\n};\nexport var padStart = function padStart(b, len, str) {\n  if (str === void 0) {\n    str = ' ';\n  }\n\n  return (repeat(str, len) + b.toString()).slice(-len);\n};\nexport var isArrayBufferView = function isArrayBufferView(obj) {\n  if (ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(obj);\n  }\n\n  return obj && obj.buffer instanceof ArrayBuffer;\n};\nexport var isTypedArray = function isTypedArray(obj) {\n  return isArrayBufferView(obj);\n};\nexport var toUint8 = function toUint8(bytes) {\n  if (bytes instanceof Uint8Array) {\n    return bytes;\n  }\n\n  if (!Array.isArray(bytes) && !isTypedArray(bytes) && !(bytes instanceof ArrayBuffer)) {\n    // any non-number or NaN leads to empty uint8array\n    // eslint-disable-next-line\n    if (typeof bytes !== 'number' || typeof bytes === 'number' && bytes !== bytes) {\n      bytes = 0;\n    } else {\n      bytes = [bytes];\n    }\n  }\n\n  return new Uint8Array(bytes && bytes.buffer || bytes, bytes && bytes.byteOffset || 0, bytes && bytes.byteLength || 0);\n};\nexport var toHexString = function toHexString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(16), 2, '0');\n  }\n\n  return str;\n};\nexport var toBinaryString = function toBinaryString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(2), 8, '0');\n  }\n\n  return str;\n};\nvar BigInt = window.BigInt || Number;\nvar BYTE_TABLE = [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\nexport var ENDIANNESS = function () {\n  var a = new Uint16Array([0xFFCC]);\n  var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n\n  if (b[0] === 0xFF) {\n    return 'big';\n  }\n\n  if (b[0] === 0xCC) {\n    return 'little';\n  }\n\n  return 'unknown';\n}();\nexport var IS_BIG_ENDIAN = ENDIANNESS === 'big';\nexport var IS_LITTLE_ENDIAN = ENDIANNESS === 'little';\nexport var bytesToNumber = function bytesToNumber(bytes, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$signed = _ref.signed,\n      signed = _ref$signed === void 0 ? false : _ref$signed,\n      _ref$le = _ref.le,\n      le = _ref$le === void 0 ? false : _ref$le;\n\n  bytes = toUint8(bytes);\n  var fn = le ? 'reduce' : 'reduceRight';\n  var obj = bytes[fn] ? bytes[fn] : Array.prototype[fn];\n  var number = obj.call(bytes, function (total, byte, i) {\n    var exponent = le ? i : Math.abs(i + 1 - bytes.length);\n    return total + BigInt(byte) * BYTE_TABLE[exponent];\n  }, BigInt(0));\n\n  if (signed) {\n    var max = BYTE_TABLE[bytes.length] / BigInt(2) - BigInt(1);\n    number = BigInt(number);\n\n    if (number > max) {\n      number -= max;\n      number -= max;\n      number -= BigInt(2);\n    }\n  }\n\n  return Number(number);\n};\nexport var numberToBytes = function numberToBytes(number, _temp2) {\n  var _ref2 = _temp2 === void 0 ? {} : _temp2,\n      _ref2$le = _ref2.le,\n      le = _ref2$le === void 0 ? false : _ref2$le;\n\n  // eslint-disable-next-line\n  if (typeof number !== 'bigint' && typeof number !== 'number' || typeof number === 'number' && number !== number) {\n    number = 0;\n  }\n\n  number = BigInt(number);\n  var byteCount = countBytes(number);\n  var bytes = new Uint8Array(new ArrayBuffer(byteCount));\n\n  for (var i = 0; i < byteCount; i++) {\n    var byteIndex = le ? i : Math.abs(i + 1 - bytes.length);\n    bytes[byteIndex] = Number(number / BYTE_TABLE[i] & BigInt(0xFF));\n\n    if (number < 0) {\n      bytes[byteIndex] = Math.abs(~bytes[byteIndex]);\n      bytes[byteIndex] -= i === 0 ? 1 : 2;\n    }\n  }\n\n  return bytes;\n};\nexport var bytesToString = function bytesToString(bytes) {\n  if (!bytes) {\n    return '';\n  } // TODO: should toUint8 handle cases where we only have 8 bytes\n  // but report more since this is a Uint16+ Array?\n\n\n  bytes = Array.prototype.slice.call(bytes);\n  var string = String.fromCharCode.apply(null, toUint8(bytes));\n\n  try {\n    return decodeURIComponent(escape(string));\n  } catch (e) {// if decodeURIComponent/escape fails, we are dealing with partial\n    // or full non string data. Just return the potentially garbled string.\n  }\n\n  return string;\n};\nexport var stringToBytes = function stringToBytes(string, stringIsBytes) {\n  if (typeof string !== 'string' && string && typeof string.toString === 'function') {\n    string = string.toString();\n  }\n\n  if (typeof string !== 'string') {\n    return new Uint8Array();\n  } // If the string already is bytes, we don't have to do this\n  // otherwise we do this so that we split multi length characters\n  // into individual bytes\n\n\n  if (!stringIsBytes) {\n    string = unescape(encodeURIComponent(string));\n  }\n\n  var view = new Uint8Array(string.length);\n\n  for (var i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n\n  return view;\n};\nexport var concatTypedArrays = function concatTypedArrays() {\n  for (var _len = arguments.length, buffers = new Array(_len), _key = 0; _key < _len; _key++) {\n    buffers[_key] = arguments[_key];\n  }\n\n  buffers = buffers.filter(function (b) {\n    return b && (b.byteLength || b.length) && typeof b !== 'string';\n  });\n\n  if (buffers.length <= 1) {\n    // for 0 length we will return empty uint8\n    // for 1 length we return the first uint8\n    return toUint8(buffers[0]);\n  }\n\n  var totalLen = buffers.reduce(function (total, buf, i) {\n    return total + (buf.byteLength || buf.length);\n  }, 0);\n  var tempBuffer = new Uint8Array(totalLen);\n  var offset = 0;\n  buffers.forEach(function (buf) {\n    buf = toUint8(buf);\n    tempBuffer.set(buf, offset);\n    offset += buf.byteLength;\n  });\n  return tempBuffer;\n};\n/**\n * Check if the bytes \"b\" are contained within bytes \"a\".\n *\n * @param {Uint8Array|Array} a\n *        Bytes to check in\n *\n * @param {Uint8Array|Array} b\n *        Bytes to check for\n *\n * @param {Object} options\n *        options\n *\n * @param {Array|Uint8Array} [offset=0]\n *        offset to use when looking at bytes in a\n *\n * @param {Array|Uint8Array} [mask=[]]\n *        mask to use on bytes before comparison.\n *\n * @return {boolean}\n *         If all bytes in b are inside of a, taking into account\n *         bit masks.\n */\n\nexport var bytesMatch = function bytesMatch(a, b, _temp3) {\n  var _ref3 = _temp3 === void 0 ? {} : _temp3,\n      _ref3$offset = _ref3.offset,\n      offset = _ref3$offset === void 0 ? 0 : _ref3$offset,\n      _ref3$mask = _ref3.mask,\n      mask = _ref3$mask === void 0 ? [] : _ref3$mask;\n\n  a = toUint8(a);\n  b = toUint8(b); // ie 11 does not support uint8 every\n\n  var fn = b.every ? b.every : Array.prototype.every;\n  return b.length && a.length - offset >= b.length && // ie 11 doesn't support every on uin8\n  fn.call(b, function (bByte, i) {\n    var aByte = mask[i] ? mask[i] & a[offset + i] : a[offset + i];\n    return bByte === aByte;\n  });\n};\nexport var sliceBytes = function sliceBytes(src, start, end) {\n  if (Uint8Array.prototype.slice) {\n    return Uint8Array.prototype.slice.call(src, start, end);\n  }\n\n  return new Uint8Array(Array.prototype.slice.call(src, start, end));\n};\nexport var reverseBytes = function reverseBytes(src) {\n  if (src.reverse) {\n    return src.reverse();\n  }\n\n  return Array.prototype.reverse.call(src);\n};","/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {string[]} groups\n *        The media groups to call the callback for\n * @param {Function} callback\n *        Callback to call for each media group\n */\nexport var forEachMediaGroup = function forEachMediaGroup(master, groups, callback) {\n  groups.forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};","'use strict'\n\n/**\n * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\n *\n * Works with anything that has a `length` property and index access properties, including NodeList.\n *\n * @template {unknown} T\n * @param {Array<T> | ({length:number, [number]: T})} list\n * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate\n * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,\n * \t\t\t\tallows injecting a custom implementation in tests\n * @returns {T | undefined}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\n */\nfunction find(list, predicate, ac) {\n\tif (ac === undefined) {\n\t\tac = Array.prototype;\n\t}\n\tif (list && typeof ac.find === 'function') {\n\t\treturn ac.find.call(list, predicate);\n\t}\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\tvar item = list[i];\n\t\t\tif (predicate.call(undefined, item, i, list)) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * \"Shallow freezes\" an object to render it immutable.\n * Uses `Object.freeze` if available,\n * otherwise the immutability is only in the type.\n *\n * Is used to create \"enum like\" objects.\n *\n * @template T\n * @param {T} object the object to freeze\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n * \t\t\t\tallows to inject custom object constructor for tests\n * @returns {Readonly<T>}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */\nfunction freeze(object, oc) {\n\tif (oc === undefined) {\n\t\toc = Object\n\t}\n\treturn oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object\n}\n\n/**\n * Since we can not rely on `Object.assign` we provide a simplified version\n * that is sufficient for our needs.\n *\n * @param {Object} target\n * @param {Object | null | undefined} source\n *\n * @returns {Object} target\n * @throws TypeError if target is not an object\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign\n */\nfunction assign(target, source) {\n\tif (target === null || typeof target !== 'object') {\n\t\tthrow new TypeError('target is not an object')\n\t}\n\tfor (var key in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, key)) {\n\t\t\ttarget[key] = source[key]\n\t\t}\n\t}\n\treturn target\n}\n\n/**\n * All mime types that are allowed as input to `DOMParser.parseFromString`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n * @see DOMParser.prototype.parseFromString\n */\nvar MIME_TYPE = freeze({\n\t/**\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\n\t *\n\t * @see DOMParser.SupportedType.isHTML\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n\t */\n\tHTML: 'text/html',\n\n\t/**\n\t * Helper method to check a mime type if it indicates an HTML document\n\t *\n\t * @param {string} [value]\n\t * @returns {boolean}\n\t *\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n\tisHTML: function (value) {\n\t\treturn value === MIME_TYPE.HTML\n\t},\n\n\t/**\n\t * `application/xml`, the standard mime type for XML documents.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_APPLICATION: 'application/xml',\n\n\t/**\n\t * `text/html`, an alias for `application/xml`.\n\t *\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_TEXT: 'text/xml',\n\n\t/**\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n\t * but is parsed as an XML document.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n\t */\n\tXML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n\t/**\n\t * `image/svg+xml`,\n\t *\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n\t */\n\tXML_SVG_IMAGE: 'image/svg+xml',\n})\n\n/**\n * Namespaces that are used in this code base.\n *\n * @see http://www.w3.org/TR/REC-xml-names\n */\nvar NAMESPACE = freeze({\n\t/**\n\t * The XHTML namespace.\n\t *\n\t * @see http://www.w3.org/1999/xhtml\n\t */\n\tHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Checks if `uri` equals `NAMESPACE.HTML`.\n\t *\n\t * @param {string} [uri]\n\t *\n\t * @see NAMESPACE.HTML\n\t */\n\tisHTML: function (uri) {\n\t\treturn uri === NAMESPACE.HTML\n\t},\n\n\t/**\n\t * The SVG namespace.\n\t *\n\t * @see http://www.w3.org/2000/svg\n\t */\n\tSVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * The `xml:` namespace.\n\t *\n\t * @see http://www.w3.org/XML/1998/namespace\n\t */\n\tXML: 'http://www.w3.org/XML/1998/namespace',\n\n\t/**\n\t * The `xmlns:` namespace\n\t *\n\t * @see https://www.w3.org/2000/xmlns/\n\t */\n\tXMLNS: 'http://www.w3.org/2000/xmlns/',\n})\n\nexports.assign = assign;\nexports.find = find;\nexports.freeze = freeze;\nexports.MIME_TYPE = MIME_TYPE;\nexports.NAMESPACE = NAMESPACE;\n","var conventions = require(\"./conventions\");\n\nvar find = conventions.find;\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\nfunction notEmptyString (input) {\n\treturn input !== ''\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\nfunction splitOnASCIIWhitespace(input) {\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\nfunction orderedSetReducer (current, element) {\n\tif (!current.hasOwnProperty(element)) {\n\t\tcurrent[element] = true;\n\t}\n\treturn current;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\nfunction toOrderedSet(input) {\n\tif (!input) return [];\n\tvar list = splitOnASCIIWhitespace(input);\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\n}\n\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\nfunction arrayIncludes (list) {\n\treturn function(element) {\n\t\treturn list && list.indexOf(element) !== -1;\n\t}\n}\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tif (Object.prototype.hasOwnProperty.call(src, p)) {\n\t\t\tdest[p] = src[p];\n\t\t}\n\t}\n}\n\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknown Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\n\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0,\n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long\n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n\t */\n\titem: function(index) {\n\t\treturn index >= 0 && index < this.length ? this[index] : null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t},\n\t/**\n\t * @private\n\t * @param {function (Node):boolean} predicate\n\t * @returns {Node[]}\n\t */\n\tfilter: function (predicate) {\n\t\treturn Array.prototype.filter.call(this, predicate);\n\t},\n\t/**\n\t * @private\n\t * @param {Node} item\n\t * @returns {number}\n\t */\n\tindexOf: function (item) {\n\t\treturn Array.prototype.indexOf.call(this, item);\n\t},\n};\n\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif (list._inc !== inc) {\n\t\tvar ls = list._refresh(list._node);\n\t\t__set__(list,'length',ls.length);\n\t\tif (!list.$$length || ls.length < list.$$length) {\n\t\t\tfor (var i = ls.length; i in list; i++) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\t\t\tdelete list[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i] || null;\n}\n\n_extends(LiveNodeList,NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\n\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\nfunction DOMImplementation() {\n}\n\nDOMImplementation.prototype = {\n\t/**\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n\t * The different implementations fairly diverged in what kind of features were reported.\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\n\t *\n\t * @param {string} feature\n\t * @param {string} [version]\n\t * @returns {boolean} always true\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t */\n\thasFeature: function(feature, version) {\n\t\t\treturn true;\n\t},\n\t/**\n\t * Creates an XML Document object of the specified type with its document element.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string|null} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {DocumentType=null} doctype\n\t * @returns {Document}\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype || null;\n\t\tif (doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif (qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t/**\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n\t *\n\t * __This behavior is slightly different from the in the specs__:\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string} qualifiedName\n\t * @param {string} [publicId]\n\t * @param {string} [systemId]\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId || '';\n\t\tnode.systemId = systemId || '';\n\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises\n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises\n\t\t_insertBefore(this, newChild,oldChild, assertPreReplacementValidityInDocument);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n\t/**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n\t *\n\t * @param {string | null} namespaceURI\n\t * @returns {string | null}\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t */\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n\t\t\t\t\t\t\treturn n;\n\t\t\t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(Object.prototype.hasOwnProperty.call(map, prefix)){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n\tthis.ownerDocument = this;\n}\n\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\n\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\n\n/**\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\n * Passing `newChild` means it will be appended.\n * Otherwise it's assumed that an item has been removed,\n * and `el.firstNode` and it's `.nextSibling` are used\n * to walk the current list of child nodes.\n *\n * @param {Document} doc\n * @param {Node} el\n * @param {Node} [newChild]\n * @private\n */\nfunction _onUpdateChild (doc, el, newChild) {\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif (newChild) {\n\t\t\tcs[cs.length++] = newChild;\n\t\t} else {\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile (child) {\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t\tdelete cs[cs.length];\n\t\t}\n\t}\n}\n\n/**\n * Removes the connections between `parentNode` and `child`\n * and any existing `child.previousSibling` or `child.nextSibling`.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n *\n * @param {Node} parentNode\n * @param {Node} child\n * @returns {Node} the child that was removed.\n * @private\n */\nfunction _removeChild (parentNode, child) {\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif (previous) {\n\t\tprevious.nextSibling = next;\n\t} else {\n\t\tparentNode.firstChild = next;\n\t}\n\tif (next) {\n\t\tnext.previousSibling = previous;\n\t} else {\n\t\tparentNode.lastChild = previous;\n\t}\n\tchild.parentNode = null;\n\tchild.previousSibling = null;\n\tchild.nextSibling = null;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode);\n\treturn child;\n}\n\n/**\n * Returns `true` if `node` can be a parent for insertion.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasValidParentNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)\n\t);\n}\n\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasInsertableNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(isElementNode(node) ||\n\t\t\tisTextNode(node) ||\n\t\t\tisDocTypeNode(node) ||\n\t\t\tnode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\n\t\t\tnode.nodeType === Node.COMMENT_NODE ||\n\t\t\tnode.nodeType === Node.PROCESSING_INSTRUCTION_NODE)\n\t);\n}\n\n/**\n * Returns true if `node` is a DOCTYPE node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isDocTypeNode(node) {\n\treturn node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n\n/**\n * Returns true if the node is an element\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isElementNode(node) {\n\treturn node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isTextNode(node) {\n\treturn node && node.nodeType === Node.TEXT_NODE;\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementInsertionPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\tif (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementReplacementPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\n\tfunction hasElementChildThatIsNotChild(node) {\n\t\treturn isElementNode(node) && node !== child;\n\t}\n\n\tif (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * @private\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n *\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n\t// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n\tif (!hasValidParentNodeType(parent)) {\n\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n\t}\n\t// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n\t// not implemented!\n\t// 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n\tif (child && child.parentNode !== parent) {\n\t\tthrow new DOMException(NOT_FOUND_ERR, 'child not in parent');\n\t}\n\tif (\n\t\t// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n\t\t!hasInsertableNodeType(node) ||\n\t\t// 5. If either `node` is a Text node and `parent` is a document,\n\t\t// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n\t\t// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n\t\t// or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n\t\t(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)\n\t) {\n\t\tthrow new DOMException(\n\t\t\tHIERARCHY_REQUEST_ERR,\n\t\t\t'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType\n\t\t);\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If node has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child,\n\t\t// `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child, `child` is a doctype,\n\t\t// or `child` is non-null and a doctype is following `child`.\n\t\tif (!isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\t// `parent` has a doctype child,\n\t\tif (find(parentChildNodes, isDocTypeNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// `child` is non-null and an element is preceding `child`,\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t\t// or `child` is null and `parent` has an element child.\n\t\tif (!child && parentElementChild) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If `node` has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (!isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\tfunction hasDoctypeChildThatIsNotChild(node) {\n\t\t\treturn isDocTypeNode(node) && node !== child;\n\t\t}\n\n\t\t// `parent` has a doctype child that is not `child`,\n\t\tif (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// or an element is preceding `child`.\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n\t// To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n\tassertPreInsertionValidity1to5(parent, node, child);\n\n\t// If parent is a document, and any of the statements below, switched on the interface node implements,\n\t// are true, then throw a \"HierarchyRequestError\" DOMException.\n\tif (parent.nodeType === Node.DOCUMENT_NODE) {\n\t\t(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n\t}\n\n\tvar cp = node.parentNode;\n\tif(cp){\n\t\tcp.removeChild(node);//remove and update\n\t}\n\tif(node.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = node.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn node;\n\t\t}\n\t\tvar newLast = node.lastChild;\n\t}else{\n\t\tnewFirst = newLast = node;\n\t}\n\tvar pre = child ? child.previousSibling : parent.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = child;\n\n\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparent.firstChild = newFirst;\n\t}\n\tif(child == null){\n\t\tparent.lastChild = newLast;\n\t}else{\n\t\tchild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parent;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parent.ownerDocument||parent, parent);\n\t//console.log(parent.lastChild.nextSibling == null)\n\tif (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnode.firstChild = node.lastChild = null;\n\t}\n\treturn node;\n}\n\n/**\n * Appends `newChild` to `parentNode`.\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n * @param {Node} parentNode\n * @param {Node} newChild\n * @returns {Node}\n * @private\n */\nfunction _appendSingleChild (parentNode, newChild) {\n\tif (newChild.parentNode) {\n\t\tnewChild.parentNode.removeChild(newChild);\n\t}\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = parentNode.lastChild;\n\tnewChild.nextSibling = null;\n\tif (newChild.previousSibling) {\n\t\tnewChild.previousSibling.nextSibling = newChild;\n\t} else {\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\treturn newChild;\n}\n\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\t/**\n\t * The DocumentType node of the document.\n\t *\n\t * @readonly\n\t * @type DocumentType\n\t */\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\n\tinsertBefore :  function(newChild, refChild){//raises\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\t_insertBefore(this, newChild, refChild);\n\t\tnewChild.ownerDocument = this;\n\t\tif (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\n\t\treturn newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\treplaceChild: function (newChild, oldChild) {\n\t\t//raises\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\t\tnewChild.ownerDocument = this;\n\t\tif (oldChild) {\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t\tif (isElementNode(newChild)) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\n\t/**\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\n\t * of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n\t *\n\t *\n\t * Warning: This is a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */\n\tgetElementsByClassName: function(classNames) {\n\t\tvar classNamesSet = toOrderedSet(classNames)\n\t\treturn new LiveNodeList(this, function(base) {\n\t\t\tvar ls = [];\n\t\t\tif (classNamesSet.length > 0) {\n\t\t\t\t_visitNode(base.documentElement, function(node) {\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\n\t\t\t\t\t\t// can be null if the attribute does not exist\n\t\t\t\t\t\tif (nodeClassNames) {\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\n\t\t\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(matches) {\n\t\t\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn ls;\n\t\t});\n\t},\n\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.localName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.nodeName = node.target = target;\n\t\tnode.nodeValue = node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix || '';\n\tvar uri = node.namespaceURI;\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\tif (!uri) {\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n\t\treturn false;\n\t}\n\n\tvar i = visibleNamespaces.length\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\tif (ns.prefix === prefix) {\n\t\t\treturn ns.namespace !== uri;\n\t\t}\n\t}\n\treturn true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * > The replacement text of any entity referred to directly or indirectly\n * > in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\n *\n * Literal whitespace other than space that appear in attribute values\n * are serialized as their entity references, so they will be preserved.\n * (In contrast to whitespace literals in the input which are normalized to spaces)\n * @see https://www.w3.org/TR/xml11/#AVNormalize\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"')\n}\n\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif (!visibleNamespaces) {\n\t\tvisibleNamespaces = [];\n\t}\n\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\n\n\t\tvar prefixedNodeName = nodeName\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\n\t\t\tvar defaultNS\n\t\t\t// lookup current default ns from `xmlns` attribute\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!defaultNS) {\n\t\t\t\t// lookup current default ns in visibleNamespaces\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tdefaultNS = namespace.namespace\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (defaultNS !== node.namespaceURI) {\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tif (namespace.prefix) {\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbuf.push('<', prefixedNodeName);\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\n\t\t// add namespace for current node\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',prefixedNodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\n\tcase TEXT_NODE:\n\t\t/**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\n\t\t */\n\t\treturn buf.push(node.data\n\t\t\t.replace(/[<&>]/g,_xmlEncoder)\n\t\t);\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC ', pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push(' ', sysid);\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor (var n in node) {\n\t\tif (Object.prototype.hasOwnProperty.call(node, n)) {\n\t\t\tvar v = node[n];\n\t\t\tif (typeof v != \"object\") {\n\t\t\t\tif (v != node2[n]) {\n\t\t\t\t\tnode2[n] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.DocumentType = DocumentType;\n\texports.DOMException = DOMException;\n\texports.DOMImplementation = DOMImplementation;\n\texports.Element = Element;\n\texports.Node = Node;\n\texports.NodeList = NodeList;\n\texports.XMLSerializer = XMLSerializer;\n//}\n","'use strict';\n\nvar freeze = require('./conventions').freeze;\n\n/**\n * The entities that are predefined in every XML document.\n *\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n */\nexports.XML_ENTITIES = freeze({\n\tamp: '&',\n\tapos: \"'\",\n\tgt: '>',\n\tlt: '<',\n\tquot: '\"',\n});\n\n/**\n * A map of all entities that are detected in an HTML document.\n * They contain all entries from `XML_ENTITIES`.\n *\n * @see XML_ENTITIES\n * @see DOMParser.parseFromString\n * @see DOMImplementation.prototype.createHTMLDocument\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n * @see https://html.spec.whatwg.org/entities.json JSON\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n */\nexports.HTML_ENTITIES = freeze({\n\tAacute: '\\u00C1',\n\taacute: '\\u00E1',\n\tAbreve: '\\u0102',\n\tabreve: '\\u0103',\n\tac: '\\u223E',\n\tacd: '\\u223F',\n\tacE: '\\u223E\\u0333',\n\tAcirc: '\\u00C2',\n\tacirc: '\\u00E2',\n\tacute: '\\u00B4',\n\tAcy: '\\u0410',\n\tacy: '\\u0430',\n\tAElig: '\\u00C6',\n\taelig: '\\u00E6',\n\taf: '\\u2061',\n\tAfr: '\\uD835\\uDD04',\n\tafr: '\\uD835\\uDD1E',\n\tAgrave: '\\u00C0',\n\tagrave: '\\u00E0',\n\talefsym: '\\u2135',\n\taleph: '\\u2135',\n\tAlpha: '\\u0391',\n\talpha: '\\u03B1',\n\tAmacr: '\\u0100',\n\tamacr: '\\u0101',\n\tamalg: '\\u2A3F',\n\tAMP: '\\u0026',\n\tamp: '\\u0026',\n\tAnd: '\\u2A53',\n\tand: '\\u2227',\n\tandand: '\\u2A55',\n\tandd: '\\u2A5C',\n\tandslope: '\\u2A58',\n\tandv: '\\u2A5A',\n\tang: '\\u2220',\n\tange: '\\u29A4',\n\tangle: '\\u2220',\n\tangmsd: '\\u2221',\n\tangmsdaa: '\\u29A8',\n\tangmsdab: '\\u29A9',\n\tangmsdac: '\\u29AA',\n\tangmsdad: '\\u29AB',\n\tangmsdae: '\\u29AC',\n\tangmsdaf: '\\u29AD',\n\tangmsdag: '\\u29AE',\n\tangmsdah: '\\u29AF',\n\tangrt: '\\u221F',\n\tangrtvb: '\\u22BE',\n\tangrtvbd: '\\u299D',\n\tangsph: '\\u2222',\n\tangst: '\\u00C5',\n\tangzarr: '\\u237C',\n\tAogon: '\\u0104',\n\taogon: '\\u0105',\n\tAopf: '\\uD835\\uDD38',\n\taopf: '\\uD835\\uDD52',\n\tap: '\\u2248',\n\tapacir: '\\u2A6F',\n\tapE: '\\u2A70',\n\tape: '\\u224A',\n\tapid: '\\u224B',\n\tapos: '\\u0027',\n\tApplyFunction: '\\u2061',\n\tapprox: '\\u2248',\n\tapproxeq: '\\u224A',\n\tAring: '\\u00C5',\n\taring: '\\u00E5',\n\tAscr: '\\uD835\\uDC9C',\n\tascr: '\\uD835\\uDCB6',\n\tAssign: '\\u2254',\n\tast: '\\u002A',\n\tasymp: '\\u2248',\n\tasympeq: '\\u224D',\n\tAtilde: '\\u00C3',\n\tatilde: '\\u00E3',\n\tAuml: '\\u00C4',\n\tauml: '\\u00E4',\n\tawconint: '\\u2233',\n\tawint: '\\u2A11',\n\tbackcong: '\\u224C',\n\tbackepsilon: '\\u03F6',\n\tbackprime: '\\u2035',\n\tbacksim: '\\u223D',\n\tbacksimeq: '\\u22CD',\n\tBackslash: '\\u2216',\n\tBarv: '\\u2AE7',\n\tbarvee: '\\u22BD',\n\tBarwed: '\\u2306',\n\tbarwed: '\\u2305',\n\tbarwedge: '\\u2305',\n\tbbrk: '\\u23B5',\n\tbbrktbrk: '\\u23B6',\n\tbcong: '\\u224C',\n\tBcy: '\\u0411',\n\tbcy: '\\u0431',\n\tbdquo: '\\u201E',\n\tbecaus: '\\u2235',\n\tBecause: '\\u2235',\n\tbecause: '\\u2235',\n\tbemptyv: '\\u29B0',\n\tbepsi: '\\u03F6',\n\tbernou: '\\u212C',\n\tBernoullis: '\\u212C',\n\tBeta: '\\u0392',\n\tbeta: '\\u03B2',\n\tbeth: '\\u2136',\n\tbetween: '\\u226C',\n\tBfr: '\\uD835\\uDD05',\n\tbfr: '\\uD835\\uDD1F',\n\tbigcap: '\\u22C2',\n\tbigcirc: '\\u25EF',\n\tbigcup: '\\u22C3',\n\tbigodot: '\\u2A00',\n\tbigoplus: '\\u2A01',\n\tbigotimes: '\\u2A02',\n\tbigsqcup: '\\u2A06',\n\tbigstar: '\\u2605',\n\tbigtriangledown: '\\u25BD',\n\tbigtriangleup: '\\u25B3',\n\tbiguplus: '\\u2A04',\n\tbigvee: '\\u22C1',\n\tbigwedge: '\\u22C0',\n\tbkarow: '\\u290D',\n\tblacklozenge: '\\u29EB',\n\tblacksquare: '\\u25AA',\n\tblacktriangle: '\\u25B4',\n\tblacktriangledown: '\\u25BE',\n\tblacktriangleleft: '\\u25C2',\n\tblacktriangleright: '\\u25B8',\n\tblank: '\\u2423',\n\tblk12: '\\u2592',\n\tblk14: '\\u2591',\n\tblk34: '\\u2593',\n\tblock: '\\u2588',\n\tbne: '\\u003D\\u20E5',\n\tbnequiv: '\\u2261\\u20E5',\n\tbNot: '\\u2AED',\n\tbnot: '\\u2310',\n\tBopf: '\\uD835\\uDD39',\n\tbopf: '\\uD835\\uDD53',\n\tbot: '\\u22A5',\n\tbottom: '\\u22A5',\n\tbowtie: '\\u22C8',\n\tboxbox: '\\u29C9',\n\tboxDL: '\\u2557',\n\tboxDl: '\\u2556',\n\tboxdL: '\\u2555',\n\tboxdl: '\\u2510',\n\tboxDR: '\\u2554',\n\tboxDr: '\\u2553',\n\tboxdR: '\\u2552',\n\tboxdr: '\\u250C',\n\tboxH: '\\u2550',\n\tboxh: '\\u2500',\n\tboxHD: '\\u2566',\n\tboxHd: '\\u2564',\n\tboxhD: '\\u2565',\n\tboxhd: '\\u252C',\n\tboxHU: '\\u2569',\n\tboxHu: '\\u2567',\n\tboxhU: '\\u2568',\n\tboxhu: '\\u2534',\n\tboxminus: '\\u229F',\n\tboxplus: '\\u229E',\n\tboxtimes: '\\u22A0',\n\tboxUL: '\\u255D',\n\tboxUl: '\\u255C',\n\tboxuL: '\\u255B',\n\tboxul: '\\u2518',\n\tboxUR: '\\u255A',\n\tboxUr: '\\u2559',\n\tboxuR: '\\u2558',\n\tboxur: '\\u2514',\n\tboxV: '\\u2551',\n\tboxv: '\\u2502',\n\tboxVH: '\\u256C',\n\tboxVh: '\\u256B',\n\tboxvH: '\\u256A',\n\tboxvh: '\\u253C',\n\tboxVL: '\\u2563',\n\tboxVl: '\\u2562',\n\tboxvL: '\\u2561',\n\tboxvl: '\\u2524',\n\tboxVR: '\\u2560',\n\tboxVr: '\\u255F',\n\tboxvR: '\\u255E',\n\tboxvr: '\\u251C',\n\tbprime: '\\u2035',\n\tBreve: '\\u02D8',\n\tbreve: '\\u02D8',\n\tbrvbar: '\\u00A6',\n\tBscr: '\\u212C',\n\tbscr: '\\uD835\\uDCB7',\n\tbsemi: '\\u204F',\n\tbsim: '\\u223D',\n\tbsime: '\\u22CD',\n\tbsol: '\\u005C',\n\tbsolb: '\\u29C5',\n\tbsolhsub: '\\u27C8',\n\tbull: '\\u2022',\n\tbullet: '\\u2022',\n\tbump: '\\u224E',\n\tbumpE: '\\u2AAE',\n\tbumpe: '\\u224F',\n\tBumpeq: '\\u224E',\n\tbumpeq: '\\u224F',\n\tCacute: '\\u0106',\n\tcacute: '\\u0107',\n\tCap: '\\u22D2',\n\tcap: '\\u2229',\n\tcapand: '\\u2A44',\n\tcapbrcup: '\\u2A49',\n\tcapcap: '\\u2A4B',\n\tcapcup: '\\u2A47',\n\tcapdot: '\\u2A40',\n\tCapitalDifferentialD: '\\u2145',\n\tcaps: '\\u2229\\uFE00',\n\tcaret: '\\u2041',\n\tcaron: '\\u02C7',\n\tCayleys: '\\u212D',\n\tccaps: '\\u2A4D',\n\tCcaron: '\\u010C',\n\tccaron: '\\u010D',\n\tCcedil: '\\u00C7',\n\tccedil: '\\u00E7',\n\tCcirc: '\\u0108',\n\tccirc: '\\u0109',\n\tCconint: '\\u2230',\n\tccups: '\\u2A4C',\n\tccupssm: '\\u2A50',\n\tCdot: '\\u010A',\n\tcdot: '\\u010B',\n\tcedil: '\\u00B8',\n\tCedilla: '\\u00B8',\n\tcemptyv: '\\u29B2',\n\tcent: '\\u00A2',\n\tCenterDot: '\\u00B7',\n\tcenterdot: '\\u00B7',\n\tCfr: '\\u212D',\n\tcfr: '\\uD835\\uDD20',\n\tCHcy: '\\u0427',\n\tchcy: '\\u0447',\n\tcheck: '\\u2713',\n\tcheckmark: '\\u2713',\n\tChi: '\\u03A7',\n\tchi: '\\u03C7',\n\tcir: '\\u25CB',\n\tcirc: '\\u02C6',\n\tcirceq: '\\u2257',\n\tcirclearrowleft: '\\u21BA',\n\tcirclearrowright: '\\u21BB',\n\tcircledast: '\\u229B',\n\tcircledcirc: '\\u229A',\n\tcircleddash: '\\u229D',\n\tCircleDot: '\\u2299',\n\tcircledR: '\\u00AE',\n\tcircledS: '\\u24C8',\n\tCircleMinus: '\\u2296',\n\tCirclePlus: '\\u2295',\n\tCircleTimes: '\\u2297',\n\tcirE: '\\u29C3',\n\tcire: '\\u2257',\n\tcirfnint: '\\u2A10',\n\tcirmid: '\\u2AEF',\n\tcirscir: '\\u29C2',\n\tClockwiseContourIntegral: '\\u2232',\n\tCloseCurlyDoubleQuote: '\\u201D',\n\tCloseCurlyQuote: '\\u2019',\n\tclubs: '\\u2663',\n\tclubsuit: '\\u2663',\n\tColon: '\\u2237',\n\tcolon: '\\u003A',\n\tColone: '\\u2A74',\n\tcolone: '\\u2254',\n\tcoloneq: '\\u2254',\n\tcomma: '\\u002C',\n\tcommat: '\\u0040',\n\tcomp: '\\u2201',\n\tcompfn: '\\u2218',\n\tcomplement: '\\u2201',\n\tcomplexes: '\\u2102',\n\tcong: '\\u2245',\n\tcongdot: '\\u2A6D',\n\tCongruent: '\\u2261',\n\tConint: '\\u222F',\n\tconint: '\\u222E',\n\tContourIntegral: '\\u222E',\n\tCopf: '\\u2102',\n\tcopf: '\\uD835\\uDD54',\n\tcoprod: '\\u2210',\n\tCoproduct: '\\u2210',\n\tCOPY: '\\u00A9',\n\tcopy: '\\u00A9',\n\tcopysr: '\\u2117',\n\tCounterClockwiseContourIntegral: '\\u2233',\n\tcrarr: '\\u21B5',\n\tCross: '\\u2A2F',\n\tcross: '\\u2717',\n\tCscr: '\\uD835\\uDC9E',\n\tcscr: '\\uD835\\uDCB8',\n\tcsub: '\\u2ACF',\n\tcsube: '\\u2AD1',\n\tcsup: '\\u2AD0',\n\tcsupe: '\\u2AD2',\n\tctdot: '\\u22EF',\n\tcudarrl: '\\u2938',\n\tcudarrr: '\\u2935',\n\tcuepr: '\\u22DE',\n\tcuesc: '\\u22DF',\n\tcularr: '\\u21B6',\n\tcularrp: '\\u293D',\n\tCup: '\\u22D3',\n\tcup: '\\u222A',\n\tcupbrcap: '\\u2A48',\n\tCupCap: '\\u224D',\n\tcupcap: '\\u2A46',\n\tcupcup: '\\u2A4A',\n\tcupdot: '\\u228D',\n\tcupor: '\\u2A45',\n\tcups: '\\u222A\\uFE00',\n\tcurarr: '\\u21B7',\n\tcurarrm: '\\u293C',\n\tcurlyeqprec: '\\u22DE',\n\tcurlyeqsucc: '\\u22DF',\n\tcurlyvee: '\\u22CE',\n\tcurlywedge: '\\u22CF',\n\tcurren: '\\u00A4',\n\tcurvearrowleft: '\\u21B6',\n\tcurvearrowright: '\\u21B7',\n\tcuvee: '\\u22CE',\n\tcuwed: '\\u22CF',\n\tcwconint: '\\u2232',\n\tcwint: '\\u2231',\n\tcylcty: '\\u232D',\n\tDagger: '\\u2021',\n\tdagger: '\\u2020',\n\tdaleth: '\\u2138',\n\tDarr: '\\u21A1',\n\tdArr: '\\u21D3',\n\tdarr: '\\u2193',\n\tdash: '\\u2010',\n\tDashv: '\\u2AE4',\n\tdashv: '\\u22A3',\n\tdbkarow: '\\u290F',\n\tdblac: '\\u02DD',\n\tDcaron: '\\u010E',\n\tdcaron: '\\u010F',\n\tDcy: '\\u0414',\n\tdcy: '\\u0434',\n\tDD: '\\u2145',\n\tdd: '\\u2146',\n\tddagger: '\\u2021',\n\tddarr: '\\u21CA',\n\tDDotrahd: '\\u2911',\n\tddotseq: '\\u2A77',\n\tdeg: '\\u00B0',\n\tDel: '\\u2207',\n\tDelta: '\\u0394',\n\tdelta: '\\u03B4',\n\tdemptyv: '\\u29B1',\n\tdfisht: '\\u297F',\n\tDfr: '\\uD835\\uDD07',\n\tdfr: '\\uD835\\uDD21',\n\tdHar: '\\u2965',\n\tdharl: '\\u21C3',\n\tdharr: '\\u21C2',\n\tDiacriticalAcute: '\\u00B4',\n\tDiacriticalDot: '\\u02D9',\n\tDiacriticalDoubleAcute: '\\u02DD',\n\tDiacriticalGrave: '\\u0060',\n\tDiacriticalTilde: '\\u02DC',\n\tdiam: '\\u22C4',\n\tDiamond: '\\u22C4',\n\tdiamond: '\\u22C4',\n\tdiamondsuit: '\\u2666',\n\tdiams: '\\u2666',\n\tdie: '\\u00A8',\n\tDifferentialD: '\\u2146',\n\tdigamma: '\\u03DD',\n\tdisin: '\\u22F2',\n\tdiv: '\\u00F7',\n\tdivide: '\\u00F7',\n\tdivideontimes: '\\u22C7',\n\tdivonx: '\\u22C7',\n\tDJcy: '\\u0402',\n\tdjcy: '\\u0452',\n\tdlcorn: '\\u231E',\n\tdlcrop: '\\u230D',\n\tdollar: '\\u0024',\n\tDopf: '\\uD835\\uDD3B',\n\tdopf: '\\uD835\\uDD55',\n\tDot: '\\u00A8',\n\tdot: '\\u02D9',\n\tDotDot: '\\u20DC',\n\tdoteq: '\\u2250',\n\tdoteqdot: '\\u2251',\n\tDotEqual: '\\u2250',\n\tdotminus: '\\u2238',\n\tdotplus: '\\u2214',\n\tdotsquare: '\\u22A1',\n\tdoublebarwedge: '\\u2306',\n\tDoubleContourIntegral: '\\u222F',\n\tDoubleDot: '\\u00A8',\n\tDoubleDownArrow: '\\u21D3',\n\tDoubleLeftArrow: '\\u21D0',\n\tDoubleLeftRightArrow: '\\u21D4',\n\tDoubleLeftTee: '\\u2AE4',\n\tDoubleLongLeftArrow: '\\u27F8',\n\tDoubleLongLeftRightArrow: '\\u27FA',\n\tDoubleLongRightArrow: '\\u27F9',\n\tDoubleRightArrow: '\\u21D2',\n\tDoubleRightTee: '\\u22A8',\n\tDoubleUpArrow: '\\u21D1',\n\tDoubleUpDownArrow: '\\u21D5',\n\tDoubleVerticalBar: '\\u2225',\n\tDownArrow: '\\u2193',\n\tDownarrow: '\\u21D3',\n\tdownarrow: '\\u2193',\n\tDownArrowBar: '\\u2913',\n\tDownArrowUpArrow: '\\u21F5',\n\tDownBreve: '\\u0311',\n\tdowndownarrows: '\\u21CA',\n\tdownharpoonleft: '\\u21C3',\n\tdownharpoonright: '\\u21C2',\n\tDownLeftRightVector: '\\u2950',\n\tDownLeftTeeVector: '\\u295E',\n\tDownLeftVector: '\\u21BD',\n\tDownLeftVectorBar: '\\u2956',\n\tDownRightTeeVector: '\\u295F',\n\tDownRightVector: '\\u21C1',\n\tDownRightVectorBar: '\\u2957',\n\tDownTee: '\\u22A4',\n\tDownTeeArrow: '\\u21A7',\n\tdrbkarow: '\\u2910',\n\tdrcorn: '\\u231F',\n\tdrcrop: '\\u230C',\n\tDscr: '\\uD835\\uDC9F',\n\tdscr: '\\uD835\\uDCB9',\n\tDScy: '\\u0405',\n\tdscy: '\\u0455',\n\tdsol: '\\u29F6',\n\tDstrok: '\\u0110',\n\tdstrok: '\\u0111',\n\tdtdot: '\\u22F1',\n\tdtri: '\\u25BF',\n\tdtrif: '\\u25BE',\n\tduarr: '\\u21F5',\n\tduhar: '\\u296F',\n\tdwangle: '\\u29A6',\n\tDZcy: '\\u040F',\n\tdzcy: '\\u045F',\n\tdzigrarr: '\\u27FF',\n\tEacute: '\\u00C9',\n\teacute: '\\u00E9',\n\teaster: '\\u2A6E',\n\tEcaron: '\\u011A',\n\tecaron: '\\u011B',\n\tecir: '\\u2256',\n\tEcirc: '\\u00CA',\n\tecirc: '\\u00EA',\n\tecolon: '\\u2255',\n\tEcy: '\\u042D',\n\tecy: '\\u044D',\n\teDDot: '\\u2A77',\n\tEdot: '\\u0116',\n\teDot: '\\u2251',\n\tedot: '\\u0117',\n\tee: '\\u2147',\n\tefDot: '\\u2252',\n\tEfr: '\\uD835\\uDD08',\n\tefr: '\\uD835\\uDD22',\n\teg: '\\u2A9A',\n\tEgrave: '\\u00C8',\n\tegrave: '\\u00E8',\n\tegs: '\\u2A96',\n\tegsdot: '\\u2A98',\n\tel: '\\u2A99',\n\tElement: '\\u2208',\n\telinters: '\\u23E7',\n\tell: '\\u2113',\n\tels: '\\u2A95',\n\telsdot: '\\u2A97',\n\tEmacr: '\\u0112',\n\temacr: '\\u0113',\n\tempty: '\\u2205',\n\temptyset: '\\u2205',\n\tEmptySmallSquare: '\\u25FB',\n\temptyv: '\\u2205',\n\tEmptyVerySmallSquare: '\\u25AB',\n\temsp: '\\u2003',\n\temsp13: '\\u2004',\n\temsp14: '\\u2005',\n\tENG: '\\u014A',\n\teng: '\\u014B',\n\tensp: '\\u2002',\n\tEogon: '\\u0118',\n\teogon: '\\u0119',\n\tEopf: '\\uD835\\uDD3C',\n\teopf: '\\uD835\\uDD56',\n\tepar: '\\u22D5',\n\teparsl: '\\u29E3',\n\teplus: '\\u2A71',\n\tepsi: '\\u03B5',\n\tEpsilon: '\\u0395',\n\tepsilon: '\\u03B5',\n\tepsiv: '\\u03F5',\n\teqcirc: '\\u2256',\n\teqcolon: '\\u2255',\n\teqsim: '\\u2242',\n\teqslantgtr: '\\u2A96',\n\teqslantless: '\\u2A95',\n\tEqual: '\\u2A75',\n\tequals: '\\u003D',\n\tEqualTilde: '\\u2242',\n\tequest: '\\u225F',\n\tEquilibrium: '\\u21CC',\n\tequiv: '\\u2261',\n\tequivDD: '\\u2A78',\n\teqvparsl: '\\u29E5',\n\terarr: '\\u2971',\n\terDot: '\\u2253',\n\tEscr: '\\u2130',\n\tescr: '\\u212F',\n\tesdot: '\\u2250',\n\tEsim: '\\u2A73',\n\tesim: '\\u2242',\n\tEta: '\\u0397',\n\teta: '\\u03B7',\n\tETH: '\\u00D0',\n\teth: '\\u00F0',\n\tEuml: '\\u00CB',\n\teuml: '\\u00EB',\n\teuro: '\\u20AC',\n\texcl: '\\u0021',\n\texist: '\\u2203',\n\tExists: '\\u2203',\n\texpectation: '\\u2130',\n\tExponentialE: '\\u2147',\n\texponentiale: '\\u2147',\n\tfallingdotseq: '\\u2252',\n\tFcy: '\\u0424',\n\tfcy: '\\u0444',\n\tfemale: '\\u2640',\n\tffilig: '\\uFB03',\n\tfflig: '\\uFB00',\n\tffllig: '\\uFB04',\n\tFfr: '\\uD835\\uDD09',\n\tffr: '\\uD835\\uDD23',\n\tfilig: '\\uFB01',\n\tFilledSmallSquare: '\\u25FC',\n\tFilledVerySmallSquare: '\\u25AA',\n\tfjlig: '\\u0066\\u006A',\n\tflat: '\\u266D',\n\tfllig: '\\uFB02',\n\tfltns: '\\u25B1',\n\tfnof: '\\u0192',\n\tFopf: '\\uD835\\uDD3D',\n\tfopf: '\\uD835\\uDD57',\n\tForAll: '\\u2200',\n\tforall: '\\u2200',\n\tfork: '\\u22D4',\n\tforkv: '\\u2AD9',\n\tFouriertrf: '\\u2131',\n\tfpartint: '\\u2A0D',\n\tfrac12: '\\u00BD',\n\tfrac13: '\\u2153',\n\tfrac14: '\\u00BC',\n\tfrac15: '\\u2155',\n\tfrac16: '\\u2159',\n\tfrac18: '\\u215B',\n\tfrac23: '\\u2154',\n\tfrac25: '\\u2156',\n\tfrac34: '\\u00BE',\n\tfrac35: '\\u2157',\n\tfrac38: '\\u215C',\n\tfrac45: '\\u2158',\n\tfrac56: '\\u215A',\n\tfrac58: '\\u215D',\n\tfrac78: '\\u215E',\n\tfrasl: '\\u2044',\n\tfrown: '\\u2322',\n\tFscr: '\\u2131',\n\tfscr: '\\uD835\\uDCBB',\n\tgacute: '\\u01F5',\n\tGamma: '\\u0393',\n\tgamma: '\\u03B3',\n\tGammad: '\\u03DC',\n\tgammad: '\\u03DD',\n\tgap: '\\u2A86',\n\tGbreve: '\\u011E',\n\tgbreve: '\\u011F',\n\tGcedil: '\\u0122',\n\tGcirc: '\\u011C',\n\tgcirc: '\\u011D',\n\tGcy: '\\u0413',\n\tgcy: '\\u0433',\n\tGdot: '\\u0120',\n\tgdot: '\\u0121',\n\tgE: '\\u2267',\n\tge: '\\u2265',\n\tgEl: '\\u2A8C',\n\tgel: '\\u22DB',\n\tgeq: '\\u2265',\n\tgeqq: '\\u2267',\n\tgeqslant: '\\u2A7E',\n\tges: '\\u2A7E',\n\tgescc: '\\u2AA9',\n\tgesdot: '\\u2A80',\n\tgesdoto: '\\u2A82',\n\tgesdotol: '\\u2A84',\n\tgesl: '\\u22DB\\uFE00',\n\tgesles: '\\u2A94',\n\tGfr: '\\uD835\\uDD0A',\n\tgfr: '\\uD835\\uDD24',\n\tGg: '\\u22D9',\n\tgg: '\\u226B',\n\tggg: '\\u22D9',\n\tgimel: '\\u2137',\n\tGJcy: '\\u0403',\n\tgjcy: '\\u0453',\n\tgl: '\\u2277',\n\tgla: '\\u2AA5',\n\tglE: '\\u2A92',\n\tglj: '\\u2AA4',\n\tgnap: '\\u2A8A',\n\tgnapprox: '\\u2A8A',\n\tgnE: '\\u2269',\n\tgne: '\\u2A88',\n\tgneq: '\\u2A88',\n\tgneqq: '\\u2269',\n\tgnsim: '\\u22E7',\n\tGopf: '\\uD835\\uDD3E',\n\tgopf: '\\uD835\\uDD58',\n\tgrave: '\\u0060',\n\tGreaterEqual: '\\u2265',\n\tGreaterEqualLess: '\\u22DB',\n\tGreaterFullEqual: '\\u2267',\n\tGreaterGreater: '\\u2AA2',\n\tGreaterLess: '\\u2277',\n\tGreaterSlantEqual: '\\u2A7E',\n\tGreaterTilde: '\\u2273',\n\tGscr: '\\uD835\\uDCA2',\n\tgscr: '\\u210A',\n\tgsim: '\\u2273',\n\tgsime: '\\u2A8E',\n\tgsiml: '\\u2A90',\n\tGt: '\\u226B',\n\tGT: '\\u003E',\n\tgt: '\\u003E',\n\tgtcc: '\\u2AA7',\n\tgtcir: '\\u2A7A',\n\tgtdot: '\\u22D7',\n\tgtlPar: '\\u2995',\n\tgtquest: '\\u2A7C',\n\tgtrapprox: '\\u2A86',\n\tgtrarr: '\\u2978',\n\tgtrdot: '\\u22D7',\n\tgtreqless: '\\u22DB',\n\tgtreqqless: '\\u2A8C',\n\tgtrless: '\\u2277',\n\tgtrsim: '\\u2273',\n\tgvertneqq: '\\u2269\\uFE00',\n\tgvnE: '\\u2269\\uFE00',\n\tHacek: '\\u02C7',\n\thairsp: '\\u200A',\n\thalf: '\\u00BD',\n\thamilt: '\\u210B',\n\tHARDcy: '\\u042A',\n\thardcy: '\\u044A',\n\thArr: '\\u21D4',\n\tharr: '\\u2194',\n\tharrcir: '\\u2948',\n\tharrw: '\\u21AD',\n\tHat: '\\u005E',\n\thbar: '\\u210F',\n\tHcirc: '\\u0124',\n\thcirc: '\\u0125',\n\thearts: '\\u2665',\n\theartsuit: '\\u2665',\n\thellip: '\\u2026',\n\thercon: '\\u22B9',\n\tHfr: '\\u210C',\n\thfr: '\\uD835\\uDD25',\n\tHilbertSpace: '\\u210B',\n\thksearow: '\\u2925',\n\thkswarow: '\\u2926',\n\thoarr: '\\u21FF',\n\thomtht: '\\u223B',\n\thookleftarrow: '\\u21A9',\n\thookrightarrow: '\\u21AA',\n\tHopf: '\\u210D',\n\thopf: '\\uD835\\uDD59',\n\thorbar: '\\u2015',\n\tHorizontalLine: '\\u2500',\n\tHscr: '\\u210B',\n\thscr: '\\uD835\\uDCBD',\n\thslash: '\\u210F',\n\tHstrok: '\\u0126',\n\thstrok: '\\u0127',\n\tHumpDownHump: '\\u224E',\n\tHumpEqual: '\\u224F',\n\thybull: '\\u2043',\n\thyphen: '\\u2010',\n\tIacute: '\\u00CD',\n\tiacute: '\\u00ED',\n\tic: '\\u2063',\n\tIcirc: '\\u00CE',\n\ticirc: '\\u00EE',\n\tIcy: '\\u0418',\n\ticy: '\\u0438',\n\tIdot: '\\u0130',\n\tIEcy: '\\u0415',\n\tiecy: '\\u0435',\n\tiexcl: '\\u00A1',\n\tiff: '\\u21D4',\n\tIfr: '\\u2111',\n\tifr: '\\uD835\\uDD26',\n\tIgrave: '\\u00CC',\n\tigrave: '\\u00EC',\n\tii: '\\u2148',\n\tiiiint: '\\u2A0C',\n\tiiint: '\\u222D',\n\tiinfin: '\\u29DC',\n\tiiota: '\\u2129',\n\tIJlig: '\\u0132',\n\tijlig: '\\u0133',\n\tIm: '\\u2111',\n\tImacr: '\\u012A',\n\timacr: '\\u012B',\n\timage: '\\u2111',\n\tImaginaryI: '\\u2148',\n\timagline: '\\u2110',\n\timagpart: '\\u2111',\n\timath: '\\u0131',\n\timof: '\\u22B7',\n\timped: '\\u01B5',\n\tImplies: '\\u21D2',\n\tin: '\\u2208',\n\tincare: '\\u2105',\n\tinfin: '\\u221E',\n\tinfintie: '\\u29DD',\n\tinodot: '\\u0131',\n\tInt: '\\u222C',\n\tint: '\\u222B',\n\tintcal: '\\u22BA',\n\tintegers: '\\u2124',\n\tIntegral: '\\u222B',\n\tintercal: '\\u22BA',\n\tIntersection: '\\u22C2',\n\tintlarhk: '\\u2A17',\n\tintprod: '\\u2A3C',\n\tInvisibleComma: '\\u2063',\n\tInvisibleTimes: '\\u2062',\n\tIOcy: '\\u0401',\n\tiocy: '\\u0451',\n\tIogon: '\\u012E',\n\tiogon: '\\u012F',\n\tIopf: '\\uD835\\uDD40',\n\tiopf: '\\uD835\\uDD5A',\n\tIota: '\\u0399',\n\tiota: '\\u03B9',\n\tiprod: '\\u2A3C',\n\tiquest: '\\u00BF',\n\tIscr: '\\u2110',\n\tiscr: '\\uD835\\uDCBE',\n\tisin: '\\u2208',\n\tisindot: '\\u22F5',\n\tisinE: '\\u22F9',\n\tisins: '\\u22F4',\n\tisinsv: '\\u22F3',\n\tisinv: '\\u2208',\n\tit: '\\u2062',\n\tItilde: '\\u0128',\n\titilde: '\\u0129',\n\tIukcy: '\\u0406',\n\tiukcy: '\\u0456',\n\tIuml: '\\u00CF',\n\tiuml: '\\u00EF',\n\tJcirc: '\\u0134',\n\tjcirc: '\\u0135',\n\tJcy: '\\u0419',\n\tjcy: '\\u0439',\n\tJfr: '\\uD835\\uDD0D',\n\tjfr: '\\uD835\\uDD27',\n\tjmath: '\\u0237',\n\tJopf: '\\uD835\\uDD41',\n\tjopf: '\\uD835\\uDD5B',\n\tJscr: '\\uD835\\uDCA5',\n\tjscr: '\\uD835\\uDCBF',\n\tJsercy: '\\u0408',\n\tjsercy: '\\u0458',\n\tJukcy: '\\u0404',\n\tjukcy: '\\u0454',\n\tKappa: '\\u039A',\n\tkappa: '\\u03BA',\n\tkappav: '\\u03F0',\n\tKcedil: '\\u0136',\n\tkcedil: '\\u0137',\n\tKcy: '\\u041A',\n\tkcy: '\\u043A',\n\tKfr: '\\uD835\\uDD0E',\n\tkfr: '\\uD835\\uDD28',\n\tkgreen: '\\u0138',\n\tKHcy: '\\u0425',\n\tkhcy: '\\u0445',\n\tKJcy: '\\u040C',\n\tkjcy: '\\u045C',\n\tKopf: '\\uD835\\uDD42',\n\tkopf: '\\uD835\\uDD5C',\n\tKscr: '\\uD835\\uDCA6',\n\tkscr: '\\uD835\\uDCC0',\n\tlAarr: '\\u21DA',\n\tLacute: '\\u0139',\n\tlacute: '\\u013A',\n\tlaemptyv: '\\u29B4',\n\tlagran: '\\u2112',\n\tLambda: '\\u039B',\n\tlambda: '\\u03BB',\n\tLang: '\\u27EA',\n\tlang: '\\u27E8',\n\tlangd: '\\u2991',\n\tlangle: '\\u27E8',\n\tlap: '\\u2A85',\n\tLaplacetrf: '\\u2112',\n\tlaquo: '\\u00AB',\n\tLarr: '\\u219E',\n\tlArr: '\\u21D0',\n\tlarr: '\\u2190',\n\tlarrb: '\\u21E4',\n\tlarrbfs: '\\u291F',\n\tlarrfs: '\\u291D',\n\tlarrhk: '\\u21A9',\n\tlarrlp: '\\u21AB',\n\tlarrpl: '\\u2939',\n\tlarrsim: '\\u2973',\n\tlarrtl: '\\u21A2',\n\tlat: '\\u2AAB',\n\tlAtail: '\\u291B',\n\tlatail: '\\u2919',\n\tlate: '\\u2AAD',\n\tlates: '\\u2AAD\\uFE00',\n\tlBarr: '\\u290E',\n\tlbarr: '\\u290C',\n\tlbbrk: '\\u2772',\n\tlbrace: '\\u007B',\n\tlbrack: '\\u005B',\n\tlbrke: '\\u298B',\n\tlbrksld: '\\u298F',\n\tlbrkslu: '\\u298D',\n\tLcaron: '\\u013D',\n\tlcaron: '\\u013E',\n\tLcedil: '\\u013B',\n\tlcedil: '\\u013C',\n\tlceil: '\\u2308',\n\tlcub: '\\u007B',\n\tLcy: '\\u041B',\n\tlcy: '\\u043B',\n\tldca: '\\u2936',\n\tldquo: '\\u201C',\n\tldquor: '\\u201E',\n\tldrdhar: '\\u2967',\n\tldrushar: '\\u294B',\n\tldsh: '\\u21B2',\n\tlE: '\\u2266',\n\tle: '\\u2264',\n\tLeftAngleBracket: '\\u27E8',\n\tLeftArrow: '\\u2190',\n\tLeftarrow: '\\u21D0',\n\tleftarrow: '\\u2190',\n\tLeftArrowBar: '\\u21E4',\n\tLeftArrowRightArrow: '\\u21C6',\n\tleftarrowtail: '\\u21A2',\n\tLeftCeiling: '\\u2308',\n\tLeftDoubleBracket: '\\u27E6',\n\tLeftDownTeeVector: '\\u2961',\n\tLeftDownVector: '\\u21C3',\n\tLeftDownVectorBar: '\\u2959',\n\tLeftFloor: '\\u230A',\n\tleftharpoondown: '\\u21BD',\n\tleftharpoonup: '\\u21BC',\n\tleftleftarrows: '\\u21C7',\n\tLeftRightArrow: '\\u2194',\n\tLeftrightarrow: '\\u21D4',\n\tleftrightarrow: '\\u2194',\n\tleftrightarrows: '\\u21C6',\n\tleftrightharpoons: '\\u21CB',\n\tleftrightsquigarrow: '\\u21AD',\n\tLeftRightVector: '\\u294E',\n\tLeftTee: '\\u22A3',\n\tLeftTeeArrow: '\\u21A4',\n\tLeftTeeVector: '\\u295A',\n\tleftthreetimes: '\\u22CB',\n\tLeftTriangle: '\\u22B2',\n\tLeftTriangleBar: '\\u29CF',\n\tLeftTriangleEqual: '\\u22B4',\n\tLeftUpDownVector: '\\u2951',\n\tLeftUpTeeVector: '\\u2960',\n\tLeftUpVector: '\\u21BF',\n\tLeftUpVectorBar: '\\u2958',\n\tLeftVector: '\\u21BC',\n\tLeftVectorBar: '\\u2952',\n\tlEg: '\\u2A8B',\n\tleg: '\\u22DA',\n\tleq: '\\u2264',\n\tleqq: '\\u2266',\n\tleqslant: '\\u2A7D',\n\tles: '\\u2A7D',\n\tlescc: '\\u2AA8',\n\tlesdot: '\\u2A7F',\n\tlesdoto: '\\u2A81',\n\tlesdotor: '\\u2A83',\n\tlesg: '\\u22DA\\uFE00',\n\tlesges: '\\u2A93',\n\tlessapprox: '\\u2A85',\n\tlessdot: '\\u22D6',\n\tlesseqgtr: '\\u22DA',\n\tlesseqqgtr: '\\u2A8B',\n\tLessEqualGreater: '\\u22DA',\n\tLessFullEqual: '\\u2266',\n\tLessGreater: '\\u2276',\n\tlessgtr: '\\u2276',\n\tLessLess: '\\u2AA1',\n\tlesssim: '\\u2272',\n\tLessSlantEqual: '\\u2A7D',\n\tLessTilde: '\\u2272',\n\tlfisht: '\\u297C',\n\tlfloor: '\\u230A',\n\tLfr: '\\uD835\\uDD0F',\n\tlfr: '\\uD835\\uDD29',\n\tlg: '\\u2276',\n\tlgE: '\\u2A91',\n\tlHar: '\\u2962',\n\tlhard: '\\u21BD',\n\tlharu: '\\u21BC',\n\tlharul: '\\u296A',\n\tlhblk: '\\u2584',\n\tLJcy: '\\u0409',\n\tljcy: '\\u0459',\n\tLl: '\\u22D8',\n\tll: '\\u226A',\n\tllarr: '\\u21C7',\n\tllcorner: '\\u231E',\n\tLleftarrow: '\\u21DA',\n\tllhard: '\\u296B',\n\tlltri: '\\u25FA',\n\tLmidot: '\\u013F',\n\tlmidot: '\\u0140',\n\tlmoust: '\\u23B0',\n\tlmoustache: '\\u23B0',\n\tlnap: '\\u2A89',\n\tlnapprox: '\\u2A89',\n\tlnE: '\\u2268',\n\tlne: '\\u2A87',\n\tlneq: '\\u2A87',\n\tlneqq: '\\u2268',\n\tlnsim: '\\u22E6',\n\tloang: '\\u27EC',\n\tloarr: '\\u21FD',\n\tlobrk: '\\u27E6',\n\tLongLeftArrow: '\\u27F5',\n\tLongleftarrow: '\\u27F8',\n\tlongleftarrow: '\\u27F5',\n\tLongLeftRightArrow: '\\u27F7',\n\tLongleftrightarrow: '\\u27FA',\n\tlongleftrightarrow: '\\u27F7',\n\tlongmapsto: '\\u27FC',\n\tLongRightArrow: '\\u27F6',\n\tLongrightarrow: '\\u27F9',\n\tlongrightarrow: '\\u27F6',\n\tlooparrowleft: '\\u21AB',\n\tlooparrowright: '\\u21AC',\n\tlopar: '\\u2985',\n\tLopf: '\\uD835\\uDD43',\n\tlopf: '\\uD835\\uDD5D',\n\tloplus: '\\u2A2D',\n\tlotimes: '\\u2A34',\n\tlowast: '\\u2217',\n\tlowbar: '\\u005F',\n\tLowerLeftArrow: '\\u2199',\n\tLowerRightArrow: '\\u2198',\n\tloz: '\\u25CA',\n\tlozenge: '\\u25CA',\n\tlozf: '\\u29EB',\n\tlpar: '\\u0028',\n\tlparlt: '\\u2993',\n\tlrarr: '\\u21C6',\n\tlrcorner: '\\u231F',\n\tlrhar: '\\u21CB',\n\tlrhard: '\\u296D',\n\tlrm: '\\u200E',\n\tlrtri: '\\u22BF',\n\tlsaquo: '\\u2039',\n\tLscr: '\\u2112',\n\tlscr: '\\uD835\\uDCC1',\n\tLsh: '\\u21B0',\n\tlsh: '\\u21B0',\n\tlsim: '\\u2272',\n\tlsime: '\\u2A8D',\n\tlsimg: '\\u2A8F',\n\tlsqb: '\\u005B',\n\tlsquo: '\\u2018',\n\tlsquor: '\\u201A',\n\tLstrok: '\\u0141',\n\tlstrok: '\\u0142',\n\tLt: '\\u226A',\n\tLT: '\\u003C',\n\tlt: '\\u003C',\n\tltcc: '\\u2AA6',\n\tltcir: '\\u2A79',\n\tltdot: '\\u22D6',\n\tlthree: '\\u22CB',\n\tltimes: '\\u22C9',\n\tltlarr: '\\u2976',\n\tltquest: '\\u2A7B',\n\tltri: '\\u25C3',\n\tltrie: '\\u22B4',\n\tltrif: '\\u25C2',\n\tltrPar: '\\u2996',\n\tlurdshar: '\\u294A',\n\tluruhar: '\\u2966',\n\tlvertneqq: '\\u2268\\uFE00',\n\tlvnE: '\\u2268\\uFE00',\n\tmacr: '\\u00AF',\n\tmale: '\\u2642',\n\tmalt: '\\u2720',\n\tmaltese: '\\u2720',\n\tMap: '\\u2905',\n\tmap: '\\u21A6',\n\tmapsto: '\\u21A6',\n\tmapstodown: '\\u21A7',\n\tmapstoleft: '\\u21A4',\n\tmapstoup: '\\u21A5',\n\tmarker: '\\u25AE',\n\tmcomma: '\\u2A29',\n\tMcy: '\\u041C',\n\tmcy: '\\u043C',\n\tmdash: '\\u2014',\n\tmDDot: '\\u223A',\n\tmeasuredangle: '\\u2221',\n\tMediumSpace: '\\u205F',\n\tMellintrf: '\\u2133',\n\tMfr: '\\uD835\\uDD10',\n\tmfr: '\\uD835\\uDD2A',\n\tmho: '\\u2127',\n\tmicro: '\\u00B5',\n\tmid: '\\u2223',\n\tmidast: '\\u002A',\n\tmidcir: '\\u2AF0',\n\tmiddot: '\\u00B7',\n\tminus: '\\u2212',\n\tminusb: '\\u229F',\n\tminusd: '\\u2238',\n\tminusdu: '\\u2A2A',\n\tMinusPlus: '\\u2213',\n\tmlcp: '\\u2ADB',\n\tmldr: '\\u2026',\n\tmnplus: '\\u2213',\n\tmodels: '\\u22A7',\n\tMopf: '\\uD835\\uDD44',\n\tmopf: '\\uD835\\uDD5E',\n\tmp: '\\u2213',\n\tMscr: '\\u2133',\n\tmscr: '\\uD835\\uDCC2',\n\tmstpos: '\\u223E',\n\tMu: '\\u039C',\n\tmu: '\\u03BC',\n\tmultimap: '\\u22B8',\n\tmumap: '\\u22B8',\n\tnabla: '\\u2207',\n\tNacute: '\\u0143',\n\tnacute: '\\u0144',\n\tnang: '\\u2220\\u20D2',\n\tnap: '\\u2249',\n\tnapE: '\\u2A70\\u0338',\n\tnapid: '\\u224B\\u0338',\n\tnapos: '\\u0149',\n\tnapprox: '\\u2249',\n\tnatur: '\\u266E',\n\tnatural: '\\u266E',\n\tnaturals: '\\u2115',\n\tnbsp: '\\u00A0',\n\tnbump: '\\u224E\\u0338',\n\tnbumpe: '\\u224F\\u0338',\n\tncap: '\\u2A43',\n\tNcaron: '\\u0147',\n\tncaron: '\\u0148',\n\tNcedil: '\\u0145',\n\tncedil: '\\u0146',\n\tncong: '\\u2247',\n\tncongdot: '\\u2A6D\\u0338',\n\tncup: '\\u2A42',\n\tNcy: '\\u041D',\n\tncy: '\\u043D',\n\tndash: '\\u2013',\n\tne: '\\u2260',\n\tnearhk: '\\u2924',\n\tneArr: '\\u21D7',\n\tnearr: '\\u2197',\n\tnearrow: '\\u2197',\n\tnedot: '\\u2250\\u0338',\n\tNegativeMediumSpace: '\\u200B',\n\tNegativeThickSpace: '\\u200B',\n\tNegativeThinSpace: '\\u200B',\n\tNegativeVeryThinSpace: '\\u200B',\n\tnequiv: '\\u2262',\n\tnesear: '\\u2928',\n\tnesim: '\\u2242\\u0338',\n\tNestedGreaterGreater: '\\u226B',\n\tNestedLessLess: '\\u226A',\n\tNewLine: '\\u000A',\n\tnexist: '\\u2204',\n\tnexists: '\\u2204',\n\tNfr: '\\uD835\\uDD11',\n\tnfr: '\\uD835\\uDD2B',\n\tngE: '\\u2267\\u0338',\n\tnge: '\\u2271',\n\tngeq: '\\u2271',\n\tngeqq: '\\u2267\\u0338',\n\tngeqslant: '\\u2A7E\\u0338',\n\tnges: '\\u2A7E\\u0338',\n\tnGg: '\\u22D9\\u0338',\n\tngsim: '\\u2275',\n\tnGt: '\\u226B\\u20D2',\n\tngt: '\\u226F',\n\tngtr: '\\u226F',\n\tnGtv: '\\u226B\\u0338',\n\tnhArr: '\\u21CE',\n\tnharr: '\\u21AE',\n\tnhpar: '\\u2AF2',\n\tni: '\\u220B',\n\tnis: '\\u22FC',\n\tnisd: '\\u22FA',\n\tniv: '\\u220B',\n\tNJcy: '\\u040A',\n\tnjcy: '\\u045A',\n\tnlArr: '\\u21CD',\n\tnlarr: '\\u219A',\n\tnldr: '\\u2025',\n\tnlE: '\\u2266\\u0338',\n\tnle: '\\u2270',\n\tnLeftarrow: '\\u21CD',\n\tnleftarrow: '\\u219A',\n\tnLeftrightarrow: '\\u21CE',\n\tnleftrightarrow: '\\u21AE',\n\tnleq: '\\u2270',\n\tnleqq: '\\u2266\\u0338',\n\tnleqslant: '\\u2A7D\\u0338',\n\tnles: '\\u2A7D\\u0338',\n\tnless: '\\u226E',\n\tnLl: '\\u22D8\\u0338',\n\tnlsim: '\\u2274',\n\tnLt: '\\u226A\\u20D2',\n\tnlt: '\\u226E',\n\tnltri: '\\u22EA',\n\tnltrie: '\\u22EC',\n\tnLtv: '\\u226A\\u0338',\n\tnmid: '\\u2224',\n\tNoBreak: '\\u2060',\n\tNonBreakingSpace: '\\u00A0',\n\tNopf: '\\u2115',\n\tnopf: '\\uD835\\uDD5F',\n\tNot: '\\u2AEC',\n\tnot: '\\u00AC',\n\tNotCongruent: '\\u2262',\n\tNotCupCap: '\\u226D',\n\tNotDoubleVerticalBar: '\\u2226',\n\tNotElement: '\\u2209',\n\tNotEqual: '\\u2260',\n\tNotEqualTilde: '\\u2242\\u0338',\n\tNotExists: '\\u2204',\n\tNotGreater: '\\u226F',\n\tNotGreaterEqual: '\\u2271',\n\tNotGreaterFullEqual: '\\u2267\\u0338',\n\tNotGreaterGreater: '\\u226B\\u0338',\n\tNotGreaterLess: '\\u2279',\n\tNotGreaterSlantEqual: '\\u2A7E\\u0338',\n\tNotGreaterTilde: '\\u2275',\n\tNotHumpDownHump: '\\u224E\\u0338',\n\tNotHumpEqual: '\\u224F\\u0338',\n\tnotin: '\\u2209',\n\tnotindot: '\\u22F5\\u0338',\n\tnotinE: '\\u22F9\\u0338',\n\tnotinva: '\\u2209',\n\tnotinvb: '\\u22F7',\n\tnotinvc: '\\u22F6',\n\tNotLeftTriangle: '\\u22EA',\n\tNotLeftTriangleBar: '\\u29CF\\u0338',\n\tNotLeftTriangleEqual: '\\u22EC',\n\tNotLess: '\\u226E',\n\tNotLessEqual: '\\u2270',\n\tNotLessGreater: '\\u2278',\n\tNotLessLess: '\\u226A\\u0338',\n\tNotLessSlantEqual: '\\u2A7D\\u0338',\n\tNotLessTilde: '\\u2274',\n\tNotNestedGreaterGreater: '\\u2AA2\\u0338',\n\tNotNestedLessLess: '\\u2AA1\\u0338',\n\tnotni: '\\u220C',\n\tnotniva: '\\u220C',\n\tnotnivb: '\\u22FE',\n\tnotnivc: '\\u22FD',\n\tNotPrecedes: '\\u2280',\n\tNotPrecedesEqual: '\\u2AAF\\u0338',\n\tNotPrecedesSlantEqual: '\\u22E0',\n\tNotReverseElement: '\\u220C',\n\tNotRightTriangle: '\\u22EB',\n\tNotRightTriangleBar: '\\u29D0\\u0338',\n\tNotRightTriangleEqual: '\\u22ED',\n\tNotSquareSubset: '\\u228F\\u0338',\n\tNotSquareSubsetEqual: '\\u22E2',\n\tNotSquareSuperset: '\\u2290\\u0338',\n\tNotSquareSupersetEqual: '\\u22E3',\n\tNotSubset: '\\u2282\\u20D2',\n\tNotSubsetEqual: '\\u2288',\n\tNotSucceeds: '\\u2281',\n\tNotSucceedsEqual: '\\u2AB0\\u0338',\n\tNotSucceedsSlantEqual: '\\u22E1',\n\tNotSucceedsTilde: '\\u227F\\u0338',\n\tNotSuperset: '\\u2283\\u20D2',\n\tNotSupersetEqual: '\\u2289',\n\tNotTilde: '\\u2241',\n\tNotTildeEqual: '\\u2244',\n\tNotTildeFullEqual: '\\u2247',\n\tNotTildeTilde: '\\u2249',\n\tNotVerticalBar: '\\u2224',\n\tnpar: '\\u2226',\n\tnparallel: '\\u2226',\n\tnparsl: '\\u2AFD\\u20E5',\n\tnpart: '\\u2202\\u0338',\n\tnpolint: '\\u2A14',\n\tnpr: '\\u2280',\n\tnprcue: '\\u22E0',\n\tnpre: '\\u2AAF\\u0338',\n\tnprec: '\\u2280',\n\tnpreceq: '\\u2AAF\\u0338',\n\tnrArr: '\\u21CF',\n\tnrarr: '\\u219B',\n\tnrarrc: '\\u2933\\u0338',\n\tnrarrw: '\\u219D\\u0338',\n\tnRightarrow: '\\u21CF',\n\tnrightarrow: '\\u219B',\n\tnrtri: '\\u22EB',\n\tnrtrie: '\\u22ED',\n\tnsc: '\\u2281',\n\tnsccue: '\\u22E1',\n\tnsce: '\\u2AB0\\u0338',\n\tNscr: '\\uD835\\uDCA9',\n\tnscr: '\\uD835\\uDCC3',\n\tnshortmid: '\\u2224',\n\tnshortparallel: '\\u2226',\n\tnsim: '\\u2241',\n\tnsime: '\\u2244',\n\tnsimeq: '\\u2244',\n\tnsmid: '\\u2224',\n\tnspar: '\\u2226',\n\tnsqsube: '\\u22E2',\n\tnsqsupe: '\\u22E3',\n\tnsub: '\\u2284',\n\tnsubE: '\\u2AC5\\u0338',\n\tnsube: '\\u2288',\n\tnsubset: '\\u2282\\u20D2',\n\tnsubseteq: '\\u2288',\n\tnsubseteqq: '\\u2AC5\\u0338',\n\tnsucc: '\\u2281',\n\tnsucceq: '\\u2AB0\\u0338',\n\tnsup: '\\u2285',\n\tnsupE: '\\u2AC6\\u0338',\n\tnsupe: '\\u2289',\n\tnsupset: '\\u2283\\u20D2',\n\tnsupseteq: '\\u2289',\n\tnsupseteqq: '\\u2AC6\\u0338',\n\tntgl: '\\u2279',\n\tNtilde: '\\u00D1',\n\tntilde: '\\u00F1',\n\tntlg: '\\u2278',\n\tntriangleleft: '\\u22EA',\n\tntrianglelefteq: '\\u22EC',\n\tntriangleright: '\\u22EB',\n\tntrianglerighteq: '\\u22ED',\n\tNu: '\\u039D',\n\tnu: '\\u03BD',\n\tnum: '\\u0023',\n\tnumero: '\\u2116',\n\tnumsp: '\\u2007',\n\tnvap: '\\u224D\\u20D2',\n\tnVDash: '\\u22AF',\n\tnVdash: '\\u22AE',\n\tnvDash: '\\u22AD',\n\tnvdash: '\\u22AC',\n\tnvge: '\\u2265\\u20D2',\n\tnvgt: '\\u003E\\u20D2',\n\tnvHarr: '\\u2904',\n\tnvinfin: '\\u29DE',\n\tnvlArr: '\\u2902',\n\tnvle: '\\u2264\\u20D2',\n\tnvlt: '\\u003C\\u20D2',\n\tnvltrie: '\\u22B4\\u20D2',\n\tnvrArr: '\\u2903',\n\tnvrtrie: '\\u22B5\\u20D2',\n\tnvsim: '\\u223C\\u20D2',\n\tnwarhk: '\\u2923',\n\tnwArr: '\\u21D6',\n\tnwarr: '\\u2196',\n\tnwarrow: '\\u2196',\n\tnwnear: '\\u2927',\n\tOacute: '\\u00D3',\n\toacute: '\\u00F3',\n\toast: '\\u229B',\n\tocir: '\\u229A',\n\tOcirc: '\\u00D4',\n\tocirc: '\\u00F4',\n\tOcy: '\\u041E',\n\tocy: '\\u043E',\n\todash: '\\u229D',\n\tOdblac: '\\u0150',\n\todblac: '\\u0151',\n\todiv: '\\u2A38',\n\todot: '\\u2299',\n\todsold: '\\u29BC',\n\tOElig: '\\u0152',\n\toelig: '\\u0153',\n\tofcir: '\\u29BF',\n\tOfr: '\\uD835\\uDD12',\n\tofr: '\\uD835\\uDD2C',\n\togon: '\\u02DB',\n\tOgrave: '\\u00D2',\n\tograve: '\\u00F2',\n\togt: '\\u29C1',\n\tohbar: '\\u29B5',\n\tohm: '\\u03A9',\n\toint: '\\u222E',\n\tolarr: '\\u21BA',\n\tolcir: '\\u29BE',\n\tolcross: '\\u29BB',\n\toline: '\\u203E',\n\tolt: '\\u29C0',\n\tOmacr: '\\u014C',\n\tomacr: '\\u014D',\n\tOmega: '\\u03A9',\n\tomega: '\\u03C9',\n\tOmicron: '\\u039F',\n\tomicron: '\\u03BF',\n\tomid: '\\u29B6',\n\tominus: '\\u2296',\n\tOopf: '\\uD835\\uDD46',\n\toopf: '\\uD835\\uDD60',\n\topar: '\\u29B7',\n\tOpenCurlyDoubleQuote: '\\u201C',\n\tOpenCurlyQuote: '\\u2018',\n\toperp: '\\u29B9',\n\toplus: '\\u2295',\n\tOr: '\\u2A54',\n\tor: '\\u2228',\n\torarr: '\\u21BB',\n\tord: '\\u2A5D',\n\torder: '\\u2134',\n\torderof: '\\u2134',\n\tordf: '\\u00AA',\n\tordm: '\\u00BA',\n\torigof: '\\u22B6',\n\toror: '\\u2A56',\n\torslope: '\\u2A57',\n\torv: '\\u2A5B',\n\toS: '\\u24C8',\n\tOscr: '\\uD835\\uDCAA',\n\toscr: '\\u2134',\n\tOslash: '\\u00D8',\n\toslash: '\\u00F8',\n\tosol: '\\u2298',\n\tOtilde: '\\u00D5',\n\totilde: '\\u00F5',\n\tOtimes: '\\u2A37',\n\totimes: '\\u2297',\n\totimesas: '\\u2A36',\n\tOuml: '\\u00D6',\n\touml: '\\u00F6',\n\tovbar: '\\u233D',\n\tOverBar: '\\u203E',\n\tOverBrace: '\\u23DE',\n\tOverBracket: '\\u23B4',\n\tOverParenthesis: '\\u23DC',\n\tpar: '\\u2225',\n\tpara: '\\u00B6',\n\tparallel: '\\u2225',\n\tparsim: '\\u2AF3',\n\tparsl: '\\u2AFD',\n\tpart: '\\u2202',\n\tPartialD: '\\u2202',\n\tPcy: '\\u041F',\n\tpcy: '\\u043F',\n\tpercnt: '\\u0025',\n\tperiod: '\\u002E',\n\tpermil: '\\u2030',\n\tperp: '\\u22A5',\n\tpertenk: '\\u2031',\n\tPfr: '\\uD835\\uDD13',\n\tpfr: '\\uD835\\uDD2D',\n\tPhi: '\\u03A6',\n\tphi: '\\u03C6',\n\tphiv: '\\u03D5',\n\tphmmat: '\\u2133',\n\tphone: '\\u260E',\n\tPi: '\\u03A0',\n\tpi: '\\u03C0',\n\tpitchfork: '\\u22D4',\n\tpiv: '\\u03D6',\n\tplanck: '\\u210F',\n\tplanckh: '\\u210E',\n\tplankv: '\\u210F',\n\tplus: '\\u002B',\n\tplusacir: '\\u2A23',\n\tplusb: '\\u229E',\n\tpluscir: '\\u2A22',\n\tplusdo: '\\u2214',\n\tplusdu: '\\u2A25',\n\tpluse: '\\u2A72',\n\tPlusMinus: '\\u00B1',\n\tplusmn: '\\u00B1',\n\tplussim: '\\u2A26',\n\tplustwo: '\\u2A27',\n\tpm: '\\u00B1',\n\tPoincareplane: '\\u210C',\n\tpointint: '\\u2A15',\n\tPopf: '\\u2119',\n\tpopf: '\\uD835\\uDD61',\n\tpound: '\\u00A3',\n\tPr: '\\u2ABB',\n\tpr: '\\u227A',\n\tprap: '\\u2AB7',\n\tprcue: '\\u227C',\n\tprE: '\\u2AB3',\n\tpre: '\\u2AAF',\n\tprec: '\\u227A',\n\tprecapprox: '\\u2AB7',\n\tpreccurlyeq: '\\u227C',\n\tPrecedes: '\\u227A',\n\tPrecedesEqual: '\\u2AAF',\n\tPrecedesSlantEqual: '\\u227C',\n\tPrecedesTilde: '\\u227E',\n\tpreceq: '\\u2AAF',\n\tprecnapprox: '\\u2AB9',\n\tprecneqq: '\\u2AB5',\n\tprecnsim: '\\u22E8',\n\tprecsim: '\\u227E',\n\tPrime: '\\u2033',\n\tprime: '\\u2032',\n\tprimes: '\\u2119',\n\tprnap: '\\u2AB9',\n\tprnE: '\\u2AB5',\n\tprnsim: '\\u22E8',\n\tprod: '\\u220F',\n\tProduct: '\\u220F',\n\tprofalar: '\\u232E',\n\tprofline: '\\u2312',\n\tprofsurf: '\\u2313',\n\tprop: '\\u221D',\n\tProportion: '\\u2237',\n\tProportional: '\\u221D',\n\tpropto: '\\u221D',\n\tprsim: '\\u227E',\n\tprurel: '\\u22B0',\n\tPscr: '\\uD835\\uDCAB',\n\tpscr: '\\uD835\\uDCC5',\n\tPsi: '\\u03A8',\n\tpsi: '\\u03C8',\n\tpuncsp: '\\u2008',\n\tQfr: '\\uD835\\uDD14',\n\tqfr: '\\uD835\\uDD2E',\n\tqint: '\\u2A0C',\n\tQopf: '\\u211A',\n\tqopf: '\\uD835\\uDD62',\n\tqprime: '\\u2057',\n\tQscr: '\\uD835\\uDCAC',\n\tqscr: '\\uD835\\uDCC6',\n\tquaternions: '\\u210D',\n\tquatint: '\\u2A16',\n\tquest: '\\u003F',\n\tquesteq: '\\u225F',\n\tQUOT: '\\u0022',\n\tquot: '\\u0022',\n\trAarr: '\\u21DB',\n\trace: '\\u223D\\u0331',\n\tRacute: '\\u0154',\n\tracute: '\\u0155',\n\tradic: '\\u221A',\n\traemptyv: '\\u29B3',\n\tRang: '\\u27EB',\n\trang: '\\u27E9',\n\trangd: '\\u2992',\n\trange: '\\u29A5',\n\trangle: '\\u27E9',\n\traquo: '\\u00BB',\n\tRarr: '\\u21A0',\n\trArr: '\\u21D2',\n\trarr: '\\u2192',\n\trarrap: '\\u2975',\n\trarrb: '\\u21E5',\n\trarrbfs: '\\u2920',\n\trarrc: '\\u2933',\n\trarrfs: '\\u291E',\n\trarrhk: '\\u21AA',\n\trarrlp: '\\u21AC',\n\trarrpl: '\\u2945',\n\trarrsim: '\\u2974',\n\tRarrtl: '\\u2916',\n\trarrtl: '\\u21A3',\n\trarrw: '\\u219D',\n\trAtail: '\\u291C',\n\tratail: '\\u291A',\n\tratio: '\\u2236',\n\trationals: '\\u211A',\n\tRBarr: '\\u2910',\n\trBarr: '\\u290F',\n\trbarr: '\\u290D',\n\trbbrk: '\\u2773',\n\trbrace: '\\u007D',\n\trbrack: '\\u005D',\n\trbrke: '\\u298C',\n\trbrksld: '\\u298E',\n\trbrkslu: '\\u2990',\n\tRcaron: '\\u0158',\n\trcaron: '\\u0159',\n\tRcedil: '\\u0156',\n\trcedil: '\\u0157',\n\trceil: '\\u2309',\n\trcub: '\\u007D',\n\tRcy: '\\u0420',\n\trcy: '\\u0440',\n\trdca: '\\u2937',\n\trdldhar: '\\u2969',\n\trdquo: '\\u201D',\n\trdquor: '\\u201D',\n\trdsh: '\\u21B3',\n\tRe: '\\u211C',\n\treal: '\\u211C',\n\trealine: '\\u211B',\n\trealpart: '\\u211C',\n\treals: '\\u211D',\n\trect: '\\u25AD',\n\tREG: '\\u00AE',\n\treg: '\\u00AE',\n\tReverseElement: '\\u220B',\n\tReverseEquilibrium: '\\u21CB',\n\tReverseUpEquilibrium: '\\u296F',\n\trfisht: '\\u297D',\n\trfloor: '\\u230B',\n\tRfr: '\\u211C',\n\trfr: '\\uD835\\uDD2F',\n\trHar: '\\u2964',\n\trhard: '\\u21C1',\n\trharu: '\\u21C0',\n\trharul: '\\u296C',\n\tRho: '\\u03A1',\n\trho: '\\u03C1',\n\trhov: '\\u03F1',\n\tRightAngleBracket: '\\u27E9',\n\tRightArrow: '\\u2192',\n\tRightarrow: '\\u21D2',\n\trightarrow: '\\u2192',\n\tRightArrowBar: '\\u21E5',\n\tRightArrowLeftArrow: '\\u21C4',\n\trightarrowtail: '\\u21A3',\n\tRightCeiling: '\\u2309',\n\tRightDoubleBracket: '\\u27E7',\n\tRightDownTeeVector: '\\u295D',\n\tRightDownVector: '\\u21C2',\n\tRightDownVectorBar: '\\u2955',\n\tRightFloor: '\\u230B',\n\trightharpoondown: '\\u21C1',\n\trightharpoonup: '\\u21C0',\n\trightleftarrows: '\\u21C4',\n\trightleftharpoons: '\\u21CC',\n\trightrightarrows: '\\u21C9',\n\trightsquigarrow: '\\u219D',\n\tRightTee: '\\u22A2',\n\tRightTeeArrow: '\\u21A6',\n\tRightTeeVector: '\\u295B',\n\trightthreetimes: '\\u22CC',\n\tRightTriangle: '\\u22B3',\n\tRightTriangleBar: '\\u29D0',\n\tRightTriangleEqual: '\\u22B5',\n\tRightUpDownVector: '\\u294F',\n\tRightUpTeeVector: '\\u295C',\n\tRightUpVector: '\\u21BE',\n\tRightUpVectorBar: '\\u2954',\n\tRightVector: '\\u21C0',\n\tRightVectorBar: '\\u2953',\n\tring: '\\u02DA',\n\trisingdotseq: '\\u2253',\n\trlarr: '\\u21C4',\n\trlhar: '\\u21CC',\n\trlm: '\\u200F',\n\trmoust: '\\u23B1',\n\trmoustache: '\\u23B1',\n\trnmid: '\\u2AEE',\n\troang: '\\u27ED',\n\troarr: '\\u21FE',\n\trobrk: '\\u27E7',\n\tropar: '\\u2986',\n\tRopf: '\\u211D',\n\tropf: '\\uD835\\uDD63',\n\troplus: '\\u2A2E',\n\trotimes: '\\u2A35',\n\tRoundImplies: '\\u2970',\n\trpar: '\\u0029',\n\trpargt: '\\u2994',\n\trppolint: '\\u2A12',\n\trrarr: '\\u21C9',\n\tRrightarrow: '\\u21DB',\n\trsaquo: '\\u203A',\n\tRscr: '\\u211B',\n\trscr: '\\uD835\\uDCC7',\n\tRsh: '\\u21B1',\n\trsh: '\\u21B1',\n\trsqb: '\\u005D',\n\trsquo: '\\u2019',\n\trsquor: '\\u2019',\n\trthree: '\\u22CC',\n\trtimes: '\\u22CA',\n\trtri: '\\u25B9',\n\trtrie: '\\u22B5',\n\trtrif: '\\u25B8',\n\trtriltri: '\\u29CE',\n\tRuleDelayed: '\\u29F4',\n\truluhar: '\\u2968',\n\trx: '\\u211E',\n\tSacute: '\\u015A',\n\tsacute: '\\u015B',\n\tsbquo: '\\u201A',\n\tSc: '\\u2ABC',\n\tsc: '\\u227B',\n\tscap: '\\u2AB8',\n\tScaron: '\\u0160',\n\tscaron: '\\u0161',\n\tsccue: '\\u227D',\n\tscE: '\\u2AB4',\n\tsce: '\\u2AB0',\n\tScedil: '\\u015E',\n\tscedil: '\\u015F',\n\tScirc: '\\u015C',\n\tscirc: '\\u015D',\n\tscnap: '\\u2ABA',\n\tscnE: '\\u2AB6',\n\tscnsim: '\\u22E9',\n\tscpolint: '\\u2A13',\n\tscsim: '\\u227F',\n\tScy: '\\u0421',\n\tscy: '\\u0441',\n\tsdot: '\\u22C5',\n\tsdotb: '\\u22A1',\n\tsdote: '\\u2A66',\n\tsearhk: '\\u2925',\n\tseArr: '\\u21D8',\n\tsearr: '\\u2198',\n\tsearrow: '\\u2198',\n\tsect: '\\u00A7',\n\tsemi: '\\u003B',\n\tseswar: '\\u2929',\n\tsetminus: '\\u2216',\n\tsetmn: '\\u2216',\n\tsext: '\\u2736',\n\tSfr: '\\uD835\\uDD16',\n\tsfr: '\\uD835\\uDD30',\n\tsfrown: '\\u2322',\n\tsharp: '\\u266F',\n\tSHCHcy: '\\u0429',\n\tshchcy: '\\u0449',\n\tSHcy: '\\u0428',\n\tshcy: '\\u0448',\n\tShortDownArrow: '\\u2193',\n\tShortLeftArrow: '\\u2190',\n\tshortmid: '\\u2223',\n\tshortparallel: '\\u2225',\n\tShortRightArrow: '\\u2192',\n\tShortUpArrow: '\\u2191',\n\tshy: '\\u00AD',\n\tSigma: '\\u03A3',\n\tsigma: '\\u03C3',\n\tsigmaf: '\\u03C2',\n\tsigmav: '\\u03C2',\n\tsim: '\\u223C',\n\tsimdot: '\\u2A6A',\n\tsime: '\\u2243',\n\tsimeq: '\\u2243',\n\tsimg: '\\u2A9E',\n\tsimgE: '\\u2AA0',\n\tsiml: '\\u2A9D',\n\tsimlE: '\\u2A9F',\n\tsimne: '\\u2246',\n\tsimplus: '\\u2A24',\n\tsimrarr: '\\u2972',\n\tslarr: '\\u2190',\n\tSmallCircle: '\\u2218',\n\tsmallsetminus: '\\u2216',\n\tsmashp: '\\u2A33',\n\tsmeparsl: '\\u29E4',\n\tsmid: '\\u2223',\n\tsmile: '\\u2323',\n\tsmt: '\\u2AAA',\n\tsmte: '\\u2AAC',\n\tsmtes: '\\u2AAC\\uFE00',\n\tSOFTcy: '\\u042C',\n\tsoftcy: '\\u044C',\n\tsol: '\\u002F',\n\tsolb: '\\u29C4',\n\tsolbar: '\\u233F',\n\tSopf: '\\uD835\\uDD4A',\n\tsopf: '\\uD835\\uDD64',\n\tspades: '\\u2660',\n\tspadesuit: '\\u2660',\n\tspar: '\\u2225',\n\tsqcap: '\\u2293',\n\tsqcaps: '\\u2293\\uFE00',\n\tsqcup: '\\u2294',\n\tsqcups: '\\u2294\\uFE00',\n\tSqrt: '\\u221A',\n\tsqsub: '\\u228F',\n\tsqsube: '\\u2291',\n\tsqsubset: '\\u228F',\n\tsqsubseteq: '\\u2291',\n\tsqsup: '\\u2290',\n\tsqsupe: '\\u2292',\n\tsqsupset: '\\u2290',\n\tsqsupseteq: '\\u2292',\n\tsqu: '\\u25A1',\n\tSquare: '\\u25A1',\n\tsquare: '\\u25A1',\n\tSquareIntersection: '\\u2293',\n\tSquareSubset: '\\u228F',\n\tSquareSubsetEqual: '\\u2291',\n\tSquareSuperset: '\\u2290',\n\tSquareSupersetEqual: '\\u2292',\n\tSquareUnion: '\\u2294',\n\tsquarf: '\\u25AA',\n\tsquf: '\\u25AA',\n\tsrarr: '\\u2192',\n\tSscr: '\\uD835\\uDCAE',\n\tsscr: '\\uD835\\uDCC8',\n\tssetmn: '\\u2216',\n\tssmile: '\\u2323',\n\tsstarf: '\\u22C6',\n\tStar: '\\u22C6',\n\tstar: '\\u2606',\n\tstarf: '\\u2605',\n\tstraightepsilon: '\\u03F5',\n\tstraightphi: '\\u03D5',\n\tstrns: '\\u00AF',\n\tSub: '\\u22D0',\n\tsub: '\\u2282',\n\tsubdot: '\\u2ABD',\n\tsubE: '\\u2AC5',\n\tsube: '\\u2286',\n\tsubedot: '\\u2AC3',\n\tsubmult: '\\u2AC1',\n\tsubnE: '\\u2ACB',\n\tsubne: '\\u228A',\n\tsubplus: '\\u2ABF',\n\tsubrarr: '\\u2979',\n\tSubset: '\\u22D0',\n\tsubset: '\\u2282',\n\tsubseteq: '\\u2286',\n\tsubseteqq: '\\u2AC5',\n\tSubsetEqual: '\\u2286',\n\tsubsetneq: '\\u228A',\n\tsubsetneqq: '\\u2ACB',\n\tsubsim: '\\u2AC7',\n\tsubsub: '\\u2AD5',\n\tsubsup: '\\u2AD3',\n\tsucc: '\\u227B',\n\tsuccapprox: '\\u2AB8',\n\tsucccurlyeq: '\\u227D',\n\tSucceeds: '\\u227B',\n\tSucceedsEqual: '\\u2AB0',\n\tSucceedsSlantEqual: '\\u227D',\n\tSucceedsTilde: '\\u227F',\n\tsucceq: '\\u2AB0',\n\tsuccnapprox: '\\u2ABA',\n\tsuccneqq: '\\u2AB6',\n\tsuccnsim: '\\u22E9',\n\tsuccsim: '\\u227F',\n\tSuchThat: '\\u220B',\n\tSum: '\\u2211',\n\tsum: '\\u2211',\n\tsung: '\\u266A',\n\tSup: '\\u22D1',\n\tsup: '\\u2283',\n\tsup1: '\\u00B9',\n\tsup2: '\\u00B2',\n\tsup3: '\\u00B3',\n\tsupdot: '\\u2ABE',\n\tsupdsub: '\\u2AD8',\n\tsupE: '\\u2AC6',\n\tsupe: '\\u2287',\n\tsupedot: '\\u2AC4',\n\tSuperset: '\\u2283',\n\tSupersetEqual: '\\u2287',\n\tsuphsol: '\\u27C9',\n\tsuphsub: '\\u2AD7',\n\tsuplarr: '\\u297B',\n\tsupmult: '\\u2AC2',\n\tsupnE: '\\u2ACC',\n\tsupne: '\\u228B',\n\tsupplus: '\\u2AC0',\n\tSupset: '\\u22D1',\n\tsupset: '\\u2283',\n\tsupseteq: '\\u2287',\n\tsupseteqq: '\\u2AC6',\n\tsupsetneq: '\\u228B',\n\tsupsetneqq: '\\u2ACC',\n\tsupsim: '\\u2AC8',\n\tsupsub: '\\u2AD4',\n\tsupsup: '\\u2AD6',\n\tswarhk: '\\u2926',\n\tswArr: '\\u21D9',\n\tswarr: '\\u2199',\n\tswarrow: '\\u2199',\n\tswnwar: '\\u292A',\n\tszlig: '\\u00DF',\n\tTab: '\\u0009',\n\ttarget: '\\u2316',\n\tTau: '\\u03A4',\n\ttau: '\\u03C4',\n\ttbrk: '\\u23B4',\n\tTcaron: '\\u0164',\n\ttcaron: '\\u0165',\n\tTcedil: '\\u0162',\n\ttcedil: '\\u0163',\n\tTcy: '\\u0422',\n\ttcy: '\\u0442',\n\ttdot: '\\u20DB',\n\ttelrec: '\\u2315',\n\tTfr: '\\uD835\\uDD17',\n\ttfr: '\\uD835\\uDD31',\n\tthere4: '\\u2234',\n\tTherefore: '\\u2234',\n\ttherefore: '\\u2234',\n\tTheta: '\\u0398',\n\ttheta: '\\u03B8',\n\tthetasym: '\\u03D1',\n\tthetav: '\\u03D1',\n\tthickapprox: '\\u2248',\n\tthicksim: '\\u223C',\n\tThickSpace: '\\u205F\\u200A',\n\tthinsp: '\\u2009',\n\tThinSpace: '\\u2009',\n\tthkap: '\\u2248',\n\tthksim: '\\u223C',\n\tTHORN: '\\u00DE',\n\tthorn: '\\u00FE',\n\tTilde: '\\u223C',\n\ttilde: '\\u02DC',\n\tTildeEqual: '\\u2243',\n\tTildeFullEqual: '\\u2245',\n\tTildeTilde: '\\u2248',\n\ttimes: '\\u00D7',\n\ttimesb: '\\u22A0',\n\ttimesbar: '\\u2A31',\n\ttimesd: '\\u2A30',\n\ttint: '\\u222D',\n\ttoea: '\\u2928',\n\ttop: '\\u22A4',\n\ttopbot: '\\u2336',\n\ttopcir: '\\u2AF1',\n\tTopf: '\\uD835\\uDD4B',\n\ttopf: '\\uD835\\uDD65',\n\ttopfork: '\\u2ADA',\n\ttosa: '\\u2929',\n\ttprime: '\\u2034',\n\tTRADE: '\\u2122',\n\ttrade: '\\u2122',\n\ttriangle: '\\u25B5',\n\ttriangledown: '\\u25BF',\n\ttriangleleft: '\\u25C3',\n\ttrianglelefteq: '\\u22B4',\n\ttriangleq: '\\u225C',\n\ttriangleright: '\\u25B9',\n\ttrianglerighteq: '\\u22B5',\n\ttridot: '\\u25EC',\n\ttrie: '\\u225C',\n\ttriminus: '\\u2A3A',\n\tTripleDot: '\\u20DB',\n\ttriplus: '\\u2A39',\n\ttrisb: '\\u29CD',\n\ttritime: '\\u2A3B',\n\ttrpezium: '\\u23E2',\n\tTscr: '\\uD835\\uDCAF',\n\ttscr: '\\uD835\\uDCC9',\n\tTScy: '\\u0426',\n\ttscy: '\\u0446',\n\tTSHcy: '\\u040B',\n\ttshcy: '\\u045B',\n\tTstrok: '\\u0166',\n\ttstrok: '\\u0167',\n\ttwixt: '\\u226C',\n\ttwoheadleftarrow: '\\u219E',\n\ttwoheadrightarrow: '\\u21A0',\n\tUacute: '\\u00DA',\n\tuacute: '\\u00FA',\n\tUarr: '\\u219F',\n\tuArr: '\\u21D1',\n\tuarr: '\\u2191',\n\tUarrocir: '\\u2949',\n\tUbrcy: '\\u040E',\n\tubrcy: '\\u045E',\n\tUbreve: '\\u016C',\n\tubreve: '\\u016D',\n\tUcirc: '\\u00DB',\n\tucirc: '\\u00FB',\n\tUcy: '\\u0423',\n\tucy: '\\u0443',\n\tudarr: '\\u21C5',\n\tUdblac: '\\u0170',\n\tudblac: '\\u0171',\n\tudhar: '\\u296E',\n\tufisht: '\\u297E',\n\tUfr: '\\uD835\\uDD18',\n\tufr: '\\uD835\\uDD32',\n\tUgrave: '\\u00D9',\n\tugrave: '\\u00F9',\n\tuHar: '\\u2963',\n\tuharl: '\\u21BF',\n\tuharr: '\\u21BE',\n\tuhblk: '\\u2580',\n\tulcorn: '\\u231C',\n\tulcorner: '\\u231C',\n\tulcrop: '\\u230F',\n\tultri: '\\u25F8',\n\tUmacr: '\\u016A',\n\tumacr: '\\u016B',\n\tuml: '\\u00A8',\n\tUnderBar: '\\u005F',\n\tUnderBrace: '\\u23DF',\n\tUnderBracket: '\\u23B5',\n\tUnderParenthesis: '\\u23DD',\n\tUnion: '\\u22C3',\n\tUnionPlus: '\\u228E',\n\tUogon: '\\u0172',\n\tuogon: '\\u0173',\n\tUopf: '\\uD835\\uDD4C',\n\tuopf: '\\uD835\\uDD66',\n\tUpArrow: '\\u2191',\n\tUparrow: '\\u21D1',\n\tuparrow: '\\u2191',\n\tUpArrowBar: '\\u2912',\n\tUpArrowDownArrow: '\\u21C5',\n\tUpDownArrow: '\\u2195',\n\tUpdownarrow: '\\u21D5',\n\tupdownarrow: '\\u2195',\n\tUpEquilibrium: '\\u296E',\n\tupharpoonleft: '\\u21BF',\n\tupharpoonright: '\\u21BE',\n\tuplus: '\\u228E',\n\tUpperLeftArrow: '\\u2196',\n\tUpperRightArrow: '\\u2197',\n\tUpsi: '\\u03D2',\n\tupsi: '\\u03C5',\n\tupsih: '\\u03D2',\n\tUpsilon: '\\u03A5',\n\tupsilon: '\\u03C5',\n\tUpTee: '\\u22A5',\n\tUpTeeArrow: '\\u21A5',\n\tupuparrows: '\\u21C8',\n\turcorn: '\\u231D',\n\turcorner: '\\u231D',\n\turcrop: '\\u230E',\n\tUring: '\\u016E',\n\turing: '\\u016F',\n\turtri: '\\u25F9',\n\tUscr: '\\uD835\\uDCB0',\n\tuscr: '\\uD835\\uDCCA',\n\tutdot: '\\u22F0',\n\tUtilde: '\\u0168',\n\tutilde: '\\u0169',\n\tutri: '\\u25B5',\n\tutrif: '\\u25B4',\n\tuuarr: '\\u21C8',\n\tUuml: '\\u00DC',\n\tuuml: '\\u00FC',\n\tuwangle: '\\u29A7',\n\tvangrt: '\\u299C',\n\tvarepsilon: '\\u03F5',\n\tvarkappa: '\\u03F0',\n\tvarnothing: '\\u2205',\n\tvarphi: '\\u03D5',\n\tvarpi: '\\u03D6',\n\tvarpropto: '\\u221D',\n\tvArr: '\\u21D5',\n\tvarr: '\\u2195',\n\tvarrho: '\\u03F1',\n\tvarsigma: '\\u03C2',\n\tvarsubsetneq: '\\u228A\\uFE00',\n\tvarsubsetneqq: '\\u2ACB\\uFE00',\n\tvarsupsetneq: '\\u228B\\uFE00',\n\tvarsupsetneqq: '\\u2ACC\\uFE00',\n\tvartheta: '\\u03D1',\n\tvartriangleleft: '\\u22B2',\n\tvartriangleright: '\\u22B3',\n\tVbar: '\\u2AEB',\n\tvBar: '\\u2AE8',\n\tvBarv: '\\u2AE9',\n\tVcy: '\\u0412',\n\tvcy: '\\u0432',\n\tVDash: '\\u22AB',\n\tVdash: '\\u22A9',\n\tvDash: '\\u22A8',\n\tvdash: '\\u22A2',\n\tVdashl: '\\u2AE6',\n\tVee: '\\u22C1',\n\tvee: '\\u2228',\n\tveebar: '\\u22BB',\n\tveeeq: '\\u225A',\n\tvellip: '\\u22EE',\n\tVerbar: '\\u2016',\n\tverbar: '\\u007C',\n\tVert: '\\u2016',\n\tvert: '\\u007C',\n\tVerticalBar: '\\u2223',\n\tVerticalLine: '\\u007C',\n\tVerticalSeparator: '\\u2758',\n\tVerticalTilde: '\\u2240',\n\tVeryThinSpace: '\\u200A',\n\tVfr: '\\uD835\\uDD19',\n\tvfr: '\\uD835\\uDD33',\n\tvltri: '\\u22B2',\n\tvnsub: '\\u2282\\u20D2',\n\tvnsup: '\\u2283\\u20D2',\n\tVopf: '\\uD835\\uDD4D',\n\tvopf: '\\uD835\\uDD67',\n\tvprop: '\\u221D',\n\tvrtri: '\\u22B3',\n\tVscr: '\\uD835\\uDCB1',\n\tvscr: '\\uD835\\uDCCB',\n\tvsubnE: '\\u2ACB\\uFE00',\n\tvsubne: '\\u228A\\uFE00',\n\tvsupnE: '\\u2ACC\\uFE00',\n\tvsupne: '\\u228B\\uFE00',\n\tVvdash: '\\u22AA',\n\tvzigzag: '\\u299A',\n\tWcirc: '\\u0174',\n\twcirc: '\\u0175',\n\twedbar: '\\u2A5F',\n\tWedge: '\\u22C0',\n\twedge: '\\u2227',\n\twedgeq: '\\u2259',\n\tweierp: '\\u2118',\n\tWfr: '\\uD835\\uDD1A',\n\twfr: '\\uD835\\uDD34',\n\tWopf: '\\uD835\\uDD4E',\n\twopf: '\\uD835\\uDD68',\n\twp: '\\u2118',\n\twr: '\\u2240',\n\twreath: '\\u2240',\n\tWscr: '\\uD835\\uDCB2',\n\twscr: '\\uD835\\uDCCC',\n\txcap: '\\u22C2',\n\txcirc: '\\u25EF',\n\txcup: '\\u22C3',\n\txdtri: '\\u25BD',\n\tXfr: '\\uD835\\uDD1B',\n\txfr: '\\uD835\\uDD35',\n\txhArr: '\\u27FA',\n\txharr: '\\u27F7',\n\tXi: '\\u039E',\n\txi: '\\u03BE',\n\txlArr: '\\u27F8',\n\txlarr: '\\u27F5',\n\txmap: '\\u27FC',\n\txnis: '\\u22FB',\n\txodot: '\\u2A00',\n\tXopf: '\\uD835\\uDD4F',\n\txopf: '\\uD835\\uDD69',\n\txoplus: '\\u2A01',\n\txotime: '\\u2A02',\n\txrArr: '\\u27F9',\n\txrarr: '\\u27F6',\n\tXscr: '\\uD835\\uDCB3',\n\txscr: '\\uD835\\uDCCD',\n\txsqcup: '\\u2A06',\n\txuplus: '\\u2A04',\n\txutri: '\\u25B3',\n\txvee: '\\u22C1',\n\txwedge: '\\u22C0',\n\tYacute: '\\u00DD',\n\tyacute: '\\u00FD',\n\tYAcy: '\\u042F',\n\tyacy: '\\u044F',\n\tYcirc: '\\u0176',\n\tycirc: '\\u0177',\n\tYcy: '\\u042B',\n\tycy: '\\u044B',\n\tyen: '\\u00A5',\n\tYfr: '\\uD835\\uDD1C',\n\tyfr: '\\uD835\\uDD36',\n\tYIcy: '\\u0407',\n\tyicy: '\\u0457',\n\tYopf: '\\uD835\\uDD50',\n\tyopf: '\\uD835\\uDD6A',\n\tYscr: '\\uD835\\uDCB4',\n\tyscr: '\\uD835\\uDCCE',\n\tYUcy: '\\u042E',\n\tyucy: '\\u044E',\n\tYuml: '\\u0178',\n\tyuml: '\\u00FF',\n\tZacute: '\\u0179',\n\tzacute: '\\u017A',\n\tZcaron: '\\u017D',\n\tzcaron: '\\u017E',\n\tZcy: '\\u0417',\n\tzcy: '\\u0437',\n\tZdot: '\\u017B',\n\tzdot: '\\u017C',\n\tzeetrf: '\\u2128',\n\tZeroWidthSpace: '\\u200B',\n\tZeta: '\\u0396',\n\tzeta: '\\u03B6',\n\tZfr: '\\u2128',\n\tzfr: '\\uD835\\uDD37',\n\tZHcy: '\\u0416',\n\tzhcy: '\\u0436',\n\tzigrarr: '\\u21DD',\n\tZopf: '\\u2124',\n\tzopf: '\\uD835\\uDD6B',\n\tZscr: '\\uD835\\uDCB5',\n\tzscr: '\\uD835\\uDCCF',\n\tzwj: '\\u200D',\n\tzwnj: '\\u200C',\n});\n\n/**\n * @deprecated use `HTML_ENTITIES` instead\n * @see HTML_ENTITIES\n */\nexports.entityMap = exports.HTML_ENTITIES;\n","var NAMESPACE = require(\"./conventions\").NAMESPACE;\n\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0;//tag name offerring\nvar S_ATTR = 1;//attr name offerring\nvar S_ATTR_SPACE=2;//attr name end and space offer\nvar S_EQ = 3;//=space?\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7;//closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\nfunction ParseError(message, locator) {\n\tthis.message = message\n\tthis.locator = locator\n\tif(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name\n\nfunction XMLReader(){\n\n}\n\nXMLReader.prototype = {\n\tparse:function(source,defaultNSMap,entityMap){\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\n\t\tparse(source,defaultNSMap,entityMap,\n\t\t\t\tdomBuilder,this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t}\n}\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\tfunction entityReplacer(a){\n\t\tvar k = a.slice(1,-1);\n\t\tif (Object.hasOwnProperty.call(entityMap, k)) {\n\t\t\treturn entityMap[k];\n\t\t}else if(k.charAt(0) === '#'){\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\n\t\t}else{\n\t\t\terrorHandler.error('entity not found:'+a);\n\t\t\treturn a;\n\t\t}\n\t}\n\tfunction appendText(end){//has some bugs\n\t\tif(end>start){\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\tlocator&&position(start);\n\t\t\tdomBuilder.characters(xt,0,end-start);\n\t\t\tstart = end\n\t\t}\n\t}\n\tfunction position(p,m){\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t\t//console.log('line++:',locator,startPos,endPos)\n\t\t}\n\t\tlocator.columnNumber = p-lineStart+1;\n\t}\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\n\tvar locator = domBuilder.locator;\n\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\n\tvar closeMap = {};\n\tvar start = 0;\n\twhile(true){\n\t\ttry{\n\t\t\tvar tagStart = source.indexOf('<',start);\n\t\t\tif(tagStart<0){\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\n\t    \t\t\tdoc.appendChild(text);\n\t    \t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tagStart>start){\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch(source.charAt(tagStart+1)){\n\t\t\tcase '/':\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\n\t\t\t\tvar tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n\t\t\t\tvar config = parseStack.pop();\n\t\t\t\tif(end<0){\n\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\n\t        \t\tend = tagStart+1+tagName.length;\n\t        \t}else if(tagName.match(/\\s</)){\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\n\t        \t\tend = tagStart+1+tagName.length;\n\t\t\t\t}\n\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\tvar endMatch = config.tagName == tagName;\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\n\t\t        if(endIgnoreCaseMach){\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\n\t\t\t\t\tif(localNSMap){\n\t\t\t\t\t\tfor (var prefix in localNSMap) {\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!endMatch){\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case\n\t\t\t\t\t}\n\t\t        }else{\n\t\t        \tparseStack.push(config)\n\t\t        }\n\n\t\t\t\tend++;\n\t\t\t\tbreak;\n\t\t\t\t// end elment\n\t\t\tcase '?':// <?...?>\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\n\t\t\t\tbreak;\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\t\t\t\t//elStartEnd\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\n\t\t\t\tvar len = el.length;\n\n\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\n\t\t\t\t\tel.closed = true;\n\t\t\t\t\tif(!entityMap.nbsp){\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(locator && len){\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\n\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\tfor(var i = 0;i<len;i++){\n\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator2\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t}else{\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (NAMESPACE.isHTML(el.uri) && !el.closed) {\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\n\t\t\t\t} else {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tif (e instanceof ParseError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terrorHandler.error('element parse error: '+e)\n\t\t\tend = -1;\n\t\t}\n\t\tif(end>start){\n\t\t\tstart = end;\n\t\t}else{\n\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\n\t\t\tappendText(Math.max(tagStart,start)+1);\n\t\t}\n\t}\n}\nfunction copyLocator(f,t){\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\n\n\t/**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */\n\tfunction addAttribute(qname, value, startIndex) {\n\t\tif (el.attributeNames.hasOwnProperty(qname)) {\n\t\t\terrorHandler.fatalError('Attribute ' + qname + ' redefined')\n\t\t}\n\t\tel.addValue(\n\t\t\tqname,\n\t\t\t// @see https://www.w3.org/TR/xml/#AVNormalize\n\t\t\t// since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\n\t\t\t// - recursive replacement of (DTD) entity references\n\t\t\t// - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\n\t\t\tvalue.replace(/[\\t\\n\\r]/g, ' ').replace(/&#?\\w+;/g, entityReplacer),\n\t\t\tstartIndex\n\t\t)\n\t}\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG;//status\n\twhile(true){\n\t\tvar c = source.charAt(p);\n\t\tswitch(c){\n\t\tcase '=':\n\t\t\tif(s === S_ATTR){//attrName\n\t\t\t\tattrName = source.slice(start,p);\n\t\t\t\ts = S_EQ;\n\t\t\t}else if(s === S_ATTR_SPACE){\n\t\t\t\ts = S_EQ;\n\t\t\t}else{\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '\\'':\n\t\tcase '\"':\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t){//equal\n\t\t\t\tif(s === S_ATTR){\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t}\n\t\t\t\tstart = p+1;\n\t\t\t\tp = source.indexOf(c,start)\n\t\t\t\tif(p>0){\n\t\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\t\taddAttribute(attrName, value, start-1);\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t}else{\n\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\n\t\t\t\t}\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\n\t\t\t\tstart = p+1;\n\t\t\t\ts = S_ATTR_END\n\t\t\t}else{\n\t\t\t\t//fatalError: no equal before\n\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\ts =S_TAG_CLOSE;\n\t\t\t\tel.closed = true;\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\tcase S_ATTR:\n\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tel.closed = true;\n\t\t\t\tbreak;\n\t\t\t//case S_EQ:\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\") // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ''://end document\n\t\t\terrorHandler.error('unexpected end of input');\n\t\t\tif(s == S_TAG){\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\t}\n\t\t\treturn p;\n\t\tcase '>':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\tbreak;//normal\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\n\t\t\tcase S_ATTR:\n\t\t\t\tvalue = source.slice(start,p);\n\t\t\t\tif(value.slice(-1) === '/'){\n\t\t\t\t\tel.closed  = true;\n\t\t\t\t\tvalue = value.slice(0,-1)\n\t\t\t\t}\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tif(s === S_ATTR_SPACE){\n\t\t\t\t\tvalue = attrName;\n\t\t\t\t}\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\t}else{\n\t\t\t\t\tif(!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(value, value, start)\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S_EQ:\n\t\t\t\tthrow new Error('attribute value missed!!');\n\t\t\t}\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\t\t\treturn p;\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\tcase '\\u0080':\n\t\t\tc = ' ';\n\t\tdefault:\n\t\t\tif(c<= ' '){//space\n\t\t\t\tswitch(s){\n\t\t\t\tcase S_TAG:\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR:\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tvar value = source.slice(start, p);\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t//case S_EQ:\n\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t//\tvoid();break;\n\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t//ignore warning\n\t\t\t\t}\n\t\t\t}else{//not space\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\tswitch(s){\n\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tvar tagName =  el.tagName;\n\t\t\t\t\tif (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(attrName, attrName, start);\n\t\t\t\t\tstart = p;\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\n\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_EQ:\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t}\n\t\t\t}\n\t\t}//end outer switch\n\t\t//console.log('p++',p)\n\t\tp++;\n\t}\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el,domBuilder,currentNSMap){\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\tvar i = el.length;\n\twhile(i--){\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif(nsp>0){\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\n\t\t\tvar localName = qName.slice(nsp+1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\n\t\t}else{\n\t\t\tlocalName = qName;\n\t\t\tprefix = null\n\t\t\tnsPrefix = qName === 'xmlns' && ''\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName ;\n\t\t//prefix == null for no ns prefix attribute\n\t\tif(nsPrefix !== false){//hack!!\n\t\t\tif(localNSMap == null){\n\t\t\t\tlocalNSMap = {}\n\t\t\t\t//console.log(currentNSMap,0)\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\n\t\t\t\t//console.log(currentNSMap,1)\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = NAMESPACE.XMLNS\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value)\n\t\t}\n\t}\n\tvar i = el.length;\n\twhile(i--){\n\t\ta = el[i];\n\t\tvar prefix = a.prefix;\n\t\tif(prefix){//no prefix attribute has no namespace\n\t\t\tif(prefix === 'xml'){\n\t\t\t\ta.uri = NAMESPACE.XML;\n\t\t\t}if(prefix !== 'xmlns'){\n\t\t\t\ta.uri = currentNSMap[prefix || '']\n\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif(nsp>0){\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\n\t}else{\n\t\tprefix = null;//important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = el.uri = currentNSMap[prefix || ''];\n\tdomBuilder.startElement(ns,localName,tagName,el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif(el.closed){\n\t\tdomBuilder.endElement(ns,localName,tagName);\n\t\tif(localNSMap){\n\t\t\tfor (prefix in localNSMap) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\n\tif(/^(?:script|textarea)$/i.test(tagName)){\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\n\t\tif(/[&<]/.test(text)){\n\t\t\tif(/^script$/i.test(tagName)){\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\n\t\t\t\t\t//lexHandler.startCDATA();\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\t\t//lexHandler.endCDATA();\n\t\t\t\t\treturn elEndStart;\n\t\t\t\t//}\n\t\t\t}//}else{//text area\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\treturn elEndStart;\n\t\t\t//}\n\n\t\t}\n\t}\n\treturn elStartEnd+1;\n}\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\n\t//if(tagName in closeMap){\n\tvar pos = closeMap[tagName];\n\tif(pos == null){\n\t\t//console.log(tagName)\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\n\t\tif(pos<elStartEnd){//忘记闭合\n\t\t\tpos = source.lastIndexOf('</'+tagName)\n\t\t}\n\t\tcloseMap[tagName] =pos\n\t}\n\treturn pos<elStartEnd;\n\t//}\n}\n\nfunction _copy (source, target) {\n\tfor (var n in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, n)) {\n\t\t\ttarget[n] = source[n];\n\t\t}\n\t}\n}\n\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\n\tvar next= source.charAt(start+2)\n\tswitch(next){\n\tcase '-':\n\t\tif(source.charAt(start + 3) === '-'){\n\t\t\tvar end = source.indexOf('-->',start+4);\n\t\t\t//append comment source.substring(4,end)//<!--\n\t\t\tif(end>start){\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\n\t\t\t\treturn end+3;\n\t\t\t}else{\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}else{\n\t\t\t//error\n\t\t\treturn -1;\n\t\t}\n\tdefault:\n\t\tif(source.substr(start+3,6) == 'CDATA['){\n\t\t\tvar end = source.indexOf(']]>',start+9);\n\t\t\tdomBuilder.startCDATA();\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\n\t\t\tdomBuilder.endCDATA()\n\t\t\treturn end+3;\n\t\t}\n\t\t//<!DOCTYPE\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n\t\tvar matchs = split(source,start);\n\t\tvar len = matchs.length;\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\n\t\t\tvar name = matchs[1][0];\n\t\t\tvar pubid = false;\n\t\t\tvar sysid = false;\n\t\t\tif(len>3){\n\t\t\t\tif(/^public$/i.test(matchs[2][0])){\n\t\t\t\t\tpubid = matchs[3][0];\n\t\t\t\t\tsysid = len>4 && matchs[4][0];\n\t\t\t\t}else if(/^system$/i.test(matchs[2][0])){\n\t\t\t\t\tsysid = matchs[3][0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar lastMatch = matchs[len-1]\n\t\t\tdomBuilder.startDTD(name, pubid, sysid);\n\t\t\tdomBuilder.endDTD();\n\n\t\t\treturn lastMatch.index+lastMatch[0].length\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n\nfunction parseInstruction(source,start,domBuilder){\n\tvar end = source.indexOf('?>',start);\n\tif(end){\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\t\tif(match){\n\t\t\tvar len = match[0].length;\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\n\t\t\treturn end+2;\n\t\t}else{//error\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction ElementAttributes(){\n\tthis.attributeNames = {}\n}\nElementAttributes.prototype = {\n\tsetTagName:function(tagName){\n\t\tif(!tagNamePattern.test(tagName)){\n\t\t\tthrow new Error('invalid tagName:'+tagName)\n\t\t}\n\t\tthis.tagName = tagName\n\t},\n\taddValue:function(qName, value, offset) {\n\t\tif(!tagNamePattern.test(qName)){\n\t\t\tthrow new Error('invalid attribute:'+qName)\n\t\t}\n\t\tthis.attributeNames[qName] = this.length;\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\n\t},\n\tlength:0,\n\tgetLocalName:function(i){return this[i].localName},\n\tgetLocator:function(i){return this[i].locator},\n\tgetQName:function(i){return this[i].qName},\n\tgetURI:function(i){return this[i].uri},\n\tgetValue:function(i){return this[i].value}\n//\t,getIndex:function(uri, localName)){\n//\t\tif(localName){\n//\n//\t\t}else{\n//\t\t\tvar qName = uri\n//\t\t}\n//\t},\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n//\tgetType:function(uri,localName){}\n//\tgetType:function(i){},\n}\n\n\n\nfunction split(source,start){\n\tvar match;\n\tvar buf = [];\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n\treg.lastIndex = start;\n\treg.exec(source);//skip <\n\twhile(match = reg.exec(source)){\n\t\tbuf.push(match);\n\t\tif(match[1])return buf;\n\t}\n}\n\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;\n","var conventions = require(\"./conventions\");\nvar dom = require('./dom')\nvar entities = require('./entities');\nvar sax = require('./sax');\n\nvar DOMImplementation = dom.DOMImplementation;\n\nvar NAMESPACE = conventions.NAMESPACE;\n\nvar ParseError = sax.ParseError;\nvar XMLReader = sax.XMLReader;\n\n/**\n * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:\n *\n * > XML parsed entities are often stored in computer files which,\n * > for editing convenience, are organized into lines.\n * > These lines are typically separated by some combination\n * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\n * >\n * > To simplify the tasks of applications, the XML processor must behave\n * > as if it normalized all line breaks in external parsed entities (including the document entity)\n * > on input, before parsing, by translating all of the following to a single #xA character:\n * >\n * > 1. the two-character sequence #xD #xA\n * > 2. the two-character sequence #xD #x85\n * > 3. the single character #x85\n * > 4. the single character #x2028\n * > 5. any #xD character that is not immediately followed by #xA or #x85.\n *\n * @param {string} input\n * @returns {string}\n */\nfunction normalizeLineEndings(input) {\n\treturn input\n\t\t.replace(/\\r[\\n\\u0085]/g, '\\n')\n\t\t.replace(/[\\r\\u0085\\u2028]/g, '\\n')\n}\n\n/**\n * @typedef Locator\n * @property {number} [columnNumber]\n * @property {number} [lineNumber]\n */\n\n/**\n * @typedef DOMParserOptions\n * @property {DOMHandler} [domBuilder]\n * @property {Function} [errorHandler]\n * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing\n * \t\t\t\t\t\tdefaults to `normalizeLineEndings`\n * @property {Locator} [locator]\n * @property {Record<string, string>} [xmlns]\n *\n * @see normalizeLineEndings\n */\n\n/**\n * The DOMParser interface provides the ability to parse XML or HTML source code\n * from a string into a DOM `Document`.\n *\n * _xmldom is different from the spec in that it allows an `options` parameter,\n * to override the default behavior._\n *\n * @param {DOMParserOptions} [options]\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\n */\nfunction DOMParser(options){\n\tthis.options = options ||{locator:{}};\n}\n\nDOMParser.prototype.parseFromString = function(source,mimeType){\n\tvar options = this.options;\n\tvar sax =  new XMLReader();\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\n\tvar errorHandler = options.errorHandler;\n\tvar locator = options.locator;\n\tvar defaultNSMap = options.xmlns||{};\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\n  \tvar entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\tif(locator){\n\t\tdomBuilder.setDocumentLocator(locator)\n\t}\n\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\n\tsax.domBuilder = options.domBuilder || domBuilder;\n\tif(isHTML){\n\t\tdefaultNSMap[''] = NAMESPACE.HTML;\n\t}\n\tdefaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\tvar normalize = options.normalizeLineEndings || normalizeLineEndings;\n\tif (source && typeof source === 'string') {\n\t\tsax.parse(\n\t\t\tnormalize(source),\n\t\t\tdefaultNSMap,\n\t\t\tentityMap\n\t\t)\n\t} else {\n\t\tsax.errorHandler.error('invalid doc source')\n\t}\n\treturn domBuilder.doc;\n}\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\n\tif(!errorImpl){\n\t\tif(domBuilder instanceof DOMHandler){\n\t\t\treturn domBuilder;\n\t\t}\n\t\terrorImpl = domBuilder ;\n\t}\n\tvar errorHandler = {}\n\tvar isCallback = errorImpl instanceof Function;\n\tlocator = locator||{}\n\tfunction build(key){\n\t\tvar fn = errorImpl[key];\n\t\tif(!fn && isCallback){\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\n\t\t}\n\t\terrorHandler[key] = fn && function(msg){\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\n\t\t}||function(){};\n\t}\n\tbuild('warning');\n\tbuild('error');\n\tbuild('fatalError');\n\treturn errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n    this.cdata = false;\n}\nfunction position(locator,node){\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n\tstartDocument : function() {\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\n    \tif (this.locator) {\n        \tthis.doc.documentURI = this.locator.systemId;\n    \t}\n\t},\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\n\t    var len = attrs.length;\n\t    appendElement(this, el);\n\t    this.currentElement = el;\n\n\t\tthis.locator && position(this.locator,el)\n\t    for (var i = 0 ; i < len; i++) {\n\t        var namespaceURI = attrs.getURI(i);\n\t        var value = attrs.getValue(i);\n\t        var qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr)\n\t    }\n\t},\n\tendElement:function(namespaceURI, localName, qName) {\n\t\tvar current = this.currentElement\n\t\tvar tagName = current.tagName;\n\t\tthis.currentElement = current.parentNode;\n\t},\n\tstartPrefixMapping:function(prefix, uri) {\n\t},\n\tendPrefixMapping:function(prefix) {\n\t},\n\tprocessingInstruction:function(target, data) {\n\t    var ins = this.doc.createProcessingInstruction(target, data);\n\t    this.locator && position(this.locator,ins)\n\t    appendElement(this, ins);\n\t},\n\tignorableWhitespace:function(ch, start, length) {\n\t},\n\tcharacters:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t\t//console.log(chars)\n\t\tif(chars){\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif(this.currentElement){\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t}else if(/^\\s*$/.test(chars)){\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator,charNode)\n\t\t}\n\t},\n\tskippedEntity:function(name) {\n\t},\n\tendDocument:function() {\n\t\tthis.doc.normalize();\n\t},\n\tsetDocumentLocator:function (locator) {\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\n\t    \tlocator.lineNumber = 0;\n\t    }\n\t},\n\t//LexicalHandler\n\tcomment:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t    var comm = this.doc.createComment(chars);\n\t    this.locator && position(this.locator,comm)\n\t    appendElement(this, comm);\n\t},\n\n\tstartCDATA:function() {\n\t    //used in characters() methods\n\t    this.cdata = true;\n\t},\n\tendCDATA:function() {\n\t    this.cdata = false;\n\t},\n\n\tstartDTD:function(name, publicId, systemId) {\n\t\tvar impl = this.doc.implementation;\n\t    if (impl && impl.createDocumentType) {\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\n\t        this.locator && position(this.locator,dt)\n\t        appendElement(this, dt);\n\t\t\t\t\tthis.doc.doctype = dt;\n\t    }\n\t},\n\t/**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning:function(error) {\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\n\t},\n\terror:function(error) {\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\n\t},\n\tfatalError:function(error) {\n\t\tthrow new ParseError(error, this.locator);\n\t}\n}\nfunction _locator(l){\n\tif(l){\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\n\t}\n}\nfunction _toString(chars,start,length){\n\tif(typeof chars == 'string'){\n\t\treturn chars.substr(start,length)\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif(chars.length >= start+length || start){\n\t\t\treturn new java.lang.String(chars,start,length)+'';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\n\tDOMHandler.prototype[key] = function(){return null}\n})\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement (hander,node) {\n    if (!hander.currentElement) {\n        hander.doc.appendChild(node);\n    } else {\n        hander.currentElement.appendChild(node);\n    }\n}//appendChild and setAttributeNS are preformance key\n\nexports.__DOMHandler = DOMHandler;\nexports.normalizeLineEndings = normalizeLineEndings;\nexports.DOMParser = DOMParser;\n","var dom = require('./dom')\nexports.DOMImplementation = dom.DOMImplementation\nexports.XMLSerializer = dom.XMLSerializer\nexports.DOMParser = require('./dom-parser').DOMParser\n","/*! @name mpd-parser @version 1.3.1 @license Apache-2.0 */\nimport resolveUrl from '@videojs/vhs-utils/es/resolve-url';\nimport window from 'global/window';\nimport { forEachMediaGroup } from '@videojs/vhs-utils/es/media-groups';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array';\nimport { DOMParser } from '@xmldom/xmldom';\n\nvar version = \"1.3.1\";\n\nconst isObject = obj => {\n  return !!obj && typeof obj === 'object';\n};\n\nconst merge = (...objects) => {\n  return objects.reduce((result, source) => {\n    if (typeof source !== 'object') {\n      return result;\n    }\n\n    Object.keys(source).forEach(key => {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nconst values = o => Object.keys(o).map(k => o[k]);\n\nconst range = (start, end) => {\n  const result = [];\n\n  for (let i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nconst flatten = lists => lists.reduce((x, y) => x.concat(y), []);\nconst from = list => {\n  if (!list.length) {\n    return [];\n  }\n\n  const result = [];\n\n  for (let i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nconst findIndexes = (l, key) => l.reduce((a, e, i) => {\n  if (e[key]) {\n    a.push(i);\n  }\n\n  return a;\n}, []);\n/**\n * Returns a union of the included lists provided each element can be identified by a key.\n *\n * @param {Array} list - list of lists to get the union of\n * @param {Function} keyFunction - the function to use as a key for each element\n *\n * @return {Array} the union of the arrays\n */\n\nconst union = (lists, keyFunction) => {\n  return values(lists.reduce((acc, list) => {\n    list.forEach(el => {\n      acc[keyFunction(el)] = el;\n    });\n    return acc;\n  }, {}));\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  INVALID_NUMBER_OF_CONTENT_STEERING: 'INVALID_NUMBER_OF_CONTENT_STEERING',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls,\n *   follows  RFC 2616, Clause 14.35.1\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nconst urlTypeToSegment = ({\n  baseUrl = '',\n  source = '',\n  range = '',\n  indexRange = ''\n}) => {\n  const segment = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range || indexRange) {\n    const rangeStr = range ? range : indexRange;\n    const ranges = rangeStr.split('-'); // default to parsing this as a BigInt if possible\n\n    let startRange = window.BigInt ? window.BigInt(ranges[0]) : parseInt(ranges[0], 10);\n    let endRange = window.BigInt ? window.BigInt(ranges[1]) : parseInt(ranges[1], 10); // convert back to a number if less than MAX_SAFE_INTEGER\n\n    if (startRange < Number.MAX_SAFE_INTEGER && typeof startRange === 'bigint') {\n      startRange = Number(startRange);\n    }\n\n    if (endRange < Number.MAX_SAFE_INTEGER && typeof endRange === 'bigint') {\n      endRange = Number(endRange);\n    }\n\n    let length;\n\n    if (typeof endRange === 'bigint' || typeof startRange === 'bigint') {\n      length = window.BigInt(endRange) - window.BigInt(startRange) + window.BigInt(1);\n    } else {\n      length = endRange - startRange + 1;\n    }\n\n    if (typeof length === 'bigint' && length < Number.MAX_SAFE_INTEGER) {\n      length = Number(length);\n    } // byterange should be inclusive according to\n    // RFC 2616, Clause 14.35.1\n\n\n    segment.byterange = {\n      length,\n      offset: startRange\n    };\n  }\n\n  return segment;\n};\nconst byteRangeToString = byterange => {\n  // `endRange` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  let endRange;\n\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    endRange = window.BigInt(byterange.offset) + window.BigInt(byterange.length) - window.BigInt(1);\n  } else {\n    endRange = byterange.offset + byterange.length - 1;\n  }\n\n  return `${byterange.offset}-${endRange}`;\n};\n\n/**\n * parse the end number attribue that can be a string\n * number, or undefined.\n *\n * @param {string|number|undefined} endNumber\n *        The end number attribute.\n *\n * @return {number|null}\n *          The result of parsing the end number.\n */\n\nconst parseEndNumber = endNumber => {\n  if (endNumber && typeof endNumber !== 'number') {\n    endNumber = parseInt(endNumber, 10);\n  }\n\n  if (isNaN(endNumber)) {\n    return null;\n  }\n\n  return endNumber;\n};\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\n\nconst segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static(attributes) {\n    const {\n      duration,\n      timescale = 1,\n      sourceDuration,\n      periodDuration\n    } = attributes;\n    const endNumber = parseEndNumber(attributes.endNumber);\n    const segmentDuration = duration / timescale;\n\n    if (typeof endNumber === 'number') {\n      return {\n        start: 0,\n        end: endNumber\n      };\n    }\n\n    if (typeof periodDuration === 'number') {\n      return {\n        start: 0,\n        end: periodDuration / segmentDuration\n      };\n    }\n\n    return {\n      start: 0,\n      end: sourceDuration / segmentDuration\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic(attributes) {\n    const {\n      NOW,\n      clientOffset,\n      availabilityStartTime,\n      timescale = 1,\n      duration,\n      periodStart = 0,\n      minimumUpdatePeriod = 0,\n      timeShiftBufferDepth = Infinity\n    } = attributes;\n    const endNumber = parseEndNumber(attributes.endNumber); // clientOffset is passed in at the top level of mpd-parser and is an offset calculated\n    // after retrieving UTC server time.\n\n    const now = (NOW + clientOffset) / 1000; // WC stands for Wall Clock.\n    // Convert the period start time to EPOCH.\n\n    const periodStartWC = availabilityStartTime + periodStart; // Period end in EPOCH is manifest's retrieval time + time until next update.\n\n    const periodEndWC = now + minimumUpdatePeriod;\n    const periodDuration = periodEndWC - periodStartWC;\n    const segmentCount = Math.ceil(periodDuration * timescale / duration);\n    const availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    const availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: typeof endNumber === 'number' ? endNumber : Math.min(segmentCount, availableEnd)\n    };\n  }\n\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nconst toSegments = attributes => number => {\n  const {\n    duration,\n    timescale = 1,\n    periodStart,\n    startNumber = 1\n  } = attributes;\n  return {\n    number: startNumber + number,\n    duration: duration / timescale,\n    timeline: periodStart,\n    time: number * duration\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nconst parseByDuration = attributes => {\n  const {\n    type,\n    duration,\n    timescale = 1,\n    periodDuration,\n    sourceDuration\n  } = attributes;\n  const {\n    start,\n    end\n  } = segmentRange[type](attributes);\n  const segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    const index = segments.length - 1; // section is either a period or the full source\n\n    const sectionDuration = typeof periodDuration === 'number' ? periodDuration : sourceDuration; // final segment may be less than full segment duration\n\n    segments[index].duration = sectionDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nconst segmentsFromBase = attributes => {\n  const {\n    baseUrl,\n    initialization = {},\n    sourceDuration,\n    indexRange = '',\n    periodStart,\n    presentationTime,\n    number = 0,\n    duration\n  } = attributes; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  const initSegment = urlTypeToSegment({\n    baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  const segment = urlTypeToSegment({\n    baseUrl,\n    source: baseUrl,\n    indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    const segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration;\n    segment.timeline = periodStart;\n  } // If presentation time is provided, these segments are being generated by SIDX\n  // references, and should use the time provided. For the general case of SegmentBase,\n  // there should only be one segment in the period, so its presentation time is the same\n  // as its period start.\n\n\n  segment.presentationTime = presentationTime || periodStart;\n  segment.number = number;\n  return [segment];\n};\n/**\n * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n * according to the sidx information given.\n *\n * playlist.sidx has metadadata about the sidx where-as the sidx param\n * is the parsed sidx box itself.\n *\n * @param {Object} playlist the playlist to update the sidx information for\n * @param {Object} sidx the parsed sidx box\n * @return {Object} the playlist object with the updated sidx information\n */\n\nconst addSidxSegmentsToPlaylist$1 = (playlist, sidx, baseUrl) => {\n  // Retain init segment information\n  const initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial main manifest parsing\n\n  const sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n  const timeline = playlist.timeline || 0;\n  const sidxByteRange = playlist.sidx.byterange;\n  const sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n  const timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n  const mediaReferences = sidx.references.filter(r => r.referenceType !== 1);\n  const segments = [];\n  const type = playlist.endList ? 'static' : 'dynamic';\n  const periodStart = playlist.sidx.timeline;\n  let presentationTime = periodStart;\n  let number = playlist.mediaSequence || 0; // firstOffset is the offset from the end of the sidx box\n\n  let startIndex; // eslint-disable-next-line\n\n  if (typeof sidx.firstOffset === 'bigint') {\n    startIndex = window.BigInt(sidxEnd) + sidx.firstOffset;\n  } else {\n    startIndex = sidxEnd + sidx.firstOffset;\n  }\n\n  for (let i = 0; i < mediaReferences.length; i++) {\n    const reference = sidx.references[i]; // size of the referenced (sub)segment\n\n    const size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n    // this will be converted to seconds when generating segments\n\n    const duration = reference.subsegmentDuration; // should be an inclusive range\n\n    let endIndex; // eslint-disable-next-line\n\n    if (typeof startIndex === 'bigint') {\n      endIndex = startIndex + window.BigInt(size) - window.BigInt(1);\n    } else {\n      endIndex = startIndex + size - 1;\n    }\n\n    const indexRange = `${startIndex}-${endIndex}`;\n    const attributes = {\n      baseUrl,\n      timescale,\n      timeline,\n      periodStart,\n      presentationTime,\n      number,\n      duration,\n      sourceDuration,\n      indexRange,\n      type\n    };\n    const segment = segmentsFromBase(attributes)[0];\n\n    if (initSegment) {\n      segment.map = initSegment;\n    }\n\n    segments.push(segment);\n\n    if (typeof startIndex === 'bigint') {\n      startIndex += window.BigInt(size);\n    } else {\n      startIndex += size;\n    }\n\n    presentationTime += duration / timescale;\n    number++;\n  }\n\n  playlist.segments = segments;\n  return playlist;\n};\n\nconst SUPPORTED_MEDIA_TYPES = ['AUDIO', 'SUBTITLES']; // allow one 60fps frame as leniency (arbitrarily chosen)\n\nconst TIME_FUDGE = 1 / 60;\n/**\n * Given a list of timelineStarts, combines, dedupes, and sorts them.\n *\n * @param {TimelineStart[]} timelineStarts - list of timeline starts\n *\n * @return {TimelineStart[]} the combined and deduped timeline starts\n */\n\nconst getUniqueTimelineStarts = timelineStarts => {\n  return union(timelineStarts, ({\n    timeline\n  }) => timeline).sort((a, b) => a.timeline > b.timeline ? 1 : -1);\n};\n/**\n * Finds the playlist with the matching NAME attribute.\n *\n * @param {Array} playlists - playlists to search through\n * @param {string} name - the NAME attribute to search for\n *\n * @return {Object|null} the matching playlist object, or null\n */\n\nconst findPlaylistWithName = (playlists, name) => {\n  for (let i = 0; i < playlists.length; i++) {\n    if (playlists[i].attributes.NAME === name) {\n      return playlists[i];\n    }\n  }\n\n  return null;\n};\n/**\n * Gets a flattened array of media group playlists.\n *\n * @param {Object} manifest - the main manifest object\n *\n * @return {Array} the media group playlists\n */\n\nconst getMediaGroupPlaylists = manifest => {\n  let mediaGroupPlaylists = [];\n  forEachMediaGroup(manifest, SUPPORTED_MEDIA_TYPES, (properties, type, group, label) => {\n    mediaGroupPlaylists = mediaGroupPlaylists.concat(properties.playlists || []);\n  });\n  return mediaGroupPlaylists;\n};\n/**\n * Updates the playlist's media sequence numbers.\n *\n * @param {Object} config - options object\n * @param {Object} config.playlist - the playlist to update\n * @param {number} config.mediaSequence - the mediaSequence number to start with\n */\n\nconst updateMediaSequenceForPlaylist = ({\n  playlist,\n  mediaSequence\n}) => {\n  playlist.mediaSequence = mediaSequence;\n  playlist.segments.forEach((segment, index) => {\n    segment.number = playlist.mediaSequence + index;\n  });\n};\n/**\n * Updates the media and discontinuity sequence numbers of newPlaylists given oldPlaylists\n * and a complete list of timeline starts.\n *\n * If no matching playlist is found, only the discontinuity sequence number of the playlist\n * will be updated.\n *\n * Since early available timelines are not supported, at least one segment must be present.\n *\n * @param {Object} config - options object\n * @param {Object[]} oldPlaylists - the old playlists to use as a reference\n * @param {Object[]} newPlaylists - the new playlists to update\n * @param {Object} timelineStarts - all timelineStarts seen in the stream to this point\n */\n\nconst updateSequenceNumbers = ({\n  oldPlaylists,\n  newPlaylists,\n  timelineStarts\n}) => {\n  newPlaylists.forEach(playlist => {\n    playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n      timeline\n    }) {\n      return timeline === playlist.timeline;\n    }); // Playlists NAMEs come from DASH Representation IDs, which are mandatory\n    // (see ISO_23009-1-2012 5.3.5.2).\n    //\n    // If the same Representation existed in a prior Period, it will retain the same NAME.\n\n    const oldPlaylist = findPlaylistWithName(oldPlaylists, playlist.attributes.NAME);\n\n    if (!oldPlaylist) {\n      // Since this is a new playlist, the media sequence values can start from 0 without\n      // consequence.\n      return;\n    } // TODO better support for live SIDX\n    //\n    // As of this writing, mpd-parser does not support multiperiod SIDX (in live or VOD).\n    // This is evident by a playlist only having a single SIDX reference. In a multiperiod\n    // playlist there would need to be multiple SIDX references. In addition, live SIDX is\n    // not supported when the SIDX properties change on refreshes.\n    //\n    // In the future, if support needs to be added, the merging logic here can be called\n    // after SIDX references are resolved. For now, exit early to prevent exceptions being\n    // thrown due to undefined references.\n\n\n    if (playlist.sidx) {\n      return;\n    } // Since we don't yet support early available timelines, we don't need to support\n    // playlists with no segments.\n\n\n    const firstNewSegment = playlist.segments[0];\n    const oldMatchingSegmentIndex = oldPlaylist.segments.findIndex(function (oldSegment) {\n      return Math.abs(oldSegment.presentationTime - firstNewSegment.presentationTime) < TIME_FUDGE;\n    }); // No matching segment from the old playlist means the entire playlist was refreshed.\n    // In this case the media sequence should account for this update, and the new segments\n    // should be marked as discontinuous from the prior content, since the last prior\n    // timeline was removed.\n\n    if (oldMatchingSegmentIndex === -1) {\n      updateMediaSequenceForPlaylist({\n        playlist,\n        mediaSequence: oldPlaylist.mediaSequence + oldPlaylist.segments.length\n      });\n      playlist.segments[0].discontinuity = true;\n      playlist.discontinuityStarts.unshift(0); // No matching segment does not necessarily mean there's missing content.\n      //\n      // If the new playlist's timeline is the same as the last seen segment's timeline,\n      // then a discontinuity can be added to identify that there's potentially missing\n      // content. If there's no missing content, the discontinuity should still be rather\n      // harmless. It's possible that if segment durations are accurate enough, that the\n      // existence of a gap can be determined using the presentation times and durations,\n      // but if the segment timing info is off, it may introduce more problems than simply\n      // adding the discontinuity.\n      //\n      // If the new playlist's timeline is different from the last seen segment's timeline,\n      // then a discontinuity can be added to identify that this is the first seen segment\n      // of a new timeline. However, the logic at the start of this function that\n      // determined the disconinuity sequence by timeline index is now off by one (the\n      // discontinuity of the newest timeline hasn't yet fallen off the manifest...since\n      // we added it), so the disconinuity sequence must be decremented.\n      //\n      // A period may also have a duration of zero, so the case of no segments is handled\n      // here even though we don't yet support early available periods.\n\n      if (!oldPlaylist.segments.length && playlist.timeline > oldPlaylist.timeline || oldPlaylist.segments.length && playlist.timeline > oldPlaylist.segments[oldPlaylist.segments.length - 1].timeline) {\n        playlist.discontinuitySequence--;\n      }\n\n      return;\n    } // If the first segment matched with a prior segment on a discontinuity (it's matching\n    // on the first segment of a period), then the discontinuitySequence shouldn't be the\n    // timeline's matching one, but instead should be the one prior, and the first segment\n    // of the new manifest should be marked with a discontinuity.\n    //\n    // The reason for this special case is that discontinuity sequence shows how many\n    // discontinuities have fallen off of the playlist, and discontinuities are marked on\n    // the first segment of a new \"timeline.\" Because of this, while DASH will retain that\n    // Period while the \"timeline\" exists, HLS keeps track of it via the discontinuity\n    // sequence, and that first segment is an indicator, but can be removed before that\n    // timeline is gone.\n\n\n    const oldMatchingSegment = oldPlaylist.segments[oldMatchingSegmentIndex];\n\n    if (oldMatchingSegment.discontinuity && !firstNewSegment.discontinuity) {\n      firstNewSegment.discontinuity = true;\n      playlist.discontinuityStarts.unshift(0);\n      playlist.discontinuitySequence--;\n    }\n\n    updateMediaSequenceForPlaylist({\n      playlist,\n      mediaSequence: oldPlaylist.segments[oldMatchingSegmentIndex].number\n    });\n  });\n};\n/**\n * Given an old parsed manifest object and a new parsed manifest object, updates the\n * sequence and timing values within the new manifest to ensure that it lines up with the\n * old.\n *\n * @param {Array} oldManifest - the old main manifest object\n * @param {Array} newManifest - the new main manifest object\n *\n * @return {Object} the updated new manifest object\n */\n\nconst positionManifestOnTimeline = ({\n  oldManifest,\n  newManifest\n}) => {\n  // Starting from v4.1.2 of the IOP, section 4.4.3.3 states:\n  //\n  // \"MPD@availabilityStartTime and Period@start shall not be changed over MPD updates.\"\n  //\n  // This was added from https://github.com/Dash-Industry-Forum/DASH-IF-IOP/issues/160\n  //\n  // Because of this change, and the difficulty of supporting periods with changing start\n  // times, periods with changing start times are not supported. This makes the logic much\n  // simpler, since periods with the same start time can be considerred the same period\n  // across refreshes.\n  //\n  // To give an example as to the difficulty of handling periods where the start time may\n  // change, if a single period manifest is refreshed with another manifest with a single\n  // period, and both the start and end times are increased, then the only way to determine\n  // if it's a new period or an old one that has changed is to look through the segments of\n  // each playlist and determine the presentation time bounds to find a match. In addition,\n  // if the period start changed to exceed the old period end, then there would be no\n  // match, and it would not be possible to determine whether the refreshed period is a new\n  // one or the old one.\n  const oldPlaylists = oldManifest.playlists.concat(getMediaGroupPlaylists(oldManifest));\n  const newPlaylists = newManifest.playlists.concat(getMediaGroupPlaylists(newManifest)); // Save all seen timelineStarts to the new manifest. Although this potentially means that\n  // there's a \"memory leak\" in that it will never stop growing, in reality, only a couple\n  // of properties are saved for each seen Period. Even long running live streams won't\n  // generate too many Periods, unless the stream is watched for decades. In the future,\n  // this can be optimized by mapping to discontinuity sequence numbers for each timeline,\n  // but it may not become an issue, and the additional info can be useful for debugging.\n\n  newManifest.timelineStarts = getUniqueTimelineStarts([oldManifest.timelineStarts, newManifest.timelineStarts]);\n  updateSequenceNumbers({\n    oldPlaylists,\n    newPlaylists,\n    timelineStarts: newManifest.timelineStarts\n  });\n  return newManifest;\n};\n\nconst generateSidxKey = sidx => sidx && sidx.uri + '-' + byteRangeToString(sidx.byterange);\n\nconst mergeDiscontiguousPlaylists = playlists => {\n  // Break out playlists into groups based on their baseUrl\n  const playlistsByBaseUrl = playlists.reduce(function (acc, cur) {\n    if (!acc[cur.attributes.baseUrl]) {\n      acc[cur.attributes.baseUrl] = [];\n    }\n\n    acc[cur.attributes.baseUrl].push(cur);\n    return acc;\n  }, {});\n  let allPlaylists = [];\n  Object.values(playlistsByBaseUrl).forEach(playlistGroup => {\n    const mergedPlaylists = values(playlistGroup.reduce((acc, playlist) => {\n      // assuming playlist IDs are the same across periods\n      // TODO: handle multiperiod where representation sets are not the same\n      // across periods\n      const name = playlist.attributes.id + (playlist.attributes.lang || '');\n\n      if (!acc[name]) {\n        // First Period\n        acc[name] = playlist;\n        acc[name].attributes.timelineStarts = [];\n      } else {\n        // Subsequent Periods\n        if (playlist.segments) {\n          // first segment of subsequent periods signal a discontinuity\n          if (playlist.segments[0]) {\n            playlist.segments[0].discontinuity = true;\n          }\n\n          acc[name].segments.push(...playlist.segments);\n        } // bubble up contentProtection, this assumes all DRM content\n        // has the same contentProtection\n\n\n        if (playlist.attributes.contentProtection) {\n          acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n        }\n      }\n\n      acc[name].attributes.timelineStarts.push({\n        // Although they represent the same number, it's important to have both to make it\n        // compatible with HLS potentially having a similar attribute.\n        start: playlist.attributes.periodStart,\n        timeline: playlist.attributes.periodStart\n      });\n      return acc;\n    }, {}));\n    allPlaylists = allPlaylists.concat(mergedPlaylists);\n  });\n  return allPlaylists.map(playlist => {\n    playlist.discontinuityStarts = findIndexes(playlist.segments || [], 'discontinuity');\n    return playlist;\n  });\n};\n\nconst addSidxSegmentsToPlaylist = (playlist, sidxMapping) => {\n  const sidxKey = generateSidxKey(playlist.sidx);\n  const sidxMatch = sidxKey && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n  if (sidxMatch) {\n    addSidxSegmentsToPlaylist$1(playlist, sidxMatch, playlist.sidx.resolvedUri);\n  }\n\n  return playlist;\n};\nconst addSidxSegmentsToPlaylists = (playlists, sidxMapping = {}) => {\n  if (!Object.keys(sidxMapping).length) {\n    return playlists;\n  }\n\n  for (const i in playlists) {\n    playlists[i] = addSidxSegmentsToPlaylist(playlists[i], sidxMapping);\n  }\n\n  return playlists;\n};\nconst formatAudioPlaylist = ({\n  attributes,\n  segments,\n  sidx,\n  mediaSequence,\n  discontinuitySequence,\n  discontinuityStarts\n}, isAudioOnly) => {\n  const playlist = {\n    attributes: {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs,\n      ['PROGRAM-ID']: 1\n    },\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    discontinuitySequence,\n    discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    mediaSequence,\n    segments\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (attributes.serviceLocation) {\n    playlist.attributes.serviceLocation = attributes.serviceLocation;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  if (isAudioOnly) {\n    playlist.attributes.AUDIO = 'audio';\n    playlist.attributes.SUBTITLES = 'subs';\n  }\n\n  return playlist;\n};\nconst formatVttPlaylist = ({\n  attributes,\n  segments,\n  mediaSequence,\n  discontinuityStarts,\n  discontinuitySequence\n}) => {\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodStart,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  const m3u8Attributes = {\n    NAME: attributes.id,\n    BANDWIDTH: attributes.bandwidth,\n    ['PROGRAM-ID']: 1\n  };\n\n  if (attributes.codecs) {\n    m3u8Attributes.CODECS = attributes.codecs;\n  }\n\n  const vttPlaylist = {\n    attributes: m3u8Attributes,\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    timelineStarts: attributes.timelineStarts,\n    discontinuityStarts,\n    discontinuitySequence,\n    mediaSequence,\n    segments\n  };\n\n  if (attributes.serviceLocation) {\n    vttPlaylist.attributes.serviceLocation = attributes.serviceLocation;\n  }\n\n  return vttPlaylist;\n};\nconst organizeAudioPlaylists = (playlists, sidxMapping = {}, isAudioOnly = false) => {\n  let mainPlaylist;\n  const formattedPlaylists = playlists.reduce((a, playlist) => {\n    const role = playlist.attributes.role && playlist.attributes.role.value || '';\n    const language = playlist.attributes.lang || '';\n    let label = playlist.attributes.label || 'main';\n\n    if (language && !playlist.attributes.label) {\n      const roleLabel = role ? ` (${role})` : '';\n      label = `${playlist.attributes.lang}${roleLabel}`;\n    }\n\n    if (!a[label]) {\n      a[label] = {\n        language,\n        autoselect: true,\n        default: role === 'main',\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    const formatted = addSidxSegmentsToPlaylist(formatAudioPlaylist(playlist, isAudioOnly), sidxMapping);\n    a[label].playlists.push(formatted);\n\n    if (typeof mainPlaylist === 'undefined' && role === 'main') {\n      mainPlaylist = playlist;\n      mainPlaylist.default = true;\n    }\n\n    return a;\n  }, {}); // if no playlists have role \"main\", mark the first as main\n\n  if (!mainPlaylist) {\n    const firstLabel = Object.keys(formattedPlaylists)[0];\n    formattedPlaylists[firstLabel].default = true;\n  }\n\n  return formattedPlaylists;\n};\nconst organizeVttPlaylists = (playlists, sidxMapping = {}) => {\n  return playlists.reduce((a, playlist) => {\n    const label = playlist.attributes.label || playlist.attributes.lang || 'text';\n    const language = playlist.attributes.lang || 'und';\n\n    if (!a[label]) {\n      a[label] = {\n        language,\n        default: false,\n        autoselect: false,\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    a[label].playlists.push(addSidxSegmentsToPlaylist(formatVttPlaylist(playlist), sidxMapping));\n    return a;\n  }, {});\n};\n\nconst organizeCaptionServices = captionServices => captionServices.reduce((svcObj, svc) => {\n  if (!svc) {\n    return svcObj;\n  }\n\n  svc.forEach(service => {\n    const {\n      channel,\n      language\n    } = service;\n    svcObj[language] = {\n      autoselect: false,\n      default: false,\n      instreamId: channel,\n      language\n    };\n\n    if (service.hasOwnProperty('aspectRatio')) {\n      svcObj[language].aspectRatio = service.aspectRatio;\n    }\n\n    if (service.hasOwnProperty('easyReader')) {\n      svcObj[language].easyReader = service.easyReader;\n    }\n\n    if (service.hasOwnProperty('3D')) {\n      svcObj[language]['3D'] = service['3D'];\n    }\n  });\n  return svcObj;\n}, {});\n\nconst formatVideoPlaylist = ({\n  attributes,\n  segments,\n  sidx,\n  discontinuityStarts\n}) => {\n  const playlist = {\n    attributes: {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth,\n      ['PROGRAM-ID']: 1\n    },\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    segments\n  };\n\n  if (attributes.frameRate) {\n    playlist.attributes['FRAME-RATE'] = attributes.frameRate;\n  }\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (attributes.serviceLocation) {\n    playlist.attributes.serviceLocation = attributes.serviceLocation;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\n\nconst videoOnly = ({\n  attributes\n}) => attributes.mimeType === 'video/mp4' || attributes.mimeType === 'video/webm' || attributes.contentType === 'video';\n\nconst audioOnly = ({\n  attributes\n}) => attributes.mimeType === 'audio/mp4' || attributes.mimeType === 'audio/webm' || attributes.contentType === 'audio';\n\nconst vttOnly = ({\n  attributes\n}) => attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n/**\n * Contains start and timeline properties denoting a timeline start. For DASH, these will\n * be the same number.\n *\n * @typedef {Object} TimelineStart\n * @property {number} start - the start time of the timeline\n * @property {number} timeline - the timeline number\n */\n\n/**\n * Adds appropriate media and discontinuity sequence values to the segments and playlists.\n *\n * Throughout mpd-parser, the `number` attribute is used in relation to `startNumber`, a\n * DASH specific attribute used in constructing segment URI's from templates. However, from\n * an HLS perspective, the `number` attribute on a segment would be its `mediaSequence`\n * value, which should start at the original media sequence value (or 0) and increment by 1\n * for each segment thereafter. Since DASH's `startNumber` values are independent per\n * period, it doesn't make sense to use it for `number`. Instead, assume everything starts\n * from a 0 mediaSequence value and increment from there.\n *\n * Note that VHS currently doesn't use the `number` property, but it can be helpful for\n * debugging and making sense of the manifest.\n *\n * For live playlists, to account for values increasing in manifests when periods are\n * removed on refreshes, merging logic should be used to update the numbers to their\n * appropriate values (to ensure they're sequential and increasing).\n *\n * @param {Object[]} playlists - the playlists to update\n * @param {TimelineStart[]} timelineStarts - the timeline starts for the manifest\n */\n\n\nconst addMediaSequenceValues = (playlists, timelineStarts) => {\n  // increment all segments sequentially\n  playlists.forEach(playlist => {\n    playlist.mediaSequence = 0;\n    playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n      timeline\n    }) {\n      return timeline === playlist.timeline;\n    });\n\n    if (!playlist.segments) {\n      return;\n    }\n\n    playlist.segments.forEach((segment, index) => {\n      segment.number = index;\n    });\n  });\n};\n/**\n * Given a media group object, flattens all playlists within the media group into a single\n * array.\n *\n * @param {Object} mediaGroupObject - the media group object\n *\n * @return {Object[]}\n *         The media group playlists\n */\n\nconst flattenMediaGroupPlaylists = mediaGroupObject => {\n  if (!mediaGroupObject) {\n    return [];\n  }\n\n  return Object.keys(mediaGroupObject).reduce((acc, label) => {\n    const labelContents = mediaGroupObject[label];\n    return acc.concat(labelContents.playlists);\n  }, []);\n};\nconst toM3u8 = ({\n  dashPlaylists,\n  locations,\n  contentSteering,\n  sidxMapping = {},\n  previousManifest,\n  eventStream\n}) => {\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all main manifest attributes\n\n\n  const {\n    sourceDuration: duration,\n    type,\n    suggestedPresentationDelay,\n    minimumUpdatePeriod\n  } = dashPlaylists[0].attributes;\n  const videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  const audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  const vttPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(vttOnly));\n  const captions = dashPlaylists.map(playlist => playlist.attributes.captionServices).filter(Boolean);\n  const manifest = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: {\n      AUDIO: {},\n      VIDEO: {},\n      ['CLOSED-CAPTIONS']: {},\n      SUBTITLES: {}\n    },\n    uri: '',\n    duration,\n    playlists: addSidxSegmentsToPlaylists(videoPlaylists, sidxMapping)\n  };\n\n  if (minimumUpdatePeriod >= 0) {\n    manifest.minimumUpdatePeriod = minimumUpdatePeriod * 1000;\n  }\n\n  if (locations) {\n    manifest.locations = locations;\n  }\n\n  if (contentSteering) {\n    manifest.contentSteering = contentSteering;\n  }\n\n  if (type === 'dynamic') {\n    manifest.suggestedPresentationDelay = suggestedPresentationDelay;\n  }\n\n  if (eventStream && eventStream.length > 0) {\n    manifest.eventStream = eventStream;\n  }\n\n  const isAudioOnly = manifest.playlists.length === 0;\n  const organizedAudioGroup = audioPlaylists.length ? organizeAudioPlaylists(audioPlaylists, sidxMapping, isAudioOnly) : null;\n  const organizedVttGroup = vttPlaylists.length ? organizeVttPlaylists(vttPlaylists, sidxMapping) : null;\n  const formattedPlaylists = videoPlaylists.concat(flattenMediaGroupPlaylists(organizedAudioGroup), flattenMediaGroupPlaylists(organizedVttGroup));\n  const playlistTimelineStarts = formattedPlaylists.map(({\n    timelineStarts\n  }) => timelineStarts);\n  manifest.timelineStarts = getUniqueTimelineStarts(playlistTimelineStarts);\n  addMediaSequenceValues(formattedPlaylists, manifest.timelineStarts);\n\n  if (organizedAudioGroup) {\n    manifest.mediaGroups.AUDIO.audio = organizedAudioGroup;\n  }\n\n  if (organizedVttGroup) {\n    manifest.mediaGroups.SUBTITLES.subs = organizedVttGroup;\n  }\n\n  if (captions.length) {\n    manifest.mediaGroups['CLOSED-CAPTIONS'].cc = organizeCaptionServices(captions);\n  }\n\n  if (previousManifest) {\n    return positionManifestOnTimeline({\n      oldManifest: previousManifest,\n      newManifest: manifest\n    });\n  }\n\n  return manifest;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nconst getLiveRValue = (attributes, time, duration) => {\n  const {\n    NOW,\n    clientOffset,\n    availabilityStartTime,\n    timescale = 1,\n    periodStart = 0,\n    minimumUpdatePeriod = 0\n  } = attributes;\n  const now = (NOW + clientOffset) / 1000;\n  const periodStartWC = availabilityStartTime + periodStart;\n  const periodEndWC = now + minimumUpdatePeriod;\n  const periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nconst parseByTimeline = (attributes, segmentTimeline) => {\n  const {\n    type,\n    minimumUpdatePeriod = 0,\n    media = '',\n    sourceDuration,\n    timescale = 1,\n    startNumber = 1,\n    periodStart: timeline\n  } = attributes;\n  const segments = [];\n  let time = -1;\n\n  for (let sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    const S = segmentTimeline[sIndex];\n    const duration = S.d;\n    const repeat = S.r || 0;\n    const segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    let count;\n\n    if (repeat < 0) {\n      const nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    const end = startNumber + segments.length + count;\n    let number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number,\n        duration: duration / timescale,\n        time,\n        timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nconst identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nconst identifierReplacement = values => (match, identifier, format, width) => {\n  if (match === '$$') {\n    // escape sequence\n    return '$';\n  }\n\n  if (typeof values[identifier] === 'undefined') {\n    return match;\n  }\n\n  const value = '' + values[identifier];\n\n  if (identifier === 'RepresentationID') {\n    // Format tag shall not be present with RepresentationID\n    return value;\n  }\n\n  if (!format) {\n    width = 1;\n  } else {\n    width = parseInt(width, 10);\n  }\n\n  if (value.length >= width) {\n    return value;\n  }\n\n  return `${new Array(width - value.length + 1).join('0')}${value}`;\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nconst constructTemplateUrl = (url, values) => url.replace(identifierPattern, identifierReplacement(values));\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nconst parseTemplateInfo = (attributes, segmentTimeline) => {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodStart\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nconst segmentsFromTemplate = (attributes, segmentTimeline) => {\n  const templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  const {\n    initialization = {\n      sourceURL: '',\n      range: ''\n    }\n  } = attributes;\n  const mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  const segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(segment => {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    const uri = constructTemplateUrl(attributes.media || '', templateValues); // See DASH spec section 5.3.9.2.2\n    // - if timescale isn't present on any level, default to 1.\n\n    const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n    const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n    const presentationTime = // Even if the @t attribute is not specified for the segment, segment.time is\n    // calculated in mpd-parser prior to this, so it's assumed to be available.\n    attributes.periodStart + (segment.time - presentationTimeOffset) / timescale;\n    const map = {\n      uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number,\n      presentationTime\n    };\n    return map;\n  });\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nconst SegmentURLToSegmentObject = (attributes, segmentUrl) => {\n  const {\n    baseUrl,\n    initialization = {}\n  } = attributes;\n  const initSegment = urlTypeToSegment({\n    baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  const segment = urlTypeToSegment({\n    baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nconst segmentsFromList = (attributes, segmentTimeline) => {\n  const {\n    duration,\n    segmentUrls = [],\n    periodStart\n  } = attributes; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  const segmentUrlMap = segmentUrls.map(segmentUrlObject => SegmentURLToSegmentObject(attributes, segmentUrlObject));\n  let segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  const segments = segmentTimeInfo.map((segmentTime, index) => {\n    if (segmentUrlMap[index]) {\n      const segment = segmentUrlMap[index]; // See DASH spec section 5.3.9.2.2\n      // - if timescale isn't present on any level, default to 1.\n\n      const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n      const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      segment.presentationTime = periodStart + (segmentTime.time - presentationTimeOffset) / timescale;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(segment => segment);\n  return segments;\n};\n\nconst generateSegments = ({\n  attributes,\n  segmentInfo\n}) => {\n  let segmentAttributes;\n  let segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  const segmentsInfo = {\n    attributes\n  };\n\n  if (!segmentsFn) {\n    return segmentsInfo;\n  }\n\n  const segments = segmentsFn(segmentAttributes, segmentInfo.segmentTimeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    const {\n      duration,\n      timescale = 1\n    } = segmentAttributes;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce((max, segment) => {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  segmentsInfo.attributes = segmentAttributes;\n  segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n  if (segmentInfo.base && segmentAttributes.indexRange) {\n    segmentsInfo.sidx = segments[0];\n    segmentsInfo.segments = [];\n  }\n\n  return segmentsInfo;\n};\nconst toPlaylists = representations => representations.map(generateSegments);\n\nconst findChildren = (element, name) => from(element.childNodes).filter(({\n  tagName\n}) => tagName === name);\nconst getContent = element => element.textContent.trim();\n\n/**\n * Converts the provided string that may contain a division operation to a number.\n *\n * @param {string} value - the provided string value\n *\n * @return {number} the parsed string value\n */\nconst parseDivisionValue = value => {\n  return parseFloat(value.split('/').reduce((prev, current) => prev / current));\n};\n\nconst parseDuration = str => {\n  const SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  const SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  const SECONDS_IN_DAY = 24 * 60 * 60;\n  const SECONDS_IN_HOUR = 60 * 60;\n  const SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  const durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  const match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  const [year, month, day, hour, minute, second] = match.slice(1);\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nconst parseDate = str => {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  const dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nconst parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the suggested presentation delay. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  suggestedPresentationDelay(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * specifices the type of mpd. Can be either \"static\" or \"dynamic\"\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   *\n   * @return {string}\n   *         The type as a string\n   */\n  type(value) {\n    return value;\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the frame rate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed frame rate\n   */\n  frameRate(value) {\n    return parseDivisionValue(value);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed timescale\n   */\n  timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the presentationTimeOffset.\n   *\n   * @param {string} value\n   *        value of the attribute as a string\n   *\n   * @return {number}\n   *         The parsed presentationTimeOffset\n   */\n  presentationTimeOffset(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration(value) {\n    const parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the presentationTime.\n   *\n   * @param {string} value\n   *        value of the attribute as a string\n   *\n   * @return {number}\n   *         The parsed presentationTime\n   */\n  presentationTime(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT(value) {\n    return value;\n  }\n\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nconst parseAttributes = el => {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce((a, e) => {\n    const parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nconst keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime',\n  // ISO_IEC 23009-1_2022 5.8.5.2.2 The mp4 Protection Scheme\n  'urn:mpeg:dash:mp4protection:2011': 'mp4protection'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {Object[]} references\n *        List of objects containing the reference URL as well as its attributes\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {Object[]}\n *         List of objects with resolved urls and attributes\n */\n\nconst buildBaseUrls = (references, baseUrlElements) => {\n  if (!baseUrlElements.length) {\n    return references;\n  }\n\n  return flatten(references.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      const initialBaseUrl = getContent(baseUrlElement);\n      const resolvedBaseUrl = resolveUrl(reference.baseUrl, initialBaseUrl);\n      const finalBaseUrl = merge(parseAttributes(baseUrlElement), {\n        baseUrl: resolvedBaseUrl\n      }); // If the URL is resolved, we want to get the serviceLocation from the reference\n      // assuming there is no serviceLocation on the initialBaseUrl\n\n      if (resolvedBaseUrl !== initialBaseUrl && !finalBaseUrl.serviceLocation && reference.serviceLocation) {\n        finalBaseUrl.serviceLocation = reference.serviceLocation;\n      }\n\n      return finalBaseUrl;\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} segmentTimeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nconst getSegmentInformation = adaptationSet => {\n  const segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  const segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  const segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(s => merge({\n    tag: 'SegmentURL'\n  }, parseAttributes(s)));\n  const segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  const segmentTimelineParentNode = segmentList || segmentTemplate;\n  const segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  const segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  const segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  const template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  const segmentInfo = {\n    template,\n    segmentTimeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(s => parseAttributes(s)),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(key => {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {Object[]} adaptationSetBaseUrls\n *        List of objects containing resolved base URLs and attributes\n *        inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nconst inheritBaseUrls = (adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) => representation => {\n  const repBaseUrlElements = findChildren(representation, 'BaseURL');\n  const repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n  const attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n  const representationSegmentInfo = getSegmentInformation(representation);\n  return repBaseUrls.map(baseUrl => {\n    return {\n      segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n      attributes: merge(attributes, baseUrl)\n    };\n  });\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nconst generateKeySystemInformation = contentProtectionNodes => {\n  return contentProtectionNodes.reduce((acc, node) => {\n    const attributes = parseAttributes(node); // Although it could be argued that according to the UUID RFC spec the UUID string (a-f chars) should be generated\n    // as a lowercase string it also mentions it should be treated as case-insensitive on input. Since the key system\n    // UUIDs in the keySystemsMap are hardcoded as lowercase in the codebase there isn't any reason not to do\n    // .toLowerCase() on the input UUID string from the manifest (at least I could not think of one).\n\n    if (attributes.schemeIdUri) {\n      attributes.schemeIdUri = attributes.schemeIdUri.toLowerCase();\n    }\n\n    const keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes\n      };\n      const psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        const pssh = getContent(psshNode);\n        acc[keySystem].pssh = pssh && decodeB64ToUint8Array(pssh);\n      }\n    }\n\n    return acc;\n  }, {});\n}; // defined in ANSI_SCTE 214-1 2016\n\n\nconst parseCaptionServiceMetadata = service => {\n  // 608 captions\n  if (service.schemeIdUri === 'urn:scte:dash:cc:cea-608:2015') {\n    const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(value => {\n      let channel;\n      let language; // default language to value\n\n      language = value;\n\n      if (/^CC\\d=/.test(value)) {\n        [channel, language] = value.split('=');\n      } else if (/^CC\\d$/.test(value)) {\n        channel = value;\n      }\n\n      return {\n        channel,\n        language\n      };\n    });\n  } else if (service.schemeIdUri === 'urn:scte:dash:cc:cea-708:2015') {\n    const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(value => {\n      const flags = {\n        // service or channel number 1-63\n        'channel': undefined,\n        // language is a 3ALPHA per ISO 639.2/B\n        // field is required\n        'language': undefined,\n        // BIT 1/0 or ?\n        // default value is 1, meaning 16:9 aspect ratio, 0 is 4:3, ? is unknown\n        'aspectRatio': 1,\n        // BIT 1/0\n        // easy reader flag indicated the text is tailed to the needs of beginning readers\n        // default 0, or off\n        'easyReader': 0,\n        // BIT 1/0\n        // If 3d metadata is present (CEA-708.1) then 1\n        // default 0\n        '3D': 0\n      };\n\n      if (/=/.test(value)) {\n        const [channel, opts = ''] = value.split('=');\n        flags.channel = channel;\n        flags.language = value;\n        opts.split(',').forEach(opt => {\n          const [name, val] = opt.split(':');\n\n          if (name === 'lang') {\n            flags.language = val; // er for easyReadery\n          } else if (name === 'er') {\n            flags.easyReader = Number(val); // war for wide aspect ratio\n          } else if (name === 'war') {\n            flags.aspectRatio = Number(val);\n          } else if (name === '3D') {\n            flags['3D'] = Number(val);\n          }\n        });\n      } else {\n        flags.language = value;\n      }\n\n      if (flags.channel) {\n        flags.channel = 'SERVICE' + flags.channel;\n      }\n\n      return flags;\n    });\n  }\n};\n/**\n * A map callback that will parse all event stream data for a collection of periods\n * DASH ISO_IEC_23009 5.10.2.2\n * https://dashif-documents.azurewebsites.net/Events/master/event.html#mpd-event-timing\n *\n * @param {PeriodInformation} period object containing necessary period information\n * @return a collection of parsed eventstream event objects\n */\n\nconst toEventStream = period => {\n  // get and flatten all EventStreams tags and parse attributes and children\n  return flatten(findChildren(period.node, 'EventStream').map(eventStream => {\n    const eventStreamAttributes = parseAttributes(eventStream);\n    const schemeIdUri = eventStreamAttributes.schemeIdUri; // find all Events per EventStream tag and map to return objects\n\n    return findChildren(eventStream, 'Event').map(event => {\n      const eventAttributes = parseAttributes(event);\n      const presentationTime = eventAttributes.presentationTime || 0;\n      const timescale = eventStreamAttributes.timescale || 1;\n      const duration = eventAttributes.duration || 0;\n      const start = presentationTime / timescale + period.attributes.start;\n      return {\n        schemeIdUri,\n        value: eventStreamAttributes.value,\n        id: eventAttributes.id,\n        start,\n        end: start + duration / timescale,\n        messageData: getContent(event) || eventAttributes.messageData,\n        contentEncoding: eventStreamAttributes.contentEncoding,\n        presentationTimeOffset: eventStreamAttributes.presentationTimeOffset || 0\n      };\n    });\n  }));\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {Object[]} periodBaseUrls\n *        Contains list of objects with resolved base urls and attributes\n *        inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\nconst toRepresentations = (periodAttributes, periodBaseUrls, periodSegmentInfo) => adaptationSet => {\n  const adaptationSetAttributes = parseAttributes(adaptationSet);\n  const adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n  const role = findChildren(adaptationSet, 'Role')[0];\n  const roleAttributes = {\n    role: parseAttributes(role)\n  };\n  let attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n  const accessibility = findChildren(adaptationSet, 'Accessibility')[0];\n  const captionServices = parseCaptionServiceMetadata(parseAttributes(accessibility));\n\n  if (captionServices) {\n    attrs = merge(attrs, {\n      captionServices\n    });\n  }\n\n  const label = findChildren(adaptationSet, 'Label')[0];\n\n  if (label && label.childNodes.length) {\n    const labelVal = label.childNodes[0].nodeValue.trim();\n    attrs = merge(attrs, {\n      label: labelVal\n    });\n  }\n\n  const contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n  if (Object.keys(contentProtection).length) {\n    attrs = merge(attrs, {\n      contentProtection\n    });\n  }\n\n  const segmentInfo = getSegmentInformation(adaptationSet);\n  const representations = findChildren(adaptationSet, 'Representation');\n  const adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n  return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n};\n/**\n * Contains all period information for mapping nodes onto adaptation sets.\n *\n * @typedef {Object} PeriodInformation\n * @property {Node} period.node\n *           Period node from the mpd\n * @property {Object} period.attributes\n *           Parsed period attributes from node plus any added\n */\n\n/**\n * Maps a PeriodInformation object to a list of Representation information objects for all\n * AdaptationSet nodes contained within the Period.\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {PeriodInformation} period\n *        Period object containing necessary period information\n * @param {number} periodStart\n *        Start time of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n  * @param {Object[]} mpdBaseUrls\n *        Contains list of objects with resolved base urls and attributes\n *        inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nconst toAdaptationSets = (mpdAttributes, mpdBaseUrls) => (period, index) => {\n  const periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period.node, 'BaseURL'));\n  const periodAttributes = merge(mpdAttributes, {\n    periodStart: period.attributes.start\n  });\n\n  if (typeof period.attributes.duration === 'number') {\n    periodAttributes.periodDuration = period.attributes.duration;\n  }\n\n  const adaptationSets = findChildren(period.node, 'AdaptationSet');\n  const periodSegmentInfo = getSegmentInformation(period.node);\n  return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n};\n/**\n * Tranforms an array of content steering nodes into an object\n * containing CDN content steering information from the MPD manifest.\n *\n * For more information on the DASH spec for Content Steering parsing, see:\n * https://dashif.org/docs/DASH-IF-CTS-00XX-Content-Steering-Community-Review.pdf\n *\n * @param {Node[]} contentSteeringNodes\n *        Content steering nodes\n * @param {Function} eventHandler\n *        The event handler passed into the parser options to handle warnings\n * @return {Object}\n *        Object containing content steering data\n */\n\nconst generateContentSteeringInformation = (contentSteeringNodes, eventHandler) => {\n  // If there are more than one ContentSteering tags, throw an error\n  if (contentSteeringNodes.length > 1) {\n    eventHandler({\n      type: 'warn',\n      message: 'The MPD manifest should contain no more than one ContentSteering tag'\n    });\n  } // Return a null value if there are no ContentSteering tags\n\n\n  if (!contentSteeringNodes.length) {\n    return null;\n  }\n\n  const infoFromContentSteeringTag = merge({\n    serverURL: getContent(contentSteeringNodes[0])\n  }, parseAttributes(contentSteeringNodes[0])); // Converts `queryBeforeStart` to a boolean, as well as setting the default value\n  // to `false` if it doesn't exist\n\n  infoFromContentSteeringTag.queryBeforeStart = infoFromContentSteeringTag.queryBeforeStart === 'true';\n  return infoFromContentSteeringTag;\n};\n/**\n * Gets Period@start property for a given period.\n *\n * @param {Object} options\n *        Options object\n * @param {Object} options.attributes\n *        Period attributes\n * @param {Object} [options.priorPeriodAttributes]\n *        Prior period attributes (if prior period is available)\n * @param {string} options.mpdType\n *        The MPD@type these periods came from\n * @return {number|null}\n *         The period start, or null if it's an early available period or error\n */\n\nconst getPeriodStart = ({\n  attributes,\n  priorPeriodAttributes,\n  mpdType\n}) => {\n  // Summary of period start time calculation from DASH spec section 5.3.2.1\n  //\n  // A period's start is the first period's start + time elapsed after playing all\n  // prior periods to this one. Periods continue one after the other in time (without\n  // gaps) until the end of the presentation.\n  //\n  // The value of Period@start should be:\n  // 1. if Period@start is present: value of Period@start\n  // 2. if previous period exists and it has @duration: previous Period@start +\n  //    previous Period@duration\n  // 3. if this is first period and MPD@type is 'static': 0\n  // 4. in all other cases, consider the period an \"early available period\" (note: not\n  //    currently supported)\n  // (1)\n  if (typeof attributes.start === 'number') {\n    return attributes.start;\n  } // (2)\n\n\n  if (priorPeriodAttributes && typeof priorPeriodAttributes.start === 'number' && typeof priorPeriodAttributes.duration === 'number') {\n    return priorPeriodAttributes.start + priorPeriodAttributes.duration;\n  } // (3)\n\n\n  if (!priorPeriodAttributes && mpdType === 'static') {\n    return 0;\n  } // (4)\n  // There is currently no logic for calculating the Period@start value if there is\n  // no Period@start or prior Period@start and Period@duration available. This is not made\n  // explicit by the DASH interop guidelines or the DASH spec, however, since there's\n  // nothing about any other resolution strategies, it's implied. Thus, this case should\n  // be considered an early available period, or error, and null should suffice for both\n  // of those cases.\n\n\n  return null;\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nconst inheritAttributes = (mpd, options = {}) => {\n  const {\n    manifestUri = '',\n    NOW = Date.now(),\n    clientOffset = 0,\n    // TODO: For now, we are expecting an eventHandler callback function\n    // to be passed into the mpd parser as an option.\n    // In the future, we should enable stream parsing by using the Stream class from vhs-utils.\n    // This will support new features including a standardized event handler.\n    // See the m3u8 parser for examples of how stream parsing is currently used for HLS parsing.\n    // https://github.com/videojs/vhs-utils/blob/88d6e10c631e57a5af02c5a62bc7376cd456b4f5/src/stream.js#L9\n    eventHandler = function () {}\n  } = options;\n  const periodNodes = findChildren(mpd, 'Period');\n\n  if (!periodNodes.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  const locations = findChildren(mpd, 'Location');\n  const mpdAttributes = parseAttributes(mpd);\n  const mpdBaseUrls = buildBaseUrls([{\n    baseUrl: manifestUri\n  }], findChildren(mpd, 'BaseURL'));\n  const contentSteeringNodes = findChildren(mpd, 'ContentSteering'); // See DASH spec section 5.3.1.2, Semantics of MPD element. Default type to 'static'.\n\n  mpdAttributes.type = mpdAttributes.type || 'static';\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n\n  if (locations.length) {\n    mpdAttributes.locations = locations.map(getContent);\n  }\n\n  const periods = []; // Since toAdaptationSets acts on individual periods right now, the simplest approach to\n  // adding properties that require looking at prior periods is to parse attributes and add\n  // missing ones before toAdaptationSets is called. If more such properties are added, it\n  // may be better to refactor toAdaptationSets.\n\n  periodNodes.forEach((node, index) => {\n    const attributes = parseAttributes(node); // Use the last modified prior period, as it may contain added information necessary\n    // for this period.\n\n    const priorPeriod = periods[index - 1];\n    attributes.start = getPeriodStart({\n      attributes,\n      priorPeriodAttributes: priorPeriod ? priorPeriod.attributes : null,\n      mpdType: mpdAttributes.type\n    });\n    periods.push({\n      node,\n      attributes\n    });\n  });\n  return {\n    locations: mpdAttributes.locations,\n    contentSteeringInfo: generateContentSteeringInformation(contentSteeringNodes, eventHandler),\n    // TODO: There are occurences where this `representationInfo` array contains undesired\n    // duplicates. This generally occurs when there are multiple BaseURL nodes that are\n    // direct children of the MPD node. When we attempt to resolve URLs from a combination of the\n    // parent BaseURL and a child BaseURL, and the value does not resolve,\n    // we end up returning the child BaseURL multiple times.\n    // We need to determine a way to remove these duplicates in a safe way.\n    // See: https://github.com/videojs/mpd-parser/pull/17#discussion_r162750527\n    representationInfo: flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls))),\n    eventStream: flatten(periods.map(toEventStream))\n  };\n};\n\nconst stringToMpdXml = manifestString => {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  const parser = new DOMParser();\n  let xml;\n  let mpd;\n\n  try {\n    xml = parser.parseFromString(manifestString, 'application/xml');\n    mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n  } catch (e) {// ie 11 throws on invalid xml\n  }\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nconst parseUTCTimingScheme = mpd => {\n  const UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  const attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nconst VERSION = version;\n/*\n * Given a DASH manifest string and options, parses the DASH manifest into an object in the\n * form outputed by m3u8-parser and accepted by videojs/http-streaming.\n *\n * For live DASH manifests, if `previousManifest` is provided in options, then the newly\n * parsed DASH manifest will have its media sequence and discontinuity sequence values\n * updated to reflect its position relative to the prior manifest.\n *\n * @param {string} manifestString - the DASH manifest as a string\n * @param {options} [options] - any options\n *\n * @return {Object} the manifest object\n */\n\nconst parse = (manifestString, options = {}) => {\n  const parsedManifestInfo = inheritAttributes(stringToMpdXml(manifestString), options);\n  const playlists = toPlaylists(parsedManifestInfo.representationInfo);\n  return toM3u8({\n    dashPlaylists: playlists,\n    locations: parsedManifestInfo.locations,\n    contentSteering: parsedManifestInfo.contentSteeringInfo,\n    sidxMapping: options.sidxMapping,\n    previousManifest: options.previousManifest,\n    eventStream: parsedManifestInfo.eventStream\n  });\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\n\nconst parseUTCTiming = manifestString => parseUTCTimingScheme(stringToMpdXml(manifestString));\n\nexport { VERSION, addSidxSegmentsToPlaylist$1 as addSidxSegmentsToPlaylist, generateSidxKey, inheritAttributes, parse, parseUTCTiming, stringToMpdXml, toM3u8, toPlaylists };\n","var MAX_UINT32 = Math.pow(2, 32);\n\nvar getUint64 = function(uint8) {\n  var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n  var value;\n\n  if (dv.getBigUint64) {\n    value = dv.getBigUint64(0);\n\n    if (value < Number.MAX_SAFE_INTEGER) {\n      return Number(value);\n    }\n\n    return value;\n  }\n\n  return (dv.getUint32(0) * MAX_UINT32) + dv.getUint32(4);\n};\n\nmodule.exports = {\n  getUint64: getUint64,\n  MAX_UINT32: MAX_UINT32\n};\n","var getUint64 = require('../utils/numbers.js').getUint64;\n\nvar parseSidx = function(data) {\n  var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        references: [],\n        referenceId: view.getUint32(4),\n        timescale: view.getUint32(8)\n      },\n    i = 12;\n\n  if (result.version === 0) {\n    result.earliestPresentationTime = view.getUint32(i);\n    result.firstOffset = view.getUint32(i + 4);\n    i += 8;\n  } else {\n    // read 64 bits\n    result.earliestPresentationTime = getUint64(data.subarray(i));\n    result.firstOffset = getUint64(data.subarray(i + 8));\n    i += 16;\n  }\n\n  i += 2; // reserved\n\n  var referenceCount = view.getUint16(i);\n\n  i += 2; // start of references\n\n  for (; referenceCount > 0; i += 12, referenceCount--) {\n    result.references.push({\n      referenceType: (data[i] & 0x80) >>> 7,\n      referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n      subsegmentDuration: view.getUint32(i + 4),\n      startsWithSap: !!(data[i + 8] & 0x80),\n      sapType: (data[i + 8] & 0x70) >>> 4,\n      sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n    });\n  }\n\n  return result;\n};\n\n\nmodule.exports = parseSidx;\n","import { toUint8, bytesMatch } from './byte-helpers.js';\nvar ID3 = toUint8([0x49, 0x44, 0x33]);\nexport var getId3Size = function getId3Size(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n  var flags = bytes[offset + 5];\n  var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\n  var footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n\n  return returnSize + 10;\n};\nexport var getId3Offset = function getId3Offset(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n\n  if (bytes.length - offset < 10 || !bytesMatch(bytes, ID3, {\n    offset: offset\n  })) {\n    return offset;\n  }\n\n  offset += getId3Size(bytes, offset); // recursive check for id3 tags as some files\n  // have multiple ID3 tag sections even though\n  // they should not.\n\n  return getId3Offset(bytes, offset);\n};","import { stringToBytes, toUint8, bytesMatch, bytesToString, toHexString, padStart, bytesToNumber } from './byte-helpers.js';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js';\nimport { parseOpusHead } from './opus-helpers.js';\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return stringToBytes(path);\n  }\n\n  if (typeof path === 'number') {\n    return path;\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar DESCRIPTORS;\nexport var parseDescriptors = function parseDescriptors(bytes) {\n  bytes = toUint8(bytes);\n  var results = [];\n  var i = 0;\n\n  while (bytes.length > i) {\n    var tag = bytes[i];\n    var size = 0;\n    var headerSize = 0; // tag\n\n    headerSize++;\n    var byte = bytes[headerSize]; // first byte\n\n    headerSize++;\n\n    while (byte & 0x80) {\n      size = (byte & 0x7F) << 7;\n      byte = bytes[headerSize];\n      headerSize++;\n    }\n\n    size += byte & 0x7F;\n\n    for (var z = 0; z < DESCRIPTORS.length; z++) {\n      var _DESCRIPTORS$z = DESCRIPTORS[z],\n          id = _DESCRIPTORS$z.id,\n          parser = _DESCRIPTORS$z.parser;\n\n      if (tag === id) {\n        results.push(parser(bytes.subarray(headerSize, headerSize + size)));\n        break;\n      }\n    }\n\n    i += size + headerSize;\n  }\n\n  return results;\n};\nDESCRIPTORS = [{\n  id: 0x03,\n  parser: function parser(bytes) {\n    var desc = {\n      tag: 0x03,\n      id: bytes[0] << 8 | bytes[1],\n      flags: bytes[2],\n      size: 3,\n      dependsOnEsId: 0,\n      ocrEsId: 0,\n      descriptors: [],\n      url: ''\n    }; // depends on es id\n\n    if (desc.flags & 0x80) {\n      desc.dependsOnEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    } // url\n\n\n    if (desc.flags & 0x40) {\n      var len = bytes[desc.size];\n      desc.url = bytesToString(bytes.subarray(desc.size + 1, desc.size + 1 + len));\n      desc.size += len;\n    } // ocr es id\n\n\n    if (desc.flags & 0x20) {\n      desc.ocrEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    }\n\n    desc.descriptors = parseDescriptors(bytes.subarray(desc.size)) || [];\n    return desc;\n  }\n}, {\n  id: 0x04,\n  parser: function parser(bytes) {\n    // DecoderConfigDescriptor\n    var desc = {\n      tag: 0x04,\n      oti: bytes[0],\n      streamType: bytes[1],\n      bufferSize: bytes[2] << 16 | bytes[3] << 8 | bytes[4],\n      maxBitrate: bytes[5] << 24 | bytes[6] << 16 | bytes[7] << 8 | bytes[8],\n      avgBitrate: bytes[9] << 24 | bytes[10] << 16 | bytes[11] << 8 | bytes[12],\n      descriptors: parseDescriptors(bytes.subarray(13))\n    };\n    return desc;\n  }\n}, {\n  id: 0x05,\n  parser: function parser(bytes) {\n    // DecoderSpecificInfo\n    return {\n      tag: 0x05,\n      bytes: bytes\n    };\n  }\n}, {\n  id: 0x06,\n  parser: function parser(bytes) {\n    // SLConfigDescriptor\n    return {\n      tag: 0x06,\n      bytes: bytes\n    };\n  }\n}];\n/**\n * find any number of boxes by name given a path to it in an iso bmff\n * such as mp4.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {Uint8Array[]|string[]|string|Uint8Array} name\n *        An array of paths or a single path representing the name\n *        of boxes to search through in bytes. Paths may be\n *        uint8 (character codes) or strings.\n *\n * @param {boolean} [complete=false]\n *        Should we search only for complete boxes on the final path.\n *        This is very useful when you do not want to get back partial boxes\n *        in the case of streaming files.\n *\n * @return {Uint8Array[]}\n *         An array of the end paths that we found.\n */\n\nexport var findBox = function findBox(bytes, paths, complete) {\n  if (complete === void 0) {\n    complete = false;\n  }\n\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    // short-circuit the search for empty paths\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var size = (bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]) >>> 0;\n    var type = bytes.subarray(i + 4, i + 8); // invalid box format.\n\n    if (size === 0) {\n      break;\n    }\n\n    var end = i + size;\n\n    if (end > bytes.length) {\n      // this box is bigger than the number of bytes we have\n      // and complete is set, we cannot find any more boxes.\n      if (complete) {\n        break;\n      }\n\n      end = bytes.length;\n    }\n\n    var data = bytes.subarray(i + 8, end);\n\n    if (bytesMatch(type, paths[0])) {\n      if (paths.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next box along the path\n        results.push.apply(results, findBox(data, paths.slice(1), complete));\n      }\n    }\n\n    i = end;\n  } // we've finished searching all of bytes\n\n\n  return results;\n};\n/**\n * Search for a single matching box by name in an iso bmff format like\n * mp4. This function is useful for finding codec boxes which\n * can be placed arbitrarily in sample descriptions depending\n * on the version of the file or file type.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {string|Uint8Array} name\n *        The name of the box to find.\n *\n * @return {Uint8Array[]}\n *         a subarray of bytes representing the name boxed we found.\n */\n\nexport var findNamedBox = function findNamedBox(bytes, name) {\n  name = normalizePath(name);\n\n  if (!name.length) {\n    // short-circuit the search for empty paths\n    return bytes.subarray(bytes.length);\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    if (bytesMatch(bytes.subarray(i, i + name.length), name)) {\n      var size = (bytes[i - 4] << 24 | bytes[i - 3] << 16 | bytes[i - 2] << 8 | bytes[i - 1]) >>> 0;\n      var end = size > 1 ? i + size : bytes.byteLength;\n      return bytes.subarray(i + 4, end);\n    }\n\n    i++;\n  } // we've finished searching all of bytes\n\n\n  return bytes.subarray(bytes.length);\n};\n\nvar parseSamples = function parseSamples(data, entrySize, parseEntry) {\n  if (entrySize === void 0) {\n    entrySize = 4;\n  }\n\n  if (parseEntry === void 0) {\n    parseEntry = function parseEntry(d) {\n      return bytesToNumber(d);\n    };\n  }\n\n  var entries = [];\n\n  if (!data || !data.length) {\n    return entries;\n  }\n\n  var entryCount = bytesToNumber(data.subarray(4, 8));\n\n  for (var i = 8; entryCount; i += entrySize, entryCount--) {\n    entries.push(parseEntry(data.subarray(i, i + entrySize)));\n  }\n\n  return entries;\n};\n\nexport var buildFrameTable = function buildFrameTable(stbl, timescale) {\n  var keySamples = parseSamples(findBox(stbl, ['stss'])[0]);\n  var chunkOffsets = parseSamples(findBox(stbl, ['stco'])[0]);\n  var timeToSamples = parseSamples(findBox(stbl, ['stts'])[0], 8, function (entry) {\n    return {\n      sampleCount: bytesToNumber(entry.subarray(0, 4)),\n      sampleDelta: bytesToNumber(entry.subarray(4, 8))\n    };\n  });\n  var samplesToChunks = parseSamples(findBox(stbl, ['stsc'])[0], 12, function (entry) {\n    return {\n      firstChunk: bytesToNumber(entry.subarray(0, 4)),\n      samplesPerChunk: bytesToNumber(entry.subarray(4, 8)),\n      sampleDescriptionIndex: bytesToNumber(entry.subarray(8, 12))\n    };\n  });\n  var stsz = findBox(stbl, ['stsz'])[0]; // stsz starts with a 4 byte sampleSize which we don't need\n\n  var sampleSizes = parseSamples(stsz && stsz.length && stsz.subarray(4) || null);\n  var frames = [];\n\n  for (var chunkIndex = 0; chunkIndex < chunkOffsets.length; chunkIndex++) {\n    var samplesInChunk = void 0;\n\n    for (var i = 0; i < samplesToChunks.length; i++) {\n      var sampleToChunk = samplesToChunks[i];\n      var isThisOne = chunkIndex + 1 >= sampleToChunk.firstChunk && (i + 1 >= samplesToChunks.length || chunkIndex + 1 < samplesToChunks[i + 1].firstChunk);\n\n      if (isThisOne) {\n        samplesInChunk = sampleToChunk.samplesPerChunk;\n        break;\n      }\n    }\n\n    var chunkOffset = chunkOffsets[chunkIndex];\n\n    for (var _i = 0; _i < samplesInChunk; _i++) {\n      var frameEnd = sampleSizes[frames.length]; // if we don't have key samples every frame is a keyframe\n\n      var keyframe = !keySamples.length;\n\n      if (keySamples.length && keySamples.indexOf(frames.length + 1) !== -1) {\n        keyframe = true;\n      }\n\n      var frame = {\n        keyframe: keyframe,\n        start: chunkOffset,\n        end: chunkOffset + frameEnd\n      };\n\n      for (var k = 0; k < timeToSamples.length; k++) {\n        var _timeToSamples$k = timeToSamples[k],\n            sampleCount = _timeToSamples$k.sampleCount,\n            sampleDelta = _timeToSamples$k.sampleDelta;\n\n        if (frames.length <= sampleCount) {\n          // ms to ns\n          var lastTimestamp = frames.length ? frames[frames.length - 1].timestamp : 0;\n          frame.timestamp = lastTimestamp + sampleDelta / timescale * 1000;\n          frame.duration = sampleDelta;\n          break;\n        }\n      }\n\n      frames.push(frame);\n      chunkOffset += frameEnd;\n    }\n  }\n\n  return frames;\n};\nexport var addSampleDescription = function addSampleDescription(track, bytes) {\n  var codec = bytesToString(bytes.subarray(0, 4));\n\n  if (track.type === 'video') {\n    track.info = track.info || {};\n    track.info.width = bytes[28] << 8 | bytes[29];\n    track.info.height = bytes[30] << 8 | bytes[31];\n  } else if (track.type === 'audio') {\n    track.info = track.info || {};\n    track.info.channels = bytes[20] << 8 | bytes[21];\n    track.info.bitDepth = bytes[22] << 8 | bytes[23];\n    track.info.sampleRate = bytes[28] << 8 | bytes[29];\n  }\n\n  if (codec === 'avc1') {\n    var avcC = findNamedBox(bytes, 'avcC'); // AVCDecoderConfigurationRecord\n\n    codec += \".\" + getAvcCodec(avcC);\n    track.info.avcC = avcC; // TODO: do we need to parse all this?\n\n    /* {\n      configurationVersion: avcC[0],\n      profile: avcC[1],\n      profileCompatibility: avcC[2],\n      level: avcC[3],\n      lengthSizeMinusOne: avcC[4] & 0x3\n    };\n     let spsNalUnitCount = avcC[5] & 0x1F;\n    const spsNalUnits = track.info.avc.spsNalUnits = [];\n     // past spsNalUnitCount\n    let offset = 6;\n     while (spsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       spsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }\n    let ppsNalUnitCount = avcC[offset];\n    const ppsNalUnits = track.info.avc.ppsNalUnits = [];\n     // past ppsNalUnitCount\n    offset += 1;\n     while (ppsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       ppsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }*/\n    // HEVCDecoderConfigurationRecord\n  } else if (codec === 'hvc1' || codec === 'hev1') {\n    codec += \".\" + getHvcCodec(findNamedBox(bytes, 'hvcC'));\n  } else if (codec === 'mp4a' || codec === 'mp4v') {\n    var esds = findNamedBox(bytes, 'esds');\n    var esDescriptor = parseDescriptors(esds.subarray(4))[0];\n    var decoderConfig = esDescriptor && esDescriptor.descriptors.filter(function (_ref) {\n      var tag = _ref.tag;\n      return tag === 0x04;\n    })[0];\n\n    if (decoderConfig) {\n      // most codecs do not have a further '.'\n      // such as 0xa5 for ac-3 and 0xa6 for e-ac-3\n      codec += '.' + toHexString(decoderConfig.oti);\n\n      if (decoderConfig.oti === 0x40) {\n        codec += '.' + (decoderConfig.descriptors[0].bytes[0] >> 3).toString();\n      } else if (decoderConfig.oti === 0x20) {\n        codec += '.' + decoderConfig.descriptors[0].bytes[4].toString();\n      } else if (decoderConfig.oti === 0xdd) {\n        codec = 'vorbis';\n      }\n    } else if (track.type === 'audio') {\n      codec += '.40.2';\n    } else {\n      codec += '.20.9';\n    }\n  } else if (codec === 'av01') {\n    // AV1DecoderConfigurationRecord\n    codec += \".\" + getAv1Codec(findNamedBox(bytes, 'av1C'));\n  } else if (codec === 'vp09') {\n    // VPCodecConfigurationRecord\n    var vpcC = findNamedBox(bytes, 'vpcC'); // https://www.webmproject.org/vp9/mp4/\n\n    var profile = vpcC[0];\n    var level = vpcC[1];\n    var bitDepth = vpcC[2] >> 4;\n    var chromaSubsampling = (vpcC[2] & 0x0F) >> 1;\n    var videoFullRangeFlag = (vpcC[2] & 0x0F) >> 3;\n    var colourPrimaries = vpcC[3];\n    var transferCharacteristics = vpcC[4];\n    var matrixCoefficients = vpcC[5];\n    codec += \".\" + padStart(profile, 2, '0');\n    codec += \".\" + padStart(level, 2, '0');\n    codec += \".\" + padStart(bitDepth, 2, '0');\n    codec += \".\" + padStart(chromaSubsampling, 2, '0');\n    codec += \".\" + padStart(colourPrimaries, 2, '0');\n    codec += \".\" + padStart(transferCharacteristics, 2, '0');\n    codec += \".\" + padStart(matrixCoefficients, 2, '0');\n    codec += \".\" + padStart(videoFullRangeFlag, 2, '0');\n  } else if (codec === 'theo') {\n    codec = 'theora';\n  } else if (codec === 'spex') {\n    codec = 'speex';\n  } else if (codec === '.mp3') {\n    codec = 'mp4a.40.34';\n  } else if (codec === 'msVo') {\n    codec = 'vorbis';\n  } else if (codec === 'Opus') {\n    codec = 'opus';\n    var dOps = findNamedBox(bytes, 'dOps');\n    track.info.opus = parseOpusHead(dOps); // TODO: should this go into the webm code??\n    // Firefox requires a codecDelay for opus playback\n    // see https://bugzilla.mozilla.org/show_bug.cgi?id=1276238\n\n    track.info.codecDelay = 6500000;\n  } else {\n    codec = codec.toLowerCase();\n  }\n  /* eslint-enable */\n  // flac, ac-3, ec-3, opus\n\n\n  track.codec = codec;\n};\nexport var parseTracks = function parseTracks(bytes, frameTable) {\n  if (frameTable === void 0) {\n    frameTable = true;\n  }\n\n  bytes = toUint8(bytes);\n  var traks = findBox(bytes, ['moov', 'trak'], true);\n  var tracks = [];\n  traks.forEach(function (trak) {\n    var track = {\n      bytes: trak\n    };\n    var mdia = findBox(trak, ['mdia'])[0];\n    var hdlr = findBox(mdia, ['hdlr'])[0];\n    var trakType = bytesToString(hdlr.subarray(8, 12));\n\n    if (trakType === 'soun') {\n      track.type = 'audio';\n    } else if (trakType === 'vide') {\n      track.type = 'video';\n    } else {\n      track.type = trakType;\n    }\n\n    var tkhd = findBox(trak, ['tkhd'])[0];\n\n    if (tkhd) {\n      var view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n      var tkhdVersion = view.getUint8(0);\n      track.number = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n    }\n\n    var mdhd = findBox(mdia, ['mdhd'])[0];\n\n    if (mdhd) {\n      // mdhd is a FullBox, meaning it will have its own version as the first byte\n      var version = mdhd[0];\n      var index = version === 0 ? 12 : 20;\n      track.timescale = (mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]) >>> 0;\n    }\n\n    var stbl = findBox(mdia, ['minf', 'stbl'])[0];\n    var stsd = findBox(stbl, ['stsd'])[0];\n    var descriptionCount = bytesToNumber(stsd.subarray(4, 8));\n    var offset = 8; // add codec and codec info\n\n    while (descriptionCount--) {\n      var len = bytesToNumber(stsd.subarray(offset, offset + 4));\n      var sampleDescriptor = stsd.subarray(offset + 4, offset + 4 + len);\n      addSampleDescription(track, sampleDescriptor);\n      offset += 4 + len;\n    }\n\n    if (frameTable) {\n      track.frameTable = buildFrameTable(stbl, track.timescale);\n    } // codec has no sub parameters\n\n\n    tracks.push(track);\n  });\n  return tracks;\n};\nexport var parseMediaInfo = function parseMediaInfo(bytes) {\n  var mvhd = findBox(bytes, ['moov', 'mvhd'], true)[0];\n\n  if (!mvhd || !mvhd.length) {\n    return;\n  }\n\n  var info = {}; // ms to ns\n  // mvhd v1 has 8 byte duration and other fields too\n\n  if (mvhd[0] === 1) {\n    info.timestampScale = bytesToNumber(mvhd.subarray(20, 24));\n    info.duration = bytesToNumber(mvhd.subarray(24, 32));\n  } else {\n    info.timestampScale = bytesToNumber(mvhd.subarray(12, 16));\n    info.duration = bytesToNumber(mvhd.subarray(16, 20));\n  }\n\n  info.bytes = mvhd;\n  return info;\n};","import { toUint8, bytesToNumber, bytesMatch, bytesToString, numberToBytes, padStart } from './byte-helpers';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js'; // relevant specs for this parser:\n// https://matroska-org.github.io/libebml/specs.html\n// https://www.matroska.org/technical/elements.html\n// https://www.webmproject.org/docs/container/\n\nexport var EBML_TAGS = {\n  EBML: toUint8([0x1A, 0x45, 0xDF, 0xA3]),\n  DocType: toUint8([0x42, 0x82]),\n  Segment: toUint8([0x18, 0x53, 0x80, 0x67]),\n  SegmentInfo: toUint8([0x15, 0x49, 0xA9, 0x66]),\n  Tracks: toUint8([0x16, 0x54, 0xAE, 0x6B]),\n  Track: toUint8([0xAE]),\n  TrackNumber: toUint8([0xd7]),\n  DefaultDuration: toUint8([0x23, 0xe3, 0x83]),\n  TrackEntry: toUint8([0xAE]),\n  TrackType: toUint8([0x83]),\n  FlagDefault: toUint8([0x88]),\n  CodecID: toUint8([0x86]),\n  CodecPrivate: toUint8([0x63, 0xA2]),\n  VideoTrack: toUint8([0xe0]),\n  AudioTrack: toUint8([0xe1]),\n  // Not used yet, but will be used for live webm/mkv\n  // see https://www.matroska.org/technical/basics.html#block-structure\n  // see https://www.matroska.org/technical/basics.html#simpleblock-structure\n  Cluster: toUint8([0x1F, 0x43, 0xB6, 0x75]),\n  Timestamp: toUint8([0xE7]),\n  TimestampScale: toUint8([0x2A, 0xD7, 0xB1]),\n  BlockGroup: toUint8([0xA0]),\n  BlockDuration: toUint8([0x9B]),\n  Block: toUint8([0xA1]),\n  SimpleBlock: toUint8([0xA3])\n};\n/**\n * This is a simple table to determine the length\n * of things in ebml. The length is one based (starts at 1,\n * rather than zero) and for every zero bit before a one bit\n * we add one to length. We also need this table because in some\n * case we have to xor all the length bits from another value.\n */\n\nvar LENGTH_TABLE = [128, 64, 32, 16, 8, 4, 2, 1];\n\nvar getLength = function getLength(byte) {\n  var len = 1;\n\n  for (var i = 0; i < LENGTH_TABLE.length; i++) {\n    if (byte & LENGTH_TABLE[i]) {\n      break;\n    }\n\n    len++;\n  }\n\n  return len;\n}; // length in ebml is stored in the first 4 to 8 bits\n// of the first byte. 4 for the id length and 8 for the\n// data size length. Length is measured by converting the number to binary\n// then 1 + the number of zeros before a 1 is encountered starting\n// from the left.\n\n\nvar getvint = function getvint(bytes, offset, removeLength, signed) {\n  if (removeLength === void 0) {\n    removeLength = true;\n  }\n\n  if (signed === void 0) {\n    signed = false;\n  }\n\n  var length = getLength(bytes[offset]);\n  var valueBytes = bytes.subarray(offset, offset + length); // NOTE that we do **not** subarray here because we need to copy these bytes\n  // as they will be modified below to remove the dataSizeLen bits and we do not\n  // want to modify the original data. normally we could just call slice on\n  // uint8array but ie 11 does not support that...\n\n  if (removeLength) {\n    valueBytes = Array.prototype.slice.call(bytes, offset, offset + length);\n    valueBytes[0] ^= LENGTH_TABLE[length - 1];\n  }\n\n  return {\n    length: length,\n    value: bytesToNumber(valueBytes, {\n      signed: signed\n    }),\n    bytes: valueBytes\n  };\n};\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return path.match(/.{1,2}/g).map(function (p) {\n      return normalizePath(p);\n    });\n  }\n\n  if (typeof path === 'number') {\n    return numberToBytes(path);\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar getInfinityDataSize = function getInfinityDataSize(id, bytes, offset) {\n  if (offset >= bytes.length) {\n    return bytes.length;\n  }\n\n  var innerid = getvint(bytes, offset, false);\n\n  if (bytesMatch(id.bytes, innerid.bytes)) {\n    return offset;\n  }\n\n  var dataHeader = getvint(bytes, offset + innerid.length);\n  return getInfinityDataSize(id, bytes, offset + dataHeader.length + dataHeader.value + innerid.length);\n};\n/**\n * Notes on the EBLM format.\n *\n * EBLM uses \"vints\" tags. Every vint tag contains\n * two parts\n *\n * 1. The length from the first byte. You get this by\n *    converting the byte to binary and counting the zeros\n *    before a 1. Then you add 1 to that. Examples\n *    00011111 = length 4 because there are 3 zeros before a 1.\n *    00100000 = length 3 because there are 2 zeros before a 1.\n *    00000011 = length 7 because there are 6 zeros before a 1.\n *\n * 2. The bits used for length are removed from the first byte\n *    Then all the bytes are merged into a value. NOTE: this\n *    is not the case for id ebml tags as there id includes\n *    length bits.\n *\n */\n\n\nexport var findEbml = function findEbml(bytes, paths) {\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var id = getvint(bytes, i, false);\n    var dataHeader = getvint(bytes, i + id.length);\n    var dataStart = i + id.length + dataHeader.length; // dataSize is unknown or this is a live stream\n\n    if (dataHeader.value === 0x7f) {\n      dataHeader.value = getInfinityDataSize(id, bytes, dataStart);\n\n      if (dataHeader.value !== bytes.length) {\n        dataHeader.value -= dataStart;\n      }\n    }\n\n    var dataEnd = dataStart + dataHeader.value > bytes.length ? bytes.length : dataStart + dataHeader.value;\n    var data = bytes.subarray(dataStart, dataEnd);\n\n    if (bytesMatch(paths[0], id.bytes)) {\n      if (paths.length === 1) {\n        // this is the end of the paths and we've found the tag we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next tag inside of the data\n        // of this one\n        results = results.concat(findEbml(data, paths.slice(1)));\n      }\n    }\n\n    var totalLength = id.length + dataHeader.length + data.length; // move past this tag entirely, we are not looking for it\n\n    i += totalLength;\n  }\n\n  return results;\n}; // see https://www.matroska.org/technical/basics.html#block-structure\n\nexport var decodeBlock = function decodeBlock(block, type, timestampScale, clusterTimestamp) {\n  var duration;\n\n  if (type === 'group') {\n    duration = findEbml(block, [EBML_TAGS.BlockDuration])[0];\n\n    if (duration) {\n      duration = bytesToNumber(duration);\n      duration = 1 / timestampScale * duration * timestampScale / 1000;\n    }\n\n    block = findEbml(block, [EBML_TAGS.Block])[0];\n    type = 'block'; // treat data as a block after this point\n  }\n\n  var dv = new DataView(block.buffer, block.byteOffset, block.byteLength);\n  var trackNumber = getvint(block, 0);\n  var timestamp = dv.getInt16(trackNumber.length, false);\n  var flags = block[trackNumber.length + 2];\n  var data = block.subarray(trackNumber.length + 3); // pts/dts in seconds\n\n  var ptsdts = 1 / timestampScale * (clusterTimestamp + timestamp) * timestampScale / 1000; // return the frame\n\n  var parsed = {\n    duration: duration,\n    trackNumber: trackNumber.value,\n    keyframe: type === 'simple' && flags >> 7 === 1,\n    invisible: (flags & 0x08) >> 3 === 1,\n    lacing: (flags & 0x06) >> 1,\n    discardable: type === 'simple' && (flags & 0x01) === 1,\n    frames: [],\n    pts: ptsdts,\n    dts: ptsdts,\n    timestamp: timestamp\n  };\n\n  if (!parsed.lacing) {\n    parsed.frames.push(data);\n    return parsed;\n  }\n\n  var numberOfFrames = data[0] + 1;\n  var frameSizes = [];\n  var offset = 1; // Fixed\n\n  if (parsed.lacing === 2) {\n    var sizeOfFrame = (data.length - offset) / numberOfFrames;\n\n    for (var i = 0; i < numberOfFrames; i++) {\n      frameSizes.push(sizeOfFrame);\n    }\n  } // xiph\n\n\n  if (parsed.lacing === 1) {\n    for (var _i = 0; _i < numberOfFrames - 1; _i++) {\n      var size = 0;\n\n      do {\n        size += data[offset];\n        offset++;\n      } while (data[offset - 1] === 0xFF);\n\n      frameSizes.push(size);\n    }\n  } // ebml\n\n\n  if (parsed.lacing === 3) {\n    // first vint is unsinged\n    // after that vints are singed and\n    // based on a compounding size\n    var _size = 0;\n\n    for (var _i2 = 0; _i2 < numberOfFrames - 1; _i2++) {\n      var vint = _i2 === 0 ? getvint(data, offset) : getvint(data, offset, true, true);\n      _size += vint.value;\n      frameSizes.push(_size);\n      offset += vint.length;\n    }\n  }\n\n  frameSizes.forEach(function (size) {\n    parsed.frames.push(data.subarray(offset, offset + size));\n    offset += size;\n  });\n  return parsed;\n}; // VP9 Codec Feature Metadata (CodecPrivate)\n// https://www.webmproject.org/docs/container/\n\nvar parseVp9Private = function parseVp9Private(bytes) {\n  var i = 0;\n  var params = {};\n\n  while (i < bytes.length) {\n    var id = bytes[i] & 0x7f;\n    var len = bytes[i + 1];\n    var val = void 0;\n\n    if (len === 1) {\n      val = bytes[i + 2];\n    } else {\n      val = bytes.subarray(i + 2, i + 2 + len);\n    }\n\n    if (id === 1) {\n      params.profile = val;\n    } else if (id === 2) {\n      params.level = val;\n    } else if (id === 3) {\n      params.bitDepth = val;\n    } else if (id === 4) {\n      params.chromaSubsampling = val;\n    } else {\n      params[id] = val;\n    }\n\n    i += 2 + len;\n  }\n\n  return params;\n};\n\nexport var parseTracks = function parseTracks(bytes) {\n  bytes = toUint8(bytes);\n  var decodedTracks = [];\n  var tracks = findEbml(bytes, [EBML_TAGS.Segment, EBML_TAGS.Tracks, EBML_TAGS.Track]);\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Tracks, EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    return decodedTracks;\n  }\n\n  tracks.forEach(function (track) {\n    var trackType = findEbml(track, EBML_TAGS.TrackType)[0];\n\n    if (!trackType || !trackType.length) {\n      return;\n    } // 1 is video, 2 is audio, 17 is subtitle\n    // other values are unimportant in this context\n\n\n    if (trackType[0] === 1) {\n      trackType = 'video';\n    } else if (trackType[0] === 2) {\n      trackType = 'audio';\n    } else if (trackType[0] === 17) {\n      trackType = 'subtitle';\n    } else {\n      return;\n    } // todo parse language\n\n\n    var decodedTrack = {\n      rawCodec: bytesToString(findEbml(track, [EBML_TAGS.CodecID])[0]),\n      type: trackType,\n      codecPrivate: findEbml(track, [EBML_TAGS.CodecPrivate])[0],\n      number: bytesToNumber(findEbml(track, [EBML_TAGS.TrackNumber])[0]),\n      defaultDuration: bytesToNumber(findEbml(track, [EBML_TAGS.DefaultDuration])[0]),\n      default: findEbml(track, [EBML_TAGS.FlagDefault])[0],\n      rawData: track\n    };\n    var codec = '';\n\n    if (/V_MPEG4\\/ISO\\/AVC/.test(decodedTrack.rawCodec)) {\n      codec = \"avc1.\" + getAvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEGH\\/ISO\\/HEVC/.test(decodedTrack.rawCodec)) {\n      codec = \"hev1.\" + getHvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEG4\\/ISO\\/ASP/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4v.20.' + decodedTrack.codecPrivate[4].toString();\n      } else {\n        codec = 'mp4v.20.9';\n      }\n    } else if (/^V_THEORA/.test(decodedTrack.rawCodec)) {\n      codec = 'theora';\n    } else if (/^V_VP8/.test(decodedTrack.rawCodec)) {\n      codec = 'vp8';\n    } else if (/^V_VP9/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        var _parseVp9Private = parseVp9Private(decodedTrack.codecPrivate),\n            profile = _parseVp9Private.profile,\n            level = _parseVp9Private.level,\n            bitDepth = _parseVp9Private.bitDepth,\n            chromaSubsampling = _parseVp9Private.chromaSubsampling;\n\n        codec = 'vp09.';\n        codec += padStart(profile, 2, '0') + \".\";\n        codec += padStart(level, 2, '0') + \".\";\n        codec += padStart(bitDepth, 2, '0') + \".\";\n        codec += \"\" + padStart(chromaSubsampling, 2, '0'); // Video -> Colour -> Ebml name\n\n        var matrixCoefficients = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB1]])[0] || [];\n        var videoFullRangeFlag = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB9]])[0] || [];\n        var transferCharacteristics = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBA]])[0] || [];\n        var colourPrimaries = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBB]])[0] || []; // if we find any optional codec parameter specify them all.\n\n        if (matrixCoefficients.length || videoFullRangeFlag.length || transferCharacteristics.length || colourPrimaries.length) {\n          codec += \".\" + padStart(colourPrimaries[0], 2, '0');\n          codec += \".\" + padStart(transferCharacteristics[0], 2, '0');\n          codec += \".\" + padStart(matrixCoefficients[0], 2, '0');\n          codec += \".\" + padStart(videoFullRangeFlag[0], 2, '0');\n        }\n      } else {\n        codec = 'vp9';\n      }\n    } else if (/^V_AV1/.test(decodedTrack.rawCodec)) {\n      codec = \"av01.\" + getAv1Codec(decodedTrack.codecPrivate);\n    } else if (/A_ALAC/.test(decodedTrack.rawCodec)) {\n      codec = 'alac';\n    } else if (/A_MPEG\\/L2/.test(decodedTrack.rawCodec)) {\n      codec = 'mp2';\n    } else if (/A_MPEG\\/L3/.test(decodedTrack.rawCodec)) {\n      codec = 'mp3';\n    } else if (/^A_AAC/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4a.40.' + (decodedTrack.codecPrivate[0] >>> 3).toString();\n      } else {\n        codec = 'mp4a.40.2';\n      }\n    } else if (/^A_AC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ac-3';\n    } else if (/^A_PCM/.test(decodedTrack.rawCodec)) {\n      codec = 'pcm';\n    } else if (/^A_MS\\/ACM/.test(decodedTrack.rawCodec)) {\n      codec = 'speex';\n    } else if (/^A_EAC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ec-3';\n    } else if (/^A_VORBIS/.test(decodedTrack.rawCodec)) {\n      codec = 'vorbis';\n    } else if (/^A_FLAC/.test(decodedTrack.rawCodec)) {\n      codec = 'flac';\n    } else if (/^A_OPUS/.test(decodedTrack.rawCodec)) {\n      codec = 'opus';\n    }\n\n    decodedTrack.codec = codec;\n    decodedTracks.push(decodedTrack);\n  });\n  return decodedTracks.sort(function (a, b) {\n    return a.number - b.number;\n  });\n};\nexport var parseData = function parseData(data, tracks) {\n  var allBlocks = [];\n  var segment = findEbml(data, [EBML_TAGS.Segment])[0];\n  var timestampScale = findEbml(segment, [EBML_TAGS.SegmentInfo, EBML_TAGS.TimestampScale])[0]; // in nanoseconds, defaults to 1ms\n\n  if (timestampScale && timestampScale.length) {\n    timestampScale = bytesToNumber(timestampScale);\n  } else {\n    timestampScale = 1000000;\n  }\n\n  var clusters = findEbml(segment, [EBML_TAGS.Cluster]);\n\n  if (!tracks) {\n    tracks = parseTracks(segment);\n  }\n\n  clusters.forEach(function (cluster, ci) {\n    var simpleBlocks = findEbml(cluster, [EBML_TAGS.SimpleBlock]).map(function (b) {\n      return {\n        type: 'simple',\n        data: b\n      };\n    });\n    var blockGroups = findEbml(cluster, [EBML_TAGS.BlockGroup]).map(function (b) {\n      return {\n        type: 'group',\n        data: b\n      };\n    });\n    var timestamp = findEbml(cluster, [EBML_TAGS.Timestamp])[0] || 0;\n\n    if (timestamp && timestamp.length) {\n      timestamp = bytesToNumber(timestamp);\n    } // get all blocks then sort them into the correct order\n\n\n    var blocks = simpleBlocks.concat(blockGroups).sort(function (a, b) {\n      return a.data.byteOffset - b.data.byteOffset;\n    });\n    blocks.forEach(function (block, bi) {\n      var decoded = decodeBlock(block.data, block.type, timestampScale, timestamp);\n      allBlocks.push(decoded);\n    });\n  });\n  return {\n    tracks: tracks,\n    blocks: allBlocks\n  };\n};","import { bytesMatch, toUint8 } from './byte-helpers.js';\nexport var NAL_TYPE_ONE = toUint8([0x00, 0x00, 0x00, 0x01]);\nexport var NAL_TYPE_TWO = toUint8([0x00, 0x00, 0x01]);\nexport var EMULATION_PREVENTION = toUint8([0x00, 0x00, 0x03]);\n/**\n * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n * Sequence Payload\"\n *\n * @param data {Uint8Array} the bytes of a RBSP from a NAL\n * unit\n * @return {Uint8Array} the RBSP without any Emulation\n * Prevention Bytes\n */\n\nexport var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(bytes) {\n  var positions = [];\n  var i = 1; // Find all `Emulation Prevention Bytes`\n\n  while (i < bytes.length - 2) {\n    if (bytesMatch(bytes.subarray(i, i + 3), EMULATION_PREVENTION)) {\n      positions.push(i + 2);\n      i++;\n    }\n\n    i++;\n  } // If no Emulation Prevention Bytes were found just return the original\n  // array\n\n\n  if (positions.length === 0) {\n    return bytes;\n  } // Create a new array to hold the NAL unit data\n\n\n  var newLength = bytes.length - positions.length;\n  var newData = new Uint8Array(newLength);\n  var sourceIndex = 0;\n\n  for (i = 0; i < newLength; sourceIndex++, i++) {\n    if (sourceIndex === positions[0]) {\n      // Skip this byte\n      sourceIndex++; // Remove this position index\n\n      positions.shift();\n    }\n\n    newData[i] = bytes[sourceIndex];\n  }\n\n  return newData;\n};\nexport var findNal = function findNal(bytes, dataType, types, nalLimit) {\n  if (nalLimit === void 0) {\n    nalLimit = Infinity;\n  }\n\n  bytes = toUint8(bytes);\n  types = [].concat(types);\n  var i = 0;\n  var nalStart;\n  var nalsFound = 0; // keep searching until:\n  // we reach the end of bytes\n  // we reach the maximum number of nals they want to seach\n  // NOTE: that we disregard nalLimit when we have found the start\n  // of the nal we want so that we can find the end of the nal we want.\n\n  while (i < bytes.length && (nalsFound < nalLimit || nalStart)) {\n    var nalOffset = void 0;\n\n    if (bytesMatch(bytes.subarray(i), NAL_TYPE_ONE)) {\n      nalOffset = 4;\n    } else if (bytesMatch(bytes.subarray(i), NAL_TYPE_TWO)) {\n      nalOffset = 3;\n    } // we are unsynced,\n    // find the next nal unit\n\n\n    if (!nalOffset) {\n      i++;\n      continue;\n    }\n\n    nalsFound++;\n\n    if (nalStart) {\n      return discardEmulationPreventionBytes(bytes.subarray(nalStart, i));\n    }\n\n    var nalType = void 0;\n\n    if (dataType === 'h264') {\n      nalType = bytes[i + nalOffset] & 0x1f;\n    } else if (dataType === 'h265') {\n      nalType = bytes[i + nalOffset] >> 1 & 0x3f;\n    }\n\n    if (types.indexOf(nalType) !== -1) {\n      nalStart = i + nalOffset;\n    } // nal header is 1 length for h264, and 2 for h265\n\n\n    i += nalOffset + (dataType === 'h264' ? 1 : 2);\n  }\n\n  return bytes.subarray(0, 0);\n};\nexport var findH264Nal = function findH264Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h264', type, nalLimit);\n};\nexport var findH265Nal = function findH265Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h265', type, nalLimit);\n};","import { toUint8, bytesMatch } from './byte-helpers.js';\nimport { findBox } from './mp4-helpers.js';\nimport { findEbml, EBML_TAGS } from './ebml-helpers.js';\nimport { getId3Offset } from './id3-helpers.js';\nimport { findH264Nal, findH265Nal } from './nal-helpers.js';\nvar CONSTANTS = {\n  // \"webm\" string literal in hex\n  'webm': toUint8([0x77, 0x65, 0x62, 0x6d]),\n  // \"matroska\" string literal in hex\n  'matroska': toUint8([0x6d, 0x61, 0x74, 0x72, 0x6f, 0x73, 0x6b, 0x61]),\n  // \"fLaC\" string literal in hex\n  'flac': toUint8([0x66, 0x4c, 0x61, 0x43]),\n  // \"OggS\" string literal in hex\n  'ogg': toUint8([0x4f, 0x67, 0x67, 0x53]),\n  // ac-3 sync byte, also works for ec-3 as that is simply a codec\n  // of ac-3\n  'ac3': toUint8([0x0b, 0x77]),\n  // \"RIFF\" string literal in hex used for wav and avi\n  'riff': toUint8([0x52, 0x49, 0x46, 0x46]),\n  // \"AVI\" string literal in hex\n  'avi': toUint8([0x41, 0x56, 0x49]),\n  // \"WAVE\" string literal in hex\n  'wav': toUint8([0x57, 0x41, 0x56, 0x45]),\n  // \"ftyp3g\" string literal in hex\n  '3gp': toUint8([0x66, 0x74, 0x79, 0x70, 0x33, 0x67]),\n  // \"ftyp\" string literal in hex\n  'mp4': toUint8([0x66, 0x74, 0x79, 0x70]),\n  // \"styp\" string literal in hex\n  'fmp4': toUint8([0x73, 0x74, 0x79, 0x70]),\n  // \"ftypqt\" string literal in hex\n  'mov': toUint8([0x66, 0x74, 0x79, 0x70, 0x71, 0x74]),\n  // moov string literal in hex\n  'moov': toUint8([0x6D, 0x6F, 0x6F, 0x76]),\n  // moof string literal in hex\n  'moof': toUint8([0x6D, 0x6F, 0x6F, 0x66])\n};\nvar _isLikely = {\n  aac: function aac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x10], {\n      offset: offset,\n      mask: [0xFF, 0x16]\n    });\n  },\n  mp3: function mp3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x02], {\n      offset: offset,\n      mask: [0xFF, 0x06]\n    });\n  },\n  webm: function webm(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is webm\n\n    return bytesMatch(docType, CONSTANTS.webm);\n  },\n  mkv: function mkv(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is matroska\n\n    return bytesMatch(docType, CONSTANTS.matroska);\n  },\n  mp4: function mp4(bytes) {\n    // if this file is another base media file format, it is not mp4\n    if (_isLikely['3gp'](bytes) || _isLikely.mov(bytes)) {\n      return false;\n    } // if this file starts with a ftyp or styp box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.mp4, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.fmp4, {\n      offset: 4\n    })) {\n      return true;\n    } // if this file starts with a moof/moov box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.moof, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.moov, {\n      offset: 4\n    })) {\n      return true;\n    }\n  },\n  mov: function mov(bytes) {\n    return bytesMatch(bytes, CONSTANTS.mov, {\n      offset: 4\n    });\n  },\n  '3gp': function gp(bytes) {\n    return bytesMatch(bytes, CONSTANTS['3gp'], {\n      offset: 4\n    });\n  },\n  ac3: function ac3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.ac3, {\n      offset: offset\n    });\n  },\n  ts: function ts(bytes) {\n    if (bytes.length < 189 && bytes.length >= 1) {\n      return bytes[0] === 0x47;\n    }\n\n    var i = 0; // check the first 376 bytes for two matching sync bytes\n\n    while (i + 188 < bytes.length && i < 188) {\n      if (bytes[i] === 0x47 && bytes[i + 188] === 0x47) {\n        return true;\n      }\n\n      i += 1;\n    }\n\n    return false;\n  },\n  flac: function flac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.flac, {\n      offset: offset\n    });\n  },\n  ogg: function ogg(bytes) {\n    return bytesMatch(bytes, CONSTANTS.ogg);\n  },\n  avi: function avi(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.avi, {\n      offset: 8\n    });\n  },\n  wav: function wav(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.wav, {\n      offset: 8\n    });\n  },\n  'h264': function h264(bytes) {\n    // find seq_parameter_set_rbsp\n    return findH264Nal(bytes, 7, 3).length;\n  },\n  'h265': function h265(bytes) {\n    // find video_parameter_set_rbsp or seq_parameter_set_rbsp\n    return findH265Nal(bytes, [32, 33], 3).length;\n  }\n}; // get all the isLikely functions\n// but make sure 'ts' is above h264 and h265\n// but below everything else as it is the least specific\n\nvar isLikelyTypes = Object.keys(_isLikely) // remove ts, h264, h265\n.filter(function (t) {\n  return t !== 'ts' && t !== 'h264' && t !== 'h265';\n}) // add it back to the bottom\n.concat(['ts', 'h264', 'h265']); // make sure we are dealing with uint8 data.\n\nisLikelyTypes.forEach(function (type) {\n  var isLikelyFn = _isLikely[type];\n\n  _isLikely[type] = function (bytes) {\n    return isLikelyFn(toUint8(bytes));\n  };\n}); // export after wrapping\n\nexport var isLikely = _isLikely; // A useful list of file signatures can be found here\n// https://en.wikipedia.org/wiki/List_of_file_signatures\n\nexport var detectContainerForBytes = function detectContainerForBytes(bytes) {\n  bytes = toUint8(bytes);\n\n  for (var i = 0; i < isLikelyTypes.length; i++) {\n    var type = isLikelyTypes[i];\n\n    if (isLikely[type](bytes)) {\n      return type;\n    }\n  }\n\n  return '';\n}; // fmp4 is not a container\n\nexport var isLikelyFmp4MediaSegment = function isLikelyFmp4MediaSegment(bytes) {\n  return findBox(bytes, ['moof']).length > 0;\n};","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs,\n  metadataTsToSeconds;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\n/**\n * Adjust ID3 tag or caption timing information by the timeline pts values\n * (if keepOriginalTimestamps is false) and convert to seconds\n */\nmetadataTsToSeconds = function(timestamp, timelineStartPts, keepOriginalTimestamps) {\n  return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n};\n\nmodule.exports = {\n  ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs,\n  metadataTsToSeconds: metadataTsToSeconds\n};\n","/**\n * @license\n * Video.js 8.21.0 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document$1 from 'global/document';\nimport XHR from '@videojs/xhr';\nimport vtt from 'videojs-vtt.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport _resolveUrl from '@videojs/vhs-utils/es/resolve-url.js';\nimport { Parser } from 'm3u8-parser';\nimport { DEFAULT_VIDEO_CODEC, DEFAULT_AUDIO_CODEC, parseCodecs, muxerSupportsCodec, browserSupportsCodec, translateLegacyCodec, codecsFromDefault, isAudioCodec, getMimeForCodec } from '@videojs/vhs-utils/es/codecs.js';\nimport { simpleTypeFromSourceType } from '@videojs/vhs-utils/es/media-types.js';\nimport { isArrayBufferView, concatTypedArrays, stringToBytes, toUint8 } from '@videojs/vhs-utils/es/byte-helpers';\nimport { generateSidxKey, parseUTCTiming, parse, addSidxSegmentsToPlaylist } from 'mpd-parser';\nimport parseSidx from 'mux.js/lib/tools/parse-sidx';\nimport { getId3Offset } from '@videojs/vhs-utils/es/id3-helpers';\nimport { detectContainerForBytes, isLikelyFmp4MediaSegment } from '@videojs/vhs-utils/es/containers';\nimport { ONE_SECOND_IN_TS } from 'mux.js/lib/utils/clock';\n\nvar version$6 = \"8.21.0\";\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\nconst hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecycle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nconst hooks = function (type, fn) {\n  hooks_[type] = hooks_[type] || [];\n  if (fn) {\n    hooks_[type] = hooks_[type].concat(fn);\n  }\n  return hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nconst hook = function (type, fn) {\n  hooks(type, fn);\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nconst removeHook = function (type, fn) {\n  const index = hooks(type).indexOf(fn);\n  if (index <= -1) {\n    return false;\n  }\n  hooks_[type] = hooks_[type].slice();\n  hooks_[type].splice(index, 1);\n  return true;\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nconst hookOnce = function (type, fn) {\n  hooks(type, [].concat(fn).map(original => {\n    const wrapper = (...args) => {\n      removeHook(type, wrapper);\n      return original(...args);\n    };\n    return wrapper;\n  }));\n};\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nconst FullscreenApi = {\n  prefixed: true\n};\n\n// browser API methods\nconst apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen']];\nconst specApi = apiMap[0];\nlet browserApi;\n\n// determine the supported set of functions\nfor (let i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document$1) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (let i = 0; i < browserApi.length; i++) {\n    FullscreenApi[specApi[i]] = browserApi[i];\n  }\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\n// This is the private tracking variable for the logging history.\nlet history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} name\n *         The name of the console method to use.\n *\n * @param  {Object} log\n *         The arguments to be passed to the matching console method.\n *\n * @param {string} [styles]\n *        styles for name\n */\nconst LogByTypeFactory = (name, log, styles) => (type, level, args) => {\n  const lvl = log.levels[level];\n  const lvlRegExp = new RegExp(`^(${lvl})$`);\n  let resultName = name;\n  if (type !== 'log') {\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n  if (styles) {\n    resultName = `%c${name}`;\n    args.unshift(styles);\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift(resultName + ':');\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n\n    // only store 1000 history entries\n    const splice = history.length - 1000;\n    history.splice(0, splice > 0 ? splice : 0);\n  }\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window$1.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  let fn = window$1.console[type];\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window$1.console.info || window$1.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n  fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n};\nfunction createLogger$1(name, delimiter = ':', styles = '') {\n  // This is the private tracking variable for logging level.\n  let level = 'info';\n\n  // the curried logByType bound to the specific log and history\n  let logByType;\n\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * *[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {...*} args\n   *           One or more messages or objects that should be logged.\n   */\n  function log(...args) {\n    logByType('log', level, args);\n  }\n\n  // This is the logByType helper that the logging methods below use\n  logByType = LogByTypeFactory(name, log, styles);\n\n  /**\n   * Create a new subLogger which chains the old name to the new name.\n   *\n   * For example, doing `mylogger = videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} subName\n   *        The name to add call the new logger\n   * @param {string} [subDelimiter]\n   *        Optional delimiter\n   * @param {string} [subStyles]\n   *        Optional styles\n   * @return {Object}\n   */\n  log.createLogger = (subName, subDelimiter, subStyles) => {\n    const resultDelimiter = subDelimiter !== undefined ? subDelimiter : delimiter;\n    const resultStyles = subStyles !== undefined ? subStyles : styles;\n    const resultName = `${name} ${resultDelimiter} ${subName}`;\n    return createLogger$1(resultName, resultDelimiter, resultStyles);\n  };\n\n  /**\n   * Create a new logger.\n   *\n   * @param {string} newName\n   *        The name for the new logger\n   * @param {string} [newDelimiter]\n   *        Optional delimiter\n   * @param {string} [newStyles]\n   *        Optional styles\n   * @return {Object}\n   */\n  log.createNewLogger = (newName, newDelimiter, newStyles) => {\n    return createLogger$1(newName, newDelimiter, newStyles);\n  };\n\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {'all'|'debug'|'info'|'warn'|'error'|'off'} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n  log.level = lvl => {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(`\"${lvl}\" in not a valid log level`);\n      }\n      level = lvl;\n    }\n    return level;\n  };\n\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n  log.history = () => history ? [].concat(history) : [];\n\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n  log.history.filter = fname => {\n    return (history || []).filter(historyItem => {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(`.*${fname}.*`).test(historyItem[0]);\n    });\n  };\n\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n  log.history.clear = () => {\n    if (history) {\n      history.length = 0;\n    }\n  };\n\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n  log.history.disable = () => {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n  log.history.enable = () => {\n    if (history === null) {\n      history = [];\n    }\n  };\n\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as an error\n   */\n  log.error = (...args) => logByType('error', level, args);\n\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n  log.warn = (...args) => logByType('warn', level, args);\n\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n  log.debug = (...args) => logByType('debug', level, args);\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nconst log$1 = createLogger$1('VIDEOJS');\nconst createLogger = log$1.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {*} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {*} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {*} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {*}\n *         The new accumulated value.\n */\nconst toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nconst keys = function (object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(key => fn(object[key], key));\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {*} [initial = 0]\n *        Starting value\n *\n * @return {*}\n *         The final accumulated value.\n */\nfunction reduce(object, fn, initial = 0) {\n  return keys(object).reduce((accum, key) => fn(accum, object[key], key), initial);\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction merge$1(...sources) {\n  const result = {};\n  sources.forEach(source => {\n    if (!source) {\n      return;\n    }\n    each(source, (value, key) => {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n      result[key] = merge$1(result[key], value);\n    });\n  });\n  return result;\n}\n\n/**\n * Returns an array of values for a given object\n *\n * @param  {Object} source - target object\n * @return {Array<unknown>} - object values\n */\nfunction values(source = {}) {\n  const result = [];\n  for (const key in source) {\n    if (source.hasOwnProperty(key)) {\n      const value = source[key];\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n/**\n * Object.defineProperty but \"lazy\", which means that the value is only set after\n * it is retrieved the first time, rather than being set right away.\n *\n * @param {Object} obj the object to set the property on\n * @param {string} key the key for the property to set\n * @param {Function} getValue the function used to get the value when it is needed.\n * @param {boolean} setter whether a setter should be allowed or not\n */\nfunction defineLazyProperty(obj, key, getValue, setter = true) {\n  const set = value => Object.defineProperty(obj, key, {\n    value,\n    enumerable: true,\n    writable: true\n  });\n  const options = {\n    configurable: true,\n    enumerable: true,\n    get() {\n      const value = getValue();\n      set(value);\n      return value;\n    }\n  };\n  if (setter) {\n    options.set = set;\n  }\n  return Object.defineProperty(obj, key, options);\n}\n\nvar Obj = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  each: each,\n  reduce: reduce,\n  isObject: isObject,\n  isPlain: isPlain,\n  merge: merge$1,\n  values: values,\n  defineLazyProperty: defineLazyProperty\n});\n\n/**\n * @file browser.js\n * @module browser\n */\n\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_IPOD = false;\n\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @type {string|null}\n */\nlet IOS_VERSION = null;\n\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_ANDROID = false;\n\n/**\n * The detected Android version - or `null` if not Android or indeterminable.\n *\n * @static\n * @type {number|string|null}\n */\nlet ANDROID_VERSION;\n\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_FIREFOX = false;\n\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_EDGE = false;\n\n/**\n * Whether or not this is any Chromium Browser\n *\n * @static\n * @type {Boolean}\n */\nlet IS_CHROMIUM = false;\n\n/**\n * Whether or not this is any Chromium browser that is not Edge.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * Deprecated, as the behaviour to not match Edge was to prevent Legacy Edge's UA matching.\n * IS_CHROMIUM should be used instead.\n * \"Chromium but not Edge\" could be explicitly tested with IS_CHROMIUM && !IS_EDGE\n *\n * @static\n * @deprecated\n * @type {Boolean}\n */\nlet IS_CHROME = false;\n\n/**\n * The detected Chromium version - or `null`.\n *\n * @static\n * @type {number|null}\n */\nlet CHROMIUM_VERSION = null;\n\n/**\n * The detected Google Chrome version - or `null`.\n * This has always been the _Chromium_ version, i.e. would return on Chromium Edge.\n * Deprecated, use CHROMIUM_VERSION instead.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */\nlet CHROME_VERSION = null;\n\n/**\n * Whether or not this is a Chromecast receiver application.\n *\n * @static\n * @type {Boolean}\n */\nconst IS_CHROMECAST_RECEIVER = Boolean(window$1.cast && window$1.cast.framework && window$1.cast.framework.CastReceiverContext);\n\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */\nlet IE_VERSION = null;\n\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_SAFARI = false;\n\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_WINDOWS = false;\n\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_IPAD = false;\n\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nlet IS_IPHONE = false;\n\n/**\n * Whether or not this is a Tizen device.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_TIZEN = false;\n\n/**\n * Whether or not this is a WebOS device.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_WEBOS = false;\n\n/**\n * Whether or not this is a Smart TV (Tizen or WebOS) device.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_SMART_TV = false;\n\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch));\nconst UAD = window$1.navigator && window$1.navigator.userAgentData;\nif (UAD && UAD.platform && UAD.brands) {\n  // If userAgentData is present, use it instead of userAgent to avoid warnings\n  // Currently only implemented on Chromium\n  // userAgentData does not expose Android version, so ANDROID_VERSION remains `null`\n\n  IS_ANDROID = UAD.platform === 'Android';\n  IS_EDGE = Boolean(UAD.brands.find(b => b.brand === 'Microsoft Edge'));\n  IS_CHROMIUM = Boolean(UAD.brands.find(b => b.brand === 'Chromium'));\n  IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n  CHROMIUM_VERSION = CHROME_VERSION = (UAD.brands.find(b => b.brand === 'Chromium') || {}).version || null;\n  IS_WINDOWS = UAD.platform === 'Windows';\n}\n\n// If the browser is not Chromium, either userAgentData is not present which could be an old Chromium browser,\n//  or it's a browser that has added userAgentData since that we don't have tests for yet. In either case,\n// the checks need to be made agiainst the regular userAgent string.\nif (!IS_CHROMIUM) {\n  const USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\n  IS_IPOD = /iPod/i.test(USER_AGENT);\n  IOS_VERSION = function () {\n    const match = USER_AGENT.match(/OS (\\d+)_/i);\n    if (match && match[1]) {\n      return match[1];\n    }\n    return null;\n  }();\n  IS_ANDROID = /Android/i.test(USER_AGENT);\n  ANDROID_VERSION = function () {\n    // This matches Android Major.Minor.Patch versions\n    // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n    const match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n    if (!match) {\n      return null;\n    }\n    const major = match[1] && parseFloat(match[1]);\n    const minor = match[2] && parseFloat(match[2]);\n    if (major && minor) {\n      return parseFloat(match[1] + '.' + match[2]);\n    } else if (major) {\n      return major;\n    }\n    return null;\n  }();\n  IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n  IS_EDGE = /Edg/i.test(USER_AGENT);\n  IS_CHROMIUM = /Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT);\n  IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n  CHROMIUM_VERSION = CHROME_VERSION = function () {\n    const match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n    if (match && match[2]) {\n      return parseFloat(match[2]);\n    }\n    return null;\n  }();\n  IE_VERSION = function () {\n    const result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n    let version = result && parseFloat(result[1]);\n    if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n      // IE 11 has a different user agent string than other IE versions\n      version = 11.0;\n    }\n    return version;\n  }();\n  IS_TIZEN = /Tizen/i.test(USER_AGENT);\n  IS_WEBOS = /Web0S/i.test(USER_AGENT);\n  IS_SMART_TV = IS_TIZEN || IS_WEBOS;\n  IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE && !IS_SMART_TV;\n  IS_WINDOWS = /Windows/i.test(USER_AGENT);\n  IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n  IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n}\n\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar browser = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  get IS_IPOD () { return IS_IPOD; },\n  get IOS_VERSION () { return IOS_VERSION; },\n  get IS_ANDROID () { return IS_ANDROID; },\n  get ANDROID_VERSION () { return ANDROID_VERSION; },\n  get IS_FIREFOX () { return IS_FIREFOX; },\n  get IS_EDGE () { return IS_EDGE; },\n  get IS_CHROMIUM () { return IS_CHROMIUM; },\n  get IS_CHROME () { return IS_CHROME; },\n  get CHROMIUM_VERSION () { return CHROMIUM_VERSION; },\n  get CHROME_VERSION () { return CHROME_VERSION; },\n  IS_CHROMECAST_RECEIVER: IS_CHROMECAST_RECEIVER,\n  get IE_VERSION () { return IE_VERSION; },\n  get IS_SAFARI () { return IS_SAFARI; },\n  get IS_WINDOWS () { return IS_WINDOWS; },\n  get IS_IPAD () { return IS_IPAD; },\n  get IS_IPHONE () { return IS_IPHONE; },\n  get IS_TIZEN () { return IS_TIZEN; },\n  get IS_WEBOS () { return IS_WEBOS; },\n  get IS_SMART_TV () { return IS_SMART_TV; },\n  TOUCH_ENABLED: TOUCH_ENABLED,\n  IS_IOS: IS_IOS,\n  IS_ANY_SAFARI: IS_ANY_SAFARI\n});\n\n/**\n * @file dom.js\n * @module dom\n */\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\nfunction isNonBlankString(str) {\n  // we use str.trim as it will trim any whitespace characters\n  // from the front or back of non-whitespace characters. aka\n  // Any string that contains non-whitespace characters will\n  // still contain them after `trim` but whitespace only strings\n  // will have a length of 0, failing this check.\n  return typeof str === 'string' && Boolean(str.trim());\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\nfunction throwIfWhitespace(str) {\n  // str.indexOf instead of regex because str.indexOf is faster performance wise.\n  if (str.indexOf(' ') >= 0) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document$1 === window$1.document;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {*} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document$1[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document$1.querySelector(context);\n    }\n    const ctx = isEl(context) ? context : document$1;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {ContentDescriptor} [content]\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl(tagName = 'div', properties = {}, attributes = {}, content) {\n  const el = document$1.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    const val = properties[propName];\n\n    // Handle textContent since it's not supported everywhere and we have a\n    // method for it.\n    if (propName === 'textContent') {\n      textContent(el, val);\n    } else if (el[propName] !== val || propName === 'tabIndex') {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n  if (content) {\n    appendContent(el, content);\n  }\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {HTMLElement} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  return element.classList.contains(classToCheck);\n}\n\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {...string} classesToAdd\n *         One or more class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\nfunction addClass(element, ...classesToAdd) {\n  element.classList.add(...classesToAdd.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n  return element;\n}\n\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {...string} classesToRemove\n *         One or more class name to remove.\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\nfunction removeClass(element, ...classesToRemove) {\n  // Protect in case the player gets disposed\n  if (!element) {\n    log$1.warn(\"removeClass was called with an element that doesn't exist\");\n    return null;\n  }\n  element.classList.remove(...classesToRemove.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n  return element;\n}\n\n/**\n * The callback definition for toggleClass.\n *\n * @callback PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`, but not removed. If `false`, the `classToToggle` will be removed from\n *           the `element`, but not added. If `undefined`, the callback will be ignored.\n *\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n  if (typeof predicate !== 'boolean') {\n    predicate = undefined;\n  }\n  classToToggle.split(/\\s+/).forEach(className => element.classList.toggle(className, predicate));\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    const attrValue = attributes[attrName];\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\nfunction getAttributes(tag) {\n  const obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n  const knownBooleans = ['autoplay', 'controls', 'playsinline', 'loop', 'muted', 'default', 'defaultMuted'];\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    const attrs = tag.attributes;\n    for (let i = attrs.length - 1; i >= 0; i--) {\n      const attrName = attrs[i].name;\n      /** @type {boolean|string} */\n      let attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (knownBooleans.includes(attrName)) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n      obj[attrName] = attrVal;\n    }\n  }\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text.\n */\nfunction blockTextSelection() {\n  document$1.body.focus();\n  document$1.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking.\n */\nfunction unblockTextSelection() {\n  document$1.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    const rect = el.getBoundingClientRect();\n    const result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(k => {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n    return result;\n  }\n}\n\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  if (!el || el && !el.offsetParent) {\n    return {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  const width = el.offsetWidth;\n  const height = el.offsetHeight;\n  let left = 0;\n  let top = 0;\n  while (el.offsetParent && el !== document$1[FullscreenApi.fullscreenElement]) {\n    left += el.offsetLeft;\n    top += el.offsetTop;\n    el = el.offsetParent;\n  }\n  return {\n    left,\n    top,\n    width,\n    height\n  };\n}\n\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  const translated = {\n    x: 0,\n    y: 0\n  };\n  if (IS_IOS) {\n    let item = el;\n    while (item && item.nodeName.toLowerCase() !== 'html') {\n      const transform = computedStyle(item, 'transform');\n      if (/^matrix/.test(transform)) {\n        const values = transform.slice(7, -1).split(/,\\s/).map(Number);\n        translated.x += values[4];\n        translated.y += values[5];\n      } else if (/^matrix3d/.test(transform)) {\n        const values = transform.slice(9, -1).split(/,\\s/).map(Number);\n        translated.x += values[12];\n        translated.y += values[13];\n      }\n      if (item.assignedSlot && item.assignedSlot.parentElement && window$1.WebKitCSSMatrix) {\n        const transformValue = window$1.getComputedStyle(item.assignedSlot.parentElement).transform;\n        const matrix = new window$1.WebKitCSSMatrix(transformValue);\n        translated.x += matrix.m41;\n        translated.y += matrix.m42;\n      }\n      item = item.parentNode || item.host;\n    }\n  }\n  const position = {};\n  const boxTarget = findPosition(event.target);\n  const box = findPosition(el);\n  const boxW = box.width;\n  const boxH = box.height;\n  let offsetY = event.offsetY - (box.top - boxTarget.top);\n  let offsetX = event.offsetX - (box.left - boxTarget.left);\n  if (event.changedTouches) {\n    offsetX = event.changedTouches[0].pageX - box.left;\n    offsetY = event.changedTouches[0].pageY + box.top;\n    if (IS_IOS) {\n      offsetX -= translated.x;\n      offsetY -= translated.y;\n    }\n  }\n  position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n  position.x = Math.max(0, Math.min(1, offsetX / boxW));\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {*} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `Text`     | A TextNode. The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|Text|Array|Function} ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(value => {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document$1.createTextNode(value);\n    }\n  }).filter(value => value);\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(node => el.appendChild(node));\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if an event was a single left click.\n *\n * @param  {MouseEvent} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n\n  // MacOS Sonoma trackpad when \"tap to click enabled\"\n  if (event.type === 'mousedown' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nconst $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\nconst $$ = createQuerier('querySelectorAll');\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n  if (typeof window$1.getComputedStyle === 'function') {\n    let computedStyleValue;\n    try {\n      computedStyleValue = window$1.getComputedStyle(el);\n    } catch (e) {\n      return '';\n    }\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n  }\n  return '';\n}\n\n/**\n * Copy document style sheets to another window.\n *\n * @param    {Window} win\n *           The window element you want to copy the document style sheets to.\n *\n */\nfunction copyStyleSheetsToWindow(win) {\n  [...document$1.styleSheets].forEach(styleSheet => {\n    try {\n      const cssRules = [...styleSheet.cssRules].map(rule => rule.cssText).join('');\n      const style = document$1.createElement('style');\n      style.textContent = cssRules;\n      win.document.head.appendChild(style);\n    } catch (e) {\n      const link = document$1.createElement('link');\n      link.rel = 'stylesheet';\n      link.type = styleSheet.type;\n      // For older Safari this has to be the string; on other browsers setting the MediaList works\n      link.media = styleSheet.media.mediaText;\n      link.href = styleSheet.href;\n      win.document.head.appendChild(link);\n    }\n  });\n}\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$,\n  computedStyle: computedStyle,\n  copyStyleSheetsToWindow: copyStyleSheetsToWindow\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nlet _windowLoaded = false;\nlet videojs$1;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nconst autoSetup = function () {\n  if (videojs$1.options.autoSetup === false) {\n    return;\n  }\n  const vids = Array.prototype.slice.call(document$1.getElementsByTagName('video'));\n  const audios = Array.prototype.slice.call(document$1.getElementsByTagName('audio'));\n  const divs = Array.prototype.slice.call(document$1.getElementsByTagName('video-js'));\n  const mediaEls = vids.concat(audios, divs);\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n    for (let i = 0, e = mediaEls.length; i < e; i++) {\n      const mediaEl = mediaEls[i];\n\n      // Check if element exists, has getAttribute func.\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          const options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs$1(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  // Protect against breakage in non-browser environments\n  if (!isReal()) {\n    return;\n  }\n  if (vjs) {\n    videojs$1 = vjs;\n  }\n  window$1.setTimeout(autoSetup, wait);\n}\n\n/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */\nfunction setWindowLoaded() {\n  _windowLoaded = true;\n  window$1.removeEventListener('load', setWindowLoaded);\n}\nif (isReal()) {\n  if (document$1.readyState === 'complete') {\n    setWindowLoaded();\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */\n    window$1.addEventListener('load', setWindowLoaded);\n  }\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM style element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nconst createStyleElement = function (className) {\n  const style = document$1.createElement('style');\n  style.className = className;\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nconst setTextContent = function (el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar DomData = new WeakMap();\n\n/**\n * @file guid.js\n * @module guid\n */\n\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\nconst _initialGuid = 3;\n\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\nlet _guid = _initialGuid;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  if (!DomData.has(elem)) {\n    return;\n  }\n  const data = DomData.get(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    DomData.delete(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string[]} types\n *        Type of event to bind to.\n *\n * @param {Function} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n  if (event.fixed_) {\n    return event;\n  }\n  function returnTrue() {\n    return true;\n  }\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped || !event.isImmediatePropagationStopped) {\n    const old = event || window$1.event;\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n\n    // TODO: Probably best to create an allowlist of event props\n    const deprecatedProps = ['layerX', 'layerY', 'keyLocation', 'path', 'webkitMovementX', 'webkitMovementY', 'mozPressure', 'mozInputSource'];\n    for (const key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      // Lighthouse complains if Event.path is copied\n      if (!deprecatedProps.includes(key)) {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document$1;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      const doc = document$1.documentElement;\n      const body = document$1.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n  event.fixed_ = true;\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nlet _supportsPassive;\nconst supportsPassive = function () {\n  if (typeof _supportsPassive !== 'boolean') {\n    _supportsPassive = false;\n    try {\n      const opts = Object.defineProperty({}, 'passive', {\n        get() {\n          _supportsPassive = true;\n        }\n      });\n      window$1.addEventListener('test', null, opts);\n      window$1.removeEventListener('test', null, opts);\n    } catch (e) {\n      // disregard\n    }\n  }\n  return _supportsPassive;\n};\n\n/**\n * Touch events Chrome expects to be passive\n */\nconst passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {Function} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n  if (!DomData.has(elem)) {\n    DomData.set(elem, {});\n  }\n  const data = DomData.get(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n  data.handlers[type].push(fn);\n  if (!data.dispatcher) {\n    data.disabled = false;\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n      event = fixEvent(event);\n      const handlers = data.handlers[event.type];\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        const handlersCopy = handlers.slice(0);\n        for (let m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      let options = false;\n      if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {Function} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!DomData.has(elem)) {\n    return;\n  }\n  const data = DomData.get(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  const removeType = function (el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (const t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n  const handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (let n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  const elemData = DomData.has(elem) ? DomData.get(elem) : {};\n  const parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    if (!DomData.has(event.target)) {\n      DomData.set(event.target, {});\n    }\n    const targetData = DomData.get(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  const func = function () {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\nfunction any(elem, type, fn) {\n  const func = function () {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n\n  // multiple ons, but one off for everything\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file fn.js\n * @module fn\n */\nconst UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * A private, internal-only function for changing the context of a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @private\n * @function\n * @param    {*} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\nconst bind_ = function (context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  const bound = fn.bind(context);\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\nconst throttle = function (fn, wait) {\n  let last = window$1.performance.now();\n  const throttled = function (...args) {\n    const now = window$1.performance.now();\n    if (now - last >= wait) {\n      fn(...args);\n      last = now;\n    }\n  };\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\nconst debounce$1 = function (func, wait, immediate, context = window$1) {\n  let timeout;\n  const cancel = () => {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n\n  /* eslint-disable consistent-this */\n  const debounced = function () {\n    const self = this;\n    const args = arguments;\n    let later = function () {\n      timeout = null;\n      later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\nvar Fn = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  UPDATE_REFRESH_INTERVAL: UPDATE_REFRESH_INTERVAL,\n  bind_: bind_,\n  throttle: throttle,\n  debounce: debounce$1\n});\n\n/**\n * @file src/js/event-target.js\n */\nlet EVENT_MAP;\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nclass EventTarget$2 {\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to call with `EventTarget`s\n   */\n  on(type, fn) {\n    // Remove the addEventListener alias before calling Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    on(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to remove.\n   */\n  off(type, fn) {\n    off(this, type, fn);\n  }\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  one(type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    one(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * This function will add an `event listener` that gets triggered only once and is\n   * removed from all events. This is like adding an array of `event listener`s\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on all events the\n   * first time it is triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  any(type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    any(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|EventTarget~Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   */\n  trigger(event) {\n    const type = event.type || event;\n\n    // deprecation\n    // In a future version we should default target to `this`\n    // similar to how we default the target to `elem` in\n    // `Events.trigger`. Right now the default `target` will be\n    // `document` due to the `Event.fixEvent` call.\n    if (typeof event === 'string') {\n      event = {\n        type\n      };\n    }\n    event = fixEvent(event);\n    if (this.allowedEvents_[type] && this['on' + type]) {\n      this['on' + type](event);\n    }\n    trigger(this, event);\n  }\n  queueTrigger(event) {\n    // only set up EVENT_MAP if it'll be used\n    if (!EVENT_MAP) {\n      EVENT_MAP = new Map();\n    }\n    const type = event.type || event;\n    let map = EVENT_MAP.get(this);\n    if (!map) {\n      map = new Map();\n      EVENT_MAP.set(this, map);\n    }\n    const oldTimeout = map.get(type);\n    map.delete(type);\n    window$1.clearTimeout(oldTimeout);\n    const timeout = window$1.setTimeout(() => {\n      map.delete(type);\n      // if we cleared out all timeouts for the current target, delete its map\n      if (map.size === 0) {\n        map = null;\n        EVENT_MAP.delete(this);\n      }\n      this.trigger(event);\n    }, 0);\n    map.set(type, timeout);\n  }\n}\n\n/**\n * A Custom DOM event.\n *\n * @typedef {CustomEvent} Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventListener\n * @this {EventTarget}\n *\n * @param {Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @protected\n */\nEventTarget$2.prototype.allowedEvents_ = {};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget$2.prototype.addEventListener = EventTarget$2.prototype.on;\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget$2.prototype.removeEventListener = EventTarget$2.prototype.off;\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget$2.prototype.dispatchEvent = EventTarget$2.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\nconst objName = obj => {\n  if (typeof obj.name === 'function') {\n    return obj.name();\n  }\n  if (typeof obj.name === 'string') {\n    return obj.name;\n  }\n  if (obj.name_) {\n    return obj.name_;\n  }\n  if (obj.constructor && obj.constructor.name) {\n    return obj.constructor.name;\n  }\n  return typeof obj;\n};\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nconst isEvented = object => object instanceof EventTarget$2 || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(k => typeof object[k] === 'function');\n\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} target\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\nconst addEventedCallback = (target, callback) => {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n    target.eventedCallbacks.push(callback);\n  }\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nconst isValidEventType = type =>\n// The regex here verifies that the `type` contains at least one non-\n// whitespace character.\ntypeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length;\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateTarget = (target, obj, fnName) => {\n  if (!target || !target.nodeName && !isEvented(target)) {\n    throw new Error(`Invalid target for ${objName(obj)}#${fnName}; must be a DOM node or evented object.`);\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n *\n * @param  {Object} obj\n*         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateEventType = (type, obj, fnName) => {\n  if (!isValidEventType(type)) {\n    throw new Error(`Invalid event type for ${objName(obj)}#${fnName}; must be a non-empty string or array.`);\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateListener = (listener, obj, fnName) => {\n  if (typeof listener !== 'function') {\n    throw new Error(`Invalid listener for ${objName(obj)}#${fnName}; must be a function.`);\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nconst normalizeListenArgs = (self, args, fnName) => {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  const isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  let target;\n  let type;\n  let listener;\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n    [type, listener] = args;\n  } else {\n    // This was `[target, type, listener] = args;` but this block needs more than\n    // one statement to produce minified output compatible with Chrome 53.\n    // See https://github.com/videojs/video.js/pull/8810\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n  validateTarget(target, self, fnName);\n  validateEventType(type, self, fnName);\n  validateListener(listener, self, fnName);\n  listener = bind_(self, listener);\n  return {\n    isTargetingSelf,\n    target,\n    type,\n    listener\n  };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nconst listen = (target, method, type, listener) => {\n  validateTarget(target, target, method);\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nconst EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'on');\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      const removeListenerOnDispose = () => this.off(target, type, listener);\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      const removeRemoverOnTargetDispose = () => this.off('dispose', removeListenerOnDispose);\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'one');\n\n    // Targeting this evented object.\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listeners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      const wrapper = (...largs) => {\n        this.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'any');\n\n    // Targeting this evented object.\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      const wrapper = (...largs) => {\n        this.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      const target = targetOrType;\n      const type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target, this, 'off');\n      validateEventType(type, this, 'off');\n      validateListener(listener, this, 'off');\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind_(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger(event, hash) {\n    validateTarget(this.eventBusEl_, this, 'trigger');\n    const type = event && typeof event !== 'string' ? event.type : event;\n    if (!isValidEventType(type)) {\n      throw new Error(`Invalid event type for ${objName(this)}#trigger; ` + 'must be a non-empty string or object with a type key that has a non-empty value.');\n    }\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target, options = {}) {\n  const {\n    eventBusKey\n  } = options;\n\n  // Set or create the eventBusEl_.\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(`The eventBusKey \"${eventBusKey}\" does not refer to an element.`);\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n  Object.assign(target, EventedMixin);\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(callback => {\n      callback();\n    });\n  }\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', () => {\n    target.off();\n    [target, target.el_, target.eventBusEl_].forEach(function (val) {\n      if (val && DomData.has(val)) {\n        DomData.delete(val);\n      }\n    });\n    window$1.setTimeout(() => {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nconst StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState(stateUpdates) {\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n    let changes;\n    each(stateUpdates, (value, key) => {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: this.state[key],\n          to: value\n        };\n      }\n      this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes,\n        type: 'statechanged'\n      });\n    }\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  Object.assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = Object.assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n  return target;\n}\n\n/**\n * @file str.js\n * @module to-lower-case\n */\n\n/**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */\nconst toLowerCase = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toLowerCase());\n};\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nconst toTitleCase$1 = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toUpperCase());\n};\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nconst titleCaseEquals = function (str1, str2) {\n  return toTitleCase$1(str1) === toTitleCase$1(str2);\n};\n\nvar Str = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  toLowerCase: toLowerCase,\n  toTitleCase: toTitleCase$1,\n  titleCaseEquals: titleCaseEquals\n});\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/** @import Player from './player' */\n\n/**\n * A callback to be called if and when the component is ready.\n * `this` will be the Component instance.\n *\n * @callback ReadyCallback\n * @returns  {void}\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\nclass Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of component options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to initialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   * @param {ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  constructor(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n    this.isDisposed_ = false;\n\n    // Hold the reference to the parent component via `addChild` method\n    this.parentComponent_ = null;\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = merge$1({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = merge$1(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      const id = player && player.id && player.id() || 'no_player';\n      this.id_ = `${id}_component_${newGUID()}`;\n    }\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n    if (options.className && this.el_) {\n      options.className.split(' ').forEach(c => this.addClass(c));\n    }\n\n    // Remove the placeholder event methods. If the component is evented, the\n    // real methods are added next\n    ['on', 'off', 'one', 'any', 'trigger'].forEach(fn => {\n      this[fn] = undefined;\n    });\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n      this.handleLanguagechange = this.handleLanguagechange.bind(this);\n      this.on(this.player_, 'languagechange', this.handleLanguagechange);\n    }\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n    this.setTimeoutIds_ = new Set();\n    this.setIntervalIds_ = new Set();\n    this.rafIds_ = new Set();\n    this.namedRafs_ = new Map();\n    this.clearingTimersOnDispose_ = false;\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    // Don't want to trigger ready here or it will go before init is actually\n    // finished for all children that run this constructor\n    this.ready(ready);\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  // `on`, `off`, `one`, `any` and `trigger` are here so tsc includes them in definitions.\n  // They are replaced or removed in the constructor\n\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to call with `EventTarget`s\n   */\n\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} [fn]\n   *        The function to remove. If not specified, all listeners managed by Video.js will be removed.\n   */\n\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n\n  /**\n   * This function will add an `event listener` that gets triggered only once and is\n   * removed from all events. This is like adding an array of `event listener`s\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on all events the\n   * first time it is triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   *\n   * @param {Object} [hash]\n   *        Optionally extra argument to pass through to an event listener\n   */\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   *\n   * @param {Object} options\n   * @param {Element} options.originalEl element with which to replace player element\n   */\n  dispose(options = {}) {\n    // Bail out if the component has already been disposed.\n    if (this.isDisposed_) {\n      return;\n    }\n    if (this.readyQueue_) {\n      this.readyQueue_.length = 0;\n    }\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the dispose event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    });\n    this.isDisposed_ = true;\n\n    // Dispose all children.\n    if (this.children_) {\n      for (let i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        if (options.restoreEl) {\n          this.el_.parentNode.replaceChild(options.restoreEl, this.el_);\n        } else {\n          this.el_.parentNode.removeChild(this.el_);\n        }\n      }\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  }\n\n  /**\n   * Determine whether or not this component has been disposed.\n   *\n   * @return {boolean}\n   *         If the component has been disposed, will be `true`. Otherwise, `false`.\n   */\n  isDisposed() {\n    return Boolean(this.isDisposed_);\n  }\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  player() {\n    return this.player_;\n  }\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:obj.merge}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n    this.options_ = merge$1(this.options_, obj);\n    return this.options_;\n  }\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  el() {\n    return this.el_;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  localize(string, tokens, defaultValue = string) {\n    const code = this.player_.language && this.player_.language();\n    const languages = this.player_.languages && this.player_.languages();\n    const language = languages && languages[code];\n    const primaryCode = code && code.split('-')[0];\n    const primaryLang = languages && languages[primaryCode];\n    let localizedString = defaultValue;\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        const value = tokens[index - 1];\n        let ret = value;\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n        return ret;\n      });\n    }\n    return localizedString;\n  }\n\n  /**\n   * Handles language change for the player in components. Should be overridden by sub-components.\n   *\n   * @abstract\n   */\n  handleLanguagechange() {}\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  id() {\n    return this.id_;\n  }\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  name() {\n    return this.name_;\n  }\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  children() {\n    return this.children_;\n  }\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  getChildById(id) {\n    return this.childIndex_[id];\n  }\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  getChild(name) {\n    if (!name) {\n      return;\n    }\n    return this.childNameIndex_[name];\n  }\n\n  /**\n   * Returns the descendant `Component` following the givent\n   * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n   * try to get 'foo' on the current component, 'bar' on the 'foo'\n   * component and 'baz' on the 'bar' component and return undefined\n   * if any of those don't exist.\n   *\n   * @param {...string[]|...string} names\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The descendant `Component` following the given descendant\n   *         `names` or undefined.\n   */\n  getDescendant(...names) {\n    // flatten array argument into the main array\n    names = names.reduce((acc, n) => acc.concat(n), []);\n    let currentChild = this;\n    for (let i = 0; i < names.length; i++) {\n      currentChild = currentChild.getChild(names[i]);\n      if (!currentChild || !currentChild.getChild) {\n        return;\n      }\n    }\n    return currentChild;\n  }\n\n  /**\n   * Adds an SVG icon element to another element or component.\n   *\n   * @param {string} iconName\n   *        The name of icon. A list of all the icon names can be found at 'sandbox/svg-icons.html'\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on. Defaults to the current Component's element.\n   *\n   * @return {Element}\n   *        The newly created icon element.\n   */\n  setIcon(iconName, el = this.el()) {\n    // TODO: In v9 of video.js, we will want to remove font icons entirely.\n    // This means this check, as well as the others throughout the code, and\n    // the unecessary CSS for font icons, will need to be removed.\n    // See https://github.com/videojs/video.js/pull/8260 as to which components\n    // need updating.\n    if (!this.player_.options_.experimentalSvgIcons) {\n      return;\n    }\n    const xmlnsURL = 'http://www.w3.org/2000/svg';\n\n    // The below creates an element in the format of:\n    // <span><svg><use>....</use></svg></span>\n    const iconContainer = createEl('span', {\n      className: 'vjs-icon-placeholder vjs-svg-icon'\n    }, {\n      'aria-hidden': 'true'\n    });\n    const svgEl = document$1.createElementNS(xmlnsURL, 'svg');\n    svgEl.setAttributeNS(null, 'viewBox', '0 0 512 512');\n    const useEl = document$1.createElementNS(xmlnsURL, 'use');\n    svgEl.appendChild(useEl);\n    useEl.setAttributeNS(null, 'href', `#vjs-icon-${iconName}`);\n    iconContainer.appendChild(svgEl);\n\n    // Replace a pre-existing icon if one exists.\n    if (this.iconIsSet_) {\n      el.replaceChild(iconContainer, el.querySelector('.vjs-icon-placeholder'));\n    } else {\n      el.appendChild(iconContainer);\n    }\n    this.iconIsSet_ = true;\n    return iconContainer;\n  }\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  addChild(child, options = {}, index = this.children_.length) {\n    let component;\n    let componentName;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase$1(child);\n      const componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      const ComponentClass = Component$1.getComponent(componentClassName);\n      if (!ComponentClass) {\n        throw new Error(`Component ${componentClassName} does not exist`);\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase$1(component.name());\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n      this.childNameIndex_[toLowerCase(componentName)] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      // If inserting before a component, insert before that component's element\n      let refNode = null;\n      if (this.children_[index + 1]) {\n        // Most children are components, but the video tech is an HTML element\n        if (this.children_[index + 1].el_) {\n          refNode = this.children_[index + 1].el_;\n        } else if (isEl(this.children_[index + 1])) {\n          refNode = this.children_[index + 1];\n        }\n      }\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  }\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n    if (!component || !this.children_) {\n      return;\n    }\n    let childFound = false;\n    for (let i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n    if (!childFound) {\n      return;\n    }\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[toTitleCase$1(component.name())] = null;\n    this.childNameIndex_[toLowerCase(component.name())] = null;\n    const compEl = component.el();\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  initChildren() {\n    const children = this.options_.children;\n    if (children) {\n      // `this` is `parent`\n      const parentOptions = this.options_;\n      const handleAdd = child => {\n        const name = child.name;\n        let opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        const newChild = this.addChild(name, opts);\n        if (newChild) {\n          this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      let workingChildren;\n      const Tech = Component$1.getComponent('Tech');\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(child => {\n        let name;\n        let opts;\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n        return {\n          name,\n          opts\n        };\n      }).filter(child => {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registered as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        const c = Component$1.getComponent(child.opts.componentClass || toTitleCase$1(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n\n  /**\n   * Builds the default DOM class name. Should be overridden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @param {ReadyCallback} fn\n   *        Function that gets called when the `Component` is ready.\n   */\n  ready(fn, sync = false) {\n    if (!fn) {\n      return;\n    }\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      const readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  }\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  $(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  $$(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  hasClass(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {...string} classesToAdd\n   *        One or more CSS class name to add.\n   */\n  addClass(...classesToAdd) {\n    addClass(this.el_, ...classesToAdd);\n  }\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {...string} classesToRemove\n   *        One or more CSS class name to remove.\n   */\n  removeClass(...classesToRemove) {\n    removeClass(this.el_, ...classesToRemove);\n  }\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove. Passed to DOMTokenList's toggle()\n   *\n   * @param  {boolean|Dom.PredicateCallback} [predicate]\n   *         A boolean or function that returns a boolean. Passed to DOMTokenList's toggle().\n   */\n  toggleClass(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  show() {\n    this.removeClass('vjs-hidden');\n  }\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  hide() {\n    this.addClass('vjs-hidden');\n  }\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attribute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  getAttribute(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  setAttribute(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  removeAttribute(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|undefined}\n   *         The width when getting, zero if there is no width\n   */\n  width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|undefined}\n   *         The height when getting, zero if there is no height\n   */\n  height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number|undefined}\n   *         The dimension when getting or 0 if unset\n   */\n  dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {Event}\n         */\n        this.trigger('componentresize');\n      }\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    const val = this.el_.style[widthOrHeight];\n    const pxIndex = val.indexOf('px');\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase$1(widthOrHeight)], 10);\n  }\n\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  currentDimension(widthOrHeight) {\n    let computedWidthOrHeight = 0;\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight);\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n      const rule = `offset${toTitleCase$1(widthOrHeight)}`;\n      computedWidthOrHeight = this.el_[rule];\n    }\n    return computedWidthOrHeight;\n  }\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  currentWidth() {\n    return this.currentDimension('width');\n  }\n\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  currentHeight() {\n    return this.currentDimension('height');\n  }\n\n  /**\n   * Retrieves the position and size information of the component's element.\n   *\n   * @return {Object} An object with `boundingClientRect` and `center` properties.\n   *         - `boundingClientRect`: An object with properties `x`, `y`, `width`,\n   *           `height`, `top`, `right`, `bottom`, and `left`, representing\n   *           the bounding rectangle of the element.\n   *         - `center`: An object with properties `x` and `y`, representing\n   *           the center point of the element. `width` and `height` are set to 0.\n   */\n  getPositions() {\n    const rect = this.el_.getBoundingClientRect();\n\n    // Creating objects that mirror DOMRectReadOnly for boundingClientRect and center\n    const boundingClientRect = {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left\n    };\n\n    // Calculating the center position\n    const center = {\n      x: rect.left + rect.width / 2,\n      y: rect.top + rect.height / 2,\n      width: 0,\n      height: 0,\n      top: rect.top + rect.height / 2,\n      right: rect.left + rect.width / 2,\n      bottom: rect.top + rect.height / 2,\n      left: rect.left + rect.width / 2\n    };\n    return {\n      boundingClientRect,\n      center\n    };\n  }\n\n  /**\n   * Set the focus to this component\n   */\n  focus() {\n    this.el_.focus();\n  }\n\n  /**\n   * Remove the focus from this component\n   */\n  blur() {\n    this.el_.blur();\n  }\n\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser. Exclude Tab for focus trapping, exclude also when spatialNavigation is enabled.\n      if (event.key !== 'Tab' && !(this.player_.options_.playerOptions.spatialNavigation && this.player_.options_.playerOptions.spatialNavigation.enabled)) {\n        event.stopPropagation();\n      }\n      this.player_.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {KeyboardEvent} event\n   *        The event that caused this function to be called.\n   */\n  handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @protected\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    let touchStart = 0;\n    let firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    const tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    const touchTimeThreshold = 200;\n    let couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = window$1.performance.now();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        const xdiff = event.touches[0].pageX - firstTouch.pageX;\n        const ydiff = event.touches[0].pageY - firstTouch.pageY;\n        const touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n    const noTap = function () {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        const touchTime = window$1.performance.now() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {MouseEvent}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    const report = bind_(this.player(), this.player().reportUserActivity);\n    let touchHolding;\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n    const touchEnd = function (event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  setTimeout(fn, timeout) {\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId;\n    fn = bind_(this, fn);\n    this.clearTimersOnDispose_();\n    timeoutId = window$1.setTimeout(() => {\n      if (this.setTimeoutIds_.has(timeoutId)) {\n        this.setTimeoutIds_.delete(timeoutId);\n      }\n      fn();\n    }, timeout);\n    this.setTimeoutIds_.add(timeoutId);\n    return timeoutId;\n  }\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  clearTimeout(timeoutId) {\n    if (this.setTimeoutIds_.has(timeoutId)) {\n      this.setTimeoutIds_.delete(timeoutId);\n      window$1.clearTimeout(timeoutId);\n    }\n    return timeoutId;\n  }\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  setInterval(fn, interval) {\n    fn = bind_(this, fn);\n    this.clearTimersOnDispose_();\n    const intervalId = window$1.setInterval(fn, interval);\n    this.setIntervalIds_.add(intervalId);\n    return intervalId;\n  }\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an interval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  clearInterval(intervalId) {\n    if (this.setIntervalIds_.has(intervalId)) {\n      this.setIntervalIds_.delete(intervalId);\n      window$1.clearInterval(intervalId);\n    }\n    return intervalId;\n  }\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  requestAnimationFrame(fn) {\n    this.clearTimersOnDispose_();\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id;\n    fn = bind_(this, fn);\n    id = window$1.requestAnimationFrame(() => {\n      if (this.rafIds_.has(id)) {\n        this.rafIds_.delete(id);\n      }\n      fn();\n    });\n    this.rafIds_.add(id);\n    return id;\n  }\n\n  /**\n   * Request an animation frame, but only one named animation\n   * frame will be queued. Another will never be added until\n   * the previous one finishes.\n   *\n   * @param {string} name\n   *        The name to give this requestAnimationFrame\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   */\n  requestNamedAnimationFrame(name, fn) {\n    if (this.namedRafs_.has(name)) {\n      this.cancelNamedAnimationFrame(name);\n    }\n    this.clearTimersOnDispose_();\n    fn = bind_(this, fn);\n    const id = this.requestAnimationFrame(() => {\n      fn();\n      if (this.namedRafs_.has(name)) {\n        this.namedRafs_.delete(name);\n      }\n    });\n    this.namedRafs_.set(name, id);\n    return name;\n  }\n\n  /**\n   * Cancels a current named animation frame if it exists.\n   *\n   * @param {string} name\n   *        The name of the requestAnimationFrame to cancel.\n   */\n  cancelNamedAnimationFrame(name) {\n    if (!this.namedRafs_.has(name)) {\n      return;\n    }\n    this.cancelAnimationFrame(this.namedRafs_.get(name));\n    this.namedRafs_.delete(name);\n  }\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  cancelAnimationFrame(id) {\n    if (this.rafIds_.has(id)) {\n      this.rafIds_.delete(id);\n      window$1.cancelAnimationFrame(id);\n    }\n    return id;\n  }\n\n  /**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */\n  clearTimersOnDispose_() {\n    if (this.clearingTimersOnDispose_) {\n      return;\n    }\n    this.clearingTimersOnDispose_ = true;\n    this.one('dispose', () => {\n      [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(([idName, cancelName]) => {\n        // for a `Set` key will actually be the value again\n        // so forEach((val, val) =>` but for maps we want to use\n        // the key.\n        this[idName].forEach((val, key) => this[cancelName](key));\n      });\n      this.clearingTimersOnDispose_ = false;\n    });\n  }\n\n  /**\n    * Decide whether an element is actually disabled or not.\n    *\n    * @function isActuallyDisabled\n    * @param element {Node}\n    * @return {boolean}\n    *\n    * @see {@link https://html.spec.whatwg.org/multipage/semantics-other.html#concept-element-disabled}\n    */\n  getIsDisabled() {\n    return Boolean(this.el_.disabled);\n  }\n\n  /**\n    * Decide whether the element is expressly inert or not.\n    *\n    * @see {@link https://html.spec.whatwg.org/multipage/interaction.html#expressly-inert}\n    * @function isExpresslyInert\n    * @param element {Node}\n    * @return {boolean}\n    */\n  getIsExpresslyInert() {\n    return this.el_.inert && !this.el_.ownerDocument.documentElement.inert;\n  }\n\n  /**\n   * Determine whether or not this component can be considered as focusable component.\n   *\n   * @param {HTMLElement} el - The HTML element representing the component.\n   * @return {boolean}\n   *         If the component can be focused, will be `true`. Otherwise, `false`.\n   */\n  getIsFocusable(el) {\n    const element = el || this.el_;\n    return element.tabIndex >= 0 && !(this.getIsDisabled() || this.getIsExpresslyInert());\n  }\n\n  /**\n   * Determine whether or not this component is currently visible/enabled/etc...\n   *\n   * @param {HTMLElement} el - The HTML element representing the component.\n   * @return {boolean}\n   *         If the component can is currently visible & enabled, will be `true`. Otherwise, `false`.\n   */\n  getIsAvailableToBeFocused(el) {\n    /**\n     * Decide the style property of this element is specified whether it's visible or not.\n     *\n     * @function isVisibleStyleProperty\n     * @param element {CSSStyleDeclaration}\n     * @return {boolean}\n     */\n    function isVisibleStyleProperty(element) {\n      const elementStyle = window$1.getComputedStyle(element, null);\n      const thisVisibility = elementStyle.getPropertyValue('visibility');\n      const thisDisplay = elementStyle.getPropertyValue('display');\n      const invisibleStyle = ['hidden', 'collapse'];\n      return thisDisplay !== 'none' && !invisibleStyle.includes(thisVisibility);\n    }\n\n    /**\n     * Decide whether the element is being rendered or not.\n     * 1. If an element has the style as \"visibility: hidden | collapse\" or \"display: none\", it is not being rendered.\n     * 2. If an element has the style as \"opacity: 0\", it is not being rendered.(that is, invisible).\n     * 3. If width and height of an element are explicitly set to 0, it is not being rendered.\n     * 4. If a parent element is hidden, an element itself is not being rendered.\n     * (CSS visibility property and display property are inherited.)\n     *\n     * @see {@link https://html.spec.whatwg.org/multipage/rendering.html#being-rendered}\n     * @function isBeingRendered\n     * @param element {Node}\n     * @return {boolean}\n     */\n    function isBeingRendered(element) {\n      if (!isVisibleStyleProperty(element.parentElement)) {\n        return false;\n      }\n      if (!isVisibleStyleProperty(element) || element.style.opacity === '0' || window$1.getComputedStyle(element).height === '0px' || window$1.getComputedStyle(element).width === '0px') {\n        return false;\n      }\n      return true;\n    }\n\n    /**\n     * Determine if the element is visible for the user or not.\n     * 1. If an element sum of its offsetWidth, offsetHeight, height and width is less than 1 is not visible.\n     * 2. If elementCenter.x is less than is not visible.\n     * 3. If elementCenter.x is more than the document's width is not visible.\n     * 4. If elementCenter.y is less than 0 is not visible.\n     * 5. If elementCenter.y is the document's height is not visible.\n     *\n     * @function isVisible\n     * @param element {Node}\n     * @return {boolean}\n     */\n    function isVisible(element) {\n      if (element.offsetWidth + element.offsetHeight + element.getBoundingClientRect().height + element.getBoundingClientRect().width === 0) {\n        return false;\n      }\n\n      // Define elementCenter object with props of x and y\n      // x: Left position relative to the viewport plus element's width (no margin) divided between 2.\n      // y: Top position relative to the viewport plus element's height (no margin) divided between 2.\n      const elementCenter = {\n        x: element.getBoundingClientRect().left + element.offsetWidth / 2,\n        y: element.getBoundingClientRect().top + element.offsetHeight / 2\n      };\n      if (elementCenter.x < 0) {\n        return false;\n      }\n      if (elementCenter.x > (document$1.documentElement.clientWidth || window$1.innerWidth)) {\n        return false;\n      }\n      if (elementCenter.y < 0) {\n        return false;\n      }\n      if (elementCenter.y > (document$1.documentElement.clientHeight || window$1.innerHeight)) {\n        return false;\n      }\n      let pointContainer = document$1.elementFromPoint(elementCenter.x, elementCenter.y);\n      while (pointContainer) {\n        if (pointContainer === element) {\n          return true;\n        }\n        if (pointContainer.parentNode) {\n          pointContainer = pointContainer.parentNode;\n        } else {\n          return false;\n        }\n      }\n    }\n\n    // If no DOM element was passed as argument use this component's element.\n    if (!el) {\n      el = this.el();\n    }\n\n    // If element is visible, is being rendered & either does not have a parent element or its tabIndex is not negative.\n    if (isVisible(el) && isBeingRendered(el) && (!el.parentElement || el.tabIndex >= 0)) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  static registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(`Illegal component name, \"${name}\"; must be a non-empty string.`);\n    }\n    const Tech = Component$1.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    const isTech = Tech && Tech.isTech(ComponentToRegister);\n    const isComp = Component$1 === ComponentToRegister || Component$1.prototype.isPrototypeOf(ComponentToRegister.prototype);\n    if (isTech || !isComp) {\n      let reason;\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n      throw new Error(`Illegal component, \"${name}\"; ${reason}.`);\n    }\n    name = toTitleCase$1(name);\n    if (!Component$1.components_) {\n      Component$1.components_ = {};\n    }\n    const Player = Component$1.getComponent('Player');\n    if (name === 'Player' && Player && Player.players) {\n      const players = Player.players;\n      const playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(pname => players[pname]).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n    Component$1.components_[name] = ComponentToRegister;\n    Component$1.components_[toLowerCase(name)] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {typeof Component}\n   *         The `Component` that got registered under the given name.\n   */\n  static getComponent(name) {\n    if (!name || !Component$1.components_) {\n      return;\n    }\n    return Component$1.components_[name];\n  }\n}\nComponent$1.registerComponent('Component', Component$1);\n\n/**\n * @file time.js\n * @module time\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time, which mimics {@link TimeRanges}.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(`Failed to execute '${fnName}' on 'TimeRanges': The index provided (${index}) is non-numeric or out of bounds (0-${maxIndex}).`);\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n *\n * @return  {TimeRange}\n */\nfunction createTimeRangesObj(ranges) {\n  let timeRangesObj;\n  if (ranges === undefined || ranges.length === 0) {\n    timeRangesObj = {\n      length: 0,\n      start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  } else {\n    timeRangesObj = {\n      length: ranges.length,\n      start: getRange.bind(null, 'start', 0, ranges),\n      end: getRange.bind(null, 'end', 1, ranges)\n    };\n  }\n  if (window$1.Symbol && window$1.Symbol.iterator) {\n    timeRangesObj[window$1.Symbol.iterator] = () => (ranges || []).values();\n  }\n  return timeRangesObj;\n}\n\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n *\n * @return {TimeRange}\n */\nfunction createTimeRanges$1(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nconst defaultImplementation = function (seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  let s = Math.floor(seconds % 60);\n  let m = Math.floor(seconds / 60 % 60);\n  let h = Math.floor(seconds / 3600);\n  const gm = Math.floor(guide / 60 % 60);\n  const gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n};\n\n// Internal pointer to the current implementation.\nlet implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\nfunction formatTime(seconds, guide = seconds) {\n  return implementation(seconds, guide);\n}\n\nvar Time = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTimeRanges: createTimeRanges$1,\n  createTimeRange: createTimeRanges$1,\n  setFormatTime: setFormatTime,\n  resetFormatTime: resetFormatTime,\n  formatTime: formatTime\n});\n\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/** @import { TimeRange } from './time' */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRanges` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  let bufferedDuration = 0;\n  let start;\n  let end;\n  if (!duration) {\n    return 0;\n  }\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges$1(0, 0);\n  }\n  for (let i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n    bufferedDuration += end - start;\n  }\n  return bufferedDuration / duration;\n}\n\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n    Object.assign(this, value);\n  }\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * An object containing an error type, as well as other information regarding the error.\n *\n * @typedef {{errorType: string, [key: string]: any}} ErrorMetadata\n */\n\n/**\n * An optional object to give more detail about the error. This can be used to give\n * a higher level of specificity to an error versus the more generic MediaError codes.\n * `metadata` expects an `errorType` string that should align with the values from videojs.Error.\n *\n * @type {ErrorMetadata}\n */\nMediaError.prototype.metadata = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n/**\n * W3C error code for any custom error.\n *\n * @member MediaError#MEDIA_ERR_CUSTOM\n * @constant {number}\n * @default 0\n */\nMediaError.MEDIA_ERR_CUSTOM = 0;\n\n/**\n * W3C error code for any custom error.\n *\n * @member MediaError.MEDIA_ERR_CUSTOM\n * @constant {number}\n * @default 0\n */\nMediaError.prototype.MEDIA_ERR_CUSTOM = 0;\n\n/**\n * W3C error code for media error aborted.\n *\n * @member MediaError#MEDIA_ERR_ABORTED\n * @constant {number}\n * @default 1\n */\nMediaError.MEDIA_ERR_ABORTED = 1;\n\n/**\n * W3C error code for media error aborted.\n *\n * @member MediaError.MEDIA_ERR_ABORTED\n * @constant {number}\n * @default 1\n */\nMediaError.prototype.MEDIA_ERR_ABORTED = 1;\n\n/**\n * W3C error code for any network error.\n *\n * @member MediaError#MEDIA_ERR_NETWORK\n * @constant {number}\n * @default 2\n */\nMediaError.MEDIA_ERR_NETWORK = 2;\n\n/**\n * W3C error code for any network error.\n *\n * @member MediaError.MEDIA_ERR_NETWORK\n * @constant {number}\n * @default 2\n */\nMediaError.prototype.MEDIA_ERR_NETWORK = 2;\n\n/**\n * W3C error code for any decoding error.\n *\n * @member MediaError#MEDIA_ERR_DECODE\n * @constant {number}\n * @default 3\n */\nMediaError.MEDIA_ERR_DECODE = 3;\n\n/**\n * W3C error code for any decoding error.\n *\n * @member MediaError.MEDIA_ERR_DECODE\n * @constant {number}\n * @default 3\n */\nMediaError.prototype.MEDIA_ERR_DECODE = 3;\n\n/**\n * W3C error code for any time that a source is not supported.\n *\n * @member MediaError#MEDIA_ERR_SRC_NOT_SUPPORTED\n * @constant {number}\n * @default 4\n */\nMediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\n/**\n * W3C error code for any time that a source is not supported.\n *\n * @member MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED\n * @constant {number}\n * @default 4\n */\nMediaError.prototype.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\n/**\n * W3C error code for any time that a source is encrypted.\n *\n * @member MediaError#MEDIA_ERR_ENCRYPTED\n * @constant {number}\n * @default 5\n */\nMediaError.MEDIA_ERR_ENCRYPTED = 5;\n\n/**\n * W3C error code for any time that a source is encrypted.\n *\n * @member MediaError.MEDIA_ERR_ENCRYPTED\n * @constant {number}\n * @default 5\n */\nMediaError.prototype.MEDIA_ERR_ENCRYPTED = 5;\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, e => {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/** @import Tech from '../tech/tech' */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nconst trackToJson_ = function (track) {\n  const ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce((acc, prop, i) => {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nconst textTracksToJson = function (tech) {\n  const trackEls = tech.$$('track');\n  const trackObjs = Array.prototype.map.call(trackEls, t => t.track);\n  const tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    const json = trackToJson_(trackEl.track);\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nconst jsonToTextTracks = function (json, tech) {\n  json.forEach(function (track) {\n    const addedTrack = tech.addRemoteTextTrack(track).track;\n    if (!track.src && track.cues) {\n      track.cues.forEach(cue => addedTrack.addCue(cue));\n    }\n  });\n  return tech.textTracks();\n};\nvar textTrackConverter = {\n  textTracksToJson,\n  jsonToTextTracks,\n  trackToJson_\n};\n\n/**\n * @file modal-dialog.js\n */\n\n/** @import Player from './player' */\n/** @import { ContentDescriptor } from './utils/dom' */\n\nconst MODAL_CLASS_NAME = 'vjs-modal-dialog';\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\nclass ModalDialog extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {ContentDescriptor} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.close_ = e => this.close(e);\n    this.opened_ = this.hasBeenOpened_ = this.hasBeenFilled_ = false;\n    this.closeable(!this.options_.uncloseable);\n    this.content(this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    this.contentEl_ = createEl('div', {\n      className: `${MODAL_CLASS_NAME}-content`\n    }, {\n      role: 'document'\n    });\n    this.descEl_ = createEl('p', {\n      className: `${MODAL_CLASS_NAME}-description vjs-control-text`,\n      id: this.el().getAttribute('aria-describedby')\n    });\n    textContent(this.descEl_, this.description());\n    this.el_.appendChild(this.descEl_);\n    this.el_.appendChild(this.contentEl_);\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': `${this.id()}_description`,\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog',\n      'aria-live': 'polite'\n    });\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `${MODAL_CLASS_NAME} vjs-hidden ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  description() {\n    let desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n    return desc;\n  }\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  open() {\n    if (this.opened_) {\n      if (this.options_.fillAlways) {\n        this.fill();\n      }\n      return;\n    }\n    const player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is opened.\n      *\n      * @event ModalDialog#beforemodalopen\n      * @type {Event}\n      */\n    this.trigger('beforemodalopen');\n    this.opened_ = true;\n\n    // Fill content if the modal has never opened before and\n    // never been filled.\n    if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n      this.fill();\n    }\n\n    // If the player was playing, pause it and take note of its previously\n    // playing state.\n    this.wasPlaying_ = !player.paused();\n    if (this.options_.pauseOnOpen && this.wasPlaying_) {\n      player.pause();\n    }\n    this.on('keydown', this.handleKeyDown_);\n\n    // Hide controls and note if they were enabled.\n    this.hadControls_ = player.controls();\n    player.controls(false);\n    this.show();\n    this.conditionalFocus_();\n    this.el().setAttribute('aria-hidden', 'false');\n\n    /**\n      * Fired just after a `ModalDialog` is opened.\n      *\n      * @event ModalDialog#modalopen\n      * @type {Event}\n      */\n    this.trigger('modalopen');\n    this.hasBeenOpened_ = true;\n  }\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  }\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  close() {\n    if (!this.opened_) {\n      return;\n    }\n    const player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n    this.off('keydown', this.handleKeyDown_);\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {Event}\n      *\n      * @property {boolean} [bubbles=true]\n      */\n    this.trigger({\n      type: 'modalclose',\n      bubbles: true\n    });\n    this.conditionalBlur_();\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  closeable(value) {\n    if (typeof value === 'boolean') {\n      const closeable = this.closeable_ = !!value;\n      let close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        const temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close_);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close_);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  }\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  fill() {\n    this.fillWith(this.content());\n  }\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {ContentDescriptor} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  fillWith(content) {\n    const contentEl = this.contentEl();\n    const parentEl = contentEl.parentNode;\n    const nextSiblingEl = contentEl.nextSibling;\n\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {Event}\n      */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    const closeButton = this.getChild('closeButton');\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n\n    /**\n     * Fired after `ModalDialog` is re-filled with content & close button is appended.\n     *\n     * @event ModalDialog#aftermodalfill\n     * @type {Event}\n     */\n    this.trigger('aftermodalfill');\n  }\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {Event}\n    */\n    this.trigger('modalempty');\n  }\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {ContentDescriptor} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {ContentDescriptor}\n   *         The current content of the modal dialog\n   */\n  content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  }\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  conditionalFocus_() {\n    const activeEl = document$1.activeElement;\n    const playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    /**\n     * Fired a custom keyDown event that bubbles.\n     *\n     * @event ModalDialog#modalKeydown\n     * @type {Event}\n     */\n    this.trigger({\n      type: 'modalKeydown',\n      originalEvent: event,\n      target: this,\n      bubbles: true\n    });\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n    if (event.key === 'Escape' && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    }\n\n    // exit early if it isn't a tab key\n    if (event.key !== 'Tab') {\n      return;\n    }\n    const focusableEls = this.focusableEls_();\n    const activeEl = this.el_.querySelector(':focus');\n    let focusIndex;\n    for (let i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n    if (document$1.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  focusableEls_() {\n    const allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, child => {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  }\n}\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent$1.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n\n/** @import Track from './track' */\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\nclass TrackList extends EventTarget$2 {\n  /**\n   * Create an instance of this class\n   *\n   * @param { Track[] } tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  constructor(tracks = []) {\n    super();\n    this.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.tracks_.length;\n      }\n    });\n    for (let i = 0; i < tracks.length; i++) {\n      this.addTrack(tracks[i]);\n    }\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    const index = this.tracks_.length;\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n\n    /**\n     * Triggered when a track label is changed.\n     *\n     * @event TrackList#addtrack\n     * @type {Event}\n     * @property {Track} track\n     *           A reference to track that was added.\n     */\n    track.labelchange_ = () => {\n      this.trigger({\n        track,\n        type: 'labelchange',\n        target: this\n      });\n    };\n    if (isEvented(track)) {\n      track.addEventListener('labelchange', track.labelchange_);\n    }\n  }\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  removeTrack(rtrack) {\n    let track;\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  getTrackById(id) {\n    let result = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      const track = this[i];\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @protected\n */\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack',\n  labelchange: 'labelchange'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (const event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n\n/** @import AudioTrack from './audio-track' */\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nconst disableOthers$1 = function (list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\nclass AudioTrackList extends TrackList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  constructor(tracks = []) {\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n    super(tracks);\n    this.changing_ = false;\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    if (track.enabled) {\n      disableOthers$1(this, track);\n    }\n    super.addTrack(track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n    track.enabledChange_ = () => {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (this.changing_) {\n        return;\n      }\n      this.changing_ = true;\n      disableOthers$1(this, track);\n      this.changing_ = false;\n      this.trigger('change');\n    };\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', track.enabledChange_);\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  }\n}\n\n/**\n * @file video-track-list.js\n */\n\n/** @import VideoTrack from './video-track' */\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nconst disableOthers = function (list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\nclass VideoTrackList extends TrackList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  constructor(tracks = []) {\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n    super(tracks);\n    this.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(this, 'selectedIndex', {\n      get() {\n        for (let i = 0; i < this.length; i++) {\n          if (this[i].selected) {\n            return i;\n          }\n        }\n        return -1;\n      },\n      set() {}\n    });\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    if (track.selected) {\n      disableOthers(this, track);\n    }\n    super.addTrack(track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n    track.selectedChange_ = () => {\n      if (this.changing_) {\n        return;\n      }\n      this.changing_ = true;\n      disableOthers(this, track);\n      this.changing_ = false;\n      this.trigger('change');\n    };\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', track.selectedChange_);\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  }\n}\n\n/**\n * @file text-track-list.js\n */\n\n/** @import TextTrack from './text-track' */\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\nclass TextTrackList extends TrackList {\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    super.addTrack(track);\n    if (!this.queueChange_) {\n      this.queueChange_ = () => this.queueTrigger('change');\n    }\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = () => this.trigger('selectedlanguagechange');\n    }\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', this.queueChange_);\n    const nonLanguageTextTrackKind = ['metadata', 'chapters'];\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n\n    // manually remove the event handlers we added\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  }\n}\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nclass HtmlTrackElementList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  constructor(trackElements = []) {\n    this.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.trackElements_.length;\n      }\n    });\n    for (let i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n  addTrackElement_(trackElement) {\n    const index = this.trackElements_.length;\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  getTrackElementByTrack_(track) {\n    let trackElement_;\n    for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n    return trackElement_;\n  }\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  removeTrackElement_(trackElement) {\n    for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nclass TextTrackCueList {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  constructor(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.length_;\n      }\n    });\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n  setCues_(cues) {\n    const oldLength = this.length || 0;\n    let i = 0;\n    const l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n    const defineProp = function (index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n    if (oldLength < l) {\n      i = oldLength;\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  getCueById(id) {\n    let result = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      const cue = this[i];\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nconst VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nconst AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nconst TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nconst TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\nclass Track extends EventTarget$2 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  constructor(options = {}) {\n    super();\n    const trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      language: options.language || ''\n    };\n    let label = options.label || '';\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    for (const key in trackProps) {\n      Object.defineProperty(this, key, {\n        get() {\n          return trackProps[key];\n        },\n        set() {}\n      });\n    }\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @fires Track#labelchange\n     */\n    Object.defineProperty(this, 'label', {\n      get() {\n        return label;\n      },\n      set(newLabel) {\n        if (newLabel !== label) {\n          label = newLabel;\n\n          /**\n           * An event that fires when label changes on this track.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event Track#labelchange\n           * @type {Event}\n           */\n          this.trigger('labelchange');\n        }\n      }\n    });\n  }\n}\n\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {string} url\n *           The url to parse\n *\n * @return   {URL}\n *           An object of url details\n */\nconst parseUrl = function (url) {\n  return new URL(url, document$1.baseURI);\n};\n\n/**\n * Get absolute version of relative URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n */\nconst getAbsoluteURL = function (url) {\n  return new URL(url, document$1.baseURI).href;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\nconst getFileExtension = function (path) {\n  if (typeof path === 'string') {\n    const splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n    const pathParts = splitPathRe.exec(path);\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @param    {URL} [winLoc]\n *           the domain to check the url against, defaults to window.location\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\nconst isCrossOrigin = function (url, winLoc = window$1.location) {\n  return parseUrl(url).origin !== winLoc.origin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n\n/** @import Tech from '../tech/tech' */\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nconst parseCues = function (srcContent, track) {\n  const parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  const errors = [];\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(`Text Track parsing errors for ${track.src}`);\n    }\n    errors.forEach(error => log$1.error(error));\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nconst loadTrack = function (src, track) {\n  const opts = {\n    uri: src\n  };\n  const crossOrigin = isCrossOrigin(src);\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n  const withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n  if (withCredentials) {\n    opts.withCredentials = withCredentials;\n  }\n  XHR(opts, bind_(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        track.tech_.any(['vttjsloaded', 'vttjserror'], event => {\n          if (event.type === 'vttjserror') {\n            log$1.error(`vttjs failed to load, stopping trying to process ${track.src}`);\n            return;\n          }\n          return parseCues(responseBody, track);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\nclass TextTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  constructor(options = {}) {\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n    const settings = merge$1(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    let mode = TextTrackMode[settings.mode] || 'disabled';\n    const default_ = settings.default;\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n    super(settings);\n    this.tech_ = settings.tech;\n    this.cues_ = [];\n    this.activeCues_ = [];\n    this.preload_ = this.tech_.preloadTextTracks !== false;\n    const cues = new TextTrackCueList(this.cues_);\n    const activeCues = new TextTrackCueList(this.activeCues_);\n    let changed = false;\n    this.timeupdateHandler = bind_(this, function (event = {}) {\n      if (this.tech_.isDisposed()) {\n        return;\n      }\n      if (!this.tech_.isReady_) {\n        if (event.type !== 'timeupdate') {\n          this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n        }\n        return;\n      }\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n      if (event.type !== 'timeupdate') {\n        this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n      }\n    });\n    const disposeHandler = () => {\n      this.stopTracking();\n    };\n    this.tech_.one('dispose', disposeHandler);\n    if (mode !== 'disabled') {\n      this.startTracking();\n    }\n    Object.defineProperties(this, {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get() {\n          return default_;\n        },\n        set() {}\n      },\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get() {\n          return mode;\n        },\n        set(newMode) {\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n          if (mode === newMode) {\n            return;\n          }\n          mode = newMode;\n          if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n            // On-demand load.\n            loadTrack(this.src, this);\n          }\n          this.stopTracking();\n          if (mode !== 'disabled') {\n            this.startTracking();\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {Event}\n           */\n          this.trigger('modechange');\n        }\n      },\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get() {\n          if (!this.loaded_) {\n            return null;\n          }\n          return cues;\n        },\n        set() {}\n      },\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          // nothing to do\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n          const ct = this.tech_.currentTime();\n          const active = [];\n          for (let i = 0, l = this.cues.length; i < l; i++) {\n            const cue = this.cues[i];\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            }\n          }\n          changed = false;\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (let i = 0; i < active.length; i++) {\n              if (this.activeCues_.indexOf(active[i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set() {}\n      }\n    });\n    if (settings.src) {\n      this.src = settings.src;\n      if (!this.preload_) {\n        // Tracks will load on-demand.\n        // Act like we're loaded for other purposes.\n        this.loaded_ = true;\n      }\n      if (this.preload_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n        loadTrack(this.src, this);\n      }\n    } else {\n      this.loaded_ = true;\n    }\n  }\n  startTracking() {\n    // More precise cues based on requestVideoFrameCallback with a requestAnimationFram fallback\n    this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n    // Also listen to timeupdate in case rVFC/rAF stops (window in background, audio in video el)\n    this.tech_.on('timeupdate', this.timeupdateHandler);\n  }\n  stopTracking() {\n    if (this.rvf_) {\n      this.tech_.cancelVideoFrameCallback(this.rvf_);\n      this.rvf_ = undefined;\n    }\n    this.tech_.off('timeupdate', this.timeupdateHandler);\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n  addCue(originalCue) {\n    let cue = originalCue;\n\n    // Testing if the cue is a VTTCue in a way that survives minification\n    if (!('getCueAsHTML' in cue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n      for (const prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n    const tracks = this.tech_.textTracks();\n    for (let i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  removeCue(removeCue) {\n    let i = this.cues_.length;\n    while (i--) {\n      const cue = this.cues_[i];\n      if (cue === removeCue || cue.originalCue_ && cue.originalCue_ === removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n *\n * @protected\n */\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\nclass AudioTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  constructor(options = {}) {\n    const settings = merge$1(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    super(settings);\n    let enabled = false;\n\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(this, 'enabled', {\n      get() {\n        return enabled;\n      },\n      set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      this.enabled = settings.enabled;\n    }\n    this.loaded_ = true;\n  }\n}\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\nclass VideoTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  constructor(options = {}) {\n    const settings = merge$1(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    super(settings);\n    let selected = false;\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(this, 'selected', {\n      get() {\n        return selected;\n      },\n      set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      this.selected = settings.selected;\n    }\n  }\n}\n\n/**\n * @file html-track-element.js\n */\n\n/** @import Tech from '../tech/tech' */\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\nclass HTMLTrackElement extends EventTarget$2 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  constructor(options = {}) {\n    super();\n    let readyState;\n    const track = new TextTrack(options);\n    this.kind = track.kind;\n    this.src = track.src;\n    this.srclang = track.language;\n    this.label = track.label;\n    this.default = track.default;\n    Object.defineProperties(this, {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get() {\n          return readyState;\n        }\n      },\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get() {\n          return track;\n        }\n      }\n    });\n    readyState = HTMLTrackElement.NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', () => {\n      readyState = HTMLTrackElement.LOADED;\n      this.trigger({\n        type: 'load',\n        target: this\n      });\n    });\n  }\n}\n\n/**\n * @protected\n */\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\n/**\n * The text track not loaded state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.NONE = 0;\n\n/**\n * The text track loading state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.LOADING = 1;\n\n/**\n * The text track loaded state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.LOADED = 2;\n\n/**\n * The text track failed to load state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.ERROR = 3;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nconst NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = `${type}Tracks`;\n  NORMAL[type].privateName = `${type}Tracks_`;\n});\nconst REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nconst ALL = Object.assign({}, NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/** @import { TimeRange } from '../utils/time' */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language, options = {}) {\n  const tracks = self.textTracks();\n  options.kind = kind;\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n  const track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link HTML5}\n *\n * @extends Component\n */\nclass Tech extends Component$1 {\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Function} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  constructor(options = {}, ready = function () {}) {\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    super(null, options, ready);\n    this.onDurationChange_ = e => this.onDurationChange(e);\n    this.trackProgress_ = e => this.trackProgress(e);\n    this.trackCurrentTime_ = e => this.trackCurrentTime(e);\n    this.stopTrackingCurrentTime_ = e => this.stopTrackingCurrentTime(e);\n    this.disposeSourceHandler_ = e => this.disposeSourceHandler(e);\n    this.queuedHanders_ = new Set();\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    this.hasStarted_ = false;\n    this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      if (options && options[props.getterName]) {\n        this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/tech doesn't report it.\n    if (!this.featuresProgressEvents) {\n      this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/tech doesn't report it.\n    if (!this.featuresTimeupdateEvents) {\n      this.manualTimeUpdatesOn();\n    }\n    ['Text', 'Audio', 'Video'].forEach(track => {\n      if (options[`native${track}Tracks`] === false) {\n        this[`featuresNative${track}Tracks`] = false;\n      }\n    });\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      this.featuresNativeTextTracks = true;\n    }\n    if (!this.featuresNativeTextTracks) {\n      this.emulateTextTracks();\n    }\n    this.preloadTextTracks = options.preloadTextTracks !== false;\n    this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n    this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      this.emitTapEvents();\n    }\n    if (this.constructor) {\n      this.name_ = this.constructor.name || 'Unknown Tech';\n    }\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n  triggerSourceset(src) {\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', () => this.setTimeout(() => this.triggerSourceset(src), 1));\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {Event}\n     */\n    this.trigger({\n      src,\n      type: 'sourceset'\n    });\n  }\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  manualProgressOn() {\n    this.on('durationchange', this.onDurationChange_);\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress_);\n  }\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange_);\n  }\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind_(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      const numBufferedPercent = this.bufferedPercent();\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {Event}\n         */\n        this.trigger('progress');\n      }\n      this.bufferedPercent_ = numBufferedPercent;\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  buffered() {\n    return createTimeRanges$1(0, 0);\n  }\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  bufferedPercent() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime_);\n    this.on('pause', this.stopTrackingCurrentTime_);\n  }\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime_);\n    this.off('pause', this.stopTrackingCurrentTime_);\n  }\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n    super.dispose();\n  }\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  clearTracks(types) {\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(type => {\n      const list = this[`${type}Tracks`]() || [];\n      let i = list.length;\n      while (i--) {\n        const track = list[i];\n        if (type === 'text') {\n          this.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  }\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  cleanupAutoTextTracks() {\n    const list = this.autoRemoteTextTracks_ || [];\n    let i = list.length;\n    while (i--) {\n      const track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  reset() {}\n\n  /**\n   * Get the value of `crossOrigin` from the tech.\n   *\n   * @abstract\n   *\n   * @see {Html5#crossOrigin}\n   */\n  crossOrigin() {}\n\n  /**\n   * Set the value of `crossOrigin` on the tech.\n   *\n   * @abstract\n   *\n   * @param {string} crossOrigin the crossOrigin value\n   * @see {Html5#setCrossOrigin}\n   */\n  setCrossOrigin() {}\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  }\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  played() {\n    if (this.hasStarted_) {\n      return createTimeRanges$1(0, 0);\n    }\n    return createTimeRanges$1();\n  }\n\n  /**\n   * Start playback\n   *\n   * @abstract\n   *\n   * @see {Html5#play}\n   */\n  play() {}\n\n  /**\n   * Set whether we are scrubbing or not\n   *\n   * @abstract\n   * @param {boolean} _isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   *\n   * @see {Html5#setScrubbing}\n   */\n  setScrubbing(_isScrubbing) {}\n\n  /**\n   * Get whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#scrubbing}\n   */\n  scrubbing() {}\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @param {number} _seconds\n   *        Set the current time of the media to this.\n   * @fires Tech#timeupdate\n   */\n  setCurrentTime(_seconds) {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  initTrackListeners() {\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {Event}\n      */\n    NORMAL.names.forEach(name => {\n      const props = NORMAL[name];\n      const trackListChanges = () => {\n        this.trigger(`${name}trackchange`);\n      };\n      const tracks = this[props.getterName]();\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n      this.on('dispose', () => {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  addWebVttScript_() {\n    if (window$1.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document$1.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      const script = document$1.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n      script.onload = () => {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {Event}\n         */\n        this.trigger('vttjsloaded');\n      };\n      script.onerror = () => {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {Event}\n         */\n        this.trigger('vttjserror');\n      };\n      this.on('dispose', () => {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n\n  /**\n   * Emulate texttracks\n   *\n   */\n  emulateTextTracks() {\n    const tracks = this.textTracks();\n    const remoteTracks = this.remoteTextTracks();\n    const handleAddTrack = e => tracks.addTrack(e.track);\n    const handleRemoveTrack = e => tracks.removeTrack(e.track);\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n    const updateDisplay = () => this.trigger('texttrackchange');\n    const textTracksChanges = () => {\n      updateDisplay();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n    return createTrackHelper(this, kind, label, language);\n  }\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  createRemoteTextTrack(options) {\n    const track = merge$1(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=false]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   */\n  addRemoteTextTrack(options = {}, manualCleanup) {\n    const htmlTrackElement = this.createRemoteTextTrack(options);\n    if (typeof manualCleanup !== 'boolean') {\n      manualCleanup = false;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n    if (manualCleanup === false) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(() => this.autoRemoteTextTracks_.addTrack(htmlTrackElement.track));\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  removeRemoteTextTrack(track) {\n    const trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  getVideoPlaybackQuality() {\n    return {};\n  }\n\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  requestPictureInPicture() {\n    return Promise.reject();\n  }\n\n  /**\n   * A method to check for the value of the 'disablePictureInPicture' <video> property.\n   * Defaults to true, as it should be considered disabled if the tech does not support pip\n   *\n   * @abstract\n   */\n  disablePictureInPicture() {\n    return true;\n  }\n\n  /**\n   * A method to set or unset the 'disablePictureInPicture' <video> property.\n   *\n   * @abstract\n   */\n  setDisablePictureInPicture() {}\n\n  /**\n   * A fallback implementation of requestVideoFrameCallback using requestAnimationFrame\n   *\n   * @param {function} cb\n   * @return {number} request id\n   */\n  requestVideoFrameCallback(cb) {\n    const id = newGUID();\n    if (!this.isReady_ || this.paused()) {\n      this.queuedHanders_.add(id);\n      this.one('playing', () => {\n        if (this.queuedHanders_.has(id)) {\n          this.queuedHanders_.delete(id);\n          cb();\n        }\n      });\n    } else {\n      this.requestNamedAnimationFrame(id, cb);\n    }\n    return id;\n  }\n\n  /**\n   * A fallback implementation of cancelVideoFrameCallback\n   *\n   * @param {number} id id of callback to be cancelled\n   */\n  cancelVideoFrameCallback(id) {\n    if (this.queuedHanders_.has(id)) {\n      this.queuedHanders_.delete(id);\n    } else {\n      this.cancelNamedAnimationFrame(id);\n    }\n  }\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  setPoster() {}\n\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  playsinline() {}\n\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  setPlaysinline() {}\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  overrideNativeAudioTracks(override) {}\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  overrideNativeVideoTracks(override) {}\n\n  /**\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} _type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  canPlayType(_type) {\n    return '';\n  }\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} _type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  static canPlayType(_type) {\n    return '';\n  }\n\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  static canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  static isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  static registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n    if (!Tech.isTech(tech)) {\n      throw new Error(`Tech ${name} must be a Tech`);\n    }\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n    name = toTitleCase$1(name);\n    Tech.techs_[name] = tech;\n    Tech.techs_[toLowerCase(name)] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  }\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  static getTech(name) {\n    if (!name) {\n      return;\n    }\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n    name = toTitleCase$1(name);\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn(`The ${name} tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)`);\n      return window$1.videojs[name];\n    }\n  }\n}\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  const props = ALL[name];\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event.\n * This will be used to determine if {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event.\n * This will be used to determine if {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * Boolean indicating whether the `Tech` supports `requestVideoFrameCallback`.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVideoFrameCallback = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    let handlers = _Tech.sourceHandlers;\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    const handlers = _Tech.sourceHandlers || [];\n    let can;\n    for (let i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n      if (can) {\n        return can;\n      }\n    }\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    const handlers = _Tech.sourceHandlers || [];\n    let can;\n    for (let i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n      if (can) {\n        return handlers[i];\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    const sh = _Tech.selectSourceHandler(srcObj, options);\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  const deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    const originalFn = this[fnName];\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    let sh = _Tech.selectSourceHandler(source, this.options_);\n    if (!sh) {\n      // Fall back to a native source handler when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler_);\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler_);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent$1.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\n\n/** @import Player from '../player' */\n/** @import Tech from '../tech/tech' */\n\nconst middlewares = {};\nconst middlewareInstances = {};\nconst TERMINATOR = {};\n\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\nfunction setSource(player, src, next) {\n  player.setTimeout(() => setSourceHelper(src, middlewares[src.type], next, player), 1);\n}\n\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\nfunction setTech(middleware, tech) {\n  middleware.forEach(mw => mw.setTech && mw.setTech(tech));\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {*}\n *         The final value from the tech after middleware has intercepted it.\n */\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {*} arg\n *         The value to set on the tech.\n *\n * @return {*}\n *         The return value of the `method` of the `tech`.\n */\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {*} arg\n *         The value to set on the tech.\n *\n * @return {*}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\nfunction mediate(middleware, tech, method, arg = null) {\n  const callMethod = 'call' + toTitleCase$1(method);\n  const middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  const terminated = middlewareValue === TERMINATOR;\n  // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n  const returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  muted: 1,\n  played: 1,\n  paused: 1,\n  seekable: 1,\n  volume: 1,\n  ended: 1\n};\n\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedSetters = {\n  setCurrentTime: 1,\n  setMuted: 1,\n  setVolume: 1\n};\n\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedMediators = {\n  play: 1,\n  pause: 1\n};\nfunction middlewareIterator(method) {\n  return (value, mw) => {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n    if (mw[method]) {\n      return mw[method](value);\n    }\n    return value;\n  };\n}\nfunction executeRight(mws, method, value, terminated) {\n  for (let i = mws.length - 1; i >= 0; i--) {\n    const mw = mws[i];\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\nfunction clearCacheForPlayer(player) {\n  if (middlewareInstances.hasOwnProperty(player.id())) {\n    delete middlewareInstances[player.id()];\n  }\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  const mws = middlewareInstances[player.id()];\n  let mw = null;\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n  for (let i = 0; i < mws.length; i++) {\n    const [mwf, mwi] = mws[i];\n    if (mwf !== mwFactory) {\n      continue;\n    }\n    mw = mwi;\n  }\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n  return mw;\n}\nfunction setSourceHelper(src = {}, middleware = [], next, player, acc = [], lastRun = false) {\n  const [mwFactory, ...mwrest] = middleware;\n\n  // if mwFactory is a string, then we're at a fork in the road\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    const mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n    mw.setSource(Object.assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/** @import Player from '../player' */\n\n/**\n * Mimetypes\n *\n * @see https://www.iana.org/assignments/media-types/media-types.xhtml\n * @typedef Mimetypes~Kind\n * @enum\n */\nconst MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  caf: 'audio/x-caf',\n  flac: 'audio/flac',\n  oga: 'audio/ogg',\n  wav: 'audio/wav',\n  m3u8: 'application/x-mpegURL',\n  mpd: 'application/dash+xml',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nconst getMimetype = function (src = '') {\n  const ext = getFileExtension(src);\n  const mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nconst findMimetype = (player, src) => {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  const matchingSources = player.cache_.sources.filter(s => s.src === src);\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  const sources = player.$$('source');\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nconst filterSource = function (src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    let newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  if (!src.type) {\n    const mimetype = getMimetype(src.src);\n    if (mimetype) {\n      src.type = mimetype;\n    }\n  }\n  return src;\n}\n\nvar icons = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n  <defs>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-play\\\">\\n      <path d=\\\"M16 10v28l22-14z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-pause\\\">\\n      <path d=\\\"M12 38h8V10h-8v28zm16-28v28h8V10h-8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-audio\\\">\\n      <path d=\\\"M24 2C14.06 2 6 10.06 6 20v14c0 3.31 2.69 6 6 6h6V24h-8v-4c0-7.73 6.27-14 14-14s14 6.27 14 14v4h-8v16h6c3.31 0 6-2.69 6-6V20c0-9.94-8.06-18-18-18z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-captions\\\">\\n      <path d=\\\"M38 8H10c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h28c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zM22 22h-3v-1h-4v6h4v-1h3v2a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2zm14 0h-3v-1h-4v6h4v-1h3v2a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-subtitles\\\">\\n      <path d=\\\"M40 8H8c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h32c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zM8 24h8v4H8v-4zm20 12H8v-4h20v4zm12 0h-8v-4h8v4zm0-8H20v-4h20v4z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-fullscreen-enter\\\">\\n      <path d=\\\"M14 28h-4v10h10v-4h-6v-6zm-4-8h4v-6h6v-4H10v10zm24 14h-6v4h10V28h-4v6zm-6-24v4h6v6h4V10H28z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-fullscreen-exit\\\">\\n      <path d=\\\"M10 32h6v6h4V28H10v4zm6-16h-6v4h10V10h-4v6zm12 22h4v-6h6v-4H28v10zm4-22v-6h-4v10h10v-4h-6z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-play-circle\\\">\\n      <path d=\\\"M20 33l12-9-12-9v18zm4-29C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-mute\\\">\\n      <path d=\\\"M33 24c0-3.53-2.04-6.58-5-8.05v4.42l4.91 4.91c.06-.42.09-.85.09-1.28zm5 0c0 1.88-.41 3.65-1.08 5.28l3.03 3.03C41.25 29.82 42 27 42 24c0-8.56-5.99-15.72-14-17.54v4.13c5.78 1.72 10 7.07 10 13.41zM8.55 6L6 8.55 15.45 18H6v12h8l10 10V26.55l8.51 8.51c-1.34 1.03-2.85 1.86-4.51 2.36v4.13a17.94 17.94 0 0 0 7.37-3.62L39.45 42 42 39.45l-18-18L8.55 6zM24 8l-4.18 4.18L24 16.36V8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-low\\\">\\n      <path d=\\\"M14 18v12h8l10 10V8L22 18h-8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-medium\\\">\\n      <path d=\\\"M37 24c0-3.53-2.04-6.58-5-8.05v16.11c2.96-1.48 5-4.53 5-8.06zm-27-6v12h8l10 10V8L18 18h-8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-high\\\">\\n      <path d=\\\"M6 18v12h8l10 10V8L14 18H6zm27 6c0-3.53-2.04-6.58-5-8.05v16.11c2.96-1.48 5-4.53 5-8.06zM28 6.46v4.13c5.78 1.72 10 7.07 10 13.41s-4.22 11.69-10 13.41v4.13c8.01-1.82 14-8.97 14-17.54S36.01 8.28 28 6.46z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-spinner\\\">\\n      <path d=\\\"M18.8 21l9.53-16.51C26.94 4.18 25.49 4 24 4c-4.8 0-9.19 1.69-12.64 4.51l7.33 12.69.11-.2zm24.28-3c-1.84-5.85-6.3-10.52-11.99-12.68L23.77 18h19.31zm.52 2H28.62l.58 1 9.53 16.5C41.99 33.94 44 29.21 44 24c0-1.37-.14-2.71-.4-4zm-26.53 4l-7.8-13.5C6.01 14.06 4 18.79 4 24c0 1.37.14 2.71.4 4h14.98l-2.31-4zM4.92 30c1.84 5.85 6.3 10.52 11.99 12.68L24.23 30H4.92zm22.54 0l-7.8 13.51c1.4.31 2.85.49 4.34.49 4.8 0 9.19-1.69 12.64-4.51L29.31 26.8 27.46 30z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 24 24\\\" id=\\\"vjs-icon-hd\\\">\\n      <path d=\\\"M19 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-8 12H9.5v-2h-2v2H6V9h1.5v2.5h2V9H11v6zm2-6h4c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1h-4V9zm1.5 4.5h2v-3h-2v3z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-chapters\\\">\\n      <path d=\\\"M6 26h4v-4H6v4zm0 8h4v-4H6v4zm0-16h4v-4H6v4zm8 8h28v-4H14v4zm0 8h28v-4H14v4zm0-20v4h28v-4H14z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 40 40\\\" id=\\\"vjs-icon-downloading\\\">\\n      <path d=\\\"M18.208 36.875q-3.208-.292-5.979-1.729-2.771-1.438-4.812-3.729-2.042-2.292-3.188-5.229-1.146-2.938-1.146-6.23 0-6.583 4.334-11.416 4.333-4.834 10.833-5.5v3.166q-5.167.75-8.583 4.646Q6.25 14.75 6.25 19.958q0 5.209 3.396 9.104 3.396 3.896 8.562 4.646zM20 28.417L11.542 20l2.083-2.083 4.917 4.916v-11.25h2.916v11.25l4.875-4.916L28.417 20zm1.792 8.458v-3.167q1.833-.25 3.541-.958 1.709-.708 3.167-1.875l2.333 2.292q-1.958 1.583-4.25 2.541-2.291.959-4.791 1.167zm6.791-27.792q-1.541-1.125-3.25-1.854-1.708-.729-3.541-1.021V3.042q2.5.25 4.77 1.208 2.271.958 4.271 2.5zm4.584 21.584l-2.25-2.25q1.166-1.5 1.854-3.209.687-1.708.937-3.541h3.209q-.292 2.5-1.229 4.791-.938 2.292-2.521 4.209zm.541-12.417q-.291-1.833-.958-3.562-.667-1.73-1.833-3.188l2.375-2.208q1.541 1.916 2.458 4.208.917 2.292 1.167 4.75z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-file-download\\\">\\n      <path d=\\\"M10.8 40.55q-1.35 0-2.375-1T7.4 37.15v-7.7h3.4v7.7h26.35v-7.7h3.4v7.7q0 1.4-1 2.4t-2.4 1zM24 32.1L13.9 22.05l2.45-2.45 5.95 5.95V7.15h3.4v18.4l5.95-5.95 2.45 2.45z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-file-download-done\\\">\\n      <path d=\\\"M9.8 40.5v-3.45h28.4v3.45zm9.2-9.05L7.4 19.85l2.45-2.35L19 26.65l19.2-19.2 2.4 2.4z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-file-download-off\\\">\\n      <path d=\\\"M4.9 4.75L43.25 43.1 41 45.3l-4.75-4.75q-.05.05-.075.025-.025-.025-.075-.025H10.8q-1.35 0-2.375-1T7.4 37.15v-7.7h3.4v7.7h22.05l-7-7-1.85 1.8L13.9 21.9l1.85-1.85L2.7 7zm26.75 14.7l2.45 2.45-3.75 3.8-2.45-2.5zM25.7 7.15V21.1l-3.4-3.45V7.15z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-share\\\">\\n      <path d=\\\"M36 32.17c-1.52 0-2.89.59-3.93 1.54L17.82 25.4c.11-.45.18-.92.18-1.4s-.07-.95-.18-1.4l14.1-8.23c1.07 1 2.5 1.62 4.08 1.62 3.31 0 6-2.69 6-6s-2.69-6-6-6-6 2.69-6 6c0 .48.07.95.18 1.4l-14.1 8.23c-1.07-1-2.5-1.62-4.08-1.62-3.31 0-6 2.69-6 6s2.69 6 6 6c1.58 0 3.01-.62 4.08-1.62l14.25 8.31c-.1.42-.16.86-.16 1.31A5.83 5.83 0 1 0 36 32.17z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-cog\\\">\\n      <path d=\\\"M38.86 25.95c.08-.64.14-1.29.14-1.95s-.06-1.31-.14-1.95l4.23-3.31c.38-.3.49-.84.24-1.28l-4-6.93c-.25-.43-.77-.61-1.22-.43l-4.98 2.01c-1.03-.79-2.16-1.46-3.38-1.97L29 4.84c-.09-.47-.5-.84-1-.84h-8c-.5 0-.91.37-.99.84l-.75 5.3a14.8 14.8 0 0 0-3.38 1.97L9.9 10.1a1 1 0 0 0-1.22.43l-4 6.93c-.25.43-.14.97.24 1.28l4.22 3.31C9.06 22.69 9 23.34 9 24s.06 1.31.14 1.95l-4.22 3.31c-.38.3-.49.84-.24 1.28l4 6.93c.25.43.77.61 1.22.43l4.98-2.01c1.03.79 2.16 1.46 3.38 1.97l.75 5.3c.08.47.49.84.99.84h8c.5 0 .91-.37.99-.84l.75-5.3a14.8 14.8 0 0 0 3.38-1.97l4.98 2.01a1 1 0 0 0 1.22-.43l4-6.93c.25-.43.14-.97-.24-1.28l-4.22-3.31zM24 31c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-square\\\">\\n      <path d=\\\"M36 8H12c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h24c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zm0 28H12V12h24v24z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-circle\\\">\\n      <circle cx=\\\"24\\\" cy=\\\"24\\\" r=\\\"20\\\"></circle>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-circle-outline\\\">\\n      <path d=\\\"M24 4C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-circle-inner-circle\\\">\\n      <path d=\\\"M24 4C12.97 4 4 12.97 4 24s8.97 20 20 20 20-8.97 20-20S35.03 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16zm6-16c0 3.31-2.69 6-6 6s-6-2.69-6-6 2.69-6 6-6 6 2.69 6 6z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-cancel\\\">\\n      <path d=\\\"M24 4C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm10 27.17L31.17 34 24 26.83 16.83 34 14 31.17 21.17 24 14 16.83 16.83 14 24 21.17 31.17 14 34 16.83 26.83 24 34 31.17z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-replay\\\">\\n      <path d=\\\"M24 10V2L14 12l10 10v-8c6.63 0 12 5.37 12 12s-5.37 12-12 12-12-5.37-12-12H8c0 8.84 7.16 16 16 16s16-7.16 16-16-7.16-16-16-16z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-repeat\\\">\\n      <path d=\\\"M14 14h20v6l8-8-8-8v6H10v12h4v-8zm20 20H14v-6l-8 8 8 8v-6h24V26h-4v8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-replay-5\\\">\\n      <path d=\\\"M17.689 98l-8.697 8.696 8.697 8.697 2.486-2.485-4.32-4.319h1.302c4.93 0 9.071 1.722 12.424 5.165 3.352 3.443 5.029 7.638 5.029 12.584h3.55c0-2.958-.553-5.73-1.658-8.313-1.104-2.583-2.622-4.841-4.555-6.774-1.932-1.932-4.19-3.45-6.773-4.555-2.584-1.104-5.355-1.657-8.313-1.657H15.5l4.615-4.615zm-8.08 21.659v13.861h11.357v5.008H9.609V143h12.7c.834 0 1.55-.298 2.146-.894.596-.597.895-1.31.895-2.145v-7.781c0-.835-.299-1.55-.895-2.147a2.929 2.929 0 0 0-2.147-.894h-8.227v-5.096H25.35v-4.384z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-replay-10\\\">\\n      <path d=\\\"M42.315 125.63c0-4.997-1.694-9.235-5.08-12.713-3.388-3.479-7.571-5.218-12.552-5.218h-1.315l4.363 4.363-2.51 2.51-8.787-8.786L25.221 97l2.45 2.45-4.662 4.663h1.375c2.988 0 5.788.557 8.397 1.673 2.61 1.116 4.892 2.65 6.844 4.602 1.953 1.953 3.487 4.234 4.602 6.844 1.116 2.61 1.674 5.41 1.674 8.398zM8.183 142v-19.657H3.176V117.8h9.643V142zm13.63 0c-1.156 0-2.127-.393-2.912-1.178-.778-.778-1.168-1.746-1.168-2.902v-16.04c0-1.156.393-2.127 1.178-2.912.779-.779 1.746-1.168 2.902-1.168h7.696c1.156 0 2.126.392 2.911 1.177.779.78 1.168 1.747 1.168 2.903v16.04c0 1.156-.392 2.127-1.177 2.912-.779.779-1.746 1.168-2.902 1.168zm.556-4.636h6.583v-15.02H22.37z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-replay-30\\\">\\n      <path d=\\\"M26.047 97l-8.733 8.732 8.733 8.733 2.496-2.494-4.336-4.338h1.307c4.95 0 9.108 1.73 12.474 5.187 3.367 3.458 5.051 7.668 5.051 12.635h3.565c0-2.97-.556-5.751-1.665-8.346-1.109-2.594-2.633-4.862-4.574-6.802-1.94-1.941-4.208-3.466-6.803-4.575-2.594-1.109-5.375-1.664-8.345-1.664H23.85l4.634-4.634zM2.555 117.531v4.688h10.297v5.25H5.873v4.687h6.979v5.156H2.555V142H13.36c1.061 0 1.95-.395 2.668-1.186.718-.79 1.076-1.772 1.076-2.94v-16.218c0-1.168-.358-2.149-1.076-2.94-.717-.79-1.607-1.185-2.668-1.185zm22.482.14c-1.149 0-2.11.39-2.885 1.165-.78.78-1.172 1.744-1.172 2.893v15.943c0 1.149.388 2.11 1.163 2.885.78.78 1.745 1.172 2.894 1.172h7.649c1.148 0 2.11-.388 2.884-1.163.78-.78 1.17-1.745 1.17-2.894v-15.943c0-1.15-.386-2.111-1.16-2.885-.78-.78-1.746-1.172-2.894-1.172zm.553 4.518h6.545v14.93H25.59z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-forward-5\\\">\\n      <path d=\\\"M29.508 97l-2.431 2.43 4.625 4.625h-1.364c-2.965 0-5.742.554-8.332 1.66-2.589 1.107-4.851 2.629-6.788 4.566-1.937 1.937-3.458 4.2-4.565 6.788-1.107 2.59-1.66 5.367-1.66 8.331h3.557c0-4.957 1.68-9.16 5.04-12.611 3.36-3.45 7.51-5.177 12.451-5.177h1.304l-4.326 4.33 2.49 2.49 8.715-8.716zm-9.783 21.61v13.89h11.382v5.018H19.725V142h12.727a2.93 2.93 0 0 0 2.15-.896 2.93 2.93 0 0 0 .896-2.15v-7.798c0-.837-.299-1.554-.896-2.152a2.93 2.93 0 0 0-2.15-.896h-8.245V123h11.29v-4.392z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-forward-10\\\">\\n      <path d=\\\"M23.119 97l-2.386 2.383 4.538 4.538h-1.339c-2.908 0-5.633.543-8.173 1.63-2.54 1.085-4.76 2.577-6.66 4.478-1.9 1.9-3.392 4.12-4.478 6.66-1.085 2.54-1.629 5.264-1.629 8.172h3.49c0-4.863 1.648-8.986 4.944-12.372 3.297-3.385 7.368-5.078 12.216-5.078h1.279l-4.245 4.247 2.443 2.442 8.55-8.55zm-9.52 21.45v4.42h4.871V142h4.513v-23.55zm18.136 0c-1.125 0-2.066.377-2.824 1.135-.764.764-1.148 1.709-1.148 2.834v15.612c0 1.124.38 2.066 1.139 2.824.764.764 1.708 1.145 2.833 1.145h7.489c1.125 0 2.066-.378 2.824-1.136.764-.764 1.145-1.709 1.145-2.833v-15.612c0-1.125-.378-2.067-1.136-2.825-.764-.764-1.708-1.145-2.833-1.145zm.54 4.42h6.408v14.617h-6.407z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-forward-30\\\">\\n      <path d=\\\"M25.549 97l-2.437 2.434 4.634 4.635H26.38c-2.97 0-5.753.555-8.347 1.664-2.594 1.109-4.861 2.633-6.802 4.574-1.94 1.94-3.465 4.207-4.574 6.802-1.109 2.594-1.664 5.377-1.664 8.347h3.565c0-4.967 1.683-9.178 5.05-12.636 3.366-3.458 7.525-5.187 12.475-5.187h1.307l-4.335 4.338 2.495 2.494 8.732-8.732zm-11.553 20.53v4.689h10.297v5.249h-6.978v4.688h6.978v5.156H13.996V142h10.808c1.06 0 1.948-.395 2.666-1.186.718-.79 1.077-1.771 1.077-2.94v-16.217c0-1.169-.36-2.15-1.077-2.94-.718-.79-1.605-1.186-2.666-1.186zm21.174.168c-1.149 0-2.11.389-2.884 1.163-.78.78-1.172 1.745-1.172 2.894v15.942c0 1.15.388 2.11 1.162 2.885.78.78 1.745 1.17 2.894 1.17h7.649c1.149 0 2.11-.386 2.885-1.16.78-.78 1.17-1.746 1.17-2.895v-15.942c0-1.15-.387-2.11-1.161-2.885-.78-.78-1.745-1.172-2.894-1.172zm.552 4.516h6.542v14.931h-6.542z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 512 512\\\" id=\\\"vjs-icon-audio-description\\\">\\n      <g fill-rule=\\\"evenodd\\\"><path d=\\\"M227.29 381.351V162.993c50.38-1.017 89.108-3.028 117.631 17.126 27.374 19.342 48.734 56.965 44.89 105.325-4.067 51.155-41.335 94.139-89.776 98.475-24.085 2.155-71.972 0-71.972 0s-.84-1.352-.773-2.568m48.755-54.804c31.43 1.26 53.208-16.633 56.495-45.386 4.403-38.51-21.188-63.552-58.041-60.796v103.612c-.036 1.466.575 2.22 1.546 2.57\\\"></path><path d=\\\"M383.78 381.328c13.336 3.71 17.387-11.06 23.215-21.408 12.722-22.571 22.294-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.51c-.587 3.874 2.226 7.315 3.865 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894\\\"></path><path d=\\\"M425.154 381.328c13.336 3.71 17.384-11.061 23.215-21.408 12.721-22.571 22.291-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.511c-.586 3.874 2.226 7.315 3.866 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894\\\"></path><path d=\\\"M466.26 381.328c13.337 3.71 17.385-11.061 23.216-21.408 12.722-22.571 22.292-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.51c-.587 3.874 2.225 7.315 3.865 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894M4.477 383.005H72.58l18.573-28.484 64.169-.135s.065 19.413.065 28.62h48.756V160.307h-58.816c-5.653 9.537-140.85 222.697-140.85 222.697zm152.667-145.282v71.158l-40.453-.27 40.453-70.888z\\\"></path></g>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-next-item\\\">\\n      <path d=\\\"M12 36l17-12-17-12v24zm20-24v24h4V12h-4z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-previous-item\\\">\\n      <path d=\\\"M12 12h4v24h-4zm7 12l17 12V12z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-shuffle\\\">\\n      <path d=\\\"M21.17 18.34L10.83 8 8 10.83l10.34 10.34 2.83-2.83zM29 8l4.09 4.09L8 37.17 10.83 40l25.09-25.09L40 19V8H29zm.66 18.83l-2.83 2.83 6.26 6.26L29 40h11V29l-4.09 4.09-6.25-6.26z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-cast\\\">\\n      <path d=\\\"M42 6H6c-2.21 0-4 1.79-4 4v6h4v-6h36v28H28v4h14c2.21 0 4-1.79 4-4V10c0-2.21-1.79-4-4-4zM2 36v6h6c0-3.31-2.69-6-6-6zm0-8v4c5.52 0 10 4.48 10 10h4c0-7.73-6.27-14-14-14zm0-8v4c9.94 0 18 8.06 18 18h4c0-12.15-9.85-22-22-22z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-picture-in-picture-enter\\\">\\n      <path d=\\\"M38 22H22v11.99h16V22zm8 16V9.96C46 7.76 44.2 6 42 6H6C3.8 6 2 7.76 2 9.96V38c0 2.2 1.8 4 4 4h36c2.2 0 4-1.8 4-4zm-4 .04H6V9.94h36v28.1z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 22 18\\\" id=\\\"vjs-icon-picture-in-picture-exit\\\">\\n      <path d=\\\"M18 4H4v10h14V4zm4 12V1.98C22 .88 21.1 0 20 0H2C.9 0 0 .88 0 1.98V16c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2zm-2 .02H2V1.97h18v14.05z\\\"></path>\\n      <path fill=\\\"none\\\" d=\\\"M-1-3h24v24H-1z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-facebook\\\">\\n      <path d=\\\"M1343 12v264h-157q-86 0-116 36t-30 108v189h293l-39 296h-254v759H734V905H479V609h255V391q0-186 104-288.5T1115 0q147 0 228 12z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-linkedin\\\">\\n      <path d=\\\"M477 625v991H147V625h330zm21-306q1 73-50.5 122T312 490h-2q-82 0-132-49t-50-122q0-74 51.5-122.5T314 148t133 48.5T498 319zm1166 729v568h-329v-530q0-105-40.5-164.5T1168 862q-63 0-105.5 34.5T999 982q-11 30-11 81v553H659q2-399 2-647t-1-296l-1-48h329v144h-2q20-32 41-56t56.5-52 87-43.5T1285 602q171 0 275 113.5t104 332.5z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1200 1227\\\" id=\\\"vjs-icon-twitter\\\">\\n      <path d=\\\"M714.163 519.284L1160.89 0H1055.03L667.137 450.887L357.328 0H0L468.492 681.821L0 1226.37H105.866L515.491 750.218L842.672 1226.37H1200L714.137 519.284H714.163ZM569.165 687.828L521.697 619.934L144.011 79.6944H306.615L611.412 515.685L658.88 583.579L1055.08 1150.3H892.476L569.165 687.854V687.828Z\\\"/>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-tumblr\\\">\\n      <path d=\\\"M1328 1329l80 237q-23 35-111 66t-177 32q-104 2-190.5-26T787 1564t-95-106-55.5-120-16.5-118V676H452V461q72-26 129-69.5t91-90 58-102 34-99T779 12q1-5 4.5-8.5T791 0h244v424h333v252h-334v518q0 30 6.5 56t22.5 52.5 49.5 41.5 81.5 14q78-2 134-29z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-pinterest\\\">\\n      <path d=\\\"M1664 896q0 209-103 385.5T1281.5 1561 896 1664q-111 0-218-32 59-93 78-164 9-34 54-211 20 39 73 67.5t114 28.5q121 0 216-68.5t147-188.5 52-270q0-114-59.5-214T1180 449t-255-63q-105 0-196 29t-154.5 77-109 110.5-67 129.5T377 866q0 104 40 183t117 111q30 12 38-20 2-7 8-31t8-30q6-23-11-43-51-61-51-151 0-151 104.5-259.5T904 517q151 0 235.5 82t84.5 213q0 170-68.5 289T980 1220q-61 0-98-43.5T859 1072q8-35 26.5-93.5t30-103T927 800q0-50-27-83t-77-33q-62 0-105 57t-43 142q0 73 25 122l-99 418q-17 70-13 177-206-91-333-281T128 896q0-209 103-385.5T510.5 231 896 128t385.5 103T1561 510.5 1664 896z\\\"></path>\\n    </symbol>\\n  </defs>\\n</svg>\";\n\n// /**\n\n// Determine the keycode for the 'back' key based on the platform\nconst backKeyCode = IS_TIZEN ? 10009 : IS_WEBOS ? 461 : 8;\nconst SpatialNavKeyCodes = {\n  codes: {\n    play: 415,\n    pause: 19,\n    ff: 417,\n    rw: 412,\n    back: backKeyCode\n  },\n  names: {\n    415: 'play',\n    19: 'pause',\n    417: 'ff',\n    412: 'rw',\n    [backKeyCode]: 'back'\n  },\n  isEventKey(event, keyName) {\n    keyName = keyName.toLowerCase();\n    if (this.names[event.keyCode] && this.names[event.keyCode] === keyName) {\n      return true;\n    }\n    return false;\n  },\n  getEventName(event) {\n    if (this.names[event.keyCode]) {\n      return this.names[event.keyCode];\n    } else if (this.codes[event.code]) {\n      const code = this.codes[event.code];\n      return this.names[code];\n    }\n    return null;\n  }\n};\n\n/**\n * @file spatial-navigation.js\n */\n\n/** @import Component from './component' */\n/** @import Player from './player' */\n\n// The number of seconds the `step*` functions move the timeline.\nconst STEP_SECONDS$1 = 5;\n\n/**\n * Spatial Navigation in Video.js enhances user experience and accessibility on smartTV devices,\n * enabling seamless navigation through interactive elements within the player using remote control arrow keys.\n * This functionality allows users to effortlessly navigate through focusable components.\n *\n * @extends EventTarget\n */\nclass SpatialNavigation extends EventTarget$2 {\n  /**\n   * Constructs a SpatialNavigation instance with initial settings.\n   * Sets up the player instance, and prepares the spatial navigation system.\n   *\n   * @class\n   * @param {Player} player - The Video.js player instance to which the spatial navigation is attached.\n   */\n  constructor(player) {\n    super();\n    this.player_ = player;\n    this.focusableComponents = [];\n    this.isListening_ = false;\n    this.isPaused_ = false;\n    this.onKeyDown_ = this.onKeyDown_.bind(this);\n    this.lastFocusedComponent_ = null;\n  }\n\n  /**\n   * Starts the spatial navigation by adding a keydown event listener to the video container.\n   * This method ensures that the event listener is added only once.\n   */\n  start() {\n    // If the listener is already active, exit early.\n    if (this.isListening_) {\n      return;\n    }\n\n    // Add the event listener since the listener is not yet active.\n    this.player_.on('keydown', this.onKeyDown_);\n    this.player_.on('modalKeydown', this.onKeyDown_);\n    // Listen for source change events\n    this.player_.on('loadedmetadata', () => {\n      this.focus(this.updateFocusableComponents()[0]);\n    });\n    this.player_.on('modalclose', () => {\n      this.refocusComponent();\n    });\n    this.player_.on('focusin', this.handlePlayerFocus_.bind(this));\n    this.player_.on('focusout', this.handlePlayerBlur_.bind(this));\n    this.isListening_ = true;\n    if (this.player_.errorDisplay) {\n      this.player_.errorDisplay.on('aftermodalfill', () => {\n        this.updateFocusableComponents();\n        if (this.focusableComponents.length) {\n          // The modal has focusable components:\n\n          if (this.focusableComponents.length > 1) {\n            // The modal has close button + some additional buttons.\n            // Focusing first additional button:\n\n            this.focusableComponents[1].focus();\n          } else {\n            // The modal has only close button,\n            // Focusing it:\n\n            this.focusableComponents[0].focus();\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Stops the spatial navigation by removing the keydown event listener from the video container.\n   * Also sets the `isListening_` flag to false.\n   */\n  stop() {\n    this.player_.off('keydown', this.onKeyDown_);\n    this.isListening_ = false;\n  }\n\n  /**\n   * Responds to keydown events for spatial navigation and media control.\n   *\n   * Determines if spatial navigation or media control is active and handles key inputs accordingly.\n   *\n   * @param {KeyboardEvent} event - The keydown event to be handled.\n   */\n  onKeyDown_(event) {\n    // Determine if the event is a custom modalKeydown event\n    const actualEvent = event.originalEvent ? event.originalEvent : event;\n    if (['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'].includes(actualEvent.key)) {\n      // Handle directional navigation\n      if (this.isPaused_) {\n        return;\n      }\n      actualEvent.preventDefault();\n\n      // \"ArrowLeft\" => \"left\" etc\n      const direction = actualEvent.key.substring(5).toLowerCase();\n      this.move(direction);\n    } else if (SpatialNavKeyCodes.isEventKey(actualEvent, 'play') || SpatialNavKeyCodes.isEventKey(actualEvent, 'pause') || SpatialNavKeyCodes.isEventKey(actualEvent, 'ff') || SpatialNavKeyCodes.isEventKey(actualEvent, 'rw')) {\n      // Handle media actions\n      actualEvent.preventDefault();\n      const action = SpatialNavKeyCodes.getEventName(actualEvent);\n      this.performMediaAction_(action);\n    } else if (SpatialNavKeyCodes.isEventKey(actualEvent, 'Back') && event.target && typeof event.target.closeable === 'function' && event.target.closeable()) {\n      actualEvent.preventDefault();\n      event.target.close();\n    }\n  }\n\n  /**\n   * Performs media control actions based on the given key input.\n   *\n   * Controls the playback and seeking functionalities of the media player.\n   *\n   * @param {string} key - The key representing the media action to be performed.\n   *   Accepted keys: 'play', 'pause', 'ff' (fast-forward), 'rw' (rewind).\n   */\n  performMediaAction_(key) {\n    if (this.player_) {\n      switch (key) {\n        case 'play':\n          if (this.player_.paused()) {\n            this.player_.play();\n          }\n          break;\n        case 'pause':\n          if (!this.player_.paused()) {\n            this.player_.pause();\n          }\n          break;\n        case 'ff':\n          this.userSeek_(this.player_.currentTime() + STEP_SECONDS$1);\n          break;\n        case 'rw':\n          this.userSeek_(this.player_.currentTime() - STEP_SECONDS$1);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Prevent liveThreshold from causing seeks to seem like they\n   * are not happening from a user perspective.\n   *\n   * @param {number} ct\n   *        current time to seek to\n   */\n  userSeek_(ct) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n      this.player_.liveTracker.nextSeekedFromUser();\n    }\n    this.player_.currentTime(ct);\n  }\n\n  /**\n   * Pauses the spatial navigation functionality.\n   * This method sets a flag that can be used to temporarily disable the navigation logic.\n   */\n  pause() {\n    this.isPaused_ = true;\n  }\n\n  /**\n   * Resumes the spatial navigation functionality if it has been paused.\n   * This method resets the pause flag, re-enabling the navigation logic.\n   */\n  resume() {\n    this.isPaused_ = false;\n  }\n\n  /**\n   * Handles Player Blur.\n   *\n   * @param {string|Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   *\n   * Calls for handling of the Player Blur if:\n   * *The next focused element is not a child of current focused element &\n   * The next focused element is not a child of the Player.\n   * *There is no next focused element\n   */\n  handlePlayerBlur_(event) {\n    const nextFocusedElement = event.relatedTarget;\n    let isChildrenOfPlayer = null;\n    const currentComponent = this.getCurrentComponent(event.target);\n    if (nextFocusedElement) {\n      isChildrenOfPlayer = Boolean(nextFocusedElement.closest('.video-js'));\n\n      // If nextFocusedElement is the 'TextTrackSettings' component\n      if (nextFocusedElement.classList.contains('vjs-text-track-settings') && !this.isPaused_) {\n        this.searchForTrackSelect_();\n      }\n    }\n    if (!event.currentTarget.contains(event.relatedTarget) && !isChildrenOfPlayer || !nextFocusedElement) {\n      if (currentComponent && currentComponent.name() === 'CloseButton') {\n        this.refocusComponent();\n      } else {\n        this.pause();\n        if (currentComponent && currentComponent.el()) {\n          // Store last focused component\n          this.lastFocusedComponent_ = currentComponent;\n        }\n      }\n    }\n  }\n\n  /**\n   * Handles the Player focus event.\n   *\n   * Calls for handling of the Player Focus if current element is focusable.\n   */\n  handlePlayerFocus_() {\n    if (this.getCurrentComponent() && this.getCurrentComponent().getIsFocusable()) {\n      this.resume();\n    }\n  }\n\n  /**\n   * Gets a set of focusable components.\n   *\n   * @return {Array}\n   *         Returns an array of focusable components.\n   */\n  updateFocusableComponents() {\n    const player = this.player_;\n    const focusableComponents = [];\n\n    /**\n     * Searches for children candidates.\n     *\n     * Pushes Components to array of 'focusableComponents'.\n     * Calls itself if there is children elements inside iterated component.\n     *\n     * @param {Array} componentsArray - The array of components to search for focusable children.\n     */\n    function searchForChildrenCandidates(componentsArray) {\n      for (const i of componentsArray) {\n        if (i.hasOwnProperty('el_') && i.getIsFocusable() && i.getIsAvailableToBeFocused(i.el())) {\n          focusableComponents.push(i);\n        }\n        if (i.hasOwnProperty('children_') && i.children_.length > 0) {\n          searchForChildrenCandidates(i.children_);\n        }\n      }\n    }\n\n    // Iterate inside all children components of the player.\n    player.children_.forEach(value => {\n      if (value.hasOwnProperty('el_')) {\n        // If component has required functions 'getIsFocusable' & 'getIsAvailableToBeFocused', is focusable & available to be focused.\n        if (value.getIsFocusable && value.getIsAvailableToBeFocused && value.getIsFocusable() && value.getIsAvailableToBeFocused(value.el())) {\n          focusableComponents.push(value);\n          return;\n          // If component has posible children components as candidates.\n        } else if (value.hasOwnProperty('children_') && value.children_.length > 0) {\n          searchForChildrenCandidates(value.children_);\n          // If component has posible item components as candidates.\n        } else if (value.hasOwnProperty('items') && value.items.length > 0) {\n          searchForChildrenCandidates(value.items);\n          // If there is a suitable child element within the component's DOM element.\n        } else if (this.findSuitableDOMChild(value)) {\n          focusableComponents.push(value);\n        }\n      }\n\n      // TODO - Refactor the following logic after refactor of videojs-errors elements to be components is done.\n      if (value.name_ === 'ErrorDisplay' && value.opened_) {\n        const buttonContainer = value.el_.querySelector('.vjs-errors-ok-button-container');\n        if (buttonContainer) {\n          const modalButtons = buttonContainer.querySelectorAll('button');\n          modalButtons.forEach((element, index) => {\n            // Add elements as objects to be handled by the spatial navigation\n            focusableComponents.push({\n              name: () => {\n                return 'ModalButton' + (index + 1);\n              },\n              el: () => element,\n              getPositions: () => {\n                const rect = element.getBoundingClientRect();\n\n                // Creating objects that mirror DOMRectReadOnly for boundingClientRect and center\n                const boundingClientRect = {\n                  x: rect.x,\n                  y: rect.y,\n                  width: rect.width,\n                  height: rect.height,\n                  top: rect.top,\n                  right: rect.right,\n                  bottom: rect.bottom,\n                  left: rect.left\n                };\n\n                // Calculating the center position\n                const center = {\n                  x: rect.left + rect.width / 2,\n                  y: rect.top + rect.height / 2,\n                  width: 0,\n                  height: 0,\n                  top: rect.top + rect.height / 2,\n                  right: rect.left + rect.width / 2,\n                  bottom: rect.top + rect.height / 2,\n                  left: rect.left + rect.width / 2\n                };\n                return {\n                  boundingClientRect,\n                  center\n                };\n              },\n              // Asume that the following are always focusable\n              getIsAvailableToBeFocused: () => true,\n              getIsFocusable: el => true,\n              focus: () => element.focus()\n            });\n          });\n        }\n      }\n    });\n    this.focusableComponents = focusableComponents;\n    return this.focusableComponents;\n  }\n\n  /**\n   * Finds a suitable child element within the provided component's DOM element.\n   *\n   * @param {Object} component - The component containing the DOM element to search within.\n   * @return {HTMLElement|null} Returns the suitable child element if found, or null if not found.\n   */\n  findSuitableDOMChild(component) {\n    /**\n     * Recursively searches for a suitable child node that can be focused within a given component.\n     * It first checks if the provided node itself can be focused according to the component's\n     * `getIsFocusable` and `getIsAvailableToBeFocused` methods. If not, it recursively searches\n     * through the node's children to find a suitable child node that meets the focusability criteria.\n     *\n     * @param {HTMLElement} node - The DOM node to start the search from.\n     * @return {HTMLElement|null} The first child node that is focusable and available to be focused,\n     * or `null` if no suitable child is found.\n     */\n    function searchForSuitableChild(node) {\n      if (component.getIsFocusable(node) && component.getIsAvailableToBeFocused(node)) {\n        return node;\n      }\n      for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i];\n        const suitableChild = searchForSuitableChild(child);\n        if (suitableChild) {\n          return suitableChild;\n        }\n      }\n      return null;\n    }\n    if (component.el()) {\n      return searchForSuitableChild(component.el());\n    }\n    return null;\n  }\n\n  /**\n   * Gets the currently focused component from the list of focusable components.\n   * If a target element is provided, it uses that element to find the corresponding\n   * component. If no target is provided, it defaults to using the document's currently\n   * active element.\n   *\n   * @param {HTMLElement} [target] - The DOM element to check against the focusable components.\n   *                                 If not provided, `document.activeElement` is used.\n   * @return {Component|null} - Returns the focused component if found among the focusable components,\n   *                            otherwise returns null if no matching component is found.\n   */\n  getCurrentComponent(target) {\n    this.updateFocusableComponents();\n    // eslint-disable-next-line\n    const curComp = target || document.activeElement;\n    if (this.focusableComponents.length) {\n      for (const i of this.focusableComponents) {\n        // If component Node is equal to the current active element.\n        if (i.el() === curComp) {\n          return i;\n        }\n      }\n    }\n  }\n\n  /**\n   * Adds a component to the array of focusable components.\n   *\n   * @param {Component} component\n   *        The `Component` to be added.\n   */\n  add(component) {\n    const focusableComponents = [...this.focusableComponents];\n    if (component.hasOwnProperty('el_') && component.getIsFocusable() && component.getIsAvailableToBeFocused(component.el())) {\n      focusableComponents.push(component);\n    }\n    this.focusableComponents = focusableComponents;\n    // Trigger the notification manually\n    this.trigger({\n      type: 'focusableComponentsChanged',\n      focusableComponents: this.focusableComponents\n    });\n  }\n\n  /**\n   * Removes component from the array of focusable components.\n   *\n   * @param {Component} component - The component to be removed from the focusable components array.\n   */\n  remove(component) {\n    for (let i = 0; i < this.focusableComponents.length; i++) {\n      if (this.focusableComponents[i].name() === component.name()) {\n        this.focusableComponents.splice(i, 1);\n        // Trigger the notification manually\n        this.trigger({\n          type: 'focusableComponentsChanged',\n          focusableComponents: this.focusableComponents\n        });\n        return;\n      }\n    }\n  }\n\n  /**\n   * Clears array of focusable components.\n   */\n  clear() {\n    // Check if the array is already empty to avoid unnecessary event triggering\n    if (this.focusableComponents.length > 0) {\n      // Clear the array\n      this.focusableComponents = [];\n\n      // Trigger the notification manually\n      this.trigger({\n        type: 'focusableComponentsChanged',\n        focusableComponents: this.focusableComponents\n      });\n    }\n  }\n\n  /**\n   * Navigates to the next focusable component based on the specified direction.\n   *\n   * @param {string} direction 'up', 'down', 'left', 'right'\n   */\n  move(direction) {\n    const currentFocusedComponent = this.getCurrentComponent();\n    if (!currentFocusedComponent) {\n      return;\n    }\n    const currentPositions = currentFocusedComponent.getPositions();\n    const candidates = this.focusableComponents.filter(component => component !== currentFocusedComponent && this.isInDirection_(currentPositions.boundingClientRect, component.getPositions().boundingClientRect, direction));\n    const bestCandidate = this.findBestCandidate_(currentPositions.center, candidates, direction);\n    if (bestCandidate) {\n      this.focus(bestCandidate);\n    } else {\n      this.trigger({\n        type: 'endOfFocusableComponents',\n        direction,\n        focusedComponent: currentFocusedComponent\n      });\n    }\n  }\n\n  /**\n   * Finds the best candidate on the current center position,\n   * the list of candidates, and the specified navigation direction.\n   *\n   * @param {Object} currentCenter The center position of the current focused component element.\n   * @param {Array} candidates An array of candidate components to receive focus.\n   * @param {string} direction The direction of navigation ('up', 'down', 'left', 'right').\n   * @return {Object|null} The component that is the best candidate for receiving focus.\n   */\n  findBestCandidate_(currentCenter, candidates, direction) {\n    let minDistance = Infinity;\n    let bestCandidate = null;\n    for (const candidate of candidates) {\n      const candidateCenter = candidate.getPositions().center;\n      const distance = this.calculateDistance_(currentCenter, candidateCenter, direction);\n      if (distance < minDistance) {\n        minDistance = distance;\n        bestCandidate = candidate;\n      }\n    }\n    return bestCandidate;\n  }\n\n  /**\n   * Determines if a target rectangle is in the specified navigation direction\n   * relative to a source rectangle.\n   *\n   * @param {Object} srcRect The bounding rectangle of the source element.\n   * @param {Object} targetRect The bounding rectangle of the target element.\n   * @param {string} direction The navigation direction ('up', 'down', 'left', 'right').\n   * @return {boolean} True if the target is in the specified direction relative to the source.\n   */\n  isInDirection_(srcRect, targetRect, direction) {\n    switch (direction) {\n      case 'right':\n        return targetRect.left >= srcRect.right;\n      case 'left':\n        return targetRect.right <= srcRect.left;\n      case 'down':\n        return targetRect.top >= srcRect.bottom;\n      case 'up':\n        return targetRect.bottom <= srcRect.top;\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Focus the last focused component saved before blur on player.\n   */\n  refocusComponent() {\n    if (this.lastFocusedComponent_) {\n      // If user is not active, set it to active.\n      if (!this.player_.userActive()) {\n        this.player_.userActive(true);\n      }\n      this.updateFocusableComponents();\n\n      // Search inside array of 'focusableComponents' for a match of name of\n      // the last focused component.\n      for (let i = 0; i < this.focusableComponents.length; i++) {\n        if (this.focusableComponents[i].name() === this.lastFocusedComponent_.name()) {\n          this.focus(this.focusableComponents[i]);\n          return;\n        }\n      }\n    } else {\n      this.focus(this.updateFocusableComponents()[0]);\n    }\n  }\n\n  /**\n   * Focuses on a given component.\n   * If the component is available to be focused, it focuses on the component.\n   * If not, it attempts to find a suitable DOM child within the component and focuses on it.\n   *\n   * @param {Component} component - The component to be focused.\n   */\n  focus(component) {\n    if (typeof component !== 'object') {\n      return;\n    }\n    if (component.getIsAvailableToBeFocused(component.el())) {\n      component.focus();\n    } else if (this.findSuitableDOMChild(component)) {\n      this.findSuitableDOMChild(component).focus();\n    }\n  }\n\n  /**\n   * Calculates the distance between two points, adjusting the calculation based on\n   * the specified navigation direction.\n   *\n   * @param {Object} center1 The center point of the first element.\n   * @param {Object} center2 The center point of the second element.\n   * @param {string} direction The direction of navigation ('up', 'down', 'left', 'right').\n   * @return {number} The calculated distance between the two centers.\n   */\n  calculateDistance_(center1, center2, direction) {\n    const dx = Math.abs(center1.x - center2.x);\n    const dy = Math.abs(center1.y - center2.y);\n    let distance;\n    switch (direction) {\n      case 'right':\n      case 'left':\n        // Higher weight for vertical distance in horizontal navigation.\n        distance = dx + dy * 100;\n        break;\n      case 'up':\n        // Strongly prioritize vertical proximity for UP navigation.\n        // Adjust the weight to ensure that elements directly above are favored.\n        distance = dy * 2 + dx * 0.5;\n        break;\n      case 'down':\n        // More balanced weight for vertical and horizontal distances.\n        // Adjust the weights here to find the best balance.\n        distance = dy * 5 + dx;\n        break;\n      default:\n        distance = dx + dy;\n    }\n    return distance;\n  }\n\n  /**\n   * This gets called by 'handlePlayerBlur_' if 'spatialNavigation' is enabled.\n   * Searches for the first 'TextTrackSelect' inside of modal to focus.\n   *\n   * @private\n   */\n  searchForTrackSelect_() {\n    const spatialNavigation = this;\n    for (const component of spatialNavigation.updateFocusableComponents()) {\n      if (component.constructor.name === 'TextTrackSelect') {\n        spatialNavigation.focus(component);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * @file loader.js\n */\n\n/** @import Player from '../player' */\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\nclass MediaLoader extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function that is run when this component is ready.\n   */\n  constructor(player, options, ready) {\n    // MediaLoader has no element\n    const options_ = merge$1({\n      createEl: false\n    }, options);\n    super(player, options_, ready);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (let i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        const techName = toTitleCase$1(j[i]);\n        let tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component$1.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (e.g. HTML5) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n  }\n}\nComponent$1.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file clickable-component.js\n */\n\n/** @import Player from './player' */\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\nclass ClickableComponent extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of component options.\n   *\n   * @param  {function} [options.clickHandler]\n   *         The function to call when the button is clicked / activated\n   *\n   * @param  {string} [options.controlText]\n   *         The text to set on the button\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    if (this.options_.controlText) {\n      this.controlText(this.options_.controlText);\n    }\n    this.handleMouseOver_ = e => this.handleMouseOver(e);\n    this.handleMouseOut_ = e => this.handleMouseOut(e);\n    this.handleClick_ = e => this.handleClick(e);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.emitTapEvents();\n    this.enable();\n  }\n\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    props = Object.assign({\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n    if (tag === 'button') {\n      log$1.error(`Creating a ClickableComponent with an HTML element of ${tag} is not supported; use a Button instead.`);\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = Object.assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n    const el = createEl(tag, props, attributes);\n    if (!this.player_.options_.experimentalSvgIcons) {\n      el.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n    }\n    this.createControlTextEl(el);\n    return el;\n  }\n  dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  controlText(text, el = this.el()) {\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n    const localizedText = this.localize(text);\n\n    /** @protected */\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl && !this.player_.options_.noUITitleAttributes) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-control vjs-button ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Enable this `ClickableComponent`\n   */\n  enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick_);\n      this.on('keydown', this.handleKeyDown_);\n    }\n  }\n\n  /**\n   * Disable this `ClickableComponent`\n   */\n  disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off('mouseover', this.handleMouseOver_);\n    this.off('mouseout', this.handleMouseOut_);\n    this.off(['tap', 'click'], this.handleClick_);\n    this.off('keydown', this.handleKeyDown_);\n  }\n\n  /**\n   * Handles language change in ClickableComponent for the player in components\n   *\n   *\n   */\n  handleLanguagechange() {\n    this.controlText(this.controlText_);\n  }\n\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  handleClick(event) {\n    if (this.options_.clickHandler) {\n      this.options_.clickHandler.call(this, arguments);\n    }\n  }\n\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (event.key === ' ' || event.key === 'Enter') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n}\nComponent$1.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n\n/** @import Player from './player' */\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\nclass PosterImage extends ClickableComponent {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update();\n    this.update_ = e => this.update(e);\n    player.on('posterchange', this.update_);\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n  dispose() {\n    this.player().off('posterchange', this.update_);\n    super.dispose();\n  }\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    // The el is an empty div to keep position in the DOM\n    // A picture and img el will be inserted when a source is set\n    return createEl('div', {\n      className: 'vjs-poster'\n    });\n  }\n\n  /**\n   * Get or set the `PosterImage`'s crossOrigin option.\n   *\n   * @param {string|null} [value]\n   *        The value to set the crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  crossOrigin(value) {\n    // `null` can be set to unset a value\n    if (typeof value === 'undefined') {\n      if (this.$('img')) {\n        // If the poster's element exists, give its value\n        return this.$('img').crossOrigin;\n      } else if (this.player_.tech_ && this.player_.tech_.isReady_) {\n        // If not but the tech is ready, query the tech\n        return this.player_.crossOrigin();\n      }\n      // Otherwise check options as the  poster is usually set before the state of crossorigin\n      // can be retrieved by the getter\n      return this.player_.options_.crossOrigin || this.player_.options_.crossorigin || null;\n    }\n    if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n      this.player_.log.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n      return;\n    }\n    if (this.$('img')) {\n      this.$('img').crossOrigin = value;\n    }\n    return;\n  }\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  update(event) {\n    const url = this.player().poster();\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method. (Re)creates\n   * the inner picture and img elementss when needed.\n   *\n   * @param {string} [url]\n   *        The URL to the source for the `PosterImage`. If not specified or falsy,\n   *        any source and ant inner picture/img are removed.\n   */\n  setSrc(url) {\n    if (!url) {\n      this.el_.textContent = '';\n      return;\n    }\n    if (!this.$('img')) {\n      this.el_.appendChild(createEl('picture', {\n        className: 'vjs-poster',\n        // Don't want poster to be tabbable.\n        tabIndex: -1\n      }, {}, createEl('img', {\n        loading: 'lazy',\n        crossOrigin: this.crossOrigin()\n      }, {\n        alt: ''\n      })));\n    }\n    this.$('img').src = url;\n  }\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n    if (this.player_.tech(true)) {\n      this.player_.tech(true).focus();\n    }\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n}\n\n/**\n * Get or set the `PosterImage`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<img>` tag to control the CORS\n * behavior.\n *\n * @param {string|null} [value]\n *        The value to set the `PosterImages`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|null|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\nPosterImage.prototype.crossorigin = PosterImage.prototype.crossOrigin;\nComponent$1.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\n\n/** @import Player from '../player' */\n\nconst darkGray = '#222';\nconst lightGray = '#ccc';\nconst fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  let hex;\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * Converts the CSS top/right/bottom/left property numeric value to string in pixels.\n *\n * @param {number} position\n *        The CSS top/right/bottom/left property value.\n *\n * @return {string}\n *          The CSS property value that was created, like '10px'.\n *\n * @private\n */\nfunction getCSSPositionValue(position) {\n  return position ? `${position}px` : '';\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\nclass TextTrackDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    const updateDisplayTextHandler = e => this.updateDisplay(e);\n    const updateDisplayHandler = e => {\n      this.updateDisplayOverlay();\n      this.updateDisplay(e);\n    };\n    player.on('loadstart', e => this.toggleDisplay(e));\n    player.on('texttrackchange', updateDisplayTextHandler);\n    player.on('loadedmetadata', e => {\n      this.updateDisplayOverlay();\n      this.preselectTrack(e);\n    });\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind_(this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      const screenOrientation = window$1.screen.orientation || window$1;\n      const changeOrientationEvent = window$1.screen.orientation ? 'change' : 'orientationchange';\n      screenOrientation.addEventListener(changeOrientationEvent, updateDisplayHandler);\n      player.on('dispose', () => screenOrientation.removeEventListener(changeOrientationEvent, updateDisplayHandler));\n      const tracks = this.options_.playerOptions.tracks || [];\n      for (let i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n      this.preselectTrack();\n    }));\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n  preselectTrack() {\n    const modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    const trackList = this.player_.textTracks();\n    const userPref = this.player_.cache_.selectedLanguage;\n    let firstDesc;\n    let firstCaptions;\n    let preferredTrack;\n    for (let i = 0; i < trackList.length; i++) {\n      const track = trackList[i];\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'translate': 'yes',\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  updateDisplay() {\n    const tracks = this.player_.textTracks();\n    const allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n    if (allowMultipleShowingTracks) {\n      const showingTracks = [];\n      for (let i = 0; i < tracks.length; ++i) {\n        const track = tracks[i];\n        if (track.mode !== 'showing') {\n          continue;\n        }\n        showingTracks.push(track);\n      }\n      this.updateForTrack(showingTracks);\n      return;\n    }\n\n    //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    let descriptionsTrack = null;\n    let captionsSubtitlesTrack = null;\n    let i = tracks.length;\n    while (i--) {\n      const track = tracks[i];\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n    if (!window$1.CSS.supports('inset', '10px')) {\n      const textTrackDisplay = this.el_;\n      const vjsTextTrackCues = textTrackDisplay.querySelectorAll('.vjs-text-track-cue');\n      const controlBarHeight = this.player_.controlBar.el_.getBoundingClientRect().height;\n      const playerHeight = this.player_.el_.getBoundingClientRect().height;\n\n      // Clear inline style before getting actual height of textTrackDisplay\n      textTrackDisplay.style = '';\n\n      // textrack style updates, this styles are required to be inline\n      tryUpdateStyle(textTrackDisplay, 'position', 'relative');\n      tryUpdateStyle(textTrackDisplay, 'height', playerHeight - controlBarHeight + 'px');\n      tryUpdateStyle(textTrackDisplay, 'top', 'unset');\n      if (IS_SMART_TV) {\n        tryUpdateStyle(textTrackDisplay, 'bottom', playerHeight + 'px');\n      } else {\n        tryUpdateStyle(textTrackDisplay, 'bottom', '0px');\n      }\n\n      // vjsTextTrackCue style updates\n      if (vjsTextTrackCues.length > 0) {\n        vjsTextTrackCues.forEach(vjsTextTrackCue => {\n          // verify if inset styles are inline\n          if (vjsTextTrackCue.style.inset) {\n            const insetStyles = vjsTextTrackCue.style.inset.split(' ');\n\n            // expected value is always 3\n            if (insetStyles.length === 3) {\n              Object.assign(vjsTextTrackCue.style, {\n                top: insetStyles[0],\n                right: insetStyles[1],\n                bottom: insetStyles[2],\n                left: 'unset'\n              });\n            }\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * Updates the displayed TextTrack to be sure it overlays the video when a either\n   * a {@link Player#texttrackchange} or a {@link Player#fullscreenchange} is fired.\n   */\n  updateDisplayOverlay() {\n    // inset-inline and inset-block are not supprted on old chrome, but these are\n    // only likely to be used on TV devices\n    if (!this.player_.videoHeight() || !window$1.CSS.supports('inset-inline: 10px')) {\n      return;\n    }\n    const playerWidth = this.player_.currentWidth();\n    const playerHeight = this.player_.currentHeight();\n    const playerAspectRatio = playerWidth / playerHeight;\n    const videoAspectRatio = this.player_.videoWidth() / this.player_.videoHeight();\n    let insetInlineMatch = 0;\n    let insetBlockMatch = 0;\n    if (Math.abs(playerAspectRatio - videoAspectRatio) > 0.1) {\n      if (playerAspectRatio > videoAspectRatio) {\n        insetInlineMatch = Math.round((playerWidth - playerHeight * videoAspectRatio) / 2);\n      } else {\n        insetBlockMatch = Math.round((playerHeight - playerWidth / videoAspectRatio) / 2);\n      }\n    }\n    tryUpdateStyle(this.el_, 'insetInline', getCSSPositionValue(insetInlineMatch));\n    tryUpdateStyle(this.el_, 'insetBlock', getCSSPositionValue(insetBlockMatch));\n  }\n\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  updateDisplayState(track) {\n    const overrides = this.player_.textTrackSettings.getValues();\n    const cues = track.activeCues;\n    let i = cues.length;\n    while (i--) {\n      const cue = cues[i];\n      if (!cue) {\n        continue;\n      }\n      const cueDiv = cue.displayState;\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = `2px 2px 3px ${darkGray}, 2px 2px 4px ${darkGray}, 2px 2px 5px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = `1px 1px ${darkGray}, 2px 2px ${darkGray}, 3px 3px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = `1px 1px ${lightGray}, 0 1px ${lightGray}, -1px -1px ${darkGray}, 0 -1px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = `0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}`;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        const fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(track => {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n    const cues = [];\n\n    // push all active track cues\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      for (let j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    }\n\n    // removes all cues before it processes new ones\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    // add unique class to each language text track & add settings styling if necessary\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      for (let j = 0; j < track.activeCues.length; ++j) {\n        const cueEl = track.activeCues[j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue', 'vjs-text-track-cue-' + (track.language ? track.language : i));\n        if (track.language) {\n          setAttribute(cueEl, 'lang', track.language);\n        }\n      }\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(track);\n      }\n    }\n  }\n}\nComponent$1.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\nclass LoadingSpinner extends Component$1 {\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  createEl() {\n    const isAudio = this.player_.isAudio();\n    const playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    const controlText = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: this.localize('{1} is loading.', [playerType])\n    });\n    const el = super.createEl('div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n    el.appendChild(controlText);\n    return el;\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-control-text').textContent = this.localize('{1} is loading.', [this.player_.isAudio() ? 'Audio Player' : 'Video Player']);\n  }\n}\nComponent$1.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\nclass Button extends ClickableComponent {\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tag, props = {}, attributes = {}) {\n    tag = 'button';\n    props = Object.assign({\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = Object.assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    const el = createEl(tag, props, attributes);\n    if (!this.player_.options_.experimentalSvgIcons) {\n      el.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n    }\n    this.createControlTextEl(el);\n    return el;\n  }\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  addChild(child, options = {}) {\n    const className = this.constructor.name;\n    log$1.warn(`Adding an actionable (user controllable) child to a Button (${className}) is not supported; use a ClickableComponent instead.`);\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component$1.prototype.addChild.call(this, child, options);\n  }\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  enable() {\n    super.enable();\n    this.el_.removeAttribute('disabled');\n  }\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  disable() {\n    super.disable();\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {KeyboardEvent} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (event.key === ' ' || event.key === 'Enter') {\n      event.stopPropagation();\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    super.handleKeyDown(event);\n  }\n}\nComponent$1.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\nclass BigPlayButton extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.mouseused_ = false;\n    this.setIcon('play');\n    this.on('mousedown', e => this.handleMouseDown(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n  buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {KeyboardEvent|MouseEvent|TouchEvent} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && 'clientX' in event && 'clientY' in event) {\n      silencePromise(playPromise);\n      if (this.player_.tech(true)) {\n        this.player_.tech(true).focus();\n      }\n      return;\n    }\n    const cb = this.player_.getChild('controlBar');\n    const playToggle = cb && cb.getChild('playToggle');\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n    const playFocus = () => playToggle.focus();\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, () => {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  }\n\n  /**\n   * Event handler that is called when a `BigPlayButton` receives a\n   * `keydown` event.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    this.mouseused_ = false;\n    super.handleKeyDown(event);\n  }\n\n  /**\n   * Handle `mousedown` events on the `BigPlayButton`.\n   *\n   * @param {MouseEvent} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    this.mouseused_ = true;\n  }\n}\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n */\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent$1.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n\n/** @import Player from './player' */\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\nclass CloseButton extends Button {\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  constructor(player, options) {\n    super(player, options);\n    this.setIcon('cancel');\n    this.controlText(options && options.controlText || this.localize('Close'));\n  }\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  buildCSSClass() {\n    return `vjs-close-button ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (event.key === 'Escape') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n}\nComponent$1.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n\n/** @import Player from './player' */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\nclass PlayToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // show or hide replay icon\n    options.replay = options.replay === undefined || options.replay;\n    this.setIcon('play');\n    this.on(player, 'play', e => this.handlePlay(e));\n    this.on(player, 'pause', e => this.handlePause(e));\n    if (options.replay) {\n      this.on(player, 'ended', e => this.handleEnded(e));\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-play-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  handleSeeked(event) {\n    this.removeClass('vjs-ended');\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  handlePlay(event) {\n    this.removeClass('vjs-ended', 'vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.setIcon('pause');\n    this.controlText('Pause');\n  }\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.setIcon('play');\n    this.controlText('Play');\n  }\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.setIcon('replay');\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', e => this.handleSeeked(e));\n  }\n}\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nPlayToggle.prototype.controlText_ = 'Play';\nComponent$1.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file time-display.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\nclass TimeDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, ['timeupdate', 'ended', 'seeking'], e => this.update(e));\n    this.updateTextNode_();\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const className = this.buildCSSClass();\n    const el = super.createEl('div', {\n      className: `${className} vjs-time-control vjs-control`\n    });\n    const span = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: `${this.localize(this.labelText_)}\\u00a0`\n    }, {\n      role: 'presentation'\n    });\n    el.appendChild(span);\n    this.contentEl_ = createEl('span', {\n      className: `${className}-display`\n    }, {\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      role: 'presentation'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Updates the displayed time according to the `updateContent` function which is defined in the child class.\n   *\n   * @param {Event} [event]\n   *          The `timeupdate`, `ended` or `seeking` (if enableSmoothSeeking is true) event that caused this function to be called.\n   */\n  update(event) {\n    if (!this.player_.options_.enableSmoothSeeking && event.type === 'seeking') {\n      return;\n    }\n    this.updateContent(event);\n  }\n\n  /**\n   * Updates the time display text node with a new time\n   *\n   * @param {number} [time=0] the time to update to\n   *\n   * @private\n   */\n  updateTextNode_(time = 0) {\n    time = formatTime(time);\n    if (this.formattedTime_ === time) {\n      return;\n    }\n    this.formattedTime_ = time;\n    this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', () => {\n      if (!this.contentEl_) {\n        return;\n      }\n      let oldNode = this.textNode_;\n      if (oldNode && this.contentEl_.firstChild !== oldNode) {\n        oldNode = null;\n        log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n      }\n      this.textNode_ = document$1.createTextNode(this.formattedTime_);\n      if (!this.textNode_) {\n        return;\n      }\n      if (oldNode) {\n        this.contentEl_.replaceChild(this.textNode_, oldNode);\n      } else {\n        this.contentEl_.appendChild(this.textNode_);\n      }\n    });\n  }\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  updateContent(event) {}\n}\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent$1.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\nclass CurrentTimeDisplay extends TimeDisplay {\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-current-time';\n  }\n\n  /**\n   * Update current time display\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    let time;\n    if (this.player_.ended()) {\n      time = this.player_.duration();\n    } else {\n      time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n    this.updateTextNode_(time);\n  }\n}\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent$1.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\nclass DurationDisplay extends TimeDisplay {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    const updateContent = e => this.updateContent(e);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    this.on(player, 'durationchange', updateContent);\n\n    // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n    this.on(player, 'loadstart', updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    this.on(player, 'loadedmetadata', updateContent);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-duration';\n  }\n\n  /**\n   * Update duration time display.\n   *\n   * @param {Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  updateContent(event) {\n    const duration = this.player_.duration();\n    this.updateTextNode_(duration);\n  }\n}\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent$1.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\nclass TimeDivider extends Component$1 {\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-time-control vjs-time-divider'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n    const div = super.createEl('div');\n    const span = super.createEl('span', {\n      textContent: '/'\n    });\n    div.appendChild(span);\n    el.appendChild(div);\n    return el;\n  }\n}\nComponent$1.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\nclass RemainingTimeDisplay extends TimeDisplay {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'durationchange', e => this.updateContent(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" character prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl();\n    if (this.options_.displayNegative !== false) {\n      el.insertBefore(createEl('span', {}, {\n        'aria-hidden': true\n      }, '-'), this.contentEl_);\n    }\n    return el;\n  }\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    }\n    let time;\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.ended()) {\n      time = 0;\n    } else if (this.player_.remainingTimeDisplay) {\n      time = this.player_.remainingTimeDisplay();\n    } else {\n      time = this.player_.remainingTime();\n    }\n    this.updateTextNode_(time);\n  }\n}\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent$1.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n\n/** @import Player from './player' */\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nclass LiveDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.updateShowing();\n    this.on(this.player(), 'durationchange', e => this.updateShowing(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-live-control vjs-control'\n    });\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display'\n    }, {\n      'aria-live': 'off'\n    });\n    this.contentEl_.appendChild(createEl('span', {\n      className: 'vjs-control-text',\n      textContent: `${this.localize('Stream Type')}\\u00a0`\n    }));\n    this.contentEl_.appendChild(document$1.createTextNode(this.localize('LIVE')));\n    el.appendChild(this.contentEl_);\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n}\nComponent$1.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file seek-to-live.js\n */\n\n/** @import Player from './player' */\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nclass SeekToLive extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.updateLiveEdgeStatus();\n    if (this.player_.liveTracker) {\n      this.updateLiveEdgeStatusHandler_ = e => this.updateLiveEdgeStatus(e);\n      this.on(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n    this.setIcon('circle', el);\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      textContent: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  updateLiveEdgeStatus() {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n\n  /**\n   * Dispose of the element and stop tracking\n   */\n  dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n    this.textEl_ = null;\n    super.dispose();\n  }\n}\n/**\n * The text that should display over the `SeekToLive`s control. Added for localization.\n *\n * @type {string}\n * @protected\n */\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent$1.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * @file num.js\n * @module num\n */\n\n/**\n * Keep a number between a min and a max value\n *\n * @param {number} number\n *        The number to clamp\n *\n * @param {number} min\n *        The minimum value\n * @param {number} max\n *        The maximum value\n *\n * @return {number}\n *         the clamped number\n */\nfunction clamp(number, min, max) {\n  number = Number(number);\n  return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n}\n\nvar Num = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  clamp: clamp\n});\n\n/**\n * @file slider.js\n */\n\n/** @import Player from '../player' */\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\nclass Slider extends Component$1 {\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  constructor(player, options) {\n    super(player, options);\n    this.handleMouseDown_ = e => this.handleMouseDown(e);\n    this.handleMouseUp_ = e => this.handleMouseUp(e);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.handleClick_ = e => this.handleClick(e);\n    this.handleMouseMove_ = e => this.handleMouseMove(e);\n    this.update_ = e => this.update(e);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    this.bar = this.getChild(this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    this.vertical(!!this.options_.vertical);\n    this.enable();\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  enabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  enable() {\n    if (this.enabled()) {\n      return;\n    }\n    this.on('mousedown', this.handleMouseDown_);\n    this.on('touchstart', this.handleMouseDown_);\n    this.on('keydown', this.handleKeyDown_);\n    this.on('click', this.handleClick_);\n\n    // TODO: deprecated, controlsvisible does not seem to be fired\n    this.on(this.player_, 'controlsvisible', this.update);\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    const doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown_);\n    this.off('touchstart', this.handleMouseDown_);\n    this.off('keydown', this.handleKeyDown_);\n    this.off('click', this.handleClick_);\n    this.off(this.player_, 'controlsvisible', this.update_);\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  }\n\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(type, props = {}, attributes = {}) {\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = Object.assign({\n      tabIndex: 0\n    }, props);\n    attributes = Object.assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100\n    }, attributes);\n    return super.createEl(type, props, attributes);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {MouseEvent} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  handleMouseDown(event) {\n    const doc = this.bar.el_.ownerDocument;\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintended scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {MouseEvent}\n     */\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove_);\n    this.on(doc, 'mouseup', this.handleMouseUp_);\n    this.on(doc, 'touchmove', this.handleMouseMove_);\n    this.on(doc, 'touchend', this.handleMouseUp_);\n    this.handleMouseMove(event, true);\n  }\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {MouseEvent} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false.\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  handleMouseMove(event) {}\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {MouseEvent} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  handleMouseUp(event) {\n    const doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {Event}\n     */\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.update();\n  }\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    // If there's no bar...\n    if (!this.el_ || !this.bar) {\n      return;\n    }\n\n    // clamp progress between 0 and 1\n    // and only round to four decimal places, as we round to two below\n    const progress = this.getProgress();\n    if (progress === this.progress_) {\n      return progress;\n    }\n    this.progress_ = progress;\n    this.requestNamedAnimationFrame('Slider#update', () => {\n      // Set the new bar width or height\n      const sizeKey = this.vertical() ? 'height' : 'width';\n\n      // Convert to a percentage for css value\n      this.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n    });\n    return progress;\n  }\n\n  /**\n   * Get the percentage of the bar that should be filled\n   * but clamped and rounded.\n   *\n   * @return {number}\n   *         percentage filled that the slider is\n   */\n  getProgress() {\n    return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n  }\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  calculateDistance(event) {\n    const position = getPointerPosition(this.el_, event);\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  }\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, right, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {KeyboardEvent} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const spatialNavOptions = this.options_.playerOptions.spatialNavigation;\n    const spatialNavEnabled = spatialNavOptions && spatialNavOptions.enabled;\n    const horizontalSeek = spatialNavOptions && spatialNavOptions.horizontalSeek;\n    if (spatialNavEnabled) {\n      if (horizontalSeek && event.key === 'ArrowLeft' || !horizontalSeek && event.key === 'ArrowDown') {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepBack();\n      } else if (horizontalSeek && event.key === 'ArrowRight' || !horizontalSeek && event.key === 'ArrowUp') {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepForward();\n      } else {\n        super.handleKeyDown(event);\n      }\n\n      // Left and Down Arrows\n    } else if (event.key === 'ArrowLeft' || event.key === 'ArrowDown') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (event.key === 'ArrowUp' || event.key === 'ArrowRight') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n    this.vertical_ = !!bool;\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  }\n}\nComponent$1.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n\n/** @import Player from '../../player' */\n\n// get the percent width of a time compared to the total end\nconst percentify = (time, end) => clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\nclass LoadProgressBar extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.partEls_ = [];\n    this.on(player, 'progress', e => this.update(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-load-progress'\n    });\n    const wrapper = createEl('span', {\n      className: 'vjs-control-text'\n    });\n    const loadedText = createEl('span', {\n      textContent: this.localize('Loaded')\n    });\n    const separator = document$1.createTextNode(': ');\n    this.percentageEl_ = createEl('span', {\n      className: 'vjs-control-text-loaded-percentage',\n      textContent: '0%'\n    });\n    el.appendChild(wrapper);\n    wrapper.appendChild(loadedText);\n    wrapper.appendChild(separator);\n    wrapper.appendChild(this.percentageEl_);\n    return el;\n  }\n  dispose() {\n    this.partEls_ = null;\n    this.percentageEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Update progress bar\n   *\n   * @param {Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  update(event) {\n    this.requestNamedAnimationFrame('LoadProgressBar#update', () => {\n      const liveTracker = this.player_.liveTracker;\n      const buffered = this.player_.buffered();\n      const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n      const bufferedEnd = this.player_.bufferedEnd();\n      const children = this.partEls_;\n      const percent = percentify(bufferedEnd, duration);\n      if (this.percent_ !== percent) {\n        // update the width of the progress bar\n        this.el_.style.width = percent;\n        // update the control-text\n        textContent(this.percentageEl_, percent);\n        this.percent_ = percent;\n      }\n\n      // add child elements to represent the individual buffered time ranges\n      for (let i = 0; i < buffered.length; i++) {\n        const start = buffered.start(i);\n        const end = buffered.end(i);\n        let part = children[i];\n        if (!part) {\n          part = this.el_.appendChild(createEl());\n          children[i] = part;\n        }\n\n        //  only update if changed\n        if (part.dataset.start === start && part.dataset.end === end) {\n          continue;\n        }\n        part.dataset.start = start;\n        part.dataset.end = end;\n\n        // set the percent based on the width of the progress bar (bufferedEnd)\n        part.style.left = percentify(start, bufferedEnd);\n        part.style.width = percentify(end - start, bufferedEnd);\n      }\n\n      // remove unused buffered range elements\n      for (let i = children.length; i > buffered.length; i--) {\n        this.el_.removeChild(children[i - 1]);\n      }\n      children.length = buffered.length;\n    });\n  }\n}\nComponent$1.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\nclass TimeTooltip extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint, content) {\n    const tooltipRect = findPosition(this.el_);\n    const playerRect = getBoundingClientRect(this.player_.el());\n    const seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    let spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    let spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // spaceRightOfPoint is always NaN for mouse time display\n    // because the seekbarRect does not have a right property. This causes\n    // the mouse tool tip to be truncated when it's close to the right edge of the player.\n    // In such cases, we ignore the `playerRect.right - seekBarRect.right` value when calculating.\n    // For the sake of consistency, we ignore seekBarRect.left - playerRect.left for the left edge.\n    if (!spaceRightOfPoint) {\n      spaceRightOfPoint = seekBarRect.width - seekBarPointPx;\n      spaceLeftOfPoint = seekBarPointPx;\n    }\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    let pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    // prevent small width fluctuations within 0.4px from\n    // changing the value below.\n    // This really helps for live to prevent the play\n    // progress time tooltip from jittering\n    pullTooltipBy = Math.round(pullTooltipBy);\n    this.el_.style.right = `-${pullTooltipBy}px`;\n    this.write(content);\n  }\n\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */\n  write(content) {\n    textContent(this.el_, content);\n  }\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  updateTime(seekBarRect, seekBarPoint, time, cb) {\n    this.requestNamedAnimationFrame('TimeTooltip#updateTime', () => {\n      let content;\n      const duration = this.player_.duration();\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n        const liveWindow = this.player_.liveTracker.liveWindow();\n        const secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n      this.update(seekBarRect, seekBarPoint, content);\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\nComponent$1.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\nclass PlayProgressBar extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setIcon('circle');\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint) {\n    const timeTooltip = this.getChild('timeTooltip');\n    if (!timeTooltip) {\n      return;\n    }\n    const time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  }\n}\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\nComponent$1.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\nclass MouseTimeDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint) {\n    const time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, () => {\n      this.el_.style.left = `${seekBarRect.width * seekBarPoint}px`;\n    });\n  }\n}\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent$1.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n\n// The number of seconds the `step*` functions move the timeline.\nconst STEP_SECONDS = 5;\n\n// The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\nconst PAGE_KEY_MULTIPLIER = 12;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\nclass SeekBar extends Slider {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    options = merge$1(SeekBar.prototype.options_, options);\n\n    // Avoid mutating the prototype's `children` array by creating a copy\n    options.children = [...options.children];\n    const shouldDisableSeekWhileScrubbingOnMobile = player.options_.disableSeekWhileScrubbingOnMobile && (IS_IOS || IS_ANDROID);\n\n    // Add the TimeTooltip as a child if we are on desktop, or on mobile with `disableSeekWhileScrubbingOnMobile: true`\n    if (!IS_IOS && !IS_ANDROID || shouldDisableSeekWhileScrubbingOnMobile) {\n      options.children.splice(1, 0, 'mouseTimeDisplay');\n    }\n    super(player, options);\n    this.shouldDisableSeekWhileScrubbingOnMobile_ = shouldDisableSeekWhileScrubbingOnMobile;\n    this.pendingSeekTime_ = null;\n    this.setEventHandlers_();\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n  setEventHandlers_() {\n    this.update_ = bind_(this, this.update);\n    this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, ['durationchange', 'timeupdate'], this.update);\n    this.on(this.player_, ['ended'], this.update_);\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n    this.enableIntervalHandler_ = e => this.enableInterval_(e);\n    this.disableIntervalHandler_ = e => this.disableInterval_(e);\n    this.on(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n    // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n    if ('hidden' in document$1 && 'visibilityState' in document$1) {\n      this.on(document$1, 'visibilitychange', this.toggleVisibility_);\n    }\n  }\n  toggleVisibility_(e) {\n    if (document$1.visibilityState === 'hidden') {\n      this.cancelNamedAnimationFrame('SeekBar#update');\n      this.cancelNamedAnimationFrame('Slider#update');\n      this.disableInterval_(e);\n    } else {\n      if (!this.player_.ended() && !this.player_.paused()) {\n        this.enableInterval_();\n      }\n\n      // we just switched back to the page and someone may be looking, so, update ASAP\n      this.update();\n    }\n  }\n  enableInterval_() {\n    if (this.updateInterval) {\n      return;\n    }\n    this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n  }\n  disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n      return;\n    }\n    if (!this.updateInterval) {\n      return;\n    }\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = null;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  update(event) {\n    // ignore updates while the tab is hidden\n    if (document$1.visibilityState === 'hidden') {\n      return;\n    }\n    const percent = super.update();\n    this.requestNamedAnimationFrame('SeekBar#update', () => {\n      const currentTime = this.player_.ended() ? this.player_.duration() : this.getCurrentTime_();\n      const liveTracker = this.player_.liveTracker;\n      let duration = this.player_.duration();\n      if (liveTracker && liveTracker.isLive()) {\n        duration = this.player_.liveTracker.liveCurrentTime();\n      }\n      if (this.percent_ !== percent) {\n        // machine readable value of progress bar (percentage complete)\n        this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n        this.percent_ = percent;\n      }\n      if (this.currentTime_ !== currentTime || this.duration_ !== duration) {\n        // human readable value of progress bar (time complete)\n        this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n        this.currentTime_ = currentTime;\n        this.duration_ = duration;\n      }\n\n      // update the progress bar time tooltip with the current time\n      if (this.bar) {\n        this.bar.update(getBoundingClientRect(this.el()), this.getProgress());\n      }\n    });\n    return percent;\n  }\n\n  /**\n   * Prevent liveThreshold from causing seeks to seem like they\n   * are not happening from a user perspective.\n   *\n   * @param {number} ct\n   *        current time to seek to\n   */\n  userSeek_(ct) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n      this.player_.liveTracker.nextSeekedFromUser();\n    }\n    this.player_.currentTime(ct);\n  }\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  getPercent() {\n    // If we have a pending seek time, we are scrubbing on mobile and should set the slider percent\n    // to reflect the current scrub location.\n    if (this.pendingSeekTime_) {\n      return this.pendingSeekTime_ / this.player_.duration();\n    }\n    const currentTime = this.getCurrentTime_();\n    let percent;\n    const liveTracker = this.player_.liveTracker;\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow();\n\n      // prevent the percent from changing at the live edge\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n    return percent;\n  }\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.videoWasPlaying = !this.player_.paused();\n\n    // Don't pause if we are on mobile and `disableSeekWhileScrubbingOnMobile: true`.\n    // In that case, playback should continue while the player scrubs to a new location.\n    if (!this.shouldDisableSeekWhileScrubbingOnMobile_) {\n      this.player_.pause();\n    }\n    super.handleMouseDown(event);\n  }\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mousemove` event that caused this to run.\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false\n   *\n   * @listens mousemove\n   */\n  handleMouseMove(event, mouseDown = false) {\n    if (!isSingleLeftClick(event) || isNaN(this.player_.duration())) {\n      return;\n    }\n    if (!mouseDown && !this.player_.scrubbing()) {\n      this.player_.scrubbing(true);\n    }\n    let newTime;\n    const distance = this.calculateDistance(event);\n    const liveTracker = this.player_.liveTracker;\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration();\n\n      // Don't let video end while scrubbing.\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      if (distance >= 0.99) {\n        liveTracker.seekToLiveEdge();\n        return;\n      }\n      const seekableStart = liveTracker.seekableStart();\n      const seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow();\n\n      // Don't let video end while scrubbing.\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      }\n\n      // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      }\n\n      // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n      if (newTime === Infinity) {\n        return;\n      }\n    }\n\n    // if on mobile and `disableSeekWhileScrubbingOnMobile: true`, keep track of the desired seek point but we won't initiate the seek until 'touchend'\n    if (this.shouldDisableSeekWhileScrubbingOnMobile_) {\n      this.pendingSeekTime_ = newTime;\n    } else {\n      this.userSeek_(newTime);\n    }\n    if (this.player_.options_.enableSmoothSeeking) {\n      this.update();\n    }\n  }\n  enable() {\n    super.enable();\n    const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n    if (!mouseTimeDisplay) {\n      return;\n    }\n    mouseTimeDisplay.show();\n  }\n  disable() {\n    super.disable();\n    const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n    if (!mouseTimeDisplay) {\n      return;\n    }\n    mouseTimeDisplay.hide();\n  }\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    super.handleMouseUp(event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    // If we have a pending seek time, then we have finished scrubbing on mobile and should initiate a seek.\n    if (this.pendingSeekTime_) {\n      this.userSeek_(this.pendingSeekTime_);\n      this.pendingSeekTime_ = null;\n    }\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {Event}\n     */\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    } else {\n      // We're done seeking and the time has changed.\n      // If the player is paused, make sure we display the correct time on the seek bar.\n      this.update_();\n    }\n  }\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  stepForward() {\n    this.userSeek_(this.player_.currentTime() + STEP_SECONDS);\n  }\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  stepBack() {\n    this.userSeek_(this.player_.currentTime() - STEP_SECONDS);\n  }\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const liveTracker = this.player_.liveTracker;\n    if (event.key === ' ' || event.key === 'Enter') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (event.key === 'Home') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(0);\n    } else if (event.key === 'End') {\n      event.preventDefault();\n      event.stopPropagation();\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.liveCurrentTime());\n      } else {\n        this.userSeek_(this.player_.duration());\n      }\n    } else if (/^[0-9]$/.test(event.key)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const gotoFraction = parseInt(event.key, 10) * 0.1;\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.seekableStart() + liveTracker.liveWindow() * gotoFraction);\n      } else {\n        this.userSeek_(this.player_.duration() * gotoFraction);\n      }\n    } else if (event.key === 'PageDown') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (event.key === 'PageUp') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n  dispose() {\n    this.disableInterval_();\n    this.off(this.player_, ['durationchange', 'timeupdate'], this.update);\n    this.off(this.player_, ['ended'], this.update_);\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n    this.off(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n    // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n    if ('hidden' in document$1 && 'visibilityState' in document$1) {\n      this.off(document$1, 'visibilitychange', this.toggleVisibility_);\n    }\n    super.dispose();\n  }\n}\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\nComponent$1.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\nclass ProgressControl extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.handleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    this.throttledHandleMouseSeek = throttle(bind_(this, this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n    this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n    this.handleMouseDownHandler_ = e => this.handleMouseDown(e);\n    this.enable();\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  handleMouseMove(event) {\n    const seekBar = this.getChild('seekBar');\n    if (!seekBar) {\n      return;\n    }\n    const playProgressBar = seekBar.getChild('playProgressBar');\n    const mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n    if (!playProgressBar && !mouseTimeDisplay) {\n      return;\n    }\n    const seekBarEl = seekBar.el();\n    const seekBarRect = findPosition(seekBarEl);\n    let seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n    // The default skin has a gap on either side of the `SeekBar`. This means\n    // that it's possible to trigger this behavior outside the boundaries of\n    // the `SeekBar`. This ensures we stay within it at all times.\n    seekBarPoint = clamp(seekBarPoint, 0, 1);\n    if (mouseTimeDisplay) {\n      mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n    }\n    if (playProgressBar) {\n      playProgressBar.update(seekBarRect, seekBar.getProgress());\n    }\n  }\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  handleMouseSeek(event) {\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  enabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  disable() {\n    this.children().forEach(child => child.disable && child.disable());\n    if (!this.enabled()) {\n      return;\n    }\n    this.off(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.off(this.el_, ['mousemove', 'touchmove'], this.handleMouseMove);\n    this.removeListenersAddedOnMousedownAndTouchstart();\n    this.addClass('disabled');\n    this.enabled_ = false;\n\n    // Restore normal playback state if controls are disabled while scrubbing\n    if (this.player_.scrubbing()) {\n      const seekBar = this.getChild('seekBar');\n      this.player_.scrubbing(false);\n      if (seekBar.videoWasPlaying) {\n        silencePromise(this.player_.play());\n      }\n    }\n  }\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  enable() {\n    this.children().forEach(child => child.enable && child.enable());\n    if (this.enabled()) {\n      return;\n    }\n    this.on(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.on(this.el_, ['mousemove', 'touchmove'], this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n\n  /**\n   * Cleanup listeners after the user finishes interacting with the progress controls\n   */\n  removeListenersAddedOnMousedownAndTouchstart() {\n    const doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseDown(event) {\n    const doc = this.el_.ownerDocument;\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n    this.removeListenersAddedOnMousedownAndTouchstart();\n  }\n}\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent$1.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file picture-in-picture-toggle.js\n */\n\n/** @import Player from './player' */\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\nclass PictureInPictureToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setIcon('picture-in-picture-enter');\n    this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], e => this.handlePictureInPictureChange(e));\n    this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], e => this.handlePictureInPictureEnabledChange(e));\n    this.on(player, ['loadedmetadata', 'audioonlymodechange', 'audiopostermodechange'], () => this.handlePictureInPictureAudioModeChange());\n\n    // TODO: Deactivate button on player emptied event.\n    this.disable();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-picture-in-picture-control vjs-hidden ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Displays or hides the button depending on the audio mode detection.\n   * Exits picture-in-picture if it is enabled when switching to audio mode.\n   */\n  handlePictureInPictureAudioModeChange() {\n    // This audio detection will not detect HLS or DASH audio-only streams because there was no reliable way to detect them at the time\n    const isSourceAudio = this.player_.currentType().substring(0, 5) === 'audio';\n    const isAudioMode = isSourceAudio || this.player_.audioPosterMode() || this.player_.audioOnlyMode();\n    if (!isAudioMode) {\n      this.show();\n      return;\n    }\n    if (this.player_.isInPictureInPicture()) {\n      this.player_.exitPictureInPicture();\n    }\n    this.hide();\n  }\n\n  /**\n   * Enables or disables button based on availability of a Picture-In-Picture mode.\n   *\n   * Enabled if\n   * - `player.options().enableDocumentPictureInPicture` is true and\n   *   window.documentPictureInPicture is available; or\n   * - `player.disablePictureInPicture()` is false and\n   *   element.requestPictureInPicture is available\n   */\n  handlePictureInPictureEnabledChange() {\n    if (document$1.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false || this.player_.options_.enableDocumentPictureInPicture && 'documentPictureInPicture' in window$1) {\n      this.enable();\n    } else {\n      this.disable();\n    }\n  }\n\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.setIcon('picture-in-picture-exit');\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.setIcon('picture-in-picture-enter');\n      this.controlText('Picture-in-Picture');\n    }\n    this.handlePictureInPictureEnabledChange();\n  }\n\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  }\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it only in browsers that support the Picture-in-Picture API.\n   */\n  show() {\n    // Does not allow to display the pictureInPictureToggle in browsers that do not support the Picture-in-Picture API, e.g. Firefox.\n    if (typeof document$1.exitPictureInPicture !== 'function') {\n      return;\n    }\n    super.show();\n  }\n}\n\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent$1.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * @file fullscreen-toggle.js\n */\n\n/** @import Player from './player' */\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\nclass FullscreenToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setIcon('fullscreen-enter');\n    this.on(player, 'fullscreenchange', e => this.handleFullscreenChange(e));\n    if (document$1[player.fsApi_.fullscreenEnabled] === false) {\n      this.disable();\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-fullscreen-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Exit Fullscreen');\n      this.setIcon('fullscreen-exit');\n    } else {\n      this.controlText('Fullscreen');\n      this.setIcon('fullscreen-enter');\n    }\n  }\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  }\n}\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent$1.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/** @import Component from '../../component' */\n/** @import Player from '../../player' */\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nconst checkVolumeSupport = function (self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\nclass VolumeLevel extends Component$1 {\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-volume-level'\n    });\n    this.setIcon('circle', el);\n    el.appendChild(super.createEl('span', {\n      className: 'vjs-control-text'\n    }));\n    return el;\n  }\n}\nComponent$1.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-level-tooltip.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * Volume level tooltips display a volume above or side by side the volume bar.\n *\n * @extends Component\n */\nclass VolumeLevelTooltip extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the volume tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-volume-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Updates the position of the tooltip relative to the `VolumeBar` and\n   * its content text.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  update(rangeBarRect, rangeBarPoint, vertical, content) {\n    if (!vertical) {\n      const tooltipRect = getBoundingClientRect(this.el_);\n      const playerRect = getBoundingClientRect(this.player_.el());\n      const volumeBarPointPx = rangeBarRect.width * rangeBarPoint;\n      if (!playerRect || !tooltipRect) {\n        return;\n      }\n      const spaceLeftOfPoint = rangeBarRect.left - playerRect.left + volumeBarPointPx;\n      const spaceRightOfPoint = rangeBarRect.width - volumeBarPointPx + (playerRect.right - rangeBarRect.right);\n      let pullTooltipBy = tooltipRect.width / 2;\n      if (spaceLeftOfPoint < pullTooltipBy) {\n        pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n      } else if (spaceRightOfPoint < pullTooltipBy) {\n        pullTooltipBy = spaceRightOfPoint;\n      }\n      if (pullTooltipBy < 0) {\n        pullTooltipBy = 0;\n      } else if (pullTooltipBy > tooltipRect.width) {\n        pullTooltipBy = tooltipRect.width;\n      }\n      this.el_.style.right = `-${pullTooltipBy}px`;\n    }\n    this.write(`${content}%`);\n  }\n\n  /**\n   * Write the volume to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted volume for the tooltip.\n   */\n  write(content) {\n    textContent(this.el_, content);\n  }\n\n  /**\n   * Updates the position of the volume tooltip relative to the `VolumeBar`.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   * @param {number} volume\n   *        The volume level to update the tooltip to\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, cb) {\n    this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume', () => {\n      this.update(rangeBarRect, rangeBarPoint, vertical, volume.toFixed(0));\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\nComponent$1.registerComponent('VolumeLevelTooltip', VolumeLevelTooltip);\n\n/**\n * @file mouse-volume-level-display.js\n */\n\n/**\n * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the\n * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}\n * indicating the volume level which is represented by a given point in the\n * {@link VolumeBar}.\n *\n * @extends Component\n */\nclass MouseVolumeLevelDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n\n  /**\n   * Enquires updates to its own DOM as well as the DOM of its\n   * {@link VolumeLevelTooltip} child.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  update(rangeBarRect, rangeBarPoint, vertical) {\n    const volume = 100 * rangeBarPoint;\n    this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, () => {\n      if (vertical) {\n        this.el_.style.bottom = `${rangeBarRect.height * rangeBarPoint}px`;\n      } else {\n        this.el_.style.left = `${rangeBarRect.width * rangeBarPoint}px`;\n      }\n    });\n  }\n}\n\n/**\n * Default options for `MouseVolumeLevelDisplay`\n *\n * @type {Object}\n * @private\n */\nMouseVolumeLevelDisplay.prototype.options_ = {\n  children: ['volumeLevelTooltip']\n};\nComponent$1.registerComponent('MouseVolumeLevelDisplay', MouseVolumeLevelDisplay);\n\n/**\n * @file volume-bar.js\n */\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\nclass VolumeBar extends Slider {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on('slideractive', e => this.updateLastVolume_(e));\n    this.on(player, 'volumechange', e => this.updateARIAAttributes(e));\n    player.ready(() => this.updateARIAAttributes());\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    super.handleMouseDown(event);\n  }\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  handleMouseMove(event) {\n    const mouseVolumeLevelDisplay = this.getChild('mouseVolumeLevelDisplay');\n    if (mouseVolumeLevelDisplay) {\n      const volumeBarEl = this.el();\n      const volumeBarRect = getBoundingClientRect(volumeBarEl);\n      const vertical = this.vertical();\n      let volumeBarPoint = getPointerPosition(volumeBarEl, event);\n      volumeBarPoint = vertical ? volumeBarPoint.y : volumeBarPoint.x;\n      // The default skin has a gap on either side of the `VolumeBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `VolumeBar`. This ensures we stay within it at all times.\n      volumeBarPoint = clamp(volumeBarPoint, 0, 1);\n      mouseVolumeLevelDisplay.update(volumeBarRect, volumeBarPoint, vertical);\n    }\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n\n  /**\n   * If the player is muted unmute it.\n   */\n  checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  }\n\n  /**\n   * Increase volume level for keyboard users\n   */\n  stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n  stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  updateARIAAttributes(event) {\n    const ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  updateLastVolume_() {\n    const volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', () => {\n      if (this.player_.volume() === 0) {\n        this.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  }\n}\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n// MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  VolumeBar.prototype.options_.children.splice(0, 0, 'mouseVolumeLevelDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent$1.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\nclass VolumeControl extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n    super(player, options);\n\n    // hide this control if volume support is missing\n    checkVolumeSupport(this, player);\n    this.throttledHandleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n    this.on('mousedown', e => this.handleMouseDown(e));\n    this.on('touchstart', e => this.handleMouseDown(e));\n    this.on('mousemove', e => this.handleMouseMove(e));\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    this.on(this.volumeBar, ['focus', 'slideractive'], () => {\n      this.volumeBar.addClass('vjs-slider-active');\n      this.addClass('vjs-slider-active');\n      this.trigger('slideractive');\n    });\n    this.on(this.volumeBar, ['blur', 'sliderinactive'], () => {\n      this.volumeBar.removeClass('vjs-slider-active');\n      this.removeClass('vjs-slider-active');\n      this.trigger('sliderinactive');\n    });\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    let orientationClass = 'vjs-volume-horizontal';\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n    return super.createEl('div', {\n      className: `vjs-volume-control vjs-control ${orientationClass}`\n    });\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseDown(event) {\n    const doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    const doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  }\n}\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent$1.registerComponent('VolumeControl', VolumeControl);\n\n/** @import Component from '../../component' */\n/** @import Player from '../../player' */\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nconst checkMuteSupport = function (self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n\n/** @import Player from './player' */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\nclass MuteToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n\n    // hide this control if volume support is missing\n    checkMuteSupport(this, player);\n    this.on(player, ['loadstart', 'volumechange'], e => this.update(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-mute-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const vol = this.player_.volume();\n    const lastVolume = this.player_.lastVolume_();\n    if (vol === 0) {\n      const volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  updateIcon_() {\n    const vol = this.player_.volume();\n    let level = 3;\n    this.setIcon('volume-high');\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n    if (vol === 0 || this.player_.muted()) {\n      this.setIcon('volume-mute');\n      level = 0;\n    } else if (vol < 0.33) {\n      this.setIcon('volume-low');\n      level = 1;\n    } else if (vol < 0.67) {\n      this.setIcon('volume-medium');\n      level = 2;\n    }\n    removeClass(this.el_, [0, 1, 2, 3].reduce((str, i) => str + `${i ? ' ' : ''}vjs-vol-${i}`, ''));\n    addClass(this.el_, `vjs-vol-${level}`);\n  }\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  updateControlText_() {\n    const soundOff = this.player_.muted() || this.player_.volume() === 0;\n    const text = soundOff ? 'Unmute' : 'Mute';\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  }\n}\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent$1.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\nclass VolumePanel extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n    super(player, options);\n\n    // this handler is used by mouse handler methods below\n    this.handleKeyPressHandler_ = e => this.handleKeyPress(e);\n    this.on(player, ['loadstart'], e => this.volumePanelState_(e));\n    this.on(this.muteToggle, 'keyup', e => this.handleKeyPress(e));\n    this.on(this.volumeControl, 'keyup', e => this.handleVolumeControlKeyUp(e));\n    this.on('keydown', e => this.handleKeyPress(e));\n    this.on('mouseover', e => this.handleMouseOver(e));\n    this.on('mouseout', e => this.handleMouseOut(e));\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    this.on(this.volumeControl, ['slideractive'], this.sliderActive_);\n    this.on(this.volumeControl, ['sliderinactive'], this.sliderInactive_);\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n  sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    let orientationClass = 'vjs-volume-panel-horizontal';\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n    return super.createEl('div', {\n      className: `vjs-volume-panel vjs-control ${orientationClass}`\n    });\n  }\n\n  /**\n   * Dispose of the `volume-panel` and all child components.\n   */\n  dispose() {\n    this.handleMouseOut();\n    super.dispose();\n  }\n\n  /**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */\n  handleVolumeControlKeyUp(event) {\n    if (event.key === 'Escape') {\n      this.muteToggle.focus();\n    }\n  }\n\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */\n  handleMouseOver(event) {\n    this.addClass('vjs-hover');\n    on(document$1, 'keyup', this.handleKeyPressHandler_);\n  }\n\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */\n  handleMouseOut(event) {\n    this.removeClass('vjs-hover');\n    off(document$1, 'keyup', this.handleKeyPressHandler_);\n  }\n\n  /**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */\n  handleKeyPress(event) {\n    if (event.key === 'Escape') {\n      this.handleMouseOut();\n    }\n  }\n}\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent$1.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * Button to skip forward a configurable amount of time\n * through a video. Renders in the control bar.\n *\n * e.g. options: {controlBar: {skipButtons: forward: 5}}\n *\n * @extends Button\n */\nclass SkipForward extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.validOptions = [5, 10, 30];\n    this.skipTime = this.getSkipForwardTime();\n    if (this.skipTime && this.validOptions.includes(this.skipTime)) {\n      this.setIcon(`forward-${this.skipTime}`);\n      this.controlText(this.localize('Skip forward {1} seconds', [this.skipTime.toLocaleString(player.language())]));\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  getSkipForwardTime() {\n    const playerOptions = this.options_.playerOptions;\n    return playerOptions.controlBar && playerOptions.controlBar.skipButtons && playerOptions.controlBar.skipButtons.forward;\n  }\n  buildCSSClass() {\n    return `vjs-skip-forward-${this.getSkipForwardTime()} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * On click, skips forward in the duration/seekable range by a configurable amount of seconds.\n   * If the time left in the duration/seekable range is less than the configured 'skip forward' time,\n   * skips to end of duration/seekable range.\n   *\n   * Handle a click on a `SkipForward` button\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` event that caused this function\n   *        to be called\n   */\n  handleClick(event) {\n    if (isNaN(this.player_.duration())) {\n      return;\n    }\n    const currentVideoTime = this.player_.currentTime();\n    const liveTracker = this.player_.liveTracker;\n    const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    let newTime;\n    if (currentVideoTime + this.skipTime <= duration) {\n      newTime = currentVideoTime + this.skipTime;\n    } else {\n      newTime = duration;\n    }\n    this.player_.currentTime(newTime);\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.controlText(this.localize('Skip forward {1} seconds', [this.skipTime]));\n  }\n}\nSkipForward.prototype.controlText_ = 'Skip Forward';\nComponent$1.registerComponent('SkipForward', SkipForward);\n\n/**\n * Button to skip backward a configurable amount of time\n * through a video. Renders in the control bar.\n *\n *  * e.g. options: {controlBar: {skipButtons: backward: 5}}\n *\n * @extends Button\n */\nclass SkipBackward extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.validOptions = [5, 10, 30];\n    this.skipTime = this.getSkipBackwardTime();\n    if (this.skipTime && this.validOptions.includes(this.skipTime)) {\n      this.setIcon(`replay-${this.skipTime}`);\n      this.controlText(this.localize('Skip backward {1} seconds', [this.skipTime.toLocaleString(player.language())]));\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  getSkipBackwardTime() {\n    const playerOptions = this.options_.playerOptions;\n    return playerOptions.controlBar && playerOptions.controlBar.skipButtons && playerOptions.controlBar.skipButtons.backward;\n  }\n  buildCSSClass() {\n    return `vjs-skip-backward-${this.getSkipBackwardTime()} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * On click, skips backward in the video by a configurable amount of seconds.\n   * If the current time in the video is less than the configured 'skip backward' time,\n   * skips to beginning of video or seekable range.\n   *\n   * Handle a click on a `SkipBackward` button\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` event that caused this function\n   *        to be called\n   */\n  handleClick(event) {\n    const currentVideoTime = this.player_.currentTime();\n    const liveTracker = this.player_.liveTracker;\n    const seekableStart = liveTracker && liveTracker.isLive() && liveTracker.seekableStart();\n    let newTime;\n    if (seekableStart && currentVideoTime - this.skipTime <= seekableStart) {\n      newTime = seekableStart;\n    } else if (currentVideoTime >= this.skipTime) {\n      newTime = currentVideoTime - this.skipTime;\n    } else {\n      newTime = 0;\n    }\n    this.player_.currentTime(newTime);\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.controlText(this.localize('Skip backward {1} seconds', [this.skipTime]));\n  }\n}\nSkipBackward.prototype.controlText_ = 'Skip Backward';\nComponent$1.registerComponent('SkipBackward', SkipBackward);\n\n/**\n * @file menu.js\n */\n\n/** @import Player from '../player' */\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\nclass Menu extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    if (options) {\n      this.menuButton_ = options.menuButton;\n    }\n    this.focusedChild_ = -1;\n    this.on('keydown', e => this.handleKeyDown(e));\n\n    // All the menu item instances share the same blur handler provided by the menu container.\n    this.boundHandleBlur_ = e => this.handleBlur(e);\n    this.boundHandleTapClick_ = e => this.handleTapClick(e);\n  }\n\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n  addEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  removeEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n    this.removeEventListenerForItem(component);\n    super.removeChild(component);\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  addItem(component) {\n    const childComponent = this.addChild(component);\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  createEl() {\n    const contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n    const el = super.createEl('div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  handleBlur(event) {\n    const relatedTarget = event.relatedTarget || document$1.activeElement;\n\n    // Close menu popup when a user clicks outside the menu\n    if (!this.children().some(element => {\n      return element.el() === relatedTarget;\n    })) {\n      const btn = this.menuButton_;\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      const childComponents = this.children();\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n      const foundComponent = childComponents.filter(component => component.el() === event.target)[0];\n      if (!foundComponent) {\n        return;\n      }\n\n      // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {KeyboardEvent} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Left and Down Arrows\n    if (event.key === 'ArrowLeft' || event.key === 'ArrowDown') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (event.key === 'ArrowRight' || event.key === 'ArrowUp') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  stepForward() {\n    let stepChild = 0;\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  }\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  stepBack() {\n    let stepChild = 0;\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  }\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  focus(item = 0) {\n    const children = this.children().slice();\n    const haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n    if (haveTitle) {\n      children.shift();\n    }\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  }\n}\nComponent$1.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n\n/** @import Player from '../player' */\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\nclass MenuButton extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n    this.menuButton_ = new Button(player, options);\n    this.menuButton_.controlText(this.controlText_);\n    this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    const buttonClass = Button.prototype.buildCSSClass();\n    this.menuButton_.el_.className = this.buildCSSClass() + ' ' + buttonClass;\n    this.menuButton_.removeClass('vjs-control');\n    this.addChild(this.menuButton_);\n    this.update();\n    this.enabled_ = true;\n    const handleClick = e => this.handleClick(e);\n    this.handleMenuKeyUp_ = e => this.handleMenuKeyUp(e);\n    this.on(this.menuButton_, 'tap', handleClick);\n    this.on(this.menuButton_, 'click', handleClick);\n    this.on(this.menuButton_, 'keydown', e => this.handleKeyDown(e));\n    this.on(this.menuButton_, 'mouseenter', () => {\n      this.addClass('vjs-hover');\n      this.menu.show();\n      on(document$1, 'keyup', this.handleMenuKeyUp_);\n    });\n    this.on('mouseleave', e => this.handleMouseLeave(e));\n    this.on('keydown', e => this.handleSubmenuKeyDown(e));\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n  update() {\n    const menu = this.createMenu();\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n      this.menu.contentEl_.removeAttribute('role');\n    } else {\n      this.show();\n      this.menu.contentEl_.setAttribute('role', 'menu');\n    }\n  }\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  createMenu() {\n    const menu = new Menu(this.player_, {\n      menuButton: this\n    });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      const titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        textContent: toTitleCase$1(this.options_.title),\n        tabIndex: -1\n      });\n      const titleComponent = new Component$1(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n    this.items = this.createItems();\n    if (this.items) {\n      // Add menu items to the menu\n      for (let i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n    return menu;\n  }\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  createItems() {}\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n\n  /**\n   * Overwrites the `setIcon` method from `Component`.\n   * In this case, we want the icon to be appended to the menuButton.\n   *\n   * @param {string} name\n   *         The icon name to be added.\n   */\n  setIcon(name) {\n    super.setIcon(name, this.menuButton_.el_);\n  }\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  buildWrapperCSSClass() {\n    let menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    const buttonClass = Button.prototype.buildCSSClass();\n    return `vjs-menu-button ${menuButtonClass} ${buttonClass} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    let menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n    return `vjs-menu-button ${menuButtonClass} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  controlText(text, el = this.menuButton_.el()) {\n    return this.menuButton_.controlText(text, el);\n  }\n\n  /**\n   * Dispose of the `menu-button` and all child components.\n   */\n  dispose() {\n    this.handleMouseLeave();\n    super.dispose();\n  }\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n\n  /**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */\n  handleMouseLeave(event) {\n    this.removeClass('vjs-hover');\n    off(document$1, 'keyup', this.handleMenuKeyUp_);\n  }\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  focus() {\n    this.menuButton_.focus();\n  }\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  blur() {\n    this.menuButton_.blur();\n  }\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (event.key === 'Escape' || event.key === 'Tab') {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (!event.key === 'Tab') {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.focus();\n      }\n      // Up Arrow or Down Arrow also 'press' the button to open the menu\n    } else if (event.key === 'Up' || event.key === 'Down' && !(this.player_.options_.playerOptions.spatialNavigation && this.player_.options_.playerOptions.spatialNavigation.enabled)) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n\n  /**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */\n  handleMenuKeyUp(event) {\n    // Escape hides popup menu\n    if (event.key === 'Escape' || event.key === 'Tab') {\n      this.removeClass('vjs-hover');\n    }\n  }\n\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {Event} event\n   *        The event that caused this function to be called.\n   */\n  handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (event.key === 'Escape' || event.key === 'Tab') {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (!event.key === 'Tab') {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.focus();\n      }\n    }\n  }\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n      this.menu.focus();\n    }\n  }\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  }\n}\nComponent$1.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n\n/** @import Player from './player' */\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\nclass TrackButton extends MenuButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const tracks = options.tracks;\n    super(player, options);\n    if (this.items.length <= 1) {\n      this.hide();\n    }\n    if (!tracks) {\n      return;\n    }\n    const updateHandler = bind_(this, this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    tracks.addEventListener('labelchange', updateHandler);\n    this.player_.on('ready', updateHandler);\n    this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n      tracks.removeEventListener('labelchange', updateHandler);\n    });\n  }\n}\nComponent$1.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-item.js\n */\n\n/** @import Player from '../player' */\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\nclass MenuItem extends ClickableComponent {\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.selectable = options.selectable;\n    this.isSelected_ = options.selected || false;\n    this.multiSelectable = options.multiSelectable;\n    this.selected(this.isSelected_);\n    if (this.selectable) {\n      if (this.multiSelectable) {\n        this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      this.el_.setAttribute('role', 'menuitem');\n    }\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    const el = super.createEl('li', Object.assign({\n      className: 'vjs-menu-item',\n      tabIndex: -1\n    }, props), attrs);\n\n    // swap icon with menu item text.\n    const menuItemEl = createEl('span', {\n      className: 'vjs-menu-item-text',\n      textContent: this.localize(this.options_.label)\n    });\n\n    // If using SVG icons, the element with vjs-icon-placeholder will be added separately.\n    if (this.player_.options_.experimentalSvgIcons) {\n      el.appendChild(menuItemEl);\n    } else {\n      el.replaceChild(menuItemEl, el.querySelector('.vjs-icon-placeholder'));\n    }\n    return el;\n  }\n\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    if (!['Tab', 'Escape', 'ArrowUp', 'ArrowLeft', 'ArrowRight', 'ArrowDown'].includes(event.key)) {\n      // Pass keydown handling up for unused keys\n      super.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    this.selected(true);\n  }\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  selected(selected) {\n    if (this.selectable) {\n      if (selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  }\n}\nComponent$1.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\nclass TextTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    super(player, options);\n    this.track = track;\n    // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n    this.kinds = (options.kinds || [options.kind || this.track.kind]).filter(Boolean);\n    const changeHandler = (...args) => {\n      this.handleTracksChange.apply(this, args);\n    };\n    const selectedLanguageChangeHandler = (...args) => {\n      this.handleSelectedLanguageChange.apply(this, args);\n    };\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      let event;\n      this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n        if (!event) {\n          event = document$1.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    this.handleTracksChange();\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const referenceTrack = this.track;\n    const tracks = this.player_.textTracks();\n    super.handleClick(event);\n    if (!tracks) {\n      return;\n    }\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n\n      // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      }\n\n      // If this text track is the component's track and it is not showing,\n      // set it to showing.\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n\n        // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n\n  /**\n   * Handle text track list change\n   *\n   * @param {Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  handleTracksChange(event) {\n    const shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  }\n  handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      const selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  }\n  dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * A special menu item for turning off a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\nclass OffTextTrackMenuItem extends TextTrackMenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n    super(player, options);\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {Event} event\n   *        The event that caused this function to run\n   */\n  handleTracksChange(event) {\n    const tracks = this.player().textTracks();\n    let shouldBeSelected = true;\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  }\n  handleSelectedLanguageChange(event) {\n    const tracks = this.player().textTracks();\n    let allHidden = true;\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  }\n\n  /**\n   * Update control text and label on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-menu-item-text').textContent = this.player_.localize(this.options_.label);\n    super.handleLanguagechange();\n  }\n}\nComponent$1.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\nclass TextTrackButton extends TrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.tracks = player.textTracks();\n    super(player, options);\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n  createItems(items = [], TrackMenuItem = TextTrackMenuItem) {\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    let label;\n    if (this.label_) {\n      label = `${this.label_} off`;\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label\n    }));\n    this.hideThreshold_ += 1;\n    const tracks = this.player_.textTracks();\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        const item = new TrackMenuItem(this.player_, {\n          track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(`vjs-${track.kind}-menu-item`);\n        items.push(item);\n      }\n    }\n    return items;\n  }\n}\nComponent$1.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\nclass ChaptersTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const cue = options.cue;\n    const currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    super(player, options);\n    this.track = track;\n    this.cue = cue;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick();\n    this.player_.currentTime(this.cue.startTime);\n  }\n}\nComponent$1.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n\n/** @import Player from '../../player' */\n/** @import Menu from '../../menu/menu' */\n/** @import TextTrack from '../../tracks/text-track' */\n/** @import TextTrackMenuItem from '../text-track-controls/text-track-menu-item' */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\nclass ChaptersButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this function is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.setIcon('chapters');\n    this.selectCurrentItem_ = () => {\n      this.items.forEach(item => {\n        item.selected(this.track_.activeCues[0] === item.cue);\n      });\n    };\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-chapters-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-chapters-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  update(event) {\n    if (event && event.track && event.track.kind !== 'chapters') {\n      return;\n    }\n    const track = this.findChaptersTrack();\n    if (track !== this.track_) {\n      this.setTrack(track);\n      super.update();\n    } else if (!this.items || track && track.cues && track.cues.length !== this.items.length) {\n      // Update the menu initially or if the number of cues has changed since set\n      super.update();\n    }\n  }\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n      this.track_.removeEventListener('cuechange', this.selectCurrentItem_);\n      this.track_ = null;\n    }\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n      const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n      this.track_.addEventListener('cuechange', this.selectCurrentItem_);\n    }\n  }\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  findChaptersTrack() {\n    const tracks = this.player_.textTracks() || [];\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      const track = tracks[i];\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase$1(this.kind_));\n  }\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return super.createMenu();\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return  {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  createItems() {\n    const items = [];\n    if (!this.track_) {\n      return items;\n    }\n    const cues = this.track_.cues;\n    if (!cues) {\n      return items;\n    }\n    for (let i = 0, l = cues.length; i < l; i++) {\n      const cue = cues[i];\n      const mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue\n      });\n      items.push(mi);\n    }\n    return items;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent$1.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\nclass DescriptionsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.setIcon('audio-description');\n    const tracks = player.textTracks();\n    const changeHandler = bind_(this, this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n    this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n  handleTracksChange(event) {\n    const tracks = this.player().textTracks();\n    let disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-descriptions-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-descriptions-button ${super.buildWrapperCSSClass()}`;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent$1.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\nclass SubtitlesButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.setIcon('subtitles');\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-subtitles-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-subtitles-button ${super.buildWrapperCSSClass()}`;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\nclass CaptionSettingsMenuItem extends TextTrackMenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    options.track = {\n      player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    super(player, options);\n    this.addClass('vjs-texttrack-settings');\n    this.controlText(', opens ' + options.kind + ' settings dialog');\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  }\n\n  /**\n   * Update control text and label on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-menu-item-text').textContent = this.player_.localize(this.options_.kind + ' settings');\n    super.handleLanguagechange();\n  }\n}\nComponent$1.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\nclass CaptionsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.setIcon('captions');\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-captions-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-captions-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  createItems() {\n    const items = [];\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n    return super.createItems(items);\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent$1.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\nclass SubsCapsMenuItem extends TextTrackMenuItem {\n  createEl(type, props, attrs) {\n    const el = super.createEl(type, props, attrs);\n    const parentSpan = el.querySelector('.vjs-menu-item-text');\n    if (this.options_.track.kind === 'captions') {\n      if (this.player_.options_.experimentalSvgIcons) {\n        this.setIcon('captions', el);\n      } else {\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-icon-placeholder'\n        }, {\n          'aria-hidden': true\n        }));\n      }\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        // space added as the text will visually flow with the\n        // label\n        textContent: ` ${this.localize('Captions')}`\n      }));\n    }\n    return el;\n  }\n}\nComponent$1.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\nclass SubsCapsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    this.label_ = 'subtitles';\n    this.setIcon('subtitles');\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(this.player_.language_) > -1) {\n      this.label_ = 'captions';\n      this.setIcon('captions');\n    }\n    this.menuButton_.controlText(toTitleCase$1(this.label_));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-subs-caps-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-subs-caps-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  createItems() {\n    let items = [];\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n    items = super.createItems(items, SubsCapsMenuItem);\n    return items;\n  }\n}\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @protected\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\nclass AudioTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    super(player, options);\n    this.track = track;\n    this.addClass(`vjs-${track.kind}-menu-item`);\n    const changeHandler = (...args) => {\n      this.handleTracksChange.apply(this, args);\n    };\n    tracks.addEventListener('change', changeHandler);\n    this.on('dispose', () => {\n      tracks.removeEventListener('change', changeHandler);\n    });\n  }\n  createEl(type, props, attrs) {\n    const el = super.createEl(type, props, attrs);\n    const parentSpan = el.querySelector('.vjs-menu-item-text');\n    if (['main-desc', 'descriptions'].indexOf(this.options_.track.kind) >= 0) {\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        textContent: ' ' + this.localize('Descriptions')\n      }));\n    }\n    return el;\n  }\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick(event);\n\n    // the audio track list will automatically toggle other tracks\n    // off for us.\n    this.track.enabled = true;\n\n    // when native audio tracks are used, we want to make sure that other tracks are turned off\n    if (this.player_.tech_.featuresNativeAudioTracks) {\n      const tracks = this.player_.audioTracks();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n\n        // skip the current track since we enabled it above\n        if (track === this.track) {\n          continue;\n        }\n        track.enabled = track === this.track;\n      }\n    }\n  }\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  }\n}\nComponent$1.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\nclass AudioTrackButton extends TrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.tracks = player.audioTracks();\n    super(player, options);\n    this.setIcon('audio');\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-audio-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-audio-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  createItems(items = []) {\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    const tracks = this.player_.audioTracks();\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n    return items;\n  }\n}\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent$1.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\nclass PlaybackRateMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const label = options.rate;\n    const rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === player.playbackRate();\n    options.selectable = true;\n    options.multiSelectable = false;\n    super(player, options);\n    this.label = label;\n    this.rate = rate;\n    this.on(player, 'ratechange', e => this.update(e));\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick();\n    this.player().playbackRate(this.rate);\n  }\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  }\n}\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent$1.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\nclass PlaybackRateMenuButton extends MenuButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.menuButton_.el_.setAttribute('aria-describedby', this.labelElId_);\n    this.updateVisibility();\n    this.updateLabel();\n    this.on(player, 'loadstart', e => this.updateVisibility(e));\n    this.on(player, 'ratechange', e => this.updateLabel(e));\n    this.on(player, 'playbackrateschange', e => this.handlePlaybackRateschange(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl();\n    this.labelElId_ = 'vjs-playback-rate-value-label-' + this.id_;\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      id: this.labelElId_,\n      textContent: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  }\n  dispose() {\n    this.labelEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-playback-rate ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-playback-rate ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   */\n  createItems() {\n    const rates = this.playbackRates();\n    const items = [];\n    for (let i = rates.length - 1; i >= 0; i--) {\n      items.push(new PlaybackRateMenuItem(this.player(), {\n        rate: rates[i] + 'x'\n      }));\n    }\n    return items;\n  }\n\n  /**\n   * On playbackrateschange, update the menu to account for the new items.\n   *\n   * @listens Player#playbackrateschange\n   */\n  handlePlaybackRateschange(event) {\n    this.update();\n  }\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  playbackRates() {\n    const player = this.player();\n    return player.playbackRates && player.playbackRates() || [];\n  }\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.textContent = this.player().playbackRate() + 'x';\n    }\n  }\n}\n\n/**\n * The text that should display over the `PlaybackRateMenuButton`s controls.\n *\n * Added for localization.\n *\n * @type {string}\n * @protected\n */\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent$1.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\nclass Spacer extends Component$1 {\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  buildCSSClass() {\n    return `vjs-spacer ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    if (!props.className) {\n      props.className = this.buildCSSClass();\n    }\n    return super.createEl(tag, props, attributes);\n  }\n}\nComponent$1.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\nclass CustomControlSpacer extends Spacer {\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-custom-control-spacer ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildCSSClass(),\n      // No-flex/table-cell mode requires there be some content\n      // in the cell to fill the remaining space of the table.\n      textContent: '\\u00a0'\n    });\n  }\n}\nComponent$1.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\nclass ControlBar extends Component$1 {\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  }\n}\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'skipBackward', 'skipForward', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'pictureInPictureToggle', 'fullscreenToggle']\n};\nComponent$1.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n\n/** @import Player from './player' */\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\nclass ErrorDisplay extends ModalDialog {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'error', e => {\n      this.open(e);\n    });\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n  buildCSSClass() {\n    return `vjs-error-display ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  content() {\n    const error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  }\n}\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\nErrorDisplay.prototype.options_ = Object.assign({}, ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent$1.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/** @import Player from './player' */\n/** @import { ContentDescriptor } from  '../utils/dom' */\n\n/**\n * Creates DOM element of 'select' & its options.\n *\n * @extends Component\n */\nclass TextTrackSelect extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {ContentDescriptor} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.legendId]\n   *        A text with part of an string to create atribute of aria-labelledby.\n   *\n   * @param {string} [options.id]\n   *        A text with part of an string to create atribute of aria-labelledby.\n   *\n   * @param {Array} [options.SelectOptions]\n   *        Array that contains the value & textContent of for each of the\n   *        options elements.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n    this.el_.setAttribute('aria-labelledby', this.selectLabelledbyIds);\n  }\n\n  /**\n   * Create the `TextTrackSelect`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    this.selectLabelledbyIds = [this.options_.legendId, this.options_.labelId].join(' ').trim();\n\n    // Create select & inner options\n    const selectoptions = createEl('select', {\n      id: this.options_.id\n    }, {}, this.options_.SelectOptions.map(optionText => {\n      // Constructs an id for the <option>.\n      // For the colour settings that have two <selects> with a <label> each, generates an id based off the label value\n      // For font size/family and edge style with one <select> and no <label>, generates an id with a guid\n      const optionId = (this.options_.labelId ? this.options_.labelId : `vjs-track-option-${newGUID()}`) + '-' + optionText[1].replace(/\\W+/g, '');\n      const option = createEl('option', {\n        id: optionId,\n        value: this.localize(optionText[0]),\n        textContent: this.localize(optionText[1])\n      });\n      option.setAttribute('aria-labelledby', `${this.selectLabelledbyIds} ${optionId}`);\n      return option;\n    }));\n    return selectoptions;\n  }\n}\nComponent$1.registerComponent('TextTrackSelect', TextTrackSelect);\n\n/** @import Player from './player' */\n/** @import { ContentDescriptor } from '../utils/dom' */\n\n/**\n * Creates fieldset section of 'TextTrackSettings'.\n * Manganes two versions of fieldsets, one for type of 'colors'\n * & the other for 'font', Component adds diferent DOM elements\n * to that fieldset  depending on the type.\n *\n * @extends Component\n */\nclass TextTrackFieldset extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {ContentDescriptor} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.legendId]\n   *        A text with part of an string to create atribute of aria-labelledby.\n   *        It passes to 'TextTrackSelect'.\n   *\n   * @param {string} [options.id]\n   *        A text with part of an string to create atribute of aria-labelledby.\n   *        It passes to 'TextTrackSelect'.\n   *\n   * @param {string} [options.legendText]\n   *        A text to use as the text content of the legend element.\n   *\n   * @param {Array} [options.selects]\n   *        Array that contains the selects that are use to create 'selects'\n   *        components.\n   *\n   * @param {Array} [options.SelectOptions]\n   *        Array that contains the value & textContent of for each of the\n   *        options elements, it passes to 'TextTrackSelect'.\n   *\n   * @param {string} [options.type]\n   *        Conditions if some DOM elements will be added to the fieldset\n   *        component.\n   *\n   * @param {Object} [options.selectConfigs]\n   *        Object with the following properties that are the selects configurations:\n   *        backgroundColor, backgroundOpacity, color, edgeStyle, fontFamily,\n   *        fontPercent, textOpacity, windowColor, windowOpacity.\n   *        These properties are use to configure the 'TextTrackSelect' Component.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // Add Components & DOM Elements\n    const legendElement = createEl('legend', {\n      textContent: this.localize(this.options_.legendText),\n      id: this.options_.legendId\n    });\n    this.el().appendChild(legendElement);\n    const selects = this.options_.selects;\n\n    // Iterate array of selects to create 'selects' components\n    for (const i of selects) {\n      const selectConfig = this.options_.selectConfigs[i];\n      const selectClassName = selectConfig.className;\n      const id = selectConfig.id.replace('%s', this.options_.id_);\n      let span = null;\n      const guid = `vjs_select_${newGUID()}`;\n\n      // Conditionally create span to add on the component\n      if (this.options_.type === 'colors') {\n        span = createEl('span', {\n          className: selectClassName\n        });\n        const label = createEl('label', {\n          id,\n          className: 'vjs-label',\n          textContent: this.localize(selectConfig.label)\n        });\n        label.setAttribute('for', guid);\n        span.appendChild(label);\n      }\n      const textTrackSelect = new TextTrackSelect(player, {\n        SelectOptions: selectConfig.options,\n        legendId: this.options_.legendId,\n        id: guid,\n        labelId: id\n      });\n      this.addChild(textTrackSelect);\n\n      // Conditionally append to 'select' component to conditionally created span\n      if (this.options_.type === 'colors') {\n        span.appendChild(textTrackSelect.el());\n        this.el().appendChild(span);\n      }\n    }\n  }\n\n  /**\n   * Create the `TextTrackFieldset`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    const el = createEl('fieldset', {\n      // Prefixing classes of elements within a player with \"vjs-\"\n      // is a convention used in Video.js.\n      className: this.options_.className\n    });\n    return el;\n  }\n}\nComponent$1.registerComponent('TextTrackFieldset', TextTrackFieldset);\n\n/** @import Player from './player' */\n/** @import { ContentDescriptor } from  '../utils/dom' */\n\n/**\n * The component 'TextTrackSettingsColors' displays a set of 'fieldsets'\n * using the component 'TextTrackFieldset'.\n *\n * @extends Component\n */\nclass TextTrackSettingsColors extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {ContentDescriptor} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {Array} [options.fieldSets]\n   *        Array that contains the configurations for the selects.\n   *\n   * @param {Object} [options.selectConfigs]\n   *        Object with the following properties that are the select confugations:\n   *        backgroundColor, backgroundOpacity, color, edgeStyle, fontFamily,\n   *        fontPercent, textOpacity, windowColor, windowOpacity.\n   *        it passes to 'TextTrackFieldset'.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n    const id_ = this.options_.textTrackComponentid;\n\n    // createElFgColor_\n    const ElFgColorFieldset = new TextTrackFieldset(player, {\n      id_,\n      legendId: `captions-text-legend-${id_}`,\n      legendText: this.localize('Text'),\n      className: 'vjs-fg vjs-track-setting',\n      selects: this.options_.fieldSets[0],\n      selectConfigs: this.options_.selectConfigs,\n      type: 'colors'\n    });\n    this.addChild(ElFgColorFieldset);\n\n    // createElBgColor_\n    const ElBgColorFieldset = new TextTrackFieldset(player, {\n      id_,\n      legendId: `captions-background-${id_}`,\n      legendText: this.localize('Text Background'),\n      className: 'vjs-bg vjs-track-setting',\n      selects: this.options_.fieldSets[1],\n      selectConfigs: this.options_.selectConfigs,\n      type: 'colors'\n    });\n    this.addChild(ElBgColorFieldset);\n\n    // createElWinColor_\n    const ElWinColorFieldset = new TextTrackFieldset(player, {\n      id_,\n      legendId: `captions-window-${id_}`,\n      legendText: this.localize('Caption Area Background'),\n      className: 'vjs-window vjs-track-setting',\n      selects: this.options_.fieldSets[2],\n      selectConfigs: this.options_.selectConfigs,\n      type: 'colors'\n    });\n    this.addChild(ElWinColorFieldset);\n  }\n\n  /**\n   * Create the `TextTrackSettingsColors`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    const el = createEl('div', {\n      className: 'vjs-track-settings-colors'\n    });\n    return el;\n  }\n}\nComponent$1.registerComponent('TextTrackSettingsColors', TextTrackSettingsColors);\n\n/** @import Player from './player' */\n/** @import { ContentDescriptor } from  '../utils/dom' */\n\n/**\n * The component 'TextTrackSettingsFont' displays a set of 'fieldsets'\n * using the component 'TextTrackFieldset'.\n *\n * @extends Component\n */\nclass TextTrackSettingsFont extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {ContentDescriptor} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {Array} [options.fieldSets]\n   *        Array that contains the configurations for the selects.\n   *\n   * @param {Object} [options.selectConfigs]\n   *        Object with the following properties that are the select confugations:\n   *        backgroundColor, backgroundOpacity, color, edgeStyle, fontFamily,\n   *        fontPercent, textOpacity, windowColor, windowOpacity.\n   *        it passes to 'TextTrackFieldset'.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n    const id_ = this.options_.textTrackComponentid;\n    const ElFgColorFieldset = new TextTrackFieldset(player, {\n      id_,\n      legendId: `captions-font-size-${id_}`,\n      legendText: 'Font Size',\n      className: 'vjs-font-percent vjs-track-setting',\n      selects: this.options_.fieldSets[0],\n      selectConfigs: this.options_.selectConfigs,\n      type: 'font'\n    });\n    this.addChild(ElFgColorFieldset);\n    const ElBgColorFieldset = new TextTrackFieldset(player, {\n      id_,\n      legendId: `captions-edge-style-${id_}`,\n      legendText: this.localize('Text Edge Style'),\n      className: 'vjs-edge-style vjs-track-setting',\n      selects: this.options_.fieldSets[1],\n      selectConfigs: this.options_.selectConfigs,\n      type: 'font'\n    });\n    this.addChild(ElBgColorFieldset);\n    const ElWinColorFieldset = new TextTrackFieldset(player, {\n      id_,\n      legendId: `captions-font-family-${id_}`,\n      legendText: this.localize('Font Family'),\n      className: 'vjs-font-family vjs-track-setting',\n      selects: this.options_.fieldSets[2],\n      selectConfigs: this.options_.selectConfigs,\n      type: 'font'\n    });\n    this.addChild(ElWinColorFieldset);\n  }\n\n  /**\n   * Create the `TextTrackSettingsFont`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    const el = createEl('div', {\n      className: 'vjs-track-settings-font'\n    });\n    return el;\n  }\n}\nComponent$1.registerComponent('TextTrackSettingsFont', TextTrackSettingsFont);\n\n/**\n * Buttons of reset & done that modal 'TextTrackSettings'\n * uses as part of its content.\n *\n * 'Reset': Resets all settings on 'TextTrackSettings'.\n * 'Done': Closes 'TextTrackSettings' modal.\n *\n * @extends Component\n */\nclass TrackSettingsControls extends Component$1 {\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // Create DOM elements\n    const defaultsDescription = this.localize('restore all settings to the default values');\n    const resetButton = new Button(player, {\n      controlText: defaultsDescription,\n      className: 'vjs-default-button'\n    });\n    resetButton.el().classList.remove('vjs-control', 'vjs-button');\n    resetButton.el().textContent = this.localize('Reset');\n    this.addChild(resetButton);\n    const doneButton = new Button(player, {\n      controlText: defaultsDescription,\n      className: 'vjs-done-button'\n    });\n\n    // Remove unrequired style classes\n    doneButton.el().classList.remove('vjs-control', 'vjs-button');\n    doneButton.el().textContent = this.localize('Done');\n    this.addChild(doneButton);\n  }\n\n  /**\n   * Create the `TrackSettingsControls`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    const el = createEl('div', {\n      className: 'vjs-track-settings-controls'\n    });\n    return el;\n  }\n}\nComponent$1.registerComponent('TrackSettingsControls', TrackSettingsControls);\n\n/**\n * @file text-track-settings.js\n */\n\n/** @import Player from '../player' */\n\nconst LOCAL_STORAGE_KEY$1 = 'vjs-text-track-settings';\nconst COLOR_BLACK = ['#000', 'Black'];\nconst COLOR_BLUE = ['#00F', 'Blue'];\nconst COLOR_CYAN = ['#0FF', 'Cyan'];\nconst COLOR_GREEN = ['#0F0', 'Green'];\nconst COLOR_MAGENTA = ['#F0F', 'Magenta'];\nconst COLOR_RED = ['#F00', 'Red'];\nconst COLOR_WHITE = ['#FFF', 'White'];\nconst COLOR_YELLOW = ['#FF0', 'Yellow'];\nconst OPACITY_OPAQUE = ['1', 'Opaque'];\nconst OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nconst OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nconst selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN],\n    className: 'vjs-bg-color'\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS],\n    className: 'vjs-bg-opacity vjs-opacity'\n  },\n  color: {\n    selector: '.vjs-text-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN],\n    className: 'vjs-text-color'\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Drop shadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: '',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: '',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: v => v === '1.00' ? null : Number(v)\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI],\n    className: 'vjs-text-opacity vjs-opacity'\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color',\n    className: 'vjs-window-color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE],\n    className: 'vjs-window-opacity vjs-opacity'\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {*}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {*}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  const value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n  for (let i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\nclass TextTrackSettings extends ModalDialog {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  constructor(player, options) {\n    options.temporary = false;\n    super(player, options);\n    this.updateDisplay = this.updateDisplay.bind(this);\n\n    // fill the modal and pretend we have opened it\n    this.fill();\n    this.hasBeenOpened_ = this.hasBeenFilled_ = true;\n    this.renderModalComponents(player);\n    this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: this.localize('End of dialog window.')\n    });\n    this.el().appendChild(this.endDialog);\n    this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      this.options_.persistTextTrackSettings = this.options_.playerOptions.persistTextTrackSettings;\n    }\n    this.bindFunctionsToSelectsAndButtons();\n    if (this.options_.persistTextTrackSettings) {\n      this.restoreSettings();\n    }\n  }\n  renderModalComponents(player) {\n    const textTrackSettingsColors = new TextTrackSettingsColors(player, {\n      textTrackComponentid: this.id_,\n      selectConfigs,\n      fieldSets: [['color', 'textOpacity'], ['backgroundColor', 'backgroundOpacity'], ['windowColor', 'windowOpacity']]\n    });\n    this.addChild(textTrackSettingsColors);\n    const textTrackSettingsFont = new TextTrackSettingsFont(player, {\n      textTrackComponentid: this.id_,\n      selectConfigs,\n      fieldSets: [['fontPercent'], ['edgeStyle'], ['fontFamily']]\n    });\n    this.addChild(textTrackSettingsFont);\n    const trackSettingsControls = new TrackSettingsControls(player);\n    this.addChild(trackSettingsControls);\n  }\n  bindFunctionsToSelectsAndButtons() {\n    this.on(this.$('.vjs-done-button'), ['click', 'tap'], () => {\n      this.saveSettings();\n      this.close();\n    });\n    this.on(this.$('.vjs-default-button'), ['click', 'tap'], () => {\n      this.setDefaults();\n      this.updateDisplay();\n    });\n    each(selectConfigs, config => {\n      this.on(this.$(config.selector), 'change', this.updateDisplay);\n    });\n  }\n  dispose() {\n    this.endDialog = null;\n    super.dispose();\n  }\n  label() {\n    return this.localize('Caption Settings Dialog');\n  }\n  description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  }\n  buildCSSClass() {\n    return super.buildCSSClass() + ' vjs-text-track-settings';\n  }\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  getValues() {\n    return reduce(selectConfigs, (accum, config, key) => {\n      const value = getSelectedOptionValue(this.$(config.selector), config.parser);\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n      return accum;\n    }, {});\n  }\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  setValues(values) {\n    each(selectConfigs, (config, key) => {\n      setSelectedOption(this.$(config.selector), values[key], config.parser);\n    });\n  }\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  setDefaults() {\n    each(selectConfigs, config => {\n      const index = config.hasOwnProperty('default') ? config.default : 0;\n      this.$(config.selector).selectedIndex = index;\n    });\n  }\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  restoreSettings() {\n    let values;\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY$1));\n    } catch (err) {\n      log$1.warn(err);\n    }\n    if (values) {\n      this.setValues(values);\n    }\n  }\n\n  /**\n   * Save text track settings to localStorage\n   */\n  saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n    const values = this.getValues();\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY$1);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  }\n\n  /**\n   * Update display of text track settings\n   */\n  updateDisplay() {\n    const ttDisplay = this.player_.getChild('textTrackDisplay');\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n\n  /**\n   * Repopulate dialog with new localizations on languagechange\n   */\n  handleLanguagechange() {\n    this.fill();\n    this.renderModalComponents(this.player_);\n    this.bindFunctionsToSelectsAndButtons();\n  }\n}\nComponent$1.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n *\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\nclass ResizeManager extends Component$1 {\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  constructor(player, options) {\n    let RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    const options_ = merge$1({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    super(player, options_);\n    this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    this.loadListener_ = null;\n    this.resizeObserver_ = null;\n    this.debouncedHandler_ = debounce$1(() => {\n      this.resizeHandler();\n    }, 100, false, this);\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      this.resizeObserver_ = new this.ResizeObserver(this.debouncedHandler_);\n      this.resizeObserver_.observe(player.el());\n    } else {\n      this.loadListener_ = () => {\n        if (!this.el_ || !this.el_.contentWindow) {\n          return;\n        }\n        const debouncedHandler_ = this.debouncedHandler_;\n        let unloadListener_ = this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        };\n\n        // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n        on(this.el_.contentWindow, 'unload', unloadListener_);\n        on(this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n      this.one('load', this.loadListener_);\n    }\n  }\n  createEl() {\n    return super.createEl('iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1,\n      title: this.localize('No content')\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n    this.player_.trigger('playerresize');\n  }\n  dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('ResizeManager', ResizeManager);\n\n/** @import Player from './player' */\n\nconst defaults$1 = {\n  trackingThreshold: 20,\n  liveTolerance: 15\n};\n\n/*\n  track when we are at the live edge, and other helpers for live playback */\n\n/**\n * A class for checking live current time and determining when the player\n * is at or behind the live edge.\n */\nclass LiveTracker extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {number} [options.trackingThreshold=20]\n   *        Number of seconds of live window (seekableEnd - seekableStart) that\n   *        media needs to have before the liveui will be shown.\n   *\n   * @param {number} [options.liveTolerance=15]\n   *        Number of seconds behind live that we have to be\n   *        before we will be considered non-live. Note that this will only\n   *        be used when playing at the live edge. This allows large seekable end\n   *        changes to not effect whether we are live or not.\n   */\n  constructor(player, options) {\n    // LiveTracker does not need an element\n    const options_ = merge$1(defaults$1, options, {\n      createEl: false\n    });\n    super(player, options_);\n    this.trackLiveHandler_ = () => this.trackLive_();\n    this.handlePlay_ = e => this.handlePlay(e);\n    this.handleFirstTimeupdate_ = e => this.handleFirstTimeupdate(e);\n    this.handleSeeked_ = e => this.handleSeeked(e);\n    this.seekToLiveEdge_ = e => this.seekToLiveEdge(e);\n    this.reset_();\n    this.on(this.player_, 'durationchange', e => this.handleDurationchange(e));\n    // we should try to toggle tracking on canplay as native playback engines, like Safari\n    // may not have the proper values for things like seekableEnd until then\n    this.on(this.player_, 'canplay', () => this.toggleTracking());\n  }\n\n  /**\n   * all the functionality for tracking when seek end changes\n   * and for tracking how far past seek end we should be\n   */\n  trackLive_() {\n    const seekable = this.player_.seekable();\n\n    // skip undefined seekable\n    if (!seekable || !seekable.length) {\n      return;\n    }\n    const newTime = Number(window$1.performance.now().toFixed(4));\n    const deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n    this.lastTime_ = newTime;\n    this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n    const liveCurrentTime = this.liveCurrentTime();\n    const currentTime = this.player_.currentTime();\n\n    // we are behind live if any are true\n    // 1. the player is paused\n    // 2. the user seeked to a location 2 seconds away from live\n    // 3. the difference between live and current time is greater\n    //    liveTolerance which defaults to 15s\n    let isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance;\n\n    // we cannot be behind if\n    // 1. until we have not seen a timeupdate yet\n    // 2. liveCurrentTime is Infinity, which happens on Android and Native Safari\n    if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n      isBehind = false;\n    }\n    if (isBehind !== this.behindLiveEdge_) {\n      this.behindLiveEdge_ = isBehind;\n      this.trigger('liveedgechange');\n    }\n  }\n\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  handleDurationchange() {\n    this.toggleTracking();\n  }\n\n  /**\n   * start/stop tracking\n   */\n  toggleTracking() {\n    if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n      if (this.player_.options_.liveui) {\n        this.player_.addClass('vjs-liveui');\n      }\n      this.startTracking();\n    } else {\n      this.player_.removeClass('vjs-liveui');\n      this.stopTracking();\n    }\n  }\n\n  /**\n   * start tracking live playback\n   */\n  startTracking() {\n    if (this.isTracking()) {\n      return;\n    }\n\n    // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n    this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, UPDATE_REFRESH_INTERVAL);\n    this.trackLive_();\n    this.on(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay_);\n      this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    } else {\n      this.on(this.player_, 'seeked', this.handleSeeked_);\n    }\n  }\n\n  /**\n   * handle the first timeupdate on the player if it wasn't already playing\n   * when live tracker started tracking.\n   */\n  handleFirstTimeupdate() {\n    this.timeupdateSeen_ = true;\n    this.on(this.player_, 'seeked', this.handleSeeked_);\n  }\n\n  /**\n   * Keep track of what time a seek starts, and listen for seeked\n   * to find where a seek ends.\n   */\n  handleSeeked() {\n    const timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n    this.seekedBehindLive_ = this.nextSeekedFromUser_ && timeDiff > 2;\n    this.nextSeekedFromUser_ = false;\n    this.trackLive_();\n  }\n\n  /**\n   * handle the first play on the player, and make sure that we seek\n   * right to the live edge.\n   */\n  handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  reset_() {\n    this.lastTime_ = -1;\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = -1;\n    this.behindLiveEdge_ = true;\n    this.timeupdateSeen_ = false;\n    this.seekedBehindLive_ = false;\n    this.nextSeekedFromUser_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.off(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    this.off(this.player_, 'seeked', this.handleSeeked_);\n    this.off(this.player_, 'play', this.handlePlay_);\n    this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n\n  /**\n   * The next seeked event is from the user. Meaning that any seek\n   * > 2s behind live will be considered behind live for real and\n   * liveTolerance will be ignored.\n   */\n  nextSeekedFromUser() {\n    this.nextSeekedFromUser_ = true;\n  }\n\n  /**\n   * stop tracking live playback\n   */\n  stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n    this.reset_();\n    this.trigger('liveedgechange');\n  }\n\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The furthest seekable end or Infinity.\n   */\n  seekableEnd() {\n    const seekable = this.player_.seekable();\n    const seekableEnds = [];\n    let i = seekable ? seekable.length : 0;\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    }\n\n    // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The earliest seekable start or 0.\n   */\n  seekableStart() {\n    const seekable = this.player_.seekable();\n    const seekableStarts = [];\n    let i = seekable ? seekable.length : 0;\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    }\n\n    // grab the first seekable start after sorting, or if there are none\n    // default to 0\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n\n  /**\n   * Get the live time window aka\n   * the amount of time between seekable start and\n   * live current time.\n   *\n   * @return {number}\n   *         The amount of seconds that are seekable in\n   *         the live video.\n   */\n  liveWindow() {\n    const liveCurrentTime = this.liveCurrentTime();\n\n    // if liveCurrenTime is Infinity then we don't have a liveWindow at all\n    if (liveCurrentTime === Infinity) {\n      return 0;\n    }\n    return liveCurrentTime - this.seekableStart();\n  }\n\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   *\n   * @return {boolean}\n   *         Whether liveTracker is tracking\n   */\n  isLive() {\n    return this.isTracking();\n  }\n\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   *\n   * @return {boolean}\n   *         Whether playback is at the live edge\n   */\n  atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n\n  /**\n   * get what we expect the live current time to be\n   *\n   * @return {number}\n   *         The expected live current time\n   */\n  liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n\n  /**\n   * The number of seconds that have occurred after seekable end\n   * changed. This will be reset to 0 once seekable end changes.\n   *\n   * @return {number}\n   *         Seconds past the current seekable end\n   */\n  pastSeekEnd() {\n    const seekableEnd = this.seekableEnd();\n    if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n      this.pastSeekEnd_ = 0;\n    }\n    this.lastSeekEnd_ = seekableEnd;\n    return this.pastSeekEnd_;\n  }\n\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   *\n   * @return {boolean}\n   *         If we are behind the live edge\n   */\n  behindLiveEdge() {\n    return this.behindLiveEdge_;\n  }\n\n  /**\n   * Whether live tracker is currently tracking or not.\n   */\n  isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  seekToLiveEdge() {\n    this.seekedBehindLive_ = false;\n    if (this.atLiveEdge()) {\n      return;\n    }\n    this.nextSeekedFromUser_ = false;\n    this.player_.currentTime(this.liveCurrentTime());\n  }\n\n  /**\n   * Dispose of liveTracker\n   */\n  dispose() {\n    this.stopTracking();\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * Displays an element over the player which contains an optional title and\n * description for the current content.\n *\n * Much of the code for this component originated in the now obsolete\n * videojs-dock plugin: https://github.com/brightcove/videojs-dock/\n *\n * @extends Component\n */\nclass TitleBar extends Component$1 {\n  constructor(player, options) {\n    super(player, options);\n    this.on('statechanged', e => this.updateDom_());\n    this.updateDom_();\n  }\n\n  /**\n   * Create the `TitleBar`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    this.els = {\n      title: createEl('div', {\n        className: 'vjs-title-bar-title',\n        id: `vjs-title-bar-title-${newGUID()}`\n      }),\n      description: createEl('div', {\n        className: 'vjs-title-bar-description',\n        id: `vjs-title-bar-description-${newGUID()}`\n      })\n    };\n    return createEl('div', {\n      className: 'vjs-title-bar'\n    }, {}, values(this.els));\n  }\n\n  /**\n   * Updates the DOM based on the component's state object.\n   */\n  updateDom_() {\n    const tech = this.player_.tech_;\n    const techEl = tech && tech.el_;\n    const techAriaAttrs = {\n      title: 'aria-labelledby',\n      description: 'aria-describedby'\n    };\n    ['title', 'description'].forEach(k => {\n      const value = this.state[k];\n      const el = this.els[k];\n      const techAriaAttr = techAriaAttrs[k];\n      emptyEl(el);\n      if (value) {\n        textContent(el, value);\n      }\n\n      // If there is a tech element available, update its ARIA attributes\n      // according to whether a title and/or description have been provided.\n      if (techEl) {\n        techEl.removeAttribute(techAriaAttr);\n        if (value) {\n          techEl.setAttribute(techAriaAttr, el.id);\n        }\n      }\n    });\n    if (this.state.title || this.state.description) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Update the contents of the title bar component with new title and\n   * description text.\n   *\n   * If both title and description are missing, the title bar will be hidden.\n   *\n   * If either title or description are present, the title bar will be visible.\n   *\n   * NOTE: Any previously set value will be preserved. To unset a previously\n   * set value, you must pass an empty string or null.\n   *\n   * For example:\n   *\n   * ```\n   * update({title: 'foo', description: 'bar'}) // title: 'foo', description: 'bar'\n   * update({description: 'bar2'}) // title: 'foo', description: 'bar2'\n   * update({title: ''}) // title: '', description: 'bar2'\n   * update({title: 'foo', description: null}) // title: 'foo', description: null\n   * ```\n   *\n   * @param  {Object} [options={}]\n   *         An options object. When empty, the title bar will be hidden.\n   *\n   * @param  {string} [options.title]\n   *         A title to display in the title bar.\n   *\n   * @param  {string} [options.description]\n   *         A description to display in the title bar.\n   */\n  update(options) {\n    this.setState(options);\n  }\n\n  /**\n   * Dispose the component.\n   */\n  dispose() {\n    const tech = this.player_.tech_;\n    const techEl = tech && tech.el_;\n    if (techEl) {\n      techEl.removeAttribute('aria-labelledby');\n      techEl.removeAttribute('aria-describedby');\n    }\n    super.dispose();\n    this.els = null;\n  }\n}\nComponent$1.registerComponent('TitleBar', TitleBar);\n\n/** @import Player from './player' */\n\n/**\n * @typedef {object} TransientButtonOptions\n * @property {string} [controlText] Control text, usually visible for these buttons\n * @property {number} [initialDisplay=4000] Time in ms that button should initially remain visible\n * @property {Array<'top'|'neartop'|'bottom'|'left'|'right'>} [position] Array of position strings to add basic styles for positioning\n * @property {string} [className] Class(es) to add\n * @property {boolean} [takeFocus=false] Whether element sohuld take focus when shown\n * @property {Function} [clickHandler] Function called on button activation\n */\n\n/** @type {TransientButtonOptions} */\nconst defaults = {\n  initialDisplay: 4000,\n  position: [],\n  takeFocus: false\n};\n\n/**\n * A floating transient button.\n * It's recommended to insert these buttons _before_ the control bar with the this argument to `addChild`\n * for a logical tab order.\n *\n * @example\n * ```\n * player.addChild(\n *   'TransientButton',\n *   options,\n *   player.children().indexOf(player.getChild(\"ControlBar\"))\n * )\n * ```\n *\n * @extends Button\n */\nclass TransientButton extends Button {\n  /**\n   * TransientButton constructor\n   *\n   * @param {Player} player The button's player\n   * @param {TransientButtonOptions} options Options for the transient button\n   */\n  constructor(player, options) {\n    options = merge$1(defaults, options);\n    super(player, options);\n    this.controlText(options.controlText);\n    this.hide();\n\n    // When shown, the float button will be visible even if the user is inactive.\n    // Clear this if there is any interaction.\n    this.on(this.player_, ['useractive', 'userinactive'], e => {\n      this.removeClass('force-display');\n    });\n  }\n\n  /**\n   * Return CSS class including position classes\n   *\n   * @return {string} CSS class list\n   */\n  buildCSSClass() {\n    return `vjs-transient-button focus-visible ${this.options_.position.map(c => `vjs-${c}`).join(' ')}`;\n  }\n\n  /**\n   * Create the button element\n   *\n   * @return {HTMLButtonElement} The button element\n   */\n  createEl() {\n    /** @type HTMLButtonElement */\n    const el = createEl('button', {}, {\n      type: 'button',\n      class: this.buildCSSClass()\n    }, createEl('span'));\n    this.controlTextEl_ = el.querySelector('span');\n    return el;\n  }\n\n  /**\n   * Show the button. The button will remain visible for the `initialDisplay` time, default 4s,\n   * and when there is user activity.\n   */\n  show() {\n    super.show();\n    this.addClass('force-display');\n    if (this.options_.takeFocus) {\n      this.el().focus({\n        preventScroll: true\n      });\n    }\n    this.forceDisplayTimeout = this.player_.setTimeout(() => {\n      this.removeClass('force-display');\n    }, this.options_.initialDisplay);\n  }\n\n  /**\n   * Hide the display, even if during the `initialDisplay` time.\n   */\n  hide() {\n    this.removeClass('force-display');\n    super.hide();\n  }\n\n  /**\n   * Dispose the component\n   */\n  dispose() {\n    this.player_.clearTimeout(this.forceDisplayTimeout);\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('TransientButton', TransientButton);\n\n/** @import Html5 from './html5' */\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nconst sourcesetLoad = tech => {\n  const el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  const sources = tech.$$('source');\n  const srcUrls = [];\n  let src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (let i = 0; i < sources.length; i++) {\n    const url = sources[i].src;\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nconst innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set(v) {\n    // make a dummy node to use innerHTML on\n    const dummy = document$1.createElement(this.nodeName.toLowerCase());\n\n    // set innerHTML to the value provided\n    dummy.innerHTML = v;\n\n    // make a document fragment to hold the nodes from dummy\n    const docFrag = document$1.createDocumentFragment();\n\n    // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    }\n\n    // remove content\n    this.innerText = '';\n\n    // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n    window$1.Element.prototype.appendChild.call(this, docFrag);\n\n    // then return the result that innerHTML's setter would\n    return this.innerHTML;\n  }\n});\n\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nconst getDescriptor = (priority, prop) => {\n  let descriptor = {};\n  for (let i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\nconst getInnerHTMLDescriptor = tech => getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nconst firstSourceWatch = function (tech) {\n  const el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n  const old = {};\n  const innerDescriptor = getInnerHTMLDescriptor(tech);\n  const appendWrapper = appendFn => (...args) => {\n    const retval = appendFn.apply(el, args);\n    sourcesetLoad(tech);\n    return retval;\n  };\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(k => {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', merge$1(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n  el.resetSourceWatch_ = () => {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(k => {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one\n */\nconst srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n    return '';\n  },\n  set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\nconst getSrcDescriptor = tech => getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nconst setupSourceset = function (tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n  const el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n  const srcDescriptor = getSrcDescriptor(tech);\n  const oldSetAttribute = el.setAttribute;\n  const oldLoad = el.load;\n  Object.defineProperty(el, 'src', merge$1(srcDescriptor, {\n    set: v => {\n      const retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n  el.setAttribute = (n, v) => {\n    const retval = oldSetAttribute.call(el, n, v);\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n    return retval;\n  };\n  el.load = () => {\n    const retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n    return retval;\n  };\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n  el.resetSourceset_ = () => {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\n/**\n * @file html5.js\n */\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\nclass Html5 extends Tech {\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Function} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  constructor(options, ready) {\n    super(options, ready);\n    const source = options.source;\n    let crossoriginTracks = false;\n    this.featuresVideoFrameCallback = this.featuresVideoFrameCallback && this.el_.tagName === 'VIDEO';\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      this.setSource(source);\n    } else {\n      this.handleLateInit_(this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      this.setupSourcesetHandling_();\n    }\n    this.isScrubbing_ = false;\n    if (this.el_.hasChildNodes()) {\n      const nodes = this.el_.childNodes;\n      let nodesLength = nodes.length;\n      const removeNodes = [];\n      while (nodesLength--) {\n        const node = nodes[nodesLength];\n        const nodeName = node.nodeName.toLowerCase();\n        if (nodeName === 'track') {\n          if (!this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            this.remoteTextTrackEls().addTrackElement_(node);\n            this.remoteTextTracks().addTrack(node.track);\n            this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n      for (let i = 0; i < removeNodes.length; i++) {\n        this.el_.removeChild(removeNodes[i]);\n      }\n    }\n    this.proxyNativeTracks_();\n    if (this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE) && options.nativeControlsForTouch === true) {\n      this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    this.proxyWebkitFullscreen_();\n    this.triggerReady();\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n  dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    super.dispose();\n  }\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  restoreMetadataTracksInIOSNativePlayer_() {\n    const textTracks = this.textTracks();\n    let metadataTracksPreFullscreenState;\n\n    // captures a snapshot of every metadata track's current state\n    const takeMetadataTrackSnapshot = () => {\n      metadataTracksPreFullscreenState = [];\n      for (let i = 0; i < textTracks.length; i++) {\n        const track = textTracks[i];\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', () => textTracks.removeEventListener('change', takeMetadataTrackSnapshot));\n    const restoreTrackMode = () => {\n      for (let i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        const storedTrack = metadataTracksPreFullscreenState[i];\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', () => {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', () => {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  overrideNative_(type, override) {\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[`featuresNative${type}Tracks`]) {\n      return;\n    }\n    const lowerCaseType = type.toLowerCase();\n    if (this[`${lowerCaseType}TracksListeners_`]) {\n      Object.keys(this[`${lowerCaseType}TracksListeners_`]).forEach(eventName => {\n        const elTracks = this.el()[`${lowerCaseType}Tracks`];\n        elTracks.removeEventListener(eventName, this[`${lowerCaseType}TracksListeners_`][eventName]);\n      });\n    }\n    this[`featuresNative${type}Tracks`] = !override;\n    this[`${lowerCaseType}TracksListeners_`] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  proxyNativeTracksForType_(name) {\n    const props = NORMAL[name];\n    const elTracks = this.el()[props.getterName];\n    const techTracks = this[props.getterName]();\n    if (!this[`featuresNative${props.capitalName}Tracks`] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n    const listeners = {\n      change: e => {\n        const event = {\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        };\n        techTracks.trigger(event);\n\n        // if we are a text track change event, we should also notify the\n        // remote text track list. This can potentially cause a false positive\n        // if we were to get a change event on a non-remote track and\n        // we triggered the event on the remote text track list which doesn't\n        // contain that track. However, best practices mean looping through the\n        // list of tracks and searching for the appropriate mode value, so,\n        // this shouldn't pose an issue\n        if (name === 'text') {\n          this[REMOTE.remoteText.getterName]().trigger(event);\n        }\n      },\n      addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n    const removeOldTracks = function () {\n      const removeTracks = [];\n      for (let i = 0; i < techTracks.length; i++) {\n        let found = false;\n        for (let j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(eventName => {\n      const listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n      this.on('dispose', e => elTracks.removeEventListener(eventName, listener));\n    });\n\n    // Remove (native) tracks that are not used anymore\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', e => this.off('loadstart', removeOldTracks));\n  }\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  proxyNativeTracks_() {\n    NORMAL.names.forEach(name => {\n      this.proxyNativeTracksForType_(name);\n    });\n  }\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    let el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        const clone = el.cloneNode(true);\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document$1.createElement('video');\n\n        // determine if native controls should be used\n        const tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        const attributes = merge$1({}, tagAttributes);\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n        setAttributes(el, Object.assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n      el.playerId = this.options_.playerId;\n    }\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n    if (this.options_.disablePictureInPicture !== undefined) {\n      el.disablePictureInPicture = this.options_.disablePictureInPicture;\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    const settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n    for (let i = 0; i < settingsAttrs.length; i++) {\n      const attr = settingsAttrs[i];\n      const value = this.options_[attr];\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n    return el;\n  }\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      let loadstartFired = false;\n      const setLoadstartFired = function () {\n        loadstartFired = true;\n      };\n      this.on('loadstart', setLoadstartFired);\n      const triggerLoadstart = function () {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    const eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n\n  /**\n   * Set whether we are scrubbing or not.\n   * This is used to decide whether we should use `fastSeek` or not.\n   * `fastSeek` is used to provide trick play on Safari browsers.\n   *\n   * @param {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  setScrubbing(isScrubbing) {\n    this.isScrubbing_ = isScrubbing;\n  }\n\n  /**\n   * Get whether we are scrubbing or not.\n   *\n   * @return {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  scrubbing() {\n    return this.isScrubbing_;\n  }\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  setCurrentTime(seconds) {\n    try {\n      if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\n        this.el_.fastSeek(seconds);\n      } else {\n        this.el_.currentTime = seconds;\n      }\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  duration() {\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      const checkProgress = () => {\n        if (this.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (this.el_.duration === Infinity) {\n            this.trigger('durationchange');\n          }\n          this.off('timeupdate', checkProgress);\n        }\n      };\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  }\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  width() {\n    return this.el_.offsetWidth;\n  }\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  height() {\n    return this.el_.offsetHeight;\n  }\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  proxyWebkitFullscreen_() {\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n    const endFn = function () {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n      // Safari will sometimes set controls on the videoelement when existing fullscreen.\n      if (this.el_.controls && !this.options_.nativeControlsForTouch && this.controls()) {\n        this.el_.controls = false;\n      }\n    };\n    const beginFn = function () {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true,\n          // set a flag in case another tech triggers fullscreenchange\n          nativeIOSFullscreen: true\n        });\n      }\n    };\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', () => {\n      this.off('webkitbeginfullscreen', beginFn);\n      this.off('webkitendfullscreen', endFn);\n    });\n  }\n\n  /**\n   * Check if fullscreen is supported on the video el.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  supportsFullScreen() {\n    return typeof this.el_.webkitEnterFullScreen === 'function';\n  }\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  enterFullScreen() {\n    const video = this.el_;\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      silencePromise(this.el_.play());\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }, 0);\n    } else {\n      try {\n        video.webkitEnterFullScreen();\n      } catch (e) {\n        this.trigger('fullscreenerror', e);\n      }\n    }\n  }\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  exitFullScreen() {\n    if (!this.el_.webkitDisplayingFullscreen) {\n      this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n      return;\n    }\n    this.el_.webkitExitFullScreen();\n  }\n\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n\n  /**\n   * Native requestVideoFrameCallback if supported by browser/tech, or fallback\n   * Don't use rVCF on Safari when DRM is playing, as it doesn't fire\n   * Needs to be checked later than the constructor\n   * This will be a false positive for clear sources loaded after a Fairplay source\n   *\n   * @param {function} cb function to call\n   * @return {number} id of request\n   */\n  requestVideoFrameCallback(cb) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      return this.el_.requestVideoFrameCallback(cb);\n    }\n    return super.requestVideoFrameCallback(cb);\n  }\n\n  /**\n   * Native or fallback requestVideoFrameCallback\n   *\n   * @param {number} id request id to cancel\n   */\n  cancelVideoFrameCallback(id) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      this.el_.cancelVideoFrameCallback(id);\n    } else {\n      super.cancelVideoFrameCallback(id);\n    }\n  }\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  src(src) {\n    if (src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(src);\n  }\n\n  /**\n   * Add a <source> element to the <video> element.\n   *\n   * @param {string} srcUrl\n   *        The URL of the video source.\n   *\n   * @param {string} [mimeType]\n   *        The MIME type of the video source. Optional but recommended.\n   *\n   * @return {boolean}\n   *         Returns true if the source element was successfully added, false otherwise.\n   */\n  addSourceElement(srcUrl, mimeType) {\n    if (!srcUrl) {\n      log$1.error('Invalid source URL.');\n      return false;\n    }\n    const sourceAttributes = {\n      src: srcUrl\n    };\n    if (mimeType) {\n      sourceAttributes.type = mimeType;\n    }\n    const sourceElement = createEl('source', {}, sourceAttributes);\n    this.el_.appendChild(sourceElement);\n    return true;\n  }\n\n  /**\n   * Remove a <source> element from the <video> element by its URL.\n   *\n   * @param {string} srcUrl\n   *        The URL of the source to remove.\n   *\n   * @return {boolean}\n   *         Returns true if the source element was successfully removed, false otherwise.\n   */\n  removeSourceElement(srcUrl) {\n    if (!srcUrl) {\n      log$1.error('Source URL is required to remove the source element.');\n      return false;\n    }\n    const sourceElements = this.el_.querySelectorAll('source');\n    for (const sourceElement of sourceElements) {\n      if (sourceElement.src === srcUrl) {\n        this.el_.removeChild(sourceElement);\n        return true;\n      }\n    }\n    log$1.warn(`No matching source element found with src: ${srcUrl}`);\n    return false;\n  }\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  }\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  setControls(val) {\n    this.el_.controls = !!val;\n  }\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return super.addTextTrack(kind, label, language);\n    }\n    return this.el_.addTextTrack(kind, label, language);\n  }\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return super.createRemoteTextTrack(options);\n    }\n    const htmlTrackElement = document$1.createElement('track');\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack\n   * will not be removed from the TextTrackList and HtmlTrackElementList\n   * after a source change\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   */\n  addRemoteTextTrack(options, manualCleanup) {\n    const htmlTrackElement = super.addRemoteTextTrack(options, manualCleanup);\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  removeRemoteTextTrack(track) {\n    super.removeRemoteTextTrack(track);\n    if (this.featuresNativeTextTracks) {\n      const tracks = this.$$('track');\n      let i = tracks.length;\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n    const videoPlaybackQuality = {};\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n    if (window$1.performance) {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    }\n    return videoPlaybackQuality;\n  }\n}\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n/**\n * Element for testing browser HTML5 media capabilities\n *\n * @type {Element}\n * @constant\n * @private\n */\ndefineLazyProperty(Html5, 'TEST_VID', function () {\n  if (!isReal()) {\n    return;\n  }\n  const video = document$1.createElement('video');\n  const track = document$1.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  video.appendChild(track);\n  return video;\n});\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    const volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    const canControl = volume !== Html5.TEST_VID.volume;\n\n    // With the introduction of iOS 15, there are cases where the volume is read as\n    // changed but reverts back to its original state at the start of the next tick.\n    // To determine whether volume can be controlled on iOS,\n    // a timeout is set and the volume is checked asynchronously.\n    // Since `features` doesn't currently work asynchronously, the value is manually set.\n    if (canControl && IS_IOS) {\n      window$1.setTimeout(() => {\n        if (Html5 && Html5.prototype) {\n          Html5.prototype.featuresVolumeControl = volume !== Html5.TEST_VID.volume;\n        }\n      });\n\n      // default iOS to false, which will be updated in the timeout above.\n      return false;\n    }\n    return canControl;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {boolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    const muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    const playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    const noop = () => {};\n    Object.defineProperty(document$1.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document$1.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document$1.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document$1.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {boolean}\n * @default {@link Html5.canMuteVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n[['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function ([key, fn]) {\n  defineLazyProperty(Html5.prototype, key, () => Html5[fn](), true);\n});\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Whether the HTML5 el supports `requestVideoFrameCallback`\n *\n * @type {boolean}\n */\nHtml5.prototype.featuresVideoFrameCallback = !!(Html5.TEST_VID && Html5.TEST_VID.requestVideoFrameCallback);\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n  const sources = el.querySelectorAll('source');\n  let i = sources.length;\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on initial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n// played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of 'disablePictureInPicture' from the video element.\n *\n * @method Html5#disablePictureInPicture\n * @return {boolean} value\n *         - The value of `disablePictureInPicture` from the video element.\n *         - True indicates that the video can't be played in Picture-In-Picture mode\n *         - False indicates that the video can be played in Picture-In-Picture mode\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight',\n/**\n * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#crossOrigin\n * @return {string}\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n// setDisablePictureInPicture, setCrossOrigin\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate',\n/**\n * Prevents the browser from suggesting a Picture-in-Picture context menu\n * or to request Picture-in-Picture automatically in some cases.\n *\n * @method Html5#setDisablePictureInPicture\n * @param {boolean} value\n *         The true value will disable Picture-in-Picture mode.\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#setCrossOrigin\n * @param {string} crossOrigin\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    const ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(`video/${ext}`);\n  }\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\n/**\n * @file player.js\n */\n\n/** @import { TimeRange } from './utils/time' */\n/** @import HtmlTrackElement from './tracks/html-track-element' */\n\n/**\n * @callback PlayerReadyCallback\n * @this     {Player}\n * @returns  {void}\n */\n\n// The following tech events are simply re-triggered\n// on the player when they happen\nconst TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {Event}\n */\n/**\n * Retrigger the `loadedmetadata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nconst TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nconst BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nconst BREAKPOINT_CLASSES = {};\n\n// grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\nBREAKPOINT_ORDER.forEach(k => {\n  const v = k.charAt(0) === 'x' ? `x-${k.substring(1)}` : k;\n  BREAKPOINT_CLASSES[k] = `vjs-layout-${v}`;\n});\nconst DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in three ways:\n * 1. By calling `videojs.getPlayer('example_video_1');`\n * 2. By calling `videojs('example_video_1');` (not recommended)\n * 2. By using it directly via `videojs.players.example_video_1;`\n *\n * @extends Component\n * @global\n */\nclass Player extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {PlayerReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  constructor(tag, options, ready) {\n    // Make sure tag ID exists\n    // also here.. probably better\n    tag.id = tag.id || options.id || `vjs_video_${newGUID()}`;\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = Object.assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      const closest = tag.closest('[lang]');\n      if (closest) {\n        options.language = closest.getAttribute('lang');\n      }\n    }\n\n    // Run base component initializing with new options\n    super(null, options, ready);\n\n    // Create bound methods for document listeners.\n    this.boundDocumentFullscreenChange_ = e => this.documentFullscreenChange_(e);\n    this.boundFullWindowOnEscKey_ = e => this.fullWindowOnEscKey(e);\n    this.boundUpdateStyleEl_ = e => this.updateStyleEl_(e);\n    this.boundApplyInitTime_ = e => this.applyInitTime_(e);\n    this.boundUpdateCurrentBreakpoint_ = e => this.updateCurrentBreakpoint_(e);\n    this.boundHandleTechClick_ = e => this.handleTechClick_(e);\n    this.boundHandleTechDoubleClick_ = e => this.handleTechDoubleClick_(e);\n    this.boundHandleTechTouchStart_ = e => this.handleTechTouchStart_(e);\n    this.boundHandleTechTouchMove_ = e => this.handleTechTouchMove_(e);\n    this.boundHandleTechTouchEnd_ = e => this.handleTechTouchEnd_(e);\n    this.boundHandleTechTap_ = e => this.handleTechTap_(e);\n    this.boundUpdatePlayerHeightOnAudioOnlyMode_ = e => this.updatePlayerHeightOnAudioOnlyMode_(e);\n\n    // default isFullscreen_ to false\n    this.isFullscreen_ = false;\n\n    // create logger\n    this.log = createLogger(this.id_);\n\n    // Hold our own reference to fullscreen api so it can be mocked in tests\n    this.fsApi_ = FullscreenApi;\n\n    // Tracks when a tech changes the poster\n    this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // Init state hasStarted_\n    this.hasStarted_ = false;\n\n    // Init state userActive_\n    this.userActive_ = false;\n\n    // Init debugEnabled_\n    this.debugEnabled_ = false;\n\n    // Init state audioOnlyMode_\n    this.audioOnlyMode_ = false;\n\n    // Init state audioPosterMode_\n    this.audioPosterMode_ = false;\n\n    // Init state audioOnlyCache_\n    this.audioOnlyCache_ = {\n      controlBarHeight: null,\n      playerHeight: null,\n      hiddenChildren: []\n    };\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!this.options_ || !this.options_.techOrder || !this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    this.language(this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      const languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      this.languages_ = languagesToLower;\n    } else {\n      this.languages_ = Player.prototype.options_.languages;\n    }\n    this.resetCache_();\n\n    // Set poster\n    /** @type string */\n    this.poster_ = options.poster || '';\n\n    // Set controls\n    /** @type {boolean} */\n    this.controls_ = !!options.controls;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    this.changingSrc_ = false;\n    this.playCallbacks_ = [];\n    this.playTerminatedQueue_ = [];\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      this.autoplay(this.options_.autoplay);\n    }\n\n    // check plugins\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(name => {\n        if (typeof this[name] !== 'function') {\n          throw new Error(`plugin \"${name}\" does not exist`);\n        }\n      });\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    this.scrubbing_ = false;\n    this.el_ = this.createEl();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(this, {\n      eventBusKey: 'el_'\n    });\n\n    // listen to document and player fullscreenchange handlers so we receive those events\n    // before a user can receive them so we can update isFullscreen appropriately.\n    // make sure that we listen to fullscreenchange events before everything else to make sure that\n    // our isFullscreen method is updated properly for internal components as well as external.\n    if (this.fsApi_.requestFullscreen) {\n      on(document$1, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n      this.on(this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n    if (this.fluid_) {\n      this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    const playerOptionsCopy = merge$1(this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(name => {\n        this[name](options.plugins[name]);\n      });\n    }\n\n    // Enable debug mode to fire debugon event for all plugins.\n    if (options.debug) {\n      this.debug(true);\n    }\n    this.options_.playerOptions = playerOptionsCopy;\n    this.middleware_ = [];\n    this.playbackRates(options.playbackRates);\n    if (options.experimentalSvgIcons) {\n      // Add SVG Sprite to the DOM\n      const parser = new window$1.DOMParser();\n      const parsedSVG = parser.parseFromString(icons, 'image/svg+xml');\n      const errorNode = parsedSVG.querySelector('parsererror');\n      if (errorNode) {\n        log$1.warn('Failed to load SVG Icons. Falling back to Font Icons.');\n        this.options_.experimentalSvgIcons = null;\n      } else {\n        const sprite = parsedSVG.documentElement;\n        sprite.style.display = 'none';\n        this.el_.appendChild(sprite);\n        this.addClass('vjs-svg-icons-enabled');\n      }\n    }\n    this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (this.controls()) {\n      this.addClass('vjs-controls-enabled');\n    } else {\n      this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    this.el_.setAttribute('role', 'region');\n    if (this.isAudio()) {\n      this.el_.setAttribute('aria-label', this.localize('Audio Player'));\n    } else {\n      this.el_.setAttribute('aria-label', this.localize('Video Player'));\n    }\n    if (this.isAudio()) {\n      this.addClass('vjs-audio');\n    }\n\n    // Check if spatial navigation is enabled in the options.\n    // If enabled, instantiate the SpatialNavigation class.\n    if (options.spatialNavigation && options.spatialNavigation.enabled) {\n      this.spatialNavigation = new SpatialNavigation(this);\n      this.addClass('vjs-spatial-navigation-enabled');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n    if (TOUCH_ENABLED) {\n      this.addClass('vjs-touch-enabled');\n    }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[this.id_] = this;\n\n    // Add a major version class to aid css in plugins\n    const majorVersion = version$6.split('.')[0];\n    this.addClass(`vjs-v${majorVersion}`);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    this.userActive(true);\n    this.reportUserActivity();\n    this.one('play', e => this.listenForUserActivity_(e));\n    this.on('keydown', e => this.handleKeyDown(e));\n    this.on('languagechange', e => this.handleLanguagechange(e));\n    this.breakpoints(this.options_.breakpoints);\n    this.responsive(this.options_.responsive);\n\n    // Calling both the audio mode methods after the player is fully\n    // setup to be able to listen to the events triggered by them\n    this.on('ready', () => {\n      // Calling the audioPosterMode method first so that\n      // the audioOnlyMode can take precedence when both options are set to true\n      this.audioPosterMode(this.options_.audioPosterMode);\n      this.audioOnlyMode(this.options_.audioOnlyMode);\n    });\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n  dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    // Make sure all player-specific document listeners are unbound. This is\n    off(document$1, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document$1, 'keydown', this.boundFullWindowOnEscKey_);\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n    if (this.tag) {\n      this.tag = null;\n    }\n    clearCacheForPlayer(this);\n\n    // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      const list = this[props.getterName]();\n\n      // if it is not a native list\n      // we have to manually remove event listeners\n      if (list && list.off) {\n        list.off();\n      }\n    });\n\n    // the actual .el_ is removed here, or replaced if\n    super.dispose({\n      restoreEl: this.options_.restoreEl\n    });\n  }\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    let tag = this.tag;\n    let el;\n    let playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    const divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = super.createEl('div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    const attrs = getAttributes(tag);\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document$1.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el;\n      // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n      Object.keys(el).forEach(k => {\n        try {\n          tag[k] = el[k];\n        } catch (e) {\n          // we got a a property like outerHTML which we can't actually copy, ignore it\n        }\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1';\n\n    // Workaround for #4583 on Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    // doesn't change behavior of Chrome if JAWS is not being used\n    if (IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n    const deviceClassNames = ['IS_SMART_TV', 'IS_TIZEN', 'IS_WEBOS', 'IS_ANDROID', 'IS_IPAD', 'IS_IPHONE', 'IS_CHROMECAST_RECEIVER'].filter(key => browser[key]).map(key => {\n      return 'vjs-device-' + key.substring(3).toLowerCase().replace(/\\_/g, '-');\n    });\n    this.addClass(...deviceClassNames);\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overridable by CSS, just like the\n    // video element\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      const defaultsStyleEl = $('.vjs-styles-defaults');\n      const head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n    this.fill_ = false;\n    this.fluid_ = false;\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n    // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n    this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);\n\n    // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n    const links = tag.getElementsByTagName('a');\n    for (let i = 0; i < links.length; i++) {\n      const linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n    this.el_.setAttribute('translate', 'no');\n    this.el_ = el;\n    return el;\n  }\n\n  /**\n   * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string|null} [value]\n   *        The value to set the `Player`'s crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null|undefined}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  crossOrigin(value) {\n    // `null` can be set to unset a value\n    if (typeof value === 'undefined') {\n      return this.techGet_('crossOrigin');\n    }\n    if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n      log$1.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n      return;\n    }\n    this.techCall_('setCrossOrigin', value);\n    if (this.posterImage) {\n      this.posterImage.crossOrigin(value);\n    }\n    return;\n  }\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number|string} [value]\n   *        CSS value to set the `Player`'s width to.\n   *\n   * @return {number|undefined}\n   *         - The current width of the `Player` when getting.\n   *         - Nothing when setting\n   */\n  width(value) {\n    return this.dimension('width', value);\n  }\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number|string} [value]\n   *        CSS value to set the `Player`'s height to.\n   *\n   * @return {number|undefined}\n   *         - The current height of the `Player` when getting.\n   *         - Nothing when setting\n   */\n  height(value) {\n    return this.dimension('height', value);\n  }\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number|string} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  dimension(dimension, value) {\n    const privDimension = dimension + '_';\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n    if (value === '' || value === 'auto') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n    const parsedVal = parseFloat(value);\n    if (isNaN(parsedVal)) {\n      log$1.error(`Improper value \"${value}\" supplied for for ${dimension}`);\n      return;\n    }\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n    this.fluid_ = !!bool;\n    if (isEvented(this)) {\n      this.off(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(this, () => {\n        this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n    this.updateStyleEl_();\n  }\n\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n    this.fill_ = !!bool;\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player`'s aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      const width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      const height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      const techEl = this.tech_ && this.tech_.el();\n      if (techEl) {\n        if (width >= 0) {\n          techEl.width = width;\n        }\n        if (height >= 0) {\n          techEl.height = height;\n        }\n      }\n      return;\n    }\n    let width;\n    let height;\n    let aspectRatio;\n    let idClass;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    const ratioParts = aspectRatio.split(':');\n    const ratioMultiplier = ratioParts[1] / ratioParts[0];\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calculate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, `\n      .${idClass} {\n        width: ${width}px;\n        height: ${height}px;\n      }\n\n      .${idClass}.vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: ${ratioMultiplier * 100}%;\n      }\n    `);\n  }\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  loadTech_(techName, source) {\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n    const titleTechName = toTitleCase$1(techName);\n    const camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n    let autoplay = this.autoplay();\n\n    // if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    if (typeof this.autoplay() === 'string' || this.autoplay() === true && this.options_.normalizeAutoplay) {\n      autoplay = false;\n    }\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    const techOptions = {\n      source,\n      autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': `${this.id()}_${camelTechName}_api`,\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'disablePictureInPicture': this.options_.disablePictureInPicture,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      techOptions[props.getterName] = this[props.privateName];\n    });\n    Object.assign(techOptions, this.options_[titleTechName]);\n    Object.assign(techOptions, this.options_[camelTechName]);\n    Object.assign(techOptions, this.options_[techName.toLowerCase()]);\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    const TechClass = Tech.getTech(techName);\n    if (!TechClass) {\n      throw new Error(`No Tech named '${titleTechName}' exists! '${titleTechName}' should be registered using videojs.registerTech()'`);\n    }\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind_(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(event => {\n      this.on(this.tech_, event, e => this[`handleTech${toTitleCase$1(event)}_`](e));\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(event => {\n      this.on(this.tech_, event, eventObj => {\n        if (this.tech_.playbackRate() === 0 && this.tech_.seeking()) {\n          this.queuedCallbacks_.push({\n            callback: this[`handleTech${TECH_EVENTS_QUEUE[event]}_`].bind(this),\n            event: eventObj\n          });\n          return;\n        }\n        this[`handleTech${TECH_EVENTS_QUEUE[event]}_`](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', e => this.handleTechLoadStart_(e));\n    this.on(this.tech_, 'sourceset', e => this.handleTechSourceset_(e));\n    this.on(this.tech_, 'waiting', e => this.handleTechWaiting_(e));\n    this.on(this.tech_, 'ended', e => this.handleTechEnded_(e));\n    this.on(this.tech_, 'seeking', e => this.handleTechSeeking_(e));\n    this.on(this.tech_, 'play', e => this.handleTechPlay_(e));\n    this.on(this.tech_, 'pause', e => this.handleTechPause_(e));\n    this.on(this.tech_, 'durationchange', e => this.handleTechDurationChange_(e));\n    this.on(this.tech_, 'fullscreenchange', (e, data) => this.handleTechFullscreenChange_(e, data));\n    this.on(this.tech_, 'fullscreenerror', (e, err) => this.handleTechFullscreenError_(e, err));\n    this.on(this.tech_, 'enterpictureinpicture', e => this.handleTechEnterPictureInPicture_(e));\n    this.on(this.tech_, 'leavepictureinpicture', e => this.handleTechLeavePictureInPicture_(e));\n    this.on(this.tech_, 'error', e => this.handleTechError_(e));\n    this.on(this.tech_, 'posterchange', e => this.handleTechPosterChange_(e));\n    this.on(this.tech_, 'textdata', e => this.handleTechTextData_(e));\n    this.on(this.tech_, 'ratechange', e => this.handleTechRateChange_(e));\n    this.on(this.tech_, 'loadedmetadata', this.boundUpdateStyleEl_);\n    this.usingNativeControls(this.techGet_('controls'));\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  unloadTech_() {\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      this[props.privateName] = this[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n    this.isPosterFromTech_ = false;\n  }\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  tech(safety) {\n    if (safety === undefined) {\n      log$1.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n    }\n    return this.tech_;\n  }\n\n  /**\n   * An object that contains Video.js version.\n   *\n   * @typedef {Object} PlayerVersion\n   *\n   * @property {string} 'video.js' - Video.js version\n   */\n\n  /**\n   * Returns an object with Video.js version.\n   *\n   * @return {PlayerVersion}\n   *          An object with Video.js version.\n   */\n  version() {\n    return {\n      'video.js': version$6\n    };\n  }\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n    this.on(this.tech_, 'click', this.boundHandleTechClick_);\n    this.on(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.boundHandleTechTap_);\n  }\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.boundHandleTechTap_);\n    this.off(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n    this.off(this.tech_, 'click', this.boundHandleTechClick_);\n    this.off(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n  }\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n  }\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#loadstart\n   * @listens Tech#loadstart\n   * @private\n   */\n  handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended', 'vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // Update the duration\n    this.handleTechDurationChange_();\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {Event}\n       */\n      this.trigger('loadstart');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay() === true && this.options_.normalizeAutoplay ? 'play' : this.autoplay());\n  }\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  manualAutoplay_(type) {\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    // Save original muted() value, set muted to true, and attempt to play().\n    // On promise rejection, restore muted from saved value\n    const resolveMuted = () => {\n      const previouslyMuted = this.muted();\n      this.muted(true);\n      const restoreMuted = () => {\n        this.muted(previouslyMuted);\n      };\n\n      // restore muted on play terminatation\n      this.playTerminatedQueue_.push(restoreMuted);\n      const mutedPromise = this.play();\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n      return mutedPromise.catch(err => {\n        restoreMuted();\n        throw new Error(`Rejection at manualAutoplay. Restoring muted value. ${err ? err : ''}`);\n      });\n    };\n    let promise;\n\n    // if muted defaults to true\n    // the only thing we can do is call play\n    if (type === 'any' && !this.muted()) {\n      promise = this.play();\n      if (isPromise(promise)) {\n        promise = promise.catch(resolveMuted);\n      }\n    } else if (type === 'muted' && !this.muted()) {\n      promise = resolveMuted();\n    } else {\n      promise = this.play();\n    }\n    if (!isPromise(promise)) {\n      return;\n    }\n    return promise.then(() => {\n      this.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    }).catch(() => {\n      this.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  updateSourceCaches_(srcObj = '') {\n    let src = srcObj;\n    let type = '';\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = merge$1({}, srcObj, {\n      src,\n      type\n    });\n    const matchingSources = this.cache_.sources.filter(s => s.src && s.src === src);\n    const sourceElSources = [];\n    const sourceEls = this.$$('source');\n    const matchingSourceEls = [];\n    for (let i = 0; i < sourceEls.length; i++) {\n      const sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  }\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  handleTechSourceset_(event) {\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      let updateSourceCaches = src => this.updateSourceCaches_(src);\n      const playerSrc = this.currentSource().src;\n      const eventSrc = event.src;\n\n      // if we have a playerSrc that is not a blob, and a tech src that is a blob\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = () => {};\n        }\n      }\n\n      // update the source to the initial source right away\n      // in some cases this will be empty string\n      updateSourceCaches(eventSrc);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      if (!event.src) {\n        this.tech_.any(['sourceset', 'loadstart'], e => {\n          // if a sourceset happens before a `loadstart` there\n          // is nothing to do as this `handleTechSourceset_`\n          // will be called again and this will be handled there.\n          if (e.type === 'sourceset') {\n            return;\n          }\n          const techSrc = this.techGet_('currentSrc');\n          this.lastSource_.tech = techSrc;\n          this.updateSourceCaches_(techSrc);\n        });\n      }\n    }\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n    if (request === this.hasStarted_) {\n      return;\n    }\n    this.hasStarted_ = request;\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  handleTechPlay_() {\n    this.removeClass('vjs-ended', 'vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {Event}\n     */\n    this.trigger('play');\n  }\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(queued => queued.callback(queued.event));\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  }\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  handleTechWaiting_() {\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {Event}\n     */\n    this.trigger('waiting');\n\n    // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n    const timeWhenWaiting = this.currentTime();\n    const timeUpdateListener = () => {\n      if (timeWhenWaiting !== this.currentTime()) {\n        this.removeClass('vjs-waiting');\n        this.off('timeupdate', timeUpdateListener);\n      }\n    };\n    this.on('timeupdate', timeUpdateListener);\n  }\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {Event}\n     */\n    this.trigger('canplay');\n  }\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {Event}\n     */\n    this.trigger('canplaythrough');\n  }\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {Event}\n     */\n    this.trigger('playing');\n  }\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {Event}\n     */\n    this.trigger('seeking');\n  }\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  handleTechSeeked_() {\n    this.removeClass('vjs-seeking', 'vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {Event}\n     */\n    this.trigger('seeked');\n  }\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {Event}\n     */\n    this.trigger('pause');\n  }\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  handleTechEnded_() {\n    this.addClass('vjs-ended');\n    this.removeClass('vjs-waiting');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {Event}\n     */\n    this.trigger('ended');\n  }\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#click\n   * @private\n   */\n  handleTechClick_(event) {\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n    if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.click === undefined || this.options_.userActions.click !== false) {\n      if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.click === 'function') {\n        this.options_.userActions.click.call(this, event);\n      } else if (this.paused()) {\n        silencePromise(this.play());\n      } else {\n        this.pause();\n      }\n    }\n  }\n\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen,\n   * or exit documentPictureInPicture mode\n   *\n   * @param {Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    }\n\n    // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n    const inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), el => el.contains(event.target));\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isInPictureInPicture() && !document$1.pictureInPictureElement) {\n          // Checking the presence of `window.documentPictureInPicture.window` complicates\n          // tests, checking `document.pictureInPictureElement` also works. It wouldn't\n          // be null in regular picture in picture.\n          // Exit picture in picture mode. This gesture can't trigger pip on the main window.\n          this.exitPictureInPicture();\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n\n  /**\n   * Handle touch to end\n   *\n   * @param {Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @private\n   */\n  toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  documentFullscreenChange_(e) {\n    const targetPlayer = e.target.player;\n\n    // if another player was fullscreen\n    // do a null check for targetPlayer because older firefox's would put document as e.target\n    if (targetPlayer && targetPlayer !== this) {\n      return;\n    }\n    const el = this.el();\n    let isFs = document$1[this.fsApi_.fullscreenElement] === el;\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    }\n    this.isFullscreen(isFs);\n  }\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  handleTechFullscreenChange_(event, data) {\n    if (data) {\n      if (data.nativeIOSFullscreen) {\n        this.addClass('vjs-ios-native-fs');\n        this.tech_.one('webkitendfullscreen', () => {\n          this.removeClass('vjs-ios-native-fs');\n        });\n      }\n      this.isFullscreen(data.isFullscreen);\n    }\n  }\n  handleTechFullscreenError_(event, err) {\n    this.trigger('fullscreenerror', err);\n  }\n\n  /**\n   * @private\n   */\n  togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  handleTechError_() {\n    const error = this.tech_.error();\n    if (error) {\n      this.error(error);\n    }\n  }\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  handleTechTextData_() {\n    let data = null;\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {Event}\n     */\n    this.trigger('textdata', data);\n  }\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  getCache() {\n    return this.cache_;\n  }\n\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      initTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      playbackRates: [],\n      volume: 1\n    };\n  }\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} [arg]\n   *        the argument to pass\n   *\n   * @private\n   */\n  techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  }\n\n  /**\n   * Mediate attempt to call playback tech method\n   * and return the value of the method called.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {*}\n   *         Value returned by the tech method called, undefined if tech\n   *         is not ready or tech method is not present\n   *\n   * @private\n   */\n  techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Log error when playback tech object is present but method\n    // is undefined or unavailable\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1(`Video.js: ${method} method not defined for ${this.techName_} playback technology.`, e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1(`Video.js: ${method} unavailable on ${this.techName_} playback technology element.`, e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  }\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  play() {\n    return new Promise(resolve => {\n      this.play_(resolve);\n    });\n  }\n\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  play_(callback = silencePromise) {\n    this.playCallbacks_.push(callback);\n    const isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));\n    const isSafariOrIOS = Boolean(IS_ANY_SAFARI || IS_IOS);\n\n    // treat calls to play_ somewhat like the `one` event function\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    }\n\n    // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = e => {\n        this.play_();\n      };\n      this.one(['ready', 'loadstart'], this.waitToPlay_);\n\n      // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n      if (!isSrcReady && isSafariOrIOS) {\n        this.load();\n      }\n      return;\n    }\n\n    // If the player/tech is ready and we have a source, we can attempt playback.\n    const val = this.techGet_('play');\n\n    // For native playback, reset the progress bar if we get a play call from a replay.\n    const isNativeReplay = isSafariOrIOS && this.hasClass('vjs-ended');\n    if (isNativeReplay) {\n      this.resetProgressBar_();\n    }\n    // play was terminated if the returned value is null\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differentiate between a terminated play and an actual call to play.\n   */\n  runPlayTerminatedQueue_() {\n    const queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  runPlayCallbacks_(val) {\n    const callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = [];\n    // clear play terminatedQueue since we finished a real play\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n\n  /**\n   * Pause the video playback\n   */\n  pause() {\n    this.techCall_('pause');\n  }\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  played() {\n    return this.techGet_('played') || createTimeRanges$1(0, 0);\n  }\n\n  /**\n   * Sets or returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean|undefined}\n   *         - The value of scrubbing when getting\n   *         - Nothing when setting\n   */\n  scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n    this.techCall_('setScrubbing', this.scrubbing_);\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number|undefined}\n   *         - the current time in seconds when getting\n   *         - Nothing when setting\n   */\n  currentTime(seconds) {\n    if (seconds === undefined) {\n      // cache last currentTime and return. default to 0 seconds\n      //\n      // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n      // currentTime when scrubbing, but may not provide much performance benefit after all.\n      // Should be tested. Also something has to read the actual current time or the cache will\n      // never get updated.\n      this.cache_.currentTime = this.techGet_('currentTime') || 0;\n      return this.cache_.currentTime;\n    }\n    if (seconds < 0) {\n      seconds = 0;\n    }\n    if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n      this.cache_.initTime = seconds;\n      this.off('canplay', this.boundApplyInitTime_);\n      this.one('canplay', this.boundApplyInitTime_);\n      return;\n    }\n    this.techCall_('setCurrentTime', seconds);\n    this.cache_.initTime = 0;\n    if (isFinite(seconds)) {\n      this.cache_.currentTime = Number(seconds);\n    }\n  }\n\n  /**\n   * Apply the value of initTime stored in cache as currentTime.\n   *\n   * @private\n   */\n  applyInitTime_() {\n    this.currentTime(this.cache_.initTime);\n  }\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and depending on preload behaviour may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number|undefined}\n   *         - The duration of the video in seconds when getting\n   *         - Nothing when setting\n   */\n  duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n    seconds = parseFloat(seconds);\n\n    // Standardize on Infinity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing\n      this.cache_.duration = seconds;\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n\n  /**\n   * A remaining time function that is intended to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  }\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock {@link TimeRanges} object (following HTML spec)\n   */\n  buffered() {\n    let buffered = this.techGet_('buffered');\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges$1(0, 0);\n    }\n    return buffered;\n  }\n\n  /**\n   * Get the TimeRanges of the media that are currently available\n   * for seeking to.\n   *\n   * @see [Seekable Spec]{@link https://html.spec.whatwg.org/multipage/media.html#dom-media-seekable}\n   *\n   * @return {TimeRange}\n   *         A mock {@link TimeRanges} object (following HTML spec)\n   */\n  seekable() {\n    let seekable = this.techGet_('seekable');\n    if (!seekable || !seekable.length) {\n      seekable = createTimeRanges$1(0, 0);\n    }\n    return seekable;\n  }\n\n  /**\n   * Returns whether the player is in the \"seeking\" state.\n   *\n   * @return {boolean} True if the player is in the seeking state, false if not.\n   */\n  seeking() {\n    return this.techGet_('seeking');\n  }\n\n  /**\n   * Returns whether the player is in the \"ended\" state.\n   *\n   * @return {boolean} True if the player is in the ended state, false if not.\n   */\n  ended() {\n    return this.techGet_('ended');\n  }\n\n  /**\n   * Returns the current state of network activity for the element, from\n   * the codes in the list below.\n   * - NETWORK_EMPTY (numeric value 0)\n   *   The element has not yet been initialised. All attributes are in\n   *   their initial states.\n   * - NETWORK_IDLE (numeric value 1)\n   *   The element's resource selection algorithm is active and has\n   *   selected a resource, but it is not actually using the network at\n   *   this time.\n   * - NETWORK_LOADING (numeric value 2)\n   *   The user agent is actively trying to download data.\n   * - NETWORK_NO_SOURCE (numeric value 3)\n   *   The element's resource selection algorithm is active, but it has\n   *   not yet found a resource to use.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n   * @return {number} the current network activity state\n   */\n  networkState() {\n    return this.techGet_('networkState');\n  }\n\n  /**\n   * Returns a value that expresses the current state of the element\n   * with respect to rendering the current playback position, from the\n   * codes in the list below.\n   * - HAVE_NOTHING (numeric value 0)\n   *   No information regarding the media resource is available.\n   * - HAVE_METADATA (numeric value 1)\n   *   Enough of the resource has been obtained that the duration of the\n   *   resource is available.\n   * - HAVE_CURRENT_DATA (numeric value 2)\n   *   Data for the immediate current playback position is available.\n   * - HAVE_FUTURE_DATA (numeric value 3)\n   *   Data for the immediate current playback position is available, as\n   *   well as enough data for the user agent to advance the current\n   *   playback position in the direction of playback.\n   * - HAVE_ENOUGH_DATA (numeric value 4)\n   *   The user agent estimates that enough data is available for\n   *   playback to proceed uninterrupted.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n   * @return {number} the current playback rendering state\n   */\n  readyState() {\n    return this.techGet_('readyState');\n  }\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  bufferedPercent() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  bufferedEnd() {\n    const buffered = this.buffered();\n    const duration = this.duration();\n    let end = buffered.end(buffered.length - 1);\n    if (end > duration) {\n      end = duration;\n    }\n    return end;\n  }\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number|undefined}\n   *         The current volume as a percent when getting\n   */\n  volume(percentAsDecimal) {\n    let vol;\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, percentAsDecimal));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|undefined}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   *         - nothing if setting\n   */\n  muted(muted) {\n    if (muted !== undefined) {\n      this.techCall_('setMuted', muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  }\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|undefined}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - Nothing when setting\n   */\n  defaultMuted(defaultMuted) {\n    if (defaultMuted !== undefined) {\n      this.techCall_('setDefaultMuted', defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  }\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number|undefined}\n   *         - The current value of lastVolume as a percent when getting\n   *         - Nothing when setting\n   *\n   * @private\n   */\n  lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  }\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean|undefined}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   *         - Nothing when setting\n   */\n  isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      const oldValue = this.isFullscreen_;\n      this.isFullscreen_ = Boolean(isFS);\n\n      // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n      // this is the only place where we trigger fullscreenchange events for older browsers\n      // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n      if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n        /**\n           * @event Player#fullscreenchange\n           * @type {Event}\n           */\n        this.trigger('fullscreenchange');\n      }\n      this.toggleFullscreenClass_();\n      return;\n    }\n    return this.isFullscreen_;\n  }\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  requestFullscreen(fullscreenOptions) {\n    if (this.isInPictureInPicture()) {\n      this.exitPictureInPicture();\n    }\n    const self = this;\n    return new Promise((resolve, reject) => {\n      function offHandler() {\n        self.off('fullscreenerror', errorHandler);\n        self.off('fullscreenchange', changeHandler);\n      }\n      function changeHandler() {\n        offHandler();\n        resolve();\n      }\n      function errorHandler(e, err) {\n        offHandler();\n        reject(err);\n      }\n      self.one('fullscreenchange', changeHandler);\n      self.one('fullscreenerror', errorHandler);\n      const promise = self.requestFullscreenHelper_(fullscreenOptions);\n      if (promise) {\n        promise.then(offHandler, offHandler);\n        promise.then(resolve, reject);\n      }\n    });\n  }\n  requestFullscreenHelper_(fullscreenOptions) {\n    let fsOptions;\n\n    // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n    // Use defaults or player configured option unless passed directly to this method.\n    if (!this.fsApi_.prefixed) {\n      fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n      if (fullscreenOptions !== undefined) {\n        fsOptions = fullscreenOptions;\n      }\n    }\n\n    // This method works as follows:\n    // 1. if a fullscreen api is available, use it\n    //   1. call requestFullscreen with potential options\n    //   2. if we got a promise from above, use it to update isFullscreen()\n    // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n    //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n    // 3. otherwise, use \"fullWindow\" mode\n    if (this.fsApi_.requestFullscreen) {\n      const promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n      // Even on browsers with promise support this may not return a promise\n      if (promise) {\n        promise.then(() => this.isFullscreen(true), () => this.isFullscreen(false));\n      }\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n    }\n  }\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  exitFullscreen() {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      function offHandler() {\n        self.off('fullscreenerror', errorHandler);\n        self.off('fullscreenchange', changeHandler);\n      }\n      function changeHandler() {\n        offHandler();\n        resolve();\n      }\n      function errorHandler(e, err) {\n        offHandler();\n        reject(err);\n      }\n      self.one('fullscreenchange', changeHandler);\n      self.one('fullscreenerror', errorHandler);\n      const promise = self.exitFullscreenHelper_();\n      if (promise) {\n        promise.then(offHandler, offHandler);\n        // map the promise to our resolve/reject methods\n        promise.then(resolve, reject);\n      }\n    });\n  }\n  exitFullscreenHelper_() {\n    if (this.fsApi_.requestFullscreen) {\n      const promise = document$1[this.fsApi_.exitFullscreen]();\n\n      // Even on browsers with promise support this may not return a promise\n      if (promise) {\n        // we're splitting the promise here, so, we want to catch the\n        // potential error so that this chain doesn't have unhandled errors\n        silencePromise(promise.then(() => this.isFullscreen(false)));\n      }\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n    }\n  }\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  enterFullWindow() {\n    this.isFullscreen(true);\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document$1.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document$1, 'keydown', this.boundFullWindowOnEscKey_);\n\n    // Hide any scroll bars\n    document$1.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document$1.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {Event}\n     */\n    this.trigger('enterFullWindow');\n  }\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  fullWindowOnEscKey(event) {\n    if (event.key === 'Escape') {\n      if (this.isFullscreen() === true) {\n        if (!this.isFullWindow) {\n          this.exitFullscreen();\n        } else {\n          this.exitFullWindow();\n        }\n      }\n    }\n  }\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  exitFullWindow() {\n    this.isFullscreen(false);\n    this.isFullWindow = false;\n    off(document$1, 'keydown', this.boundFullWindowOnEscKey_);\n\n    // Unhide scroll bars.\n    document$1.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document$1.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {Event}\n     */\n    this.trigger('exitFullWindow');\n  }\n\n  /**\n   * Get or set disable Picture-in-Picture mode.\n   *\n   * @param {boolean} [value]\n   *                  - true will disable Picture-in-Picture mode\n   *                  - false will enable Picture-in-Picture mode\n   */\n  disablePictureInPicture(value) {\n    if (value === undefined) {\n      return this.techGet_('disablePictureInPicture');\n    }\n    this.techCall_('setDisablePictureInPicture', value);\n    this.options_.disablePictureInPicture = value;\n    this.trigger('disablepictureinpicturechanged');\n  }\n\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean|undefined}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   *         - nothing if setting\n   */\n  isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n    return !!this.isInPictureInPicture_;\n  }\n\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * This can use document picture-in-picture or element picture in picture\n   *\n   * Set `enableDocumentPictureInPicture` to `true` to use docPiP on a supported browser\n   * Else set `disablePictureInPicture` to `false` to disable elPiP on a supported browser\n   *\n   *\n   * @see [Spec]{@link https://w3c.github.io/picture-in-picture/}\n   * @see [Spec]{@link https://wicg.github.io/document-picture-in-picture/}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  requestPictureInPicture() {\n    if (this.options_.enableDocumentPictureInPicture && window$1.documentPictureInPicture) {\n      const pipContainer = document$1.createElement(this.el().tagName);\n      pipContainer.classList = this.el().classList;\n      pipContainer.classList.add('vjs-pip-container');\n      if (this.posterImage) {\n        pipContainer.appendChild(this.posterImage.el().cloneNode(true));\n      }\n      if (this.titleBar) {\n        pipContainer.appendChild(this.titleBar.el().cloneNode(true));\n      }\n      pipContainer.appendChild(createEl('p', {\n        className: 'vjs-pip-text'\n      }, {}, this.localize('Playing in picture-in-picture')));\n      return window$1.documentPictureInPicture.requestWindow({\n        // The aspect ratio won't be correct, Chrome bug https://crbug.com/1407629\n        width: this.videoWidth(),\n        height: this.videoHeight()\n      }).then(pipWindow => {\n        copyStyleSheetsToWindow(pipWindow);\n        this.el_.parentNode.insertBefore(pipContainer, this.el_);\n        pipWindow.document.body.appendChild(this.el_);\n        pipWindow.document.body.classList.add('vjs-pip-window');\n        this.player_.isInPictureInPicture(true);\n        this.player_.trigger({\n          type: 'enterpictureinpicture',\n          pipWindow\n        });\n\n        // Listen for the PiP closing event to move the video back.\n        pipWindow.addEventListener('pagehide', event => {\n          const pipVideo = event.target.querySelector('.video-js');\n          pipContainer.parentNode.replaceChild(pipVideo, pipContainer);\n          this.player_.isInPictureInPicture(false);\n          this.player_.trigger('leavepictureinpicture');\n        });\n        return pipWindow;\n      });\n    }\n    if ('pictureInPictureEnabled' in document$1 && this.disablePictureInPicture() === false) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n    return Promise.reject('No PiP mode is available');\n  }\n\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  exitPictureInPicture() {\n    if (window$1.documentPictureInPicture && window$1.documentPictureInPicture.window) {\n      // With documentPictureInPicture, Player#leavepictureinpicture is fired in the pagehide handler\n      window$1.documentPictureInPicture.window.close();\n      return Promise.resolve();\n    }\n    if ('pictureInPictureEnabled' in document$1) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {Event}\n       */\n      return document$1.exitPictureInPicture();\n    }\n  }\n\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const {\n      userActions\n    } = this.options_;\n\n    // Bail out if hotkeys are not configured.\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    }\n\n    // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n    const excludeElement = el => {\n      const tagName = el.tagName.toLowerCase();\n\n      // The first and easiest test is for `contenteditable` elements.\n      if (el.isContentEditable) {\n        return true;\n      }\n\n      // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n      const allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      }\n\n      // The final test is by tag name. These tags will be excluded entirely.\n      const excludedTags = ['textarea'];\n      return excludedTags.indexOf(tagName) !== -1;\n    };\n\n    // Bail out if the user is focused on an interactive form element.\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  handleHotkeys(event) {\n    const hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {};\n\n    // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n    const {\n      fullscreenKey = keydownEvent => event.key.toLowerCase() === 'f',\n      muteKey = keydownEvent => event.key.toLowerCase() === 'm',\n      playPauseKey = keydownEvent => event.key.toLowerCase() === 'k' || event.key.toLowerCase() === ' '\n    } = hotkeys;\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const FSToggle = Component$1.getComponent('FullscreenToggle');\n      if (document$1[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const MuteToggle = Component$1.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const PlayToggle = Component$1.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  canPlayType(type) {\n    let can;\n\n    // Loop through each playback technology in the options order\n    for (let i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      const techName = j[i];\n      let tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component$1.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n        if (can) {\n          return can;\n        }\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  selectSource(sources) {\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    const techs = this.options_.techOrder.map(techName => {\n      return [techName, Tech.getTech(techName)];\n    }).filter(([techName, tech]) => {\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n      log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    const findFirstPassingTechSourcePair = function (outerArray, innerArray, tester) {\n      let found;\n      outerArray.some(outerChoice => {\n        return innerArray.some(innerChoice => {\n          found = tester(outerChoice, innerChoice);\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n    let foundSourceAndTech;\n    const flip = fn => (a, b) => fn(b, a);\n    const finder = ([techName, tech], source) => {\n      if (tech.canPlaySource(source, this.options_[techName.toLowerCase()])) {\n        return {\n          source,\n          tech: techName\n        };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n    return foundSourceAndTech || false;\n  }\n\n  /**\n   * Executes source setting and getting logic\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   * @param {boolean} [isRetry]\n   *        Indicates whether this is being called internally as a result of a retry\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  handleSrc_(source, isRetry) {\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n\n    // Reset retry behavior for new source\n    if (this.resetRetryOnError_) {\n      this.resetRetryOnError_();\n    }\n\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    const sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.options_.notSupportedMessage\n        });\n      }, 0);\n      return;\n    }\n\n    // initial sources\n    this.changingSrc_ = true;\n\n    // Only update the cached source list if we are not retrying a new source after error,\n    // since in that case we want to include the failed source(s) in the cache\n    if (!isRetry) {\n      this.cache_.sources = sources;\n    }\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], (middlewareSource, mws) => {\n      this.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      if (!isRetry) {\n        this.cache_.sources = sources;\n      }\n      this.updateSourceCaches_(middlewareSource);\n      const err = this.src_(middlewareSource);\n      if (err) {\n        if (sources.length > 1) {\n          return this.handleSrc_(sources.slice(1));\n        }\n        this.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        this.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.options_.notSupportedMessage\n          });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        this.triggerReady();\n        return;\n      }\n      setTech(mws, this.tech_);\n    });\n\n    // Try another available source if this one fails before playback.\n    if (sources.length > 1) {\n      const retry = () => {\n        // Remove the error modal\n        this.error(null);\n        this.handleSrc_(sources.slice(1), true);\n      };\n      const stopListeningForErrors = () => {\n        this.off('error', retry);\n      };\n      this.one('error', retry);\n      this.one('playing', stopListeningForErrors);\n      this.resetRetryOnError_ = () => {\n        this.off('error', retry);\n        this.off('playing', stopListeningForErrors);\n      };\n    }\n  }\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  src(source) {\n    return this.handleSrc_(source, false);\n  }\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  src_(source) {\n    const sourceTech = this.selectSource([source]);\n    if (!sourceTech) {\n      return true;\n    }\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(() => {\n        this.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n\n  /**\n   * Add a <source> element to the <video> element.\n   *\n   * @param {string} srcUrl\n   *        The URL of the video source.\n   *\n   * @param {string} [mimeType]\n   *        The MIME type of the video source. Optional but recommended.\n   *\n   * @return {boolean}\n   *         Returns true if the source element was successfully added, false otherwise.\n   */\n  addSourceElement(srcUrl, mimeType) {\n    if (!this.tech_) {\n      return false;\n    }\n    return this.tech_.addSourceElement(srcUrl, mimeType);\n  }\n\n  /**\n   * Remove a <source> element from the <video> element by its URL.\n   *\n   * @param {string} srcUrl\n   *        The URL of the source to remove.\n   *\n   * @return {boolean}\n   *         Returns true if the source element was successfully removed, false otherwise.\n   */\n  removeSourceElement(srcUrl) {\n    if (!this.tech_) {\n      return false;\n    }\n    return this.tech_.removeSourceElement(srcUrl);\n  }\n\n  /**\n   * Begin loading the src data.\n   */\n  load() {\n    // Workaround to use the load method with the VHS.\n    // Does not cover the case when the load method is called directly from the mediaElement.\n    if (this.tech_ && this.tech_.vhs) {\n      this.src(this.currentSource());\n      return;\n    }\n    this.techCall_('load');\n  }\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  reset() {\n    if (this.paused()) {\n      this.doReset_();\n    } else {\n      const playPromise = this.play();\n      silencePromise(playPromise.then(() => this.doReset_()));\n    }\n  }\n  doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n    this.error(null);\n    if (this.titleBar) {\n      this.titleBar.update({\n        title: undefined,\n        description: undefined\n      });\n    }\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  resetProgressBar_() {\n    this.currentTime(0);\n    const {\n      currentTimeDisplay,\n      durationDisplay,\n      progressControl,\n      remainingTimeDisplay\n    } = this.controlBar || {};\n    const {\n      seekBar\n    } = progressControl || {};\n    if (currentTimeDisplay) {\n      currentTimeDisplay.updateContent();\n    }\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n    if (seekBar) {\n      seekBar.update();\n      if (seekBar.loadProgressBar) {\n        seekBar.loadProgressBar.update();\n      }\n    }\n  }\n\n  /**\n   * Reset Playback ratio\n   */\n  resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n\n  /**\n   * Reset Volume bar\n   */\n  resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  currentSources() {\n    const source = this.currentSource();\n    const sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n    return this.cache_.sources || sources;\n  }\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  currentSource() {\n    return this.cache_.source || {};\n  }\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {'none'|'auto'|'metadata'} [value]\n   *        Preload mode to pass to tech\n   *\n   * @return {string|undefined}\n   *         - The preload attribute value when getting\n   *         - Nothing when setting\n   */\n  preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  }\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|'play'|'muted'|'any'} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string|undefined}\n   *         - The current value of autoplay when getting\n   *         - Nothing when setting\n   */\n  autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n    let techAutoplay;\n\n    // if the value is a valid string set it to that, or normalize `true` to 'play', if need be\n    if (typeof value === 'string' && /(any|play|muted)/.test(value) || value === true && this.options_.normalizeAutoplay) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(typeof value === 'string' ? value : 'play');\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|undefined}\n   *         - the current value of playsinline\n   *         - Nothing when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n    }\n    return this.techGet_('playsinline');\n  }\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean|undefined}\n   *         - The current value of loop when getting\n   *         - Nothing when setting\n   */\n  loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  }\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string|undefined}\n   *         - The current value of poster when getting\n   *         - Nothing when setting\n   */\n  poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {Event}\n     */\n    this.trigger('posterchange');\n  }\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      const newPoster = this.tech_.poster() || '';\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  }\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean|undefined}\n   *         - The current value of controls when getting\n   *         - Nothing when setting\n   */\n  controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n    this.controls_ = bool;\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls) or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean|undefined}\n   *         - The current value of native controls when getting\n   *         - Nothing when setting\n   */\n  usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n    this.usingNativeControls_ = bool;\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  }\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null|undefined}\n   *         - The current MediaError when getting (or null)\n   *         - Nothing when setting\n   */\n  error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // allow hooks to modify error object\n    hooks('beforeerror').forEach(hookFunction => {\n      const newErr = hookFunction(this, err);\n      if (!(isObject(newErr) && !Array.isArray(newErr) || typeof newErr === 'string' || typeof newErr === 'number' || newErr === null)) {\n        this.log.error('please return a value that MediaError expects in beforeerror hooks');\n        return;\n      }\n      err = newErr;\n    });\n\n    // Suppress the first error message for no compatible source until\n    // user interaction\n    if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n      const triggerSuppressedError = function () {\n        this.error(err);\n      };\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = null;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n    log$1.error(`(CODE:${this.error_.code} ${MediaError.errorTypes[this.error_.code]})`, this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {Event}\n     */\n    this.trigger('error');\n\n    // notify hooks of the per player error\n    hooks('error').forEach(hookFunction => hookFunction(this, this.error_));\n    return;\n  }\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean|undefined}\n   *         - The current value of userActive when getting\n   *         - Nothing when setting\n   */\n  userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n    bool = !!bool;\n    if (bool === this.userActive_) {\n      return;\n    }\n    this.userActive_ = bool;\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {Event}\n     */\n    this.trigger('userinactive');\n  }\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  listenForUserActivity_() {\n    let mouseInProgress;\n    let lastMoveX;\n    let lastMoveY;\n    const handleActivity = bind_(this, this.reportUserActivity);\n    const handleMouseMove = function (e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n    const handleMouseDown = function () {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n    const handleMouseUpAndMouseLeave = function (event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUpAndMouseLeave);\n    this.on('mouseleave', handleMouseUpAndMouseLeave);\n    const controlBar = this.getChild('controlBar');\n\n    // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        if (this.player().options_.inactivityTimeout !== 0) {\n          this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        }\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    }\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    let inactivityTimeout;\n\n    /** @this Player */\n    const activityCheck = function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n      const timeout = this.options_.inactivityTimeout;\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    };\n    this.setInterval(activityCheck, 250);\n  }\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number|undefined}\n   *         - The current playback rate when getting or 1.0\n   *         - Nothing when setting\n   */\n  playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  }\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|undefined}\n   *         - The default playback rate when getting or 1.0\n   *         - Nothing when setting\n   */\n  defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  }\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} [bool]\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean|undefined}\n   *         - The current value of isAudio when getting\n   *         - Nothing when setting\n   */\n  isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n    return !!this.isAudio_;\n  }\n  updatePlayerHeightOnAudioOnlyMode_() {\n    const controlBar = this.getChild('ControlBar');\n    if (!controlBar || this.audioOnlyCache_.controlBarHeight === controlBar.currentHeight()) {\n      return;\n    }\n    this.audioOnlyCache_.controlBarHeight = controlBar.currentHeight();\n    this.height(this.audioOnlyCache_.controlBarHeight);\n  }\n  enableAudioOnlyUI_() {\n    // Update styling immediately to show the control bar so we can get its height\n    this.addClass('vjs-audio-only-mode');\n    const playerChildren = this.children();\n    const controlBar = this.getChild('ControlBar');\n    const controlBarHeight = controlBar && controlBar.currentHeight();\n\n    // Hide all player components except the control bar. Control bar components\n    // needed only for video are hidden with CSS\n    playerChildren.forEach(child => {\n      if (child === controlBar) {\n        return;\n      }\n      if (child.el_ && !child.hasClass('vjs-hidden')) {\n        child.hide();\n        this.audioOnlyCache_.hiddenChildren.push(child);\n      }\n    });\n    this.audioOnlyCache_.playerHeight = this.currentHeight();\n    this.audioOnlyCache_.controlBarHeight = controlBarHeight;\n    this.on('playerresize', this.boundUpdatePlayerHeightOnAudioOnlyMode_);\n\n    // Set the player height the same as the control bar\n    this.height(controlBarHeight);\n    this.trigger('audioonlymodechange');\n  }\n  disableAudioOnlyUI_() {\n    this.removeClass('vjs-audio-only-mode');\n    this.off('playerresize', this.boundUpdatePlayerHeightOnAudioOnlyMode_);\n\n    // Show player components that were previously hidden\n    this.audioOnlyCache_.hiddenChildren.forEach(child => child.show());\n\n    // Reset player height\n    this.height(this.audioOnlyCache_.playerHeight);\n    this.trigger('audioonlymodechange');\n  }\n\n  /**\n   * Get the current audioOnlyMode state or set audioOnlyMode to true or false.\n   *\n   * Setting this to `true` will hide all player components except the control bar,\n   * as well as control bar components needed only for video.\n   *\n   * @param {boolean} [value]\n   *         The value to set audioOnlyMode to.\n   *\n   * @return {Promise|boolean}\n   *        A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  audioOnlyMode(value) {\n    if (typeof value !== 'boolean' || value === this.audioOnlyMode_) {\n      return this.audioOnlyMode_;\n    }\n    this.audioOnlyMode_ = value;\n\n    // Enable Audio Only Mode\n    if (value) {\n      const exitPromises = [];\n\n      // Fullscreen and PiP are not supported in audioOnlyMode, so exit if we need to.\n      if (this.isInPictureInPicture()) {\n        exitPromises.push(this.exitPictureInPicture());\n      }\n      if (this.isFullscreen()) {\n        exitPromises.push(this.exitFullscreen());\n      }\n      if (this.audioPosterMode()) {\n        exitPromises.push(this.audioPosterMode(false));\n      }\n      return Promise.all(exitPromises).then(() => this.enableAudioOnlyUI_());\n    }\n\n    // Disable Audio Only Mode\n    return Promise.resolve().then(() => this.disableAudioOnlyUI_());\n  }\n  enablePosterModeUI_() {\n    // Hide the video element and show the poster image to enable posterModeUI\n    const tech = this.tech_ && this.tech_;\n    tech.hide();\n    this.addClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n  disablePosterModeUI_() {\n    // Show the video element and hide the poster image to disable posterModeUI\n    const tech = this.tech_ && this.tech_;\n    tech.show();\n    this.removeClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n\n  /**\n   * Get the current audioPosterMode state or set audioPosterMode to true or false\n   *\n   * @param {boolean} [value]\n   *         The value to set audioPosterMode to.\n   *\n   * @return {Promise|boolean}\n   *         A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  audioPosterMode(value) {\n    if (typeof value !== 'boolean' || value === this.audioPosterMode_) {\n      return this.audioPosterMode_;\n    }\n    this.audioPosterMode_ = value;\n    if (value) {\n      if (this.audioOnlyMode()) {\n        const audioOnlyModePromise = this.audioOnlyMode(false);\n        return audioOnlyModePromise.then(() => {\n          // enable audio poster mode after audio only mode is disabled\n          this.enablePosterModeUI_();\n        });\n      }\n      return Promise.resolve().then(() => {\n        // enable audio poster mode\n        this.enablePosterModeUI_();\n      });\n    }\n    return Promise.resolve().then(() => {\n      // disable audio poster mode\n      this.disablePosterModeUI_();\n    });\n  }\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack will not be removed\n   *                                        from the TextTrackList and HtmlTrackElementList\n   *                                        after a source change\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   */\n  addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  removeRemoteTextTrack(obj = {}) {\n    let {\n      track\n    } = obj;\n    if (!track) {\n      track = obj;\n    }\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n\n  /**\n   * Set or get the player's language code.\n   *\n   * Changing the language will trigger\n   * [languagechange]{@link Player#event:languagechange}\n   * which Components can use to update control text.\n   * ClickableComponent will update its control text by default on\n   * [languagechange]{@link Player#event:languagechange}.\n   *\n   * @fires Player#languagechange\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string|undefined}\n   *         - The current language code when getting\n   *         - Nothing when setting\n   */\n  language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n    if (this.language_ !== String(code).toLowerCase()) {\n      this.language_ = String(code).toLowerCase();\n\n      // during first init, it's possible some things won't be evented\n      if (isEvented(this)) {\n        /**\n        * fires when the player language change\n        *\n        * @event Player#languagechange\n        * @type {Event}\n        */\n        this.trigger('languagechange');\n      }\n    }\n  }\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  languages() {\n    return merge$1(Player.prototype.options_.languages, this.languages_);\n  }\n\n  /**\n   * returns a JavaScript object representing the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  toJSON() {\n    const options = merge$1(this.options_);\n    const tracks = options.tracks;\n    options.tracks = [];\n    for (let i = 0; i < tracks.length; i++) {\n      let track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = merge$1(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n    return options;\n  }\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  createModal(content, options) {\n    options = options || {};\n    options.content = content || '';\n    const modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', () => {\n      this.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n    const currentBreakpoint = this.currentBreakpoint();\n    const currentWidth = this.currentWidth();\n    for (let i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      const candidateBreakpoint = BREAKPOINT_ORDER[i];\n      const maxWidth = this.breakpoints_[candidateBreakpoint];\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        }\n\n        // Only remove a class if there is a current breakpoint.\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  removeCurrentBreakpoint_() {\n    const className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  breakpoints(breakpoints) {\n    // Used as a getter.\n    if (breakpoints === undefined) {\n      return Object.assign(this.breakpoints_);\n    }\n    this.breakpoint_ = '';\n    this.breakpoints_ = Object.assign({}, DEFAULT_BREAKPOINTS, breakpoints);\n\n    // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n    this.updateCurrentBreakpoint_();\n\n    // Clone the breakpoints before returning.\n    return Object.assign(this.breakpoints_);\n  }\n\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} [value]\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean|undefined}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   *         Nothing if setting\n   */\n  responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n    value = Boolean(value);\n    const current = this.responsive_;\n\n    // Nothing changed.\n    if (value === current) {\n      return;\n    }\n\n    // The value actually changed, set it.\n    this.responsive_ = value;\n\n    // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n    if (value) {\n      this.on('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_();\n\n      // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n    return value;\n  }\n\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  currentBreakpoint() {\n    return this.breakpoint_;\n  }\n\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  loadMedia(media, ready) {\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n    const crossOrigin = this.crossOrigin();\n    this.reset();\n\n    // Clone the media object so it cannot be mutated from outside.\n    this.cache_.media = merge$1(media);\n    const {\n      artist,\n      artwork,\n      description,\n      poster,\n      src,\n      textTracks,\n      title\n    } = this.cache_.media;\n\n    // If `artwork` is not given, create it using `poster`.\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n    if (crossOrigin) {\n      this.crossOrigin(crossOrigin);\n    }\n    if (src) {\n      this.src(src);\n    }\n    if (poster) {\n      this.poster(poster);\n    }\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(tt => this.addRemoteTextTrack(tt, false));\n    }\n    if (this.titleBar) {\n      this.titleBar.update({\n        title,\n        description: description || artist || ''\n      });\n    }\n    this.ready(ready);\n  }\n\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  getMedia() {\n    if (!this.cache_.media) {\n      const poster = this.poster();\n      const src = this.currentSources();\n      const textTracks = Array.prototype.map.call(this.remoteTextTracks(), tt => ({\n        kind: tt.kind,\n        label: tt.label,\n        language: tt.language,\n        src: tt.src\n      }));\n      const media = {\n        src,\n        textTracks\n      };\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n      return media;\n    }\n    return merge$1(this.cache_.media);\n  }\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  static getTagSettings(tag) {\n    const baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    const tagOptions = getAttributes(tag);\n    const dataSetup = tagOptions['data-setup'];\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      try {\n        // If empty string, make it a parsable json object.\n        Object.assign(tagOptions, JSON.parse(dataSetup || '{}'));\n      } catch (e) {\n        log$1.error('data-setup', e);\n      }\n    }\n    Object.assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      const children = tag.childNodes;\n      for (let i = 0, j = children.length; i < j; i++) {\n        const child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        const childName = child.nodeName.toLowerCase();\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n    return baseOptions;\n  }\n\n  /**\n   * Set debug mode to enable/disable logs at info level.\n   *\n   * @param {boolean} enabled\n   * @fires Player#debugon\n   * @fires Player#debugoff\n   * @return {boolean|undefined}\n   */\n  debug(enabled) {\n    if (enabled === undefined) {\n      return this.debugEnabled_;\n    }\n    if (enabled) {\n      this.trigger('debugon');\n      this.previousLogLevel_ = this.log.level;\n      this.log.level('debug');\n      this.debugEnabled_ = true;\n    } else {\n      this.trigger('debugoff');\n      this.log.level(this.previousLogLevel_);\n      this.previousLogLevel_ = undefined;\n      this.debugEnabled_ = false;\n    }\n  }\n\n  /**\n   * Set or get current playback rates.\n   * Takes an array and updates the playback rates menu with the new items.\n   * Pass in an empty array to hide the menu.\n   * Values other than arrays are ignored.\n   *\n   * @fires Player#playbackrateschange\n   * @param {number[]} [newRates]\n   *                   The new rates that the playback rates menu should update to.\n   *                   An empty array will hide the menu\n   * @return {number[]} When used as a getter will return the current playback rates\n   */\n  playbackRates(newRates) {\n    if (newRates === undefined) {\n      return this.cache_.playbackRates;\n    }\n\n    // ignore any value that isn't an array\n    if (!Array.isArray(newRates)) {\n      return;\n    }\n\n    // ignore any arrays that don't only contain numbers\n    if (!newRates.every(rate => typeof rate === 'number')) {\n      return;\n    }\n    this.cache_.playbackRates = newRates;\n\n    /**\n    * fires when the playback rates in a player are changed\n    *\n    * @event Player#playbackrateschange\n    * @type {Event}\n    */\n    this.trigger('playbackrateschange');\n  }\n\n  /**\n   * Reports whether or not a player has a plugin available.\n   *\n   * This does not report whether or not the plugin has ever been initialized\n   * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n   *\n   * @method hasPlugin\n   * @param  {string}  name\n   *         The name of a plugin.\n   *\n   * @return {boolean}\n   *         Whether or not this player has the requested plugin available.\n   */\n\n  /**\n   * Reports whether or not a player is using a plugin by name.\n   *\n   * For basic plugins, this only reports whether the plugin has _ever_ been\n   * initialized on this player.\n   *\n   * @method Player#usingPlugin\n   * @param  {string} name\n   *         The name of a plugin.\n   *\n   * @return {boolean}\n   *         Whether or not this player is using the requested plugin.\n   */\n}\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  const props = ALL[name];\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n * behavior.\n *\n * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n *\n * @param {string} [value]\n *        The value to set the `Player`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\nPlayer.prototype.crossorigin = Player.prototype.crossOrigin;\n\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\nPlayer.players = {};\nconst navigator = window$1.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  // enable sourceset by default\n  enableSourceset: true,\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'titleBar', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  normalizeAutoplay: false,\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false,\n  audioOnlyMode: false,\n  audioPosterMode: false,\n  spatialNavigation: {\n    enabled: false,\n    horizontalSeek: false\n  },\n  // Default smooth seeking to false\n  enableSmoothSeeking: false,\n  disableSeekWhileScrubbingOnMobile: false\n};\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[`handleTech${toTitleCase$1(event)}_`] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {Event}\n */\n\nComponent$1.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nconst BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nconst PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nconst pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\nconst pluginExists = name => pluginStorage.hasOwnProperty(name);\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {typeof Plugin|Function|undefined}\n *          The plugin (or undefined).\n */\nconst getPlugin = name => pluginExists(name) ? pluginStorage[name] : undefined;\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nconst markPluginAsActive = (player, name) => {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nconst triggerSetupEvent = (player, hash, before) => {\n  const eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\nconst createBasicPlugin = function (name, plugin) {\n  const basicPluginWrapper = function () {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name,\n      plugin,\n      instance: null\n    }, true);\n    const instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name,\n      plugin,\n      instance\n    });\n    return instance;\n  };\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\nconst createPluginFactory = (name, PluginSubClass) => {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function (...args) {\n    triggerSetupEvent(this, {\n      name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n    const instance = new PluginSubClass(...[this, ...args]);\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = () => instance;\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\nclass Plugin {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  constructor(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n    this.player = player;\n    if (!this.log) {\n      this.log = this.player.log.createLogger(this.name);\n    }\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = this.dispose.bind(this);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n  version() {\n    return this.constructor.VERSION;\n  }\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  getEventHash(hash = {}) {\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  trigger(event, hash = {}) {\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  handleStateChanged(e) {}\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  dispose() {\n    const {\n      name,\n      player\n    } = this;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {Event}\n     */\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  static isBasic(plugin) {\n    const p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {typeof Plugin|Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {typeof Plugin|Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  static registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(`Illegal plugin name, \"${name}\", must be a string, was ${typeof name}.`);\n    }\n    if (pluginExists(name)) {\n      log$1.warn(`A plugin named \"${name}\" already exists. You may want to avoid re-registering plugins!`);\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(`Illegal plugin name, \"${name}\", cannot share a name with an existing player method!`);\n    }\n    if (typeof plugin !== 'function') {\n      throw new Error(`Illegal plugin for \"${name}\", must be a function, was ${typeof plugin}.`);\n    }\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n    return plugin;\n  }\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  static deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  static getPlugins(names = Object.keys(pluginStorage)) {\n    let result;\n    names.forEach(name => {\n      const plugin = getPlugin(name);\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  static getPluginVersion(name) {\n    const plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  }\n}\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {typeof Plugin|Function|undefined}\n *           The plugin (or `undefined`).\n */\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {PluginEventHash}\n */\n\n/**\n * @typedef  {Object} PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file deprecate.js\n * @module deprecate\n */\n\n/**\n * Decorate a function with a deprecation message the first time it is called.\n *\n * @param  {string}   message\n *         A deprecation message to log the first time the returned function\n *         is called.\n *\n * @param  {Function} fn\n *         The function to be deprecated.\n *\n * @return {Function}\n *         A wrapper function that will log a deprecation warning the first\n *         time it is called. The return value will be the return value of\n *         the wrapped function.\n */\nfunction deprecate(message, fn) {\n  let warned = false;\n  return function (...args) {\n    if (!warned) {\n      log$1.warn(message);\n    }\n    warned = true;\n    return fn.apply(this, args);\n  };\n}\n\n/**\n * Internal function used to mark a function as deprecated in the next major\n * version with consistent messaging.\n *\n * @param  {number}   major   The major version where it will be removed\n * @param  {string}   oldName The old function name\n * @param  {string}   newName The new function name\n * @param  {Function} fn      The function to deprecate\n * @return {Function}         The decorated function\n */\nfunction deprecateForMajor(major, oldName, newName, fn) {\n  return deprecate(`${oldName} is deprecated and will be removed in ${major}.0; please use ${newName} instead.`, fn);\n}\n\nvar VjsErrors = {\n  NetworkBadStatus: 'networkbadstatus',\n  NetworkRequestFailed: 'networkrequestfailed',\n  NetworkRequestAborted: 'networkrequestaborted',\n  NetworkRequestTimeout: 'networkrequesttimeout',\n  NetworkBodyParserFailed: 'networkbodyparserfailed',\n  StreamingHlsPlaylistParserError: 'streaminghlsplaylistparsererror',\n  StreamingDashManifestParserError: 'streamingdashmanifestparsererror',\n  StreamingContentSteeringParserError: 'streamingcontentsteeringparsererror',\n  StreamingVttParserError: 'streamingvttparsererror',\n  StreamingFailedToSelectNextSegment: 'streamingfailedtoselectnextsegment',\n  StreamingFailedToDecryptSegment: 'streamingfailedtodecryptsegment',\n  StreamingFailedToTransmuxSegment: 'streamingfailedtotransmuxsegment',\n  StreamingFailedToAppendSegment: 'streamingfailedtoappendsegment',\n  StreamingCodecsChangeError: 'streamingcodecschangeerror'\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n\n/** @import { PlayerReadyCallback } from './player' */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\nconst normalizeId = id => id.indexOf('#') === 0 ? id.slice(1) : id;\n\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {PlayerReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\nfunction videojs(id, options, ready) {\n  let player = videojs.getPlayer(id);\n  if (player) {\n    if (options) {\n      log$1.warn(`Player \"${id}\" is already initialised. Options will not be applied.`);\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n  const el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n  // If element is inside Shadow DOM (e.g. is part of a Custom element), ownerDocument.body\n  // always returns false. Instead, use the Shadow DOM root.\n  const inShadowDom = 'getRootNode' in el ? el.getRootNode() instanceof window$1.ShadowRoot : false;\n  const rootNode = inShadowDom ? el.getRootNode() : el.ownerDocument.body;\n  if (!el.ownerDocument.defaultView || !rootNode.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n  options = options || {};\n\n  // Store a copy of the el before modification, if it is to be restored in destroy()\n  // If div ingest, store the parent div\n  if (options.restoreEl === true) {\n    options.restoreEl = (el.parentNode && el.parentNode.hasAttribute && el.parentNode.hasAttribute('data-vjs-player') ? el.parentNode : el).cloneNode(true);\n  }\n  hooks('beforesetup').forEach(hookFunction => {\n    const opts = hookFunction(el, merge$1(options));\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n    options = merge$1(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  const PlayerComponent = Component$1.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  hooks('setup').forEach(hookFunction => hookFunction(player));\n  return player;\n}\nvideojs.hooks_ = hooks_;\nvideojs.hooks = hooks;\nvideojs.hook = hook;\nvideojs.hookOnce = hookOnce;\nvideojs.removeHook = removeHook;\n\n// Add default styles\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  let style = $('.vjs-styles-defaults');\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    const head = $('head');\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n    setTextContent(style, `\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: 56.25%\n      }\n    `);\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs);\n\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\nvideojs.VERSION = version$6;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs.getPlayers = () => Player.players;\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs.getPlayer = id => {\n  const players = Player.players;\n  let tag;\n  if (typeof id === 'string') {\n    const nId = normalizeId(id);\n    const player = players[nId];\n    if (player) {\n      return player;\n    }\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n  if (isEl(tag)) {\n    const {\n      player,\n      playerId\n    } = tag;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n    if (player || players[playerId]) {\n      return player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs.getAllPlayers = () =>\n// Disposed players leave a key with a `null` value, so we need to make sure\n// we filter those out.\nObject.keys(Player.players).map(k => Player.players[k]).filter(Boolean);\nvideojs.players = Player.players;\nvideojs.getComponent = Component$1.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {typeof Component} comp\n *        The component class\n *\n * @return {typeof Component}\n *         The newly registered component\n */\nvideojs.registerComponent = (name, comp) => {\n  if (Tech.isTech(comp)) {\n    log$1.warn(`The ${name} tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)`);\n  }\n  return Component$1.registerComponent.call(Component$1, name, comp);\n};\nvideojs.getTech = Tech.getTech;\nvideojs.registerTech = Tech.registerTech;\nvideojs.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\nObject.defineProperty(videojs, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\nvideojs.browser = browser;\n\n/**\n * A reference to the {@link module:obj|obj utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:obj|obj}\n */\nvideojs.obj = Obj;\n\n/**\n * Deprecated reference to the {@link module:obj.merge|merge function}\n *\n * @type {Function}\n * @see {@link module:obj.merge|merge}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.merge instead.\n */\nvideojs.mergeOptions = deprecateForMajor(9, 'videojs.mergeOptions', 'videojs.obj.merge', merge$1);\n\n/**\n * Deprecated reference to the {@link module:obj.defineLazyProperty|defineLazyProperty function}\n *\n * @type {Function}\n * @see {@link module:obj.defineLazyProperty|defineLazyProperty}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.defineLazyProperty instead.\n */\nvideojs.defineLazyProperty = deprecateForMajor(9, 'videojs.defineLazyProperty', 'videojs.obj.defineLazyProperty', defineLazyProperty);\n\n/**\n * Deprecated reference to the {@link module:fn.bind_|fn.bind_ function}\n *\n * @type {Function}\n * @see {@link module:fn.bind_|fn.bind_}\n * @deprecated Deprecated and will be removed in 9.0. Please use native Function.prototype.bind instead.\n */\nvideojs.bind = deprecateForMajor(9, 'videojs.bind', 'native Function.prototype.bind', bind_);\nvideojs.registerPlugin = Plugin.registerPlugin;\nvideojs.deregisterPlugin = Plugin.deregisterPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated Deprecated and will be removed in 9.0. Use videojs.registerPlugin() instead.\n *\n * @param {string} name\n *        The plugin name\n*\n * @param {typeof Plugin|Function} plugin\n *         The plugin sub-class or function\n *\n * @return {typeof Plugin|Function}\n */\nvideojs.plugin = (name, plugin) => {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\nvideojs.getPlugins = Plugin.getPlugins;\nvideojs.getPlugin = Plugin.getPlugin;\nvideojs.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs.addLanguage = function (code, data) {\n  code = ('' + code).toLowerCase();\n  videojs.options.languages = merge$1(videojs.options.languages, {\n    [code]: data\n  });\n  return videojs.options.languages[code];\n};\n\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\nvideojs.log = log$1;\nvideojs.createLogger = createLogger;\n\n/**\n * A reference to the {@link module:time|time utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:time|time}\n */\nvideojs.time = Time;\n\n/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */\nvideojs.createTimeRange = deprecateForMajor(9, 'videojs.createTimeRange', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */\nvideojs.createTimeRanges = deprecateForMajor(9, 'videojs.createTimeRanges', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n/**\n * Deprecated reference to the {@link module:time.formatTime|formatTime function}\n *\n * @type {Function}\n * @see {@link module:time.formatTime|formatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.format instead.\n */\nvideojs.formatTime = deprecateForMajor(9, 'videojs.formatTime', 'videojs.time.formatTime', formatTime);\n\n/**\n * Deprecated reference to the {@link module:time.setFormatTime|setFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.setFormatTime|setFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.setFormat instead.\n */\nvideojs.setFormatTime = deprecateForMajor(9, 'videojs.setFormatTime', 'videojs.time.setFormatTime', setFormatTime);\n\n/**\n * Deprecated reference to the {@link module:time.resetFormatTime|resetFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.resetFormatTime|resetFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.resetFormat instead.\n */\nvideojs.resetFormatTime = deprecateForMajor(9, 'videojs.resetFormatTime', 'videojs.time.resetFormatTime', resetFormatTime);\n\n/**\n * Deprecated reference to the {@link module:url.parseUrl|Url.parseUrl function}\n *\n * @type {Function}\n * @see {@link module:url.parseUrl|parseUrl}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.parseUrl instead.\n */\nvideojs.parseUrl = deprecateForMajor(9, 'videojs.parseUrl', 'videojs.url.parseUrl', parseUrl);\n\n/**\n * Deprecated reference to the {@link module:url.isCrossOrigin|Url.isCrossOrigin function}\n *\n * @type {Function}\n * @see {@link module:url.isCrossOrigin|isCrossOrigin}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.isCrossOrigin instead.\n */\nvideojs.isCrossOrigin = deprecateForMajor(9, 'videojs.isCrossOrigin', 'videojs.url.isCrossOrigin', isCrossOrigin);\nvideojs.EventTarget = EventTarget$2;\nvideojs.any = any;\nvideojs.on = on;\nvideojs.one = one;\nvideojs.off = off;\nvideojs.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\nvideojs.xhr = XHR;\nvideojs.TextTrack = TextTrack;\nvideojs.AudioTrack = AudioTrack;\nvideojs.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(k => {\n  videojs[k] = function () {\n    log$1.warn(`videojs.${k}() is deprecated; use videojs.dom.${k}() instead`);\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs.computedStyle = deprecateForMajor(9, 'videojs.computedStyle', 'videojs.dom.computedStyle', computedStyle);\n\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:dom|dom}\n */\nvideojs.dom = Dom;\n\n/**\n * A reference to the {@link module:fn|fn utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:fn|fn}\n */\nvideojs.fn = Fn;\n\n/**\n * A reference to the {@link module:num|num utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:num|num}\n */\nvideojs.num = Num;\n\n/**\n * A reference to the {@link module:str|str utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:str|str}\n */\nvideojs.str = Str;\n\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:url|url}\n */\nvideojs.url = Url;\n\n// The list of possible error types to occur in video.js\nvideojs.Error = VjsErrors;\n\n/*! @name videojs-contrib-quality-levels @version 4.1.0 @license Apache-2.0 */\n\n/**\n * A single QualityLevel.\n *\n * interface QualityLevel {\n *   readonly attribute DOMString id;\n *            attribute DOMString label;\n *   readonly attribute long width;\n *   readonly attribute long height;\n *   readonly attribute long bitrate;\n *            attribute boolean enabled;\n * };\n *\n * @class QualityLevel\n */\nclass QualityLevel {\n  /**\n   * Creates a QualityLevel\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   */\n  constructor(representation) {\n    let level = this; // eslint-disable-line\n\n    level.id = representation.id;\n    level.label = level.id;\n    level.width = representation.width;\n    level.height = representation.height;\n    level.bitrate = representation.bandwidth;\n    level.frameRate = representation.frameRate;\n    level.enabled_ = representation.enabled;\n    Object.defineProperty(level, 'enabled', {\n      /**\n       * Get whether the QualityLevel is enabled.\n       *\n       * @return {boolean} True if the QualityLevel is enabled.\n       */\n      get() {\n        return level.enabled_();\n      },\n      /**\n       * Enable or disable the QualityLevel.\n       *\n       * @param {boolean} enable true to enable QualityLevel, false to disable.\n       */\n      set(enable) {\n        level.enabled_(enable);\n      }\n    });\n    return level;\n  }\n}\n\n/**\n * A list of QualityLevels.\n *\n * interface QualityLevelList : EventTarget {\n *   getter QualityLevel (unsigned long index);\n *   readonly attribute unsigned long length;\n *   readonly attribute long selectedIndex;\n *\n *   void addQualityLevel(QualityLevel qualityLevel)\n *   void removeQualityLevel(QualityLevel remove)\n *   QualityLevel? getQualityLevelById(DOMString id);\n *\n *   attribute EventHandler onchange;\n *   attribute EventHandler onaddqualitylevel;\n *   attribute EventHandler onremovequalitylevel;\n * };\n *\n * @extends videojs.EventTarget\n * @class QualityLevelList\n */\nclass QualityLevelList extends videojs.EventTarget {\n  /**\n   * Creates a QualityLevelList.\n   */\n  constructor() {\n    super();\n    let list = this; // eslint-disable-line\n\n    list.levels_ = [];\n    list.selectedIndex_ = -1;\n\n    /**\n     * Get the index of the currently selected QualityLevel.\n     *\n     * @returns {number} The index of the selected QualityLevel. -1 if none selected.\n     * @readonly\n     */\n    Object.defineProperty(list, 'selectedIndex', {\n      get() {\n        return list.selectedIndex_;\n      }\n    });\n\n    /**\n     * Get the length of the list of QualityLevels.\n     *\n     * @returns {number} The length of the list.\n     * @readonly\n     */\n    Object.defineProperty(list, 'length', {\n      get() {\n        return list.levels_.length;\n      }\n    });\n    list[Symbol.iterator] = () => list.levels_.values();\n    return list;\n  }\n\n  /**\n   * Adds a quality level to the list.\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   * @return {QualityLevel} the QualityLevel added to the list\n   * @method addQualityLevel\n   */\n  addQualityLevel(representation) {\n    let qualityLevel = this.getQualityLevelById(representation.id);\n\n    // Do not add duplicate quality levels\n    if (qualityLevel) {\n      return qualityLevel;\n    }\n    const index = this.levels_.length;\n    qualityLevel = new QualityLevel(representation);\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.levels_[index];\n        }\n      });\n    }\n    this.levels_.push(qualityLevel);\n    this.trigger({\n      qualityLevel,\n      type: 'addqualitylevel'\n    });\n    return qualityLevel;\n  }\n\n  /**\n   * Removes a quality level from the list.\n   *\n   * @param {QualityLevel} qualityLevel The QualityLevel to remove from the list.\n   * @return {QualityLevel|null} the QualityLevel removed or null if nothing removed\n   * @method removeQualityLevel\n   */\n  removeQualityLevel(qualityLevel) {\n    let removed = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (this[i] === qualityLevel) {\n        removed = this.levels_.splice(i, 1)[0];\n        if (this.selectedIndex_ === i) {\n          this.selectedIndex_ = -1;\n        } else if (this.selectedIndex_ > i) {\n          this.selectedIndex_--;\n        }\n        break;\n      }\n    }\n    if (removed) {\n      this.trigger({\n        qualityLevel,\n        type: 'removequalitylevel'\n      });\n    }\n    return removed;\n  }\n\n  /**\n   * Searches for a QualityLevel with the given id.\n   *\n   * @param {string} id The id of the QualityLevel to find.\n   * @return {QualityLevel|null} The QualityLevel with id, or null if not found.\n   * @method getQualityLevelById\n   */\n  getQualityLevelById(id) {\n    for (let i = 0, l = this.length; i < l; i++) {\n      const level = this[i];\n      if (level.id === id) {\n        return level;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Resets the list of QualityLevels to empty\n   *\n   * @method dispose\n   */\n  dispose() {\n    this.selectedIndex_ = -1;\n    this.levels_.length = 0;\n  }\n}\n\n/**\n * change - The selected QualityLevel has changed.\n * addqualitylevel - A QualityLevel has been added to the QualityLevelList.\n * removequalitylevel - A QualityLevel has been removed from the QualityLevelList.\n */\nQualityLevelList.prototype.allowedEvents_ = {\n  change: 'change',\n  addqualitylevel: 'addqualitylevel',\n  removequalitylevel: 'removequalitylevel'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (const event in QualityLevelList.prototype.allowedEvents_) {\n  QualityLevelList.prototype['on' + event] = null;\n}\nvar version$5 = \"4.1.0\";\n\n/**\n * Initialization function for the qualityLevels plugin. Sets up the QualityLevelList and\n * event handlers.\n *\n * @param {Player} player Player object.\n * @param {Object} options Plugin options object.\n * @return {QualityLevelList} a list of QualityLevels\n */\nconst initPlugin$1 = function (player, options) {\n  const originalPluginFn = player.qualityLevels;\n  const qualityLevelList = new QualityLevelList();\n  const disposeHandler = function () {\n    qualityLevelList.dispose();\n    player.qualityLevels = originalPluginFn;\n    player.off('dispose', disposeHandler);\n  };\n  player.on('dispose', disposeHandler);\n  player.qualityLevels = () => qualityLevelList;\n  player.qualityLevels.VERSION = version$5;\n  return qualityLevelList;\n};\n\n/**\n * A video.js plugin.\n *\n * In the plugin function, the value of `this` is a video.js `Player`\n * instance. You cannot rely on the player being in a \"ready\" state here,\n * depending on how the plugin is invoked. This may or may not be important\n * to you; if not, remove the wait for \"ready\"!\n *\n * @param {Object} options Plugin options object\n * @return {QualityLevelList} a list of QualityLevels\n */\nconst qualityLevels = function (options) {\n  return initPlugin$1(this, videojs.obj.merge({}, options));\n};\n\n// Register the plugin with video.js.\nvideojs.registerPlugin('qualityLevels', qualityLevels);\n\n// Include the version number.\nqualityLevels.VERSION = version$5;\n\n/*! @name @videojs/http-streaming @version 3.16.2 @license Apache-2.0 */\n\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\nconst resolveUrl = _resolveUrl;\n/**\n * If the xhr request was redirected, return the responseURL, otherwise,\n * return the original url.\n *\n * @api private\n *\n * @param  {string} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {string}\n */\n\nconst resolveManifestRedirect = (url, req) => {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (req && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n  return url;\n};\nconst logger = source => {\n  if (videojs.log.debug) {\n    return videojs.log.debug.bind(videojs, 'VHS:', `${source} >`);\n  }\n  return function () {};\n};\n\n/**\n * Provides a compatibility layer between Video.js 7 and 8 API changes for VHS.\n */\n/**\n * Delegates to videojs.obj.merge (Video.js 8) or\n * videojs.mergeOptions (Video.js 7).\n */\n\nfunction merge(...args) {\n  const context = videojs.obj || videojs;\n  const fn = context.merge || context.mergeOptions;\n  return fn.apply(context, args);\n}\n/**\n * Delegates to videojs.time.createTimeRanges (Video.js 8) or\n * videojs.createTimeRanges (Video.js 7).\n */\n\nfunction createTimeRanges(...args) {\n  const context = videojs.time || videojs;\n  const fn = context.createTimeRanges || context.createTimeRanges;\n  return fn.apply(context, args);\n}\n/**\n * Converts provided buffered ranges to a descriptive string\n *\n * @param {TimeRanges} buffered - received buffered time ranges\n *\n * @return {string} - descriptive string\n */\n\nfunction bufferedRangesToString(buffered) {\n  if (buffered.length === 0) {\n    return 'Buffered Ranges are empty';\n  }\n  let bufferedRangesStr = 'Buffered Ranges: \\n';\n  for (let i = 0; i < buffered.length; i++) {\n    const start = buffered.start(i);\n    const end = buffered.end(i);\n    bufferedRangesStr += `${start} --> ${end}. Duration (${end - start})\\n`;\n  }\n  return bufferedRangesStr;\n}\n\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\nconst TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nconst SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\nconst filterRanges = function (timeRanges, predicate) {\n  const results = [];\n  let i;\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n  return createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n *\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object\n */\n\nconst findRange = function (buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n *\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object.\n */\n\nconst findNextRange = function (timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n *\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\nconst findGaps = function (buffered) {\n  if (buffered.length < 2) {\n    return createTimeRanges();\n  }\n  const ranges = [];\n  for (let i = 1; i < buffered.length; i++) {\n    const start = buffered.end(i - 1);\n    const end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n  return createTimeRanges(ranges);\n};\n/**\n * Calculate the intersection of two TimeRanges\n *\n * @param {TimeRanges} bufferA\n * @param {TimeRanges} bufferB\n * @return {TimeRanges} The interesection of `bufferA` with `bufferB`\n */\n\nconst bufferIntersection = function (bufferA, bufferB) {\n  let start = null;\n  let end = null;\n  let arity = 0;\n  const extents = [];\n  const ranges = [];\n  if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n    return createTimeRanges();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n  let count = bufferA.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: bufferA.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferA.end(count),\n      type: 'end'\n    });\n  }\n  count = bufferB.length;\n  while (count--) {\n    extents.push({\n      time: bufferB.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferB.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n  return createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @return {string} a human readable string\n */\n\nconst printableRange = range => {\n  const strArr = [];\n  if (!range || !range.length) {\n    return '';\n  }\n  for (let i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\nconst timeUntilRebuffer = function (buffered, currentTime, playbackRate = 1) {\n  const bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n *\n * @param {TimeRanges} timeRanges\n * @return {Array}\n */\n\nconst timeRangesToArray = timeRanges => {\n  const timeRangesList = [];\n  for (let i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n  return timeRangesList;\n};\n/**\n * Determines if two time range objects are different.\n *\n * @param {TimeRange} a\n *        the first time range object to check\n *\n * @param {TimeRange} b\n *        the second time range object to check\n *\n * @return {Boolean}\n *         Whether the time range objects differ\n */\n\nconst isRangeDifferent = function (a, b) {\n  // same object\n  if (a === b) {\n    return false;\n  } // one or the other is undefined\n\n  if (!a && b || !b && a) {\n    return true;\n  } // length is different\n\n  if (a.length !== b.length) {\n    return true;\n  } // see if any start/end pair is different\n\n  for (let i = 0; i < a.length; i++) {\n    if (a.start(i) !== b.start(i) || a.end(i) !== b.end(i)) {\n      return true;\n    }\n  } // if the length and every pair is the same\n  // this is the same time range\n\n  return false;\n};\nconst lastBufferedEnd = function (a) {\n  if (!a || !a.length || !a.end) {\n    return;\n  }\n  return a.end(a.length - 1);\n};\n/**\n * A utility function to add up the amount of time in a timeRange\n * after a specified startTime.\n * ie:[[0, 10], [20, 40], [50, 60]] with a startTime 0\n *     would return 40 as there are 40s seconds after 0 in the timeRange\n *\n * @param {TimeRange} range\n *        The range to check against\n * @param {number} startTime\n *        The time in the time range that you should start counting from\n *\n * @return {number}\n *          The number of seconds in the buffer passed the specified time.\n */\n\nconst timeAheadOf = function (range, startTime) {\n  let time = 0;\n  if (!range || !range.length) {\n    return time;\n  }\n  for (let i = 0; i < range.length; i++) {\n    const start = range.start(i);\n    const end = range.end(i); // startTime is after this range entirely\n\n    if (startTime > end) {\n      continue;\n    } // startTime is within this range\n\n    if (startTime > start && startTime <= end) {\n      time += end - startTime;\n      continue;\n    } // startTime is before this range.\n\n    time += end - start;\n  }\n  return time;\n};\n\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n/**\n * Get the duration of a segment, with special cases for\n * llhls segments that do not have a duration yet.\n *\n * @param {Object} playlist\n *        the playlist that the segment belongs to.\n * @param {Object} segment\n *        the segment to get a duration for.\n *\n * @return {number}\n *          the segment duration\n */\n\nconst segmentDurationWithParts = (playlist, segment) => {\n  // if this isn't a preload segment\n  // then we will have a segment duration that is accurate.\n  if (!segment.preload) {\n    return segment.duration;\n  } // otherwise we have to add up parts and preload hints\n  // to get an up to date duration.\n\n  let result = 0;\n  (segment.parts || []).forEach(function (p) {\n    result += p.duration;\n  }); // for preload hints we have to use partTargetDuration\n  // as they won't even have a duration yet.\n\n  (segment.preloadHints || []).forEach(function (p) {\n    if (p.type === 'PART') {\n      result += playlist.partTargetDuration;\n    }\n  });\n  return result;\n};\n/**\n * A function to get a combined list of parts and segments with durations\n * and indexes.\n *\n * @param {Playlist} playlist the playlist to get the list for.\n *\n * @return {Array} The part/segment list.\n */\n\nconst getPartsAndSegments = playlist => (playlist.segments || []).reduce((acc, segment, si) => {\n  if (segment.parts) {\n    segment.parts.forEach(function (part, pi) {\n      acc.push({\n        duration: part.duration,\n        segmentIndex: si,\n        partIndex: pi,\n        part,\n        segment\n      });\n    });\n  } else {\n    acc.push({\n      duration: segment.duration,\n      segmentIndex: si,\n      partIndex: null,\n      segment,\n      part: null\n    });\n  }\n  return acc;\n}, []);\nconst getLastParts = media => {\n  const lastSegment = media.segments && media.segments.length && media.segments[media.segments.length - 1];\n  return lastSegment && lastSegment.parts || [];\n};\nconst getKnownPartCount = ({\n  preloadSegment\n}) => {\n  if (!preloadSegment) {\n    return;\n  }\n  const {\n    parts,\n    preloadHints\n  } = preloadSegment;\n  let partCount = (preloadHints || []).reduce((count, hint) => count + (hint.type === 'PART' ? 1 : 0), 0);\n  partCount += parts && parts.length ? parts.length : 0;\n  return partCount;\n};\n/**\n * Get the number of seconds to delay from the end of a\n * live playlist.\n *\n * @param {Playlist} main the main playlist\n * @param {Playlist} media the media playlist\n * @return {number} the hold back in seconds.\n */\n\nconst liveEdgeDelay = (main, media) => {\n  if (media.endList) {\n    return 0;\n  } // dash suggestedPresentationDelay trumps everything\n\n  if (main && main.suggestedPresentationDelay) {\n    return main.suggestedPresentationDelay;\n  }\n  const hasParts = getLastParts(media).length > 0; // look for \"part\" delays from ll-hls first\n\n  if (hasParts && media.serverControl && media.serverControl.partHoldBack) {\n    return media.serverControl.partHoldBack;\n  } else if (hasParts && media.partTargetDuration) {\n    return media.partTargetDuration * 3; // finally look for full segment delays\n  } else if (media.serverControl && media.serverControl.holdBack) {\n    return media.serverControl.holdBack;\n  } else if (media.targetDuration) {\n    return media.targetDuration * 3;\n  }\n  return 0;\n};\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nconst backwardDuration = function (playlist, endSequence) {\n  let result = 0;\n  let i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  let segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n    result += segmentDurationWithParts(playlist, segment);\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n  return {\n    result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {number} endSequence the mediaSequence to stop walking on\n */\n\nconst forwardDuration = function (playlist, endSequence) {\n  let result = 0;\n  let segment;\n  let i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n    result += segmentDurationWithParts(playlist, segment);\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {number} the duration between the first available segment\n  * and end index.\n  */\n\nconst intervalDuration = function (playlist, endSequence, expired) {\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n  const backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n  const forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {number} the duration between the start index and end\n  * index.\n  */\n\nconst duration = function (playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Array} options.durationList list to iterate over for durations.\n  * @param {number} options.defaultDuration duration to use for elements before or after the durationList\n  * @param {number} options.startIndex partsAndSegments index to start\n  * @param {number} options.endIndex partsAndSegments index to end.\n  * @return {number} the number of seconds between startIndex and endIndex\n  */\n\nconst sumDurations = function ({\n  defaultDuration,\n  durationList,\n  startIndex,\n  endIndex\n}) {\n  let durations = 0;\n  if (startIndex > endIndex) {\n    [startIndex, endIndex] = [endIndex, startIndex];\n  }\n  if (startIndex < 0) {\n    for (let i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += defaultDuration;\n    }\n    startIndex = 0;\n  }\n  for (let i = startIndex; i < endIndex; i++) {\n    durations += durationList[i].duration;\n  }\n  return durations;\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n *                        This takes into account the value of liveEdgePadding.\n *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n *                 If this is provided, it is used in the safe live end calculation.\n *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n * @return {number} the end time of playlist\n * @function playlistEnd\n */\n\nconst playlistEnd = function (playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n  if (expired === null) {\n    return null;\n  }\n  expired = expired || 0;\n  let lastSegmentEndTime = intervalDuration(playlist, playlist.mediaSequence + playlist.segments.length, expired);\n  if (useSafeLiveEnd) {\n    liveEdgePadding = typeof liveEdgePadding === 'number' ? liveEdgePadding : liveEdgeDelay(null, playlist);\n    lastSegmentEndTime -= liveEdgePadding;\n  } // don't return a time less than zero\n\n  return Math.max(0, lastSegmentEndTime);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n  *        Corresponds to suggestedPresentationDelay in DASH manifests.\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\nconst seekable = function (playlist, expired, liveEdgePadding) {\n  const useSafeLiveEnd = true;\n  const seekableStart = expired || 0;\n  let seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n  if (seekableEnd === null) {\n    return createTimeRanges();\n  } // Clamp seekable end since it can not be less than the seekable start\n\n  if (seekableEnd < seekableStart) {\n    seekableEnd = seekableStart;\n  }\n  return createTimeRanges(seekableStart, seekableEnd);\n};\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} options.playlist the media playlist to query\n * @param {number} options.currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {number} options.startTime the time when the segment/part starts\n * @param {number} options.startingSegmentIndex the segment index to start looking at.\n * @param {number?} [options.startingPartIndex] the part index to look at within the segment.\n *\n * @return {Object} an object with partIndex, segmentIndex, and startTime.\n */\n\nconst getMediaInfoForTime = function ({\n  playlist,\n  currentTime,\n  startingSegmentIndex,\n  startingPartIndex,\n  startTime,\n  exactManifestTimings\n}) {\n  let time = currentTime - startTime;\n  const partsAndSegments = getPartsAndSegments(playlist);\n  let startIndex = 0;\n  for (let i = 0; i < partsAndSegments.length; i++) {\n    const partAndSegment = partsAndSegments[i];\n    if (startingSegmentIndex !== partAndSegment.segmentIndex) {\n      continue;\n    } // skip this if part index does not match.\n\n    if (typeof startingPartIndex === 'number' && typeof partAndSegment.partIndex === 'number' && startingPartIndex !== partAndSegment.partIndex) {\n      continue;\n    }\n    startIndex = i;\n    break;\n  }\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (let i = startIndex - 1; i >= 0; i--) {\n        const partAndSegment = partsAndSegments[i];\n        time += partAndSegment.duration;\n        if (exactManifestTimings) {\n          if (time < 0) {\n            continue;\n          }\n        } else if (time + TIME_FUDGE_FACTOR <= 0) {\n          continue;\n        }\n        return {\n          partIndex: partAndSegment.partIndex,\n          segmentIndex: partAndSegment.segmentIndex,\n          startTime: startTime - sumDurations({\n            defaultDuration: playlist.targetDuration,\n            durationList: partsAndSegments,\n            startIndex,\n            endIndex: i\n          })\n        };\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n    return {\n      partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n      segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n  if (startIndex < 0) {\n    for (let i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n          segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n  for (let i = startIndex; i < partsAndSegments.length; i++) {\n    const partAndSegment = partsAndSegments[i];\n    time -= partAndSegment.duration;\n    const canUseFudgeFactor = partAndSegment.duration > TIME_FUDGE_FACTOR;\n    const isExactlyAtTheEnd = time === 0;\n    const isExtremelyCloseToTheEnd = canUseFudgeFactor && time + TIME_FUDGE_FACTOR >= 0;\n    if (isExactlyAtTheEnd || isExtremelyCloseToTheEnd) {\n      // 1) We are exactly at the end of the current segment.\n      // 2) We are extremely close to the end of the current segment (The difference is less than  1 / 30).\n      //    We may encounter this situation when\n      //    we don't have exact match between segment duration info in the manifest and the actual duration of the segment\n      //    For example:\n      //    We appended 3 segments 10 seconds each, meaning we should have 30 sec buffered,\n      //    but we the actual buffered is 29.99999\n      //\n      // In both cases:\n      // if we passed current time -> it means that we already played current segment\n      // if we passed buffered.end -> it means that this segment is already loaded and buffered\n      // we should select the next segment if we have one:\n      if (i !== partsAndSegments.length - 1) {\n        continue;\n      }\n    }\n    if (exactManifestTimings) {\n      if (time > 0) {\n        continue;\n      }\n    } else if (time - TIME_FUDGE_FACTOR >= 0) {\n      continue;\n    }\n    return {\n      partIndex: partAndSegment.partIndex,\n      segmentIndex: partAndSegment.segmentIndex,\n      startTime: startTime + sumDurations({\n        defaultDuration: playlist.targetDuration,\n        durationList: partsAndSegments,\n        startIndex,\n        endIndex: i\n      })\n    };\n  } // We are out of possible candidates so load the last one...\n\n  return {\n    segmentIndex: partsAndSegments[partsAndSegments.length - 1].segmentIndex,\n    partIndex: partsAndSegments[partsAndSegments.length - 1].partIndex,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is excluded or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is excluded or not\n * @function isExcluded\n */\n\nconst isExcluded = function (playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been excluded permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\nconst isIncompatible = function (playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\nconst isEnabled = function (playlist) {\n  const excluded = isExcluded(playlist);\n  return !playlist.disabled && !excluded;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\nconst isDisabled = function (playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {boolean} true if it's an AES encrypted HLS stream\n */\n\nconst isAes = function (media) {\n  for (let i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {string} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\nconst hasAttribute = function (attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {number} segmentDuration\n *        Duration of requested segment\n * @param {number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\nconst estimateSegmentRequestTime = function (segmentDuration, bandwidth, playlist, bytesReceived = 0) {\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n  const size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\nconst isLowestEnabledRendition = (main, media) => {\n  if (main.playlists.length === 1) {\n    return true;\n  }\n  const currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return main.playlists.filter(playlist => {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\nconst playlistMatch = (a, b) => {\n  // both playlits are null\n  // or only one playlist is non-null\n  // no match\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // playlist objects are the same, match\n\n  if (a === b) {\n    return true;\n  } // first try to use id as it should be the most\n  // accurate\n\n  if (a.id && b.id && a.id === b.id) {\n    return true;\n  } // next try to use reslovedUri as it should be the\n  // second most accurate.\n\n  if (a.resolvedUri && b.resolvedUri && a.resolvedUri === b.resolvedUri) {\n    return true;\n  } // finally try to use uri as it should be accurate\n  // but might miss a few cases for relative uris\n\n  if (a.uri && b.uri && a.uri === b.uri) {\n    return true;\n  }\n  return false;\n};\nconst someAudioVariant = function (main, callback) {\n  const AUDIO = main && main.mediaGroups && main.mediaGroups.AUDIO || {};\n  let found = false;\n  for (const groupName in AUDIO) {\n    for (const label in AUDIO[groupName]) {\n      found = callback(AUDIO[groupName][label]);\n      if (found) {\n        break;\n      }\n    }\n    if (found) {\n      break;\n    }\n  }\n  return !!found;\n};\nconst isAudioOnly = main => {\n  // we are audio only if we have no main playlists but do\n  // have media group playlists.\n  if (!main || !main.playlists || !main.playlists.length) {\n    // without audio variants or playlists this\n    // is not an audio only main.\n    const found = someAudioVariant(main, variant => variant.playlists && variant.playlists.length || variant.uri);\n    return found;\n  } // if every playlist has only an audio codec it is audio only\n\n  for (let i = 0; i < main.playlists.length; i++) {\n    const playlist = main.playlists[i];\n    const CODECS = playlist.attributes && playlist.attributes.CODECS; // all codecs are audio, this is an audio playlist.\n\n    if (CODECS && CODECS.split(',').every(c => isAudioCodec(c))) {\n      continue;\n    } // playlist is in an audio group it is audio only\n\n    const found = someAudioVariant(main, variant => playlistMatch(playlist, variant));\n    if (found) {\n      continue;\n    } // if we make it here this playlist isn't audio and we\n    // are not audio only\n\n    return false;\n  } // if we make it past every playlist without returning, then\n  // this is an audio only playlist.\n\n  return true;\n}; // exports\n\nvar Playlist = {\n  liveEdgeDelay,\n  duration,\n  seekable,\n  getMediaInfoForTime,\n  isEnabled,\n  isDisabled,\n  isExcluded,\n  isIncompatible,\n  playlistEnd,\n  isAes,\n  hasAttribute,\n  estimateSegmentRequestTime,\n  isLowestEnabledRendition,\n  isAudioOnly,\n  playlistMatch,\n  segmentDurationWithParts\n};\nconst {\n  log\n} = videojs;\nconst createPlaylistID = (index, uri) => {\n  return `${index}-${uri}`;\n}; // default function for creating a group id\n\nconst groupID = (type, group, label) => {\n  return `placeholder-uri-${type}-${group}-${label}`;\n};\n/**\n * Parses a given m3u8 playlist\n *\n * @param {Function} [onwarn]\n *        a function to call when the parser triggers a warning event.\n * @param {Function} [oninfo]\n *        a function to call when the parser triggers an info event.\n * @param {string} manifestString\n *        The downloaded manifest string\n * @param {Object[]} [customTagParsers]\n *        An array of custom tag parsers for the m3u8-parser instance\n * @param {Object[]} [customTagMappers]\n *        An array of custom tag mappers for the m3u8-parser instance\n * @param {boolean} [llhls]\n *        Whether to keep ll-hls features in the manifest after parsing.\n * @return {Object}\n *         The manifest object\n */\n\nconst parseManifest = ({\n  onwarn,\n  oninfo,\n  manifestString,\n  customTagParsers = [],\n  customTagMappers = [],\n  llhls\n}) => {\n  const parser = new Parser();\n  if (onwarn) {\n    parser.on('warn', onwarn);\n  }\n  if (oninfo) {\n    parser.on('info', oninfo);\n  }\n  customTagParsers.forEach(customParser => parser.addParser(customParser));\n  customTagMappers.forEach(mapper => parser.addTagMapper(mapper));\n  parser.push(manifestString);\n  parser.end();\n  const manifest = parser.manifest; // remove llhls features from the parsed manifest\n  // if we don't want llhls support.\n\n  if (!llhls) {\n    ['preloadSegment', 'skip', 'serverControl', 'renditionReports', 'partInf', 'partTargetDuration'].forEach(function (k) {\n      if (manifest.hasOwnProperty(k)) {\n        delete manifest[k];\n      }\n    });\n    if (manifest.segments) {\n      manifest.segments.forEach(function (segment) {\n        ['parts', 'preloadHints'].forEach(function (k) {\n          if (segment.hasOwnProperty(k)) {\n            delete segment[k];\n          }\n        });\n      });\n    }\n  }\n  if (!manifest.targetDuration) {\n    let targetDuration = 10;\n    if (manifest.segments && manifest.segments.length) {\n      targetDuration = manifest.segments.reduce((acc, s) => Math.max(acc, s.duration), 0);\n    }\n    if (onwarn) {\n      onwarn({\n        message: `manifest has no targetDuration defaulting to ${targetDuration}`\n      });\n    }\n    manifest.targetDuration = targetDuration;\n  }\n  const parts = getLastParts(manifest);\n  if (parts.length && !manifest.partTargetDuration) {\n    const partTargetDuration = parts.reduce((acc, p) => Math.max(acc, p.duration), 0);\n    if (onwarn) {\n      onwarn({\n        message: `manifest has no partTargetDuration defaulting to ${partTargetDuration}`\n      });\n      log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');\n    }\n    manifest.partTargetDuration = partTargetDuration;\n  }\n  return manifest;\n};\n/**\n * Loops through all supported media groups in main and calls the provided\n * callback for each group\n *\n * @param {Object} main\n *        The parsed main manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nconst forEachMediaGroup = (main, callback) => {\n  if (!main.mediaGroups) {\n    return;\n  }\n  ['AUDIO', 'SUBTITLES'].forEach(mediaType => {\n    if (!main.mediaGroups[mediaType]) {\n      return;\n    }\n    for (const groupKey in main.mediaGroups[mediaType]) {\n      for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n        const mediaProperties = main.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n * Adds properties and attributes to the playlist to keep consistent functionality for\n * playlists throughout VHS.\n *\n * @param {Object} config\n *        Arguments object\n * @param {Object} config.playlist\n *        The media playlist\n * @param {string} [config.uri]\n *        The uri to the media playlist (if media playlist is not from within a main\n *        playlist)\n * @param {string} id\n *        ID to use for the playlist\n */\n\nconst setupMediaPlaylist = ({\n  playlist,\n  uri,\n  id\n}) => {\n  playlist.id = id;\n  playlist.playlistErrors_ = 0;\n  if (uri) {\n    // For media playlists, m3u8-parser does not have access to a URI, as HLS media\n    // playlists do not contain their own source URI, but one is needed for consistency in\n    // VHS.\n    playlist.uri = uri;\n  } // For HLS main playlists, even though certain attributes MUST be defined, the\n  // stream may still be played without them.\n  // For HLS media playlists, m3u8-parser does not attach an attributes object to the\n  // manifest.\n  //\n  // To avoid undefined reference errors through the project, and make the code easier\n  // to write/read, add an empty attributes object for these cases.\n\n  playlist.attributes = playlist.attributes || {};\n};\n/**\n * Adds ID, resolvedUri, and attributes properties to each playlist of the main, where\n * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to\n * playlist references to the playlists array.\n *\n * @param {Object} main\n *        The main playlist\n */\n\nconst setupMediaPlaylists = main => {\n  let i = main.playlists.length;\n  while (i--) {\n    const playlist = main.playlists[i];\n    setupMediaPlaylist({\n      playlist,\n      id: createPlaylistID(i, playlist.uri)\n    });\n    playlist.resolvedUri = resolveUrl(main.uri, playlist.uri);\n    main.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n    main.playlists[playlist.uri] = playlist; // Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,\n    // the stream can be played without it. Although an attributes property may have been\n    // added to the playlist to prevent undefined references, issue a warning to fix the\n    // manifest.\n\n    if (!playlist.attributes.BANDWIDTH) {\n      log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n/**\n * Adds resolvedUri properties to each media group.\n *\n * @param {Object} main\n *        The main playlist\n */\n\nconst resolveMediaGroupUris = main => {\n  forEachMediaGroup(main, properties => {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(main.uri, properties.uri);\n    }\n  });\n};\n/**\n * Creates a main playlist wrapper to insert a sole media playlist into.\n *\n * @param {Object} media\n *        Media playlist\n * @param {string} uri\n *        The media URI\n *\n * @return {Object}\n *         main playlist\n */\n\nconst mainForMedia = (media, uri) => {\n  const id = createPlaylistID(0, uri);\n  const main = {\n    mediaGroups: {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    },\n    uri: window$1.location.href,\n    resolvedUri: window$1.location.href,\n    playlists: [{\n      uri,\n      id,\n      resolvedUri: uri,\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      attributes: {}\n    }]\n  }; // set up ID reference\n\n  main.playlists[id] = main.playlists[0]; // URI reference added for backwards compatibility\n\n  main.playlists[uri] = main.playlists[0];\n  return main;\n};\n/**\n * Does an in-place update of the main manifest to add updated playlist URI references\n * as well as other properties needed by VHS that aren't included by the parser.\n *\n * @param {Object} main\n *        main manifest object\n * @param {string} uri\n *        The source URI\n * @param {function} createGroupID\n *        A function to determine how to create the groupID for mediaGroups\n */\n\nconst addPropertiesToMain = (main, uri, createGroupID = groupID) => {\n  main.uri = uri;\n  for (let i = 0; i < main.playlists.length; i++) {\n    if (!main.playlists[i].uri) {\n      // Set up phony URIs for the playlists since playlists are referenced by their URIs\n      // throughout VHS, but some formats (e.g., DASH) don't have external URIs\n      // TODO: consider adding dummy URIs in mpd-parser\n      const phonyUri = `placeholder-uri-${i}`;\n      main.playlists[i].uri = phonyUri;\n    }\n  }\n  const audioOnlyMain = isAudioOnly(main);\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    // add a playlist array under properties\n    if (!properties.playlists || !properties.playlists.length) {\n      // If the manifest is audio only and this media group does not have a uri, check\n      // if the media group is located in the main list of playlists. If it is, don't add\n      // placeholder properties as it shouldn't be considered an alternate audio track.\n      if (audioOnlyMain && mediaType === 'AUDIO' && !properties.uri) {\n        for (let i = 0; i < main.playlists.length; i++) {\n          const p = main.playlists[i];\n          if (p.attributes && p.attributes.AUDIO && p.attributes.AUDIO === groupKey) {\n            return;\n          }\n        }\n      }\n      properties.playlists = [_extends({}, properties)];\n    }\n    properties.playlists.forEach(function (p, i) {\n      const groupId = createGroupID(mediaType, groupKey, labelKey, p);\n      const id = createPlaylistID(i, groupId);\n      if (p.uri) {\n        p.resolvedUri = p.resolvedUri || resolveUrl(main.uri, p.uri);\n      } else {\n        // DEPRECATED, this has been added to prevent a breaking change.\n        // previously we only ever had a single media group playlist, so\n        // we mark the first playlist uri without prepending the index as we used to\n        // ideally we would do all of the playlists the same way.\n        p.uri = i === 0 ? groupId : id; // don't resolve a placeholder uri to an absolute url, just use\n        // the placeholder again\n\n        p.resolvedUri = p.uri;\n      }\n      p.id = p.id || id; // add an empty attributes object, all playlists are\n      // expected to have this.\n\n      p.attributes = p.attributes || {}; // setup ID and URI references (URI for backwards compatibility)\n\n      main.playlists[p.id] = p;\n      main.playlists[p.uri] = p;\n    });\n  });\n  setupMediaPlaylists(main);\n  resolveMediaGroupUris(main);\n};\nclass DateRangesStorage {\n  constructor() {\n    this.offset_ = null;\n    this.pendingDateRanges_ = new Map();\n    this.processedDateRanges_ = new Map();\n  }\n  setOffset(segments = []) {\n    // already set\n    if (this.offset_ !== null) {\n      return;\n    } // no segment to process\n\n    if (!segments.length) {\n      return;\n    }\n    const [firstSegment] = segments; // no program date time\n\n    if (firstSegment.programDateTime === undefined) {\n      return;\n    } // Set offset as ProgramDateTime for the very first segment of the very first playlist load:\n\n    this.offset_ = firstSegment.programDateTime / 1000;\n  }\n  setPendingDateRanges(dateRanges = []) {\n    if (!dateRanges.length) {\n      return;\n    }\n    const [dateRange] = dateRanges;\n    const startTime = dateRange.startDate.getTime();\n    this.trimProcessedDateRanges_(startTime);\n    this.pendingDateRanges_ = dateRanges.reduce((map, pendingDateRange) => {\n      map.set(pendingDateRange.id, pendingDateRange);\n      return map;\n    }, new Map());\n  }\n  processDateRange(dateRange) {\n    this.pendingDateRanges_.delete(dateRange.id);\n    this.processedDateRanges_.set(dateRange.id, dateRange);\n  }\n  getDateRangesToProcess() {\n    if (this.offset_ === null) {\n      return [];\n    }\n    const dateRangeClasses = {};\n    const dateRangesToProcess = [];\n    this.pendingDateRanges_.forEach((dateRange, id) => {\n      if (this.processedDateRanges_.has(id)) {\n        return;\n      }\n      dateRange.startTime = dateRange.startDate.getTime() / 1000 - this.offset_;\n      dateRange.processDateRange = () => this.processDateRange(dateRange);\n      dateRangesToProcess.push(dateRange);\n      if (!dateRange.class) {\n        return;\n      }\n      if (dateRangeClasses[dateRange.class]) {\n        const length = dateRangeClasses[dateRange.class].push(dateRange);\n        dateRange.classListIndex = length - 1;\n      } else {\n        dateRangeClasses[dateRange.class] = [dateRange];\n        dateRange.classListIndex = 0;\n      }\n    });\n    for (const dateRange of dateRangesToProcess) {\n      const classList = dateRangeClasses[dateRange.class] || [];\n      if (dateRange.endDate) {\n        dateRange.endTime = dateRange.endDate.getTime() / 1000 - this.offset_;\n      } else if (dateRange.endOnNext && classList[dateRange.classListIndex + 1]) {\n        dateRange.endTime = classList[dateRange.classListIndex + 1].startTime;\n      } else if (dateRange.duration) {\n        dateRange.endTime = dateRange.startTime + dateRange.duration;\n      } else if (dateRange.plannedDuration) {\n        dateRange.endTime = dateRange.startTime + dateRange.plannedDuration;\n      } else {\n        dateRange.endTime = dateRange.startTime;\n      }\n    }\n    return dateRangesToProcess;\n  }\n  trimProcessedDateRanges_(startTime) {\n    const copy = new Map(this.processedDateRanges_);\n    copy.forEach((dateRange, id) => {\n      if (dateRange.startDate.getTime() < startTime) {\n        this.processedDateRanges_.delete(id);\n      }\n    });\n  }\n}\nconst QUOTA_EXCEEDED_ERR = 22;\nconst getStreamingNetworkErrorMetadata = ({\n  requestType,\n  request,\n  error,\n  parseFailure\n}) => {\n  const isBadStatus = request.status < 200 || request.status > 299;\n  const isFailure = request.status >= 400 && request.status <= 499;\n  const errorMetadata = {\n    uri: request.uri,\n    requestType\n  };\n  const isBadStatusOrParseFailure = isBadStatus && !isFailure || parseFailure;\n  if (error && isFailure) {\n    // copy original error and add to the metadata.\n    errorMetadata.error = _extends({}, error);\n    errorMetadata.errorType = videojs.Error.NetworkRequestFailed;\n  } else if (request.aborted) {\n    errorMetadata.errorType = videojs.Error.NetworkRequestAborted;\n  } else if (request.timedout) {\n    errorMetadata.erroType = videojs.Error.NetworkRequestTimeout;\n  } else if (isBadStatusOrParseFailure) {\n    const errorType = parseFailure ? videojs.Error.NetworkBodyParserFailed : videojs.Error.NetworkBadStatus;\n    errorMetadata.errorType = errorType;\n    errorMetadata.status = request.status;\n    errorMetadata.headers = request.headers;\n  }\n  return errorMetadata;\n};\nconst {\n  EventTarget: EventTarget$1\n} = videojs;\nconst addLLHLSQueryDirectives = (uri, media) => {\n  if (media.endList || !media.serverControl) {\n    return uri;\n  }\n  const parameters = {};\n  if (media.serverControl.canBlockReload) {\n    const {\n      preloadSegment\n    } = media; // next msn is a zero based value, length is not.\n\n    let nextMSN = media.mediaSequence + media.segments.length; // If preload segment has parts then it is likely\n    // that we are going to request a part of that preload segment.\n    // the logic below is used to determine that.\n\n    if (preloadSegment) {\n      const parts = preloadSegment.parts || []; // _HLS_part is a zero based index\n\n      const nextPart = getKnownPartCount(media) - 1; // if nextPart is > -1 and not equal to just the\n      // length of parts, then we know we had part preload hints\n      // and we need to add the _HLS_part= query\n\n      if (nextPart > -1 && nextPart !== parts.length - 1) {\n        // add existing parts to our preload hints\n        // eslint-disable-next-line\n        parameters._HLS_part = nextPart;\n      } // this if statement makes sure that we request the msn\n      // of the preload segment if:\n      // 1. the preload segment had parts (and was not yet a full segment)\n      //    but was added to our segments array\n      // 2. the preload segment had preload hints for parts that are not in\n      //    the manifest yet.\n      // in all other cases we want the segment after the preload segment\n      // which will be given by using media.segments.length because it is 1 based\n      // rather than 0 based.\n\n      if (nextPart > -1 || parts.length) {\n        nextMSN--;\n      }\n    } // add _HLS_msn= in front of any _HLS_part query\n    // eslint-disable-next-line\n\n    parameters._HLS_msn = nextMSN;\n  }\n  if (media.serverControl && media.serverControl.canSkipUntil) {\n    // add _HLS_skip= infront of all other queries.\n    // eslint-disable-next-line\n    parameters._HLS_skip = media.serverControl.canSkipDateranges ? 'v2' : 'YES';\n  }\n  if (Object.keys(parameters).length) {\n    const parsedUri = new window$1.URL(uri);\n    ['_HLS_skip', '_HLS_msn', '_HLS_part'].forEach(function (name) {\n      if (!parameters.hasOwnProperty(name)) {\n        return;\n      }\n      parsedUri.searchParams.set(name, parameters[name]);\n    });\n    uri = parsedUri.toString();\n  }\n  return uri;\n};\n/**\n * Returns a new segment object with properties and\n * the parts array merged.\n *\n * @param {Object} a the old segment\n * @param {Object} b the new segment\n *\n * @return {Object} the merged segment\n */\n\nconst updateSegment = (a, b) => {\n  if (!a) {\n    return b;\n  }\n  const result = merge(a, b); // if only the old segment has preload hints\n  // and the new one does not, remove preload hints.\n\n  if (a.preloadHints && !b.preloadHints) {\n    delete result.preloadHints;\n  } // if only the old segment has parts\n  // then the parts are no longer valid\n\n  if (a.parts && !b.parts) {\n    delete result.parts; // if both segments have parts\n    // copy part propeties from the old segment\n    // to the new one.\n  } else if (a.parts && b.parts) {\n    for (let i = 0; i < b.parts.length; i++) {\n      if (a.parts && a.parts[i]) {\n        result.parts[i] = merge(a.parts[i], b.parts[i]);\n      }\n    }\n  } // set skipped to false for segments that have\n  // have had information merged from the old segment.\n\n  if (!a.skipped && b.skipped) {\n    result.skipped = false;\n  } // set preload to false for segments that have\n  // had information added in the new segment.\n\n  if (a.preload && !b.preload) {\n    result.preload = false;\n  }\n  return result;\n};\n/**\n * Returns a new array of segments that is the result of merging\n * properties from an older list of segments onto an updated\n * list. No properties on the updated playlist will be ovewritten.\n *\n * @param {Array} original the outdated list of segments\n * @param {Array} update the updated list of segments\n * @param {number=} offset the index of the first update\n * segment in the original segment list. For non-live playlists,\n * this should always be zero and does not need to be\n * specified. For live playlists, it should be the difference\n * between the media sequence numbers in the original and updated\n * playlists.\n * @return {Array} a list of merged segment objects\n */\n\nconst updateSegments = (original, update, offset) => {\n  const oldSegments = original.slice();\n  const newSegments = update.slice();\n  offset = offset || 0;\n  const result = [];\n  let currentMap;\n  for (let newIndex = 0; newIndex < newSegments.length; newIndex++) {\n    const oldSegment = oldSegments[newIndex + offset];\n    const newSegment = newSegments[newIndex];\n    if (oldSegment) {\n      currentMap = oldSegment.map || currentMap;\n      result.push(updateSegment(oldSegment, newSegment));\n    } else {\n      // carry over map to new segment if it is missing\n      if (currentMap && !newSegment.map) {\n        newSegment.map = currentMap;\n      }\n      result.push(newSegment);\n    }\n  }\n  return result;\n};\nconst resolveSegmentUris = (segment, baseUri) => {\n  // preloadSegment will not have a uri at all\n  // as the segment isn't actually in the manifest yet, only parts\n  if (!segment.resolvedUri && segment.uri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n  if (segment.map && segment.map.key && !segment.map.key.resolvedUri) {\n    segment.map.key.resolvedUri = resolveUrl(baseUri, segment.map.key.uri);\n  }\n  if (segment.parts && segment.parts.length) {\n    segment.parts.forEach(p => {\n      if (p.resolvedUri) {\n        return;\n      }\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n  if (segment.preloadHints && segment.preloadHints.length) {\n    segment.preloadHints.forEach(p => {\n      if (p.resolvedUri) {\n        return;\n      }\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n};\nconst getAllSegments = function (media) {\n  const segments = media.segments || [];\n  const preloadSegment = media.preloadSegment; // a preloadSegment with only preloadHints is not currently\n  // a usable segment, only include a preloadSegment that has\n  // parts.\n\n  if (preloadSegment && preloadSegment.parts && preloadSegment.parts.length) {\n    // if preloadHints has a MAP that means that the\n    // init segment is going to change. We cannot use any of the parts\n    // from this preload segment.\n    if (preloadSegment.preloadHints) {\n      for (let i = 0; i < preloadSegment.preloadHints.length; i++) {\n        if (preloadSegment.preloadHints[i].type === 'MAP') {\n          return segments;\n        }\n      }\n    } // set the duration for our preload segment to target duration.\n\n    preloadSegment.duration = media.targetDuration;\n    preloadSegment.preload = true;\n    segments.push(preloadSegment);\n  }\n  return segments;\n}; // consider the playlist unchanged if the playlist object is the same or\n// the number of segments is equal, the media sequence number is unchanged,\n// and this playlist hasn't become the end of the playlist\n\nconst isPlaylistUnchanged = (a, b) => a === b || a.segments && b.segments && a.segments.length === b.segments.length && a.endList === b.endList && a.mediaSequence === b.mediaSequence && a.preloadSegment === b.preloadSegment;\n/**\n  * Returns a new main playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original main playlist, null is returned.\n  *\n  * @param {Object} main a parsed main M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * main playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\nconst updateMain$1 = (main, newMedia, unchangedCheck = isPlaylistUnchanged) => {\n  const result = merge(main, {});\n  const oldMedia = result.playlists[newMedia.id];\n  if (!oldMedia) {\n    return null;\n  }\n  if (unchangedCheck(oldMedia, newMedia)) {\n    return null;\n  }\n  newMedia.segments = getAllSegments(newMedia);\n  const mergedPlaylist = merge(oldMedia, newMedia); // always use the new media's preload segment\n\n  if (mergedPlaylist.preloadSegment && !newMedia.preloadSegment) {\n    delete mergedPlaylist.preloadSegment;\n  } // if the update could overlap existing segment information, merge the two segment lists\n\n  if (oldMedia.segments) {\n    if (newMedia.skip) {\n      newMedia.segments = newMedia.segments || []; // add back in objects for skipped segments, so that we merge\n      // old properties into the new segments\n\n      for (let i = 0; i < newMedia.skip.skippedSegments; i++) {\n        newMedia.segments.unshift({\n          skipped: true\n        });\n      }\n    }\n    mergedPlaylist.segments = updateSegments(oldMedia.segments, newMedia.segments, newMedia.mediaSequence - oldMedia.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n  mergedPlaylist.segments.forEach(segment => {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (let i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].id === newMedia.id) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n  result.playlists[newMedia.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n  result.playlists[newMedia.uri] = mergedPlaylist; // update media group playlist references.\n\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    if (!properties.playlists) {\n      return;\n    }\n    for (let i = 0; i < properties.playlists.length; i++) {\n      if (newMedia.id === properties.playlists[i].id) {\n        properties.playlists[i] = mergedPlaylist;\n      }\n    }\n  });\n  return result;\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\nconst refreshDelay = (media, update) => {\n  const segments = media.segments || [];\n  const lastSegment = segments[segments.length - 1];\n  const lastPart = lastSegment && lastSegment.parts && lastSegment.parts[lastSegment.parts.length - 1];\n  const lastDuration = lastPart && lastPart.duration || lastSegment && lastSegment.duration;\n  if (update && lastDuration) {\n    return lastDuration * 1000;\n  } // if the playlist is unchanged since the last reload or last segment duration\n  // cannot be determined, try again after half the target duration\n\n  return (media.partTargetDuration || media.targetDuration || 10) * 500;\n};\nconst playlistMetadataPayload = (playlists, type, isLive) => {\n  if (!playlists) {\n    return;\n  }\n  const renditions = [];\n  playlists.forEach(playlist => {\n    // we need attributes to populate rendition data.\n    if (!playlist.attributes) {\n      return;\n    }\n    const {\n      BANDWIDTH,\n      RESOLUTION,\n      CODECS\n    } = playlist.attributes;\n    renditions.push({\n      id: playlist.id,\n      bandwidth: BANDWIDTH,\n      resolution: RESOLUTION,\n      codecs: CODECS\n    });\n  });\n  return {\n    type,\n    isLive,\n    renditions\n  };\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {string|Object} src url or object of manifest\n * @param {boolean} withCredentials the withCredentials xhr option\n * @class\n */\n\nclass PlaylistLoader extends EventTarget$1 {\n  constructor(src, vhs, options = {}) {\n    super();\n    if (!src) {\n      throw new Error('A non-empty playlist URL or object is required');\n    }\n    this.logger_ = logger('PlaylistLoader');\n    const {\n      withCredentials = false\n    } = options;\n    this.src = src;\n    this.vhs_ = vhs;\n    this.withCredentials = withCredentials;\n    this.addDateRangesToTextTrack_ = options.addDateRangesToTextTrack;\n    const vhsOptions = vhs.options_;\n    this.customTagParsers = vhsOptions && vhsOptions.customTagParsers || [];\n    this.customTagMappers = vhsOptions && vhsOptions.customTagMappers || [];\n    this.llhls = vhsOptions && vhsOptions.llhls;\n    this.dateRangesStorage_ = new DateRangesStorage(); // initialize the loader state\n\n    this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    this.handleMediaupdatetimeout_ = this.handleMediaupdatetimeout_.bind(this);\n    this.on('mediaupdatetimeout', this.handleMediaupdatetimeout_);\n    this.on('loadedplaylist', this.handleLoadedPlaylist_.bind(this));\n  }\n  handleLoadedPlaylist_() {\n    const mediaPlaylist = this.media();\n    if (!mediaPlaylist) {\n      return;\n    }\n    this.dateRangesStorage_.setOffset(mediaPlaylist.segments);\n    this.dateRangesStorage_.setPendingDateRanges(mediaPlaylist.dateRanges);\n    const availableDateRanges = this.dateRangesStorage_.getDateRangesToProcess();\n    if (!availableDateRanges.length || !this.addDateRangesToTextTrack_) {\n      return;\n    }\n    this.addDateRangesToTextTrack_(availableDateRanges);\n  }\n  handleMediaupdatetimeout_() {\n    if (this.state !== 'HAVE_METADATA') {\n      // only refresh the media playlist if no other activity is going on\n      return;\n    }\n    const media = this.media();\n    let uri = resolveUrl(this.main.uri, media.uri);\n    if (this.llhls) {\n      uri = addLLHLSQueryDirectives(uri, media);\n    }\n    this.state = 'HAVE_CURRENT_METADATA';\n    this.request = this.vhs_.xhr({\n      uri,\n      withCredentials: this.withCredentials,\n      requestType: 'hls-playlist'\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      if (error) {\n        return this.playlistRequestError(this.request, this.media(), 'HAVE_METADATA');\n      }\n      this.haveMetadata({\n        playlistString: this.request.responseText,\n        url: this.media().uri,\n        id: this.media().id\n      });\n    });\n  }\n  playlistRequestError(xhr, playlist, startingState) {\n    const {\n      uri,\n      id\n    } = playlist; // any in-flight request is now finished\n\n    this.request = null;\n    if (startingState) {\n      this.state = startingState;\n    }\n    this.error = {\n      playlist: this.main.playlists[id],\n      status: xhr.status,\n      message: `HLS playlist request error at URL: ${uri}.`,\n      responseText: xhr.responseText,\n      code: xhr.status >= 500 ? 4 : 2,\n      metadata: getStreamingNetworkErrorMetadata({\n        requestType: xhr.requestType,\n        request: xhr,\n        error: xhr.error\n      })\n    };\n    this.trigger('error');\n  }\n  parseManifest_({\n    url,\n    manifestString\n  }) {\n    try {\n      return parseManifest({\n        onwarn: ({\n          message\n        }) => this.logger_(`m3u8-parser warn for ${url}: ${message}`),\n        oninfo: ({\n          message\n        }) => this.logger_(`m3u8-parser info for ${url}: ${message}`),\n        manifestString,\n        customTagParsers: this.customTagParsers,\n        customTagMappers: this.customTagMappers,\n        llhls: this.llhls\n      });\n    } catch (error) {\n      this.error = error;\n      this.error.metadata = {\n        errorType: videojs.Error.StreamingHlsPlaylistParserError,\n        error\n      };\n    }\n  }\n  /**\n   * Update the playlist loader's state in response to a new or updated playlist.\n   *\n   * @param {string} [playlistString]\n   *        Playlist string (if playlistObject is not provided)\n   * @param {Object} [playlistObject]\n   *        Playlist object (if playlistString is not provided)\n   * @param {string} url\n   *        URL of playlist\n   * @param {string} id\n   *        ID to use for playlist\n   */\n\n  haveMetadata({\n    playlistString,\n    playlistObject,\n    url,\n    id\n  }) {\n    // any in-flight request is now finished\n    this.request = null;\n    this.state = 'HAVE_METADATA';\n    const metadata = {\n      playlistInfo: {\n        type: 'media',\n        uri: url\n      }\n    };\n    this.trigger({\n      type: 'playlistparsestart',\n      metadata\n    });\n    const playlist = playlistObject || this.parseManifest_({\n      url,\n      manifestString: playlistString\n    });\n    playlist.lastRequest = Date.now();\n    setupMediaPlaylist({\n      playlist,\n      uri: url,\n      id\n    }); // merge this playlist into the main manifest\n\n    const update = updateMain$1(this.main, playlist);\n    this.targetDuration = playlist.partTargetDuration || playlist.targetDuration;\n    this.pendingMedia_ = null;\n    if (update) {\n      this.main = update;\n      this.media_ = this.main.playlists[id];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n    this.updateMediaUpdateTimeout_(refreshDelay(this.media(), !!update));\n    metadata.parsedPlaylist = playlistMetadataPayload(this.main.playlists, metadata.playlistInfo.type, !this.media_.endList);\n    this.trigger({\n      type: 'playlistparsecomplete',\n      metadata\n    });\n    this.trigger('loadedplaylist');\n  }\n  /**\n    * Abort any outstanding work and clean up.\n    */\n\n  dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    this.dateRangesStorage_ = new DateRangesStorage();\n    this.off();\n  }\n  stopRequest() {\n    if (this.request) {\n      const oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  /**\n    * When called without any arguments, returns the currently\n    * active media playlist. When called with a single argument,\n    * triggers the playlist loader to asynchronously switch to the\n    * specified media playlist. Calling this method while the\n    * loader is in the HAVE_NOTHING causes an error to be emitted\n    * but otherwise has no effect.\n    *\n    * @param {Object=} playlist the parsed media playlist\n    * object to switch to\n    * @param {boolean=} shouldDelay whether we should delay the request by half target duration\n    *\n    * @return {Playlist} the current loaded media\n    */\n\n  media(playlist, shouldDelay) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    } // find the playlist object if the target playlist has been\n    // specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.main.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.main.playlists[playlist];\n    }\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    if (shouldDelay) {\n      const delay = (playlist.partTargetDuration || playlist.targetDuration) / 2 * 1000 || 5 * 1000;\n      this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n      return;\n    }\n    const startingState = this.state;\n    const mediaChange = !this.media_ || playlist.id !== this.media_.id;\n    const mainPlaylistRef = this.main.playlists[playlist.id]; // switch to fully loaded playlists immediately\n\n    if (mainPlaylistRef && mainPlaylistRef.endList ||\n    // handle the case of a playlist object (e.g., if using vhs-json with a resolved\n    // media playlist or, for the case of demuxed audio, a resolved audio media group)\n    playlist.endList && playlist.segments.length) {\n      // abort outstanding playlist requests\n      if (this.request) {\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        if (startingState === 'HAVE_MAIN_MANIFEST') {\n          // The initial playlist was a main manifest, and the first media selected was\n          // also provided (in the form of a resolved playlist object) as part of the\n          // source object (rather than just a URL). Therefore, since the media playlist\n          // doesn't need to be requested, loadedmetadata won't trigger as part of the\n          // normal flow, and needs an explicit trigger here.\n          this.trigger('loadedmetadata');\n        } else {\n          this.trigger('mediachange');\n        }\n      }\n      return;\n    } // We update/set the timeout here so that live playlists\n    // that are not a media change will \"start\" the loader as expected.\n    // We expect that this function will start the media update timeout\n    // cycle again. This also prevents a playlist switch failure from\n    // causing us to stall during live.\n\n    this.updateMediaUpdateTimeout_(refreshDelay(playlist, true)); // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    }\n    this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n    if (this.request) {\n      if (playlist.resolvedUri === this.request.url) {\n        // requesting to switch to the same playlist multiple times\n        // has no effect after the first\n        return;\n      }\n      this.request.onreadystatechange = null;\n      this.request.abort();\n      this.request = null;\n    } // request the new playlist\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    this.pendingMedia_ = playlist;\n    const metadata = {\n      playlistInfo: {\n        type: 'media',\n        uri: playlist.uri\n      }\n    };\n    this.trigger({\n      type: 'playlistrequeststart',\n      metadata\n    });\n    this.request = this.vhs_.xhr({\n      uri: playlist.resolvedUri,\n      withCredentials: this.withCredentials,\n      requestType: 'hls-playlist'\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      playlist.lastRequest = Date.now();\n      playlist.resolvedUri = resolveManifestRedirect(playlist.resolvedUri, req);\n      if (error) {\n        return this.playlistRequestError(this.request, playlist, startingState);\n      }\n      this.trigger({\n        type: 'playlistrequestcomplete',\n        metadata\n      });\n      this.haveMetadata({\n        playlistString: req.responseText,\n        url: playlist.uri,\n        id: playlist.id\n      }); // fire loadedmetadata the first time a media playlist is loaded\n\n      if (startingState === 'HAVE_MAIN_MANIFEST') {\n        this.trigger('loadedmetadata');\n      } else {\n        this.trigger('mediachange');\n      }\n    });\n  }\n  /**\n   * pause loading of the playlist\n   */\n\n  pause() {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n    this.stopRequest();\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    } // Need to restore state now that no activity is happening\n\n    if (this.state === 'SWITCHING_MEDIA') {\n      // if the loader was in the process of switching media, it should either return to\n      // HAVE_MAIN_MANIFEST or HAVE_METADATA depending on if the loader has loaded a media\n      // playlist yet. This is determined by the existence of loader.media_\n      if (this.media_) {\n        this.state = 'HAVE_METADATA';\n      } else {\n        this.state = 'HAVE_MAIN_MANIFEST';\n      }\n    } else if (this.state === 'HAVE_CURRENT_METADATA') {\n      this.state = 'HAVE_METADATA';\n    }\n  }\n  /**\n   * start loading of the playlist\n   */\n\n  load(shouldDelay) {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n    const media = this.media();\n    if (shouldDelay) {\n      const delay = media ? (media.partTargetDuration || media.targetDuration) / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(() => {\n        this.mediaUpdateTimeout = null;\n        this.load();\n      }, delay);\n      return;\n    }\n    if (!this.started) {\n      this.start();\n      return;\n    }\n    if (media && !media.endList) {\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  updateMediaUpdateTimeout_(delay) {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    } // we only have use mediaupdatetimeout for live playlists.\n\n    if (!this.media() || this.media().endList) {\n      return;\n    }\n    this.mediaUpdateTimeout = window$1.setTimeout(() => {\n      this.mediaUpdateTimeout = null;\n      this.trigger('mediaupdatetimeout');\n      this.updateMediaUpdateTimeout_(delay);\n    }, delay);\n  }\n  /**\n   * start loading of the playlist\n   */\n\n  start() {\n    this.started = true;\n    if (typeof this.src === 'object') {\n      // in the case of an entirely constructed manifest object (meaning there's no actual\n      // manifest on a server), default the uri to the page's href\n      if (!this.src.uri) {\n        this.src.uri = window$1.location.href;\n      } // resolvedUri is added on internally after the initial request. Since there's no\n      // request for pre-resolved manifests, add on resolvedUri here.\n\n      this.src.resolvedUri = this.src.uri; // Since a manifest object was passed in as the source (instead of a URL), the first\n      // request can be skipped (since the top level of the manifest, at a minimum, is\n      // already available as a parsed manifest object). However, if the manifest object\n      // represents a main playlist, some media playlists may need to be resolved before\n      // the starting segment list is available. Therefore, go directly to setup of the\n      // initial playlist, and let the normal flow continue from there.\n      //\n      // Note that the call to setup is asynchronous, as other sections of VHS may assume\n      // that the first request is asynchronous.\n\n      setTimeout(() => {\n        this.setupInitialPlaylist(this.src);\n      }, 0);\n      return;\n    }\n    const metadata = {\n      playlistInfo: {\n        type: 'multivariant',\n        uri: this.src\n      }\n    };\n    this.trigger({\n      type: 'playlistrequeststart',\n      metadata\n    }); // request the specified URL\n\n    this.request = this.vhs_.xhr({\n      uri: this.src,\n      withCredentials: this.withCredentials,\n      requestType: 'hls-playlist'\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      } // clear the loader's request reference\n\n      this.request = null;\n      if (error) {\n        this.error = {\n          status: req.status,\n          message: `HLS playlist request error at URL: ${this.src}.`,\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2,\n          metadata: getStreamingNetworkErrorMetadata({\n            requestType: req.requestType,\n            request: req,\n            error\n          })\n        };\n        if (this.state === 'HAVE_NOTHING') {\n          this.started = false;\n        }\n        return this.trigger('error');\n      }\n      this.trigger({\n        type: 'playlistrequestcomplete',\n        metadata\n      });\n      this.src = resolveManifestRedirect(this.src, req);\n      this.trigger({\n        type: 'playlistparsestart',\n        metadata\n      });\n      const manifest = this.parseManifest_({\n        manifestString: req.responseText,\n        url: this.src\n      }); // we haven't loaded any variant playlists here so we default to false for isLive.\n\n      metadata.parsedPlaylist = playlistMetadataPayload(manifest.playlists, metadata.playlistInfo.type, false);\n      this.trigger({\n        type: 'playlistparsecomplete',\n        metadata\n      });\n      this.setupInitialPlaylist(manifest);\n    });\n  }\n  srcUri() {\n    return typeof this.src === 'string' ? this.src : this.src.uri;\n  }\n  /**\n   * Given a manifest object that's either a main or media playlist, trigger the proper\n   * events and set the state of the playlist loader.\n   *\n   * If the manifest object represents a main playlist, `loadedplaylist` will be\n   * triggered to allow listeners to select a playlist. If none is selected, the loader\n   * will default to the first one in the playlists array.\n   *\n   * If the manifest object represents a media playlist, `loadedplaylist` will be\n   * triggered followed by `loadedmetadata`, as the only available playlist is loaded.\n   *\n   * In the case of a media playlist, a main playlist object wrapper with one playlist\n   * will be created so that all logic can handle playlists in the same fashion (as an\n   * assumed manifest object schema).\n   *\n   * @param {Object} manifest\n   *        The parsed manifest object\n   */\n\n  setupInitialPlaylist(manifest) {\n    this.state = 'HAVE_MAIN_MANIFEST';\n    if (manifest.playlists) {\n      this.main = manifest;\n      addPropertiesToMain(this.main, this.srcUri()); // If the initial main playlist has playlists wtih segments already resolved,\n      // then resolve URIs in advance, as they are usually done after a playlist request,\n      // which may not happen if the playlist is resolved.\n\n      manifest.playlists.forEach(playlist => {\n        playlist.segments = getAllSegments(playlist);\n        playlist.segments.forEach(segment => {\n          resolveSegmentUris(segment, playlist.resolvedUri);\n        });\n      });\n      this.trigger('loadedplaylist');\n      if (!this.request) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.main.playlists[0]);\n      }\n      return;\n    } // In order to support media playlists passed in as vhs-json, the case where the uri\n    // is not provided as part of the manifest should be considered, and an appropriate\n    // default used.\n\n    const uri = this.srcUri() || window$1.location.href;\n    this.main = mainForMedia(manifest, uri);\n    this.haveMetadata({\n      playlistObject: manifest,\n      url: uri,\n      id: this.main.playlists[0].id\n    });\n    this.trigger('loadedmetadata');\n  }\n  /**\n   * Updates or deletes a preexisting pathway clone.\n   * Ensures that all playlists related to the old pathway clone are\n   * either updated or deleted.\n   *\n   * @param {Object} clone On update, the pathway clone object for the newly updated pathway clone.\n   *        On delete, the old pathway clone object to be deleted.\n   * @param {boolean} isUpdate True if the pathway is to be updated,\n   *        false if it is meant to be deleted.\n   */\n\n  updateOrDeleteClone(clone, isUpdate) {\n    const main = this.main;\n    const pathway = clone.ID;\n    let i = main.playlists.length; // Iterate backwards through the playlist so we can remove playlists if necessary.\n\n    while (i--) {\n      const p = main.playlists[i];\n      if (p.attributes['PATHWAY-ID'] === pathway) {\n        const oldPlaylistUri = p.resolvedUri;\n        const oldPlaylistId = p.id; // update the indexed playlist and add new playlists by ID and URI\n\n        if (isUpdate) {\n          const newPlaylistUri = this.createCloneURI_(p.resolvedUri, clone);\n          const newPlaylistId = createPlaylistID(pathway, newPlaylistUri);\n          const attributes = this.createCloneAttributes_(pathway, p.attributes);\n          const updatedPlaylist = this.createClonePlaylist_(p, newPlaylistId, clone, attributes);\n          main.playlists[i] = updatedPlaylist;\n          main.playlists[newPlaylistId] = updatedPlaylist;\n          main.playlists[newPlaylistUri] = updatedPlaylist;\n        } else {\n          // Remove the indexed playlist.\n          main.playlists.splice(i, 1);\n        } // Remove playlists by the old ID and URI.\n\n        delete main.playlists[oldPlaylistId];\n        delete main.playlists[oldPlaylistUri];\n      }\n    }\n    this.updateOrDeleteCloneMedia(clone, isUpdate);\n  }\n  /**\n   * Updates or deletes media data based on the pathway clone object.\n   * Due to the complexity of the media groups and playlists, in all cases\n   * we remove all of the old media groups and playlists.\n   * On updates, we then create new media groups and playlists based on the\n   * new pathway clone object.\n   *\n   * @param {Object} clone The pathway clone object for the newly updated pathway clone.\n   * @param {boolean} isUpdate True if the pathway is to be updated,\n   *        false if it is meant to be deleted.\n   */\n\n  updateOrDeleteCloneMedia(clone, isUpdate) {\n    const main = this.main;\n    const id = clone.ID;\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(mediaType => {\n      if (!main.mediaGroups[mediaType] || !main.mediaGroups[mediaType][id]) {\n        return;\n      }\n      for (const groupKey in main.mediaGroups[mediaType]) {\n        // Remove all media playlists for the media group for this pathway clone.\n        if (groupKey === id) {\n          for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n            const oldMedia = main.mediaGroups[mediaType][groupKey][labelKey];\n            oldMedia.playlists.forEach((p, i) => {\n              const oldMediaPlaylist = main.playlists[p.id];\n              const oldPlaylistId = oldMediaPlaylist.id;\n              const oldPlaylistUri = oldMediaPlaylist.resolvedUri;\n              delete main.playlists[oldPlaylistId];\n              delete main.playlists[oldPlaylistUri];\n            });\n          } // Delete the old media group.\n\n          delete main.mediaGroups[mediaType][groupKey];\n        }\n      }\n    }); // Create the new media groups and playlists if there is an update.\n\n    if (isUpdate) {\n      this.createClonedMediaGroups_(clone);\n    }\n  }\n  /**\n   * Given a pathway clone object, clones all necessary playlists.\n   *\n   * @param {Object} clone The pathway clone object.\n   * @param {Object} basePlaylist The original playlist to clone from.\n   */\n\n  addClonePathway(clone, basePlaylist = {}) {\n    const main = this.main;\n    const index = main.playlists.length;\n    const uri = this.createCloneURI_(basePlaylist.resolvedUri, clone);\n    const playlistId = createPlaylistID(clone.ID, uri);\n    const attributes = this.createCloneAttributes_(clone.ID, basePlaylist.attributes);\n    const playlist = this.createClonePlaylist_(basePlaylist, playlistId, clone, attributes);\n    main.playlists[index] = playlist; // add playlist by ID and URI\n\n    main.playlists[playlistId] = playlist;\n    main.playlists[uri] = playlist;\n    this.createClonedMediaGroups_(clone);\n  }\n  /**\n   * Given a pathway clone object we create clones of all media.\n   * In this function, all necessary information and updated playlists\n   * are added to the `mediaGroup` object.\n   * Playlists are also added to the `playlists` array so the media groups\n   * will be properly linked.\n   *\n   * @param {Object} clone The pathway clone object.\n   */\n\n  createClonedMediaGroups_(clone) {\n    const id = clone.ID;\n    const baseID = clone['BASE-ID'];\n    const main = this.main;\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(mediaType => {\n      // If the media type doesn't exist, or there is already a clone, skip\n      // to the next media type.\n      if (!main.mediaGroups[mediaType] || main.mediaGroups[mediaType][id]) {\n        return;\n      }\n      for (const groupKey in main.mediaGroups[mediaType]) {\n        if (groupKey === baseID) {\n          // Create the group.\n          main.mediaGroups[mediaType][id] = {};\n        } else {\n          // There is no need to iterate over label keys in this case.\n          continue;\n        }\n        for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n          const oldMedia = main.mediaGroups[mediaType][groupKey][labelKey];\n          main.mediaGroups[mediaType][id][labelKey] = _extends({}, oldMedia);\n          const newMedia = main.mediaGroups[mediaType][id][labelKey]; // update URIs on the media\n\n          const newUri = this.createCloneURI_(oldMedia.resolvedUri, clone);\n          newMedia.resolvedUri = newUri;\n          newMedia.uri = newUri; // Reset playlists in the new media group.\n\n          newMedia.playlists = []; // Create new playlists in the newly cloned media group.\n\n          oldMedia.playlists.forEach((p, i) => {\n            const oldMediaPlaylist = main.playlists[p.id];\n            const group = groupID(mediaType, id, labelKey);\n            const newPlaylistID = createPlaylistID(id, group); // Check to see if it already exists\n\n            if (oldMediaPlaylist && !main.playlists[newPlaylistID]) {\n              const newMediaPlaylist = this.createClonePlaylist_(oldMediaPlaylist, newPlaylistID, clone);\n              const newPlaylistUri = newMediaPlaylist.resolvedUri;\n              main.playlists[newPlaylistID] = newMediaPlaylist;\n              main.playlists[newPlaylistUri] = newMediaPlaylist;\n            }\n            newMedia.playlists[i] = this.createClonePlaylist_(p, newPlaylistID, clone);\n          });\n        }\n      }\n    });\n  }\n  /**\n   * Using the original playlist to be cloned, and the pathway clone object\n   * information, we create a new playlist.\n   *\n   * @param {Object} basePlaylist  The original playlist to be cloned from.\n   * @param {string} id The desired id of the newly cloned playlist.\n   * @param {Object} clone The pathway clone object.\n   * @param {Object} attributes An optional object to populate the `attributes` property in the playlist.\n   *\n   * @return {Object} The combined cloned playlist.\n   */\n\n  createClonePlaylist_(basePlaylist, id, clone, attributes) {\n    const uri = this.createCloneURI_(basePlaylist.resolvedUri, clone);\n    const newProps = {\n      resolvedUri: uri,\n      uri,\n      id\n    }; // Remove all segments from previous playlist in the clone.\n\n    if (basePlaylist.segments) {\n      newProps.segments = [];\n    }\n    if (attributes) {\n      newProps.attributes = attributes;\n    }\n    return merge(basePlaylist, newProps);\n  }\n  /**\n   * Generates an updated URI for a cloned pathway based on the original\n   * pathway's URI and the paramaters from the pathway clone object in the\n   * content steering server response.\n   *\n   * @param {string} baseUri URI to be updated in the cloned pathway.\n   * @param {Object} clone The pathway clone object.\n   *\n   * @return {string} The updated URI for the cloned pathway.\n   */\n\n  createCloneURI_(baseURI, clone) {\n    const uri = new URL(baseURI);\n    uri.hostname = clone['URI-REPLACEMENT'].HOST;\n    const params = clone['URI-REPLACEMENT'].PARAMS; // Add params to the cloned URL.\n\n    for (const key of Object.keys(params)) {\n      uri.searchParams.set(key, params[key]);\n    }\n    return uri.href;\n  }\n  /**\n   * Helper function to create the attributes needed for the new clone.\n   * This mainly adds the necessary media attributes.\n   *\n   * @param {string} id The pathway clone object ID.\n   * @param {Object} oldAttributes The old attributes to compare to.\n   * @return {Object} The new attributes to add to the playlist.\n   */\n\n  createCloneAttributes_(id, oldAttributes) {\n    const attributes = {\n      ['PATHWAY-ID']: id\n    };\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(mediaType => {\n      if (oldAttributes[mediaType]) {\n        attributes[mediaType] = id;\n      }\n    });\n    return attributes;\n  }\n  /**\n   * Returns the key ID set from a playlist\n   *\n   * @param {playlist} playlist to fetch the key ID set from.\n   * @return a Set of 32 digit hex strings that represent the unique keyIds for that playlist.\n   */\n\n  getKeyIdSet(playlist) {\n    if (playlist.contentProtection) {\n      const keyIds = new Set();\n      for (const keysystem in playlist.contentProtection) {\n        const keyId = playlist.contentProtection[keysystem].attributes.keyId;\n        if (keyId) {\n          keyIds.add(keyId.toLowerCase());\n        }\n      }\n      return keyIds;\n    }\n  }\n}\n\n/**\n * @file xhr.js\n */\n\nconst callbackWrapper = function (request, error, response, callback) {\n  const reqResponse = request.responseType === 'arraybuffer' ? request.response : request.responseText;\n  if (!error && reqResponse) {\n    request.responseTime = Date.now();\n    request.roundTripTime = request.responseTime - request.requestTime;\n    request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n    if (!request.bandwidth) {\n      request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n    }\n  }\n  if (response.headers) {\n    request.responseHeaders = response.headers;\n  } // videojs.xhr now uses a specific code on the error\n  // object to signal that a request has timed out instead\n  // of setting a boolean on the request object\n\n  if (error && error.code === 'ETIMEDOUT') {\n    request.timedout = true;\n  } // videojs.xhr no longer considers status codes outside of 200 and 0\n  // (for file uris) to be errors, but the old XHR did, so emulate that\n  // behavior. Status 206 may be used in response to byterange requests.\n\n  if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n    error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n  }\n  callback(error, request);\n};\n/**\n * Iterates over the request hooks Set and calls them in order\n *\n * @param {Set} hooks the hook Set to iterate over\n * @param {Object} options the request options to pass to the xhr wrapper\n * @return the callback hook function return value, the modified or new options Object.\n */\n\nconst callAllRequestHooks = (requestSet, options) => {\n  if (!requestSet || !requestSet.size) {\n    return;\n  }\n  let newOptions = options;\n  requestSet.forEach(requestCallback => {\n    newOptions = requestCallback(newOptions);\n  });\n  return newOptions;\n};\n/**\n * Iterates over the response hooks Set and calls them in order.\n *\n * @param {Set} hooks the hook Set to iterate over\n * @param {Object} request the xhr request object\n * @param {Object} error the xhr error object\n * @param {Object} response the xhr response object\n */\n\nconst callAllResponseHooks = (responseSet, request, error, response) => {\n  if (!responseSet || !responseSet.size) {\n    return;\n  }\n  responseSet.forEach(responseCallback => {\n    responseCallback(request, error, response);\n  });\n};\nconst xhrFactory = function () {\n  const xhr = function XhrFunction(options, callback) {\n    // Add a default timeout\n    options = merge({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n    // TODO: Remove beforeRequest in the next major release.\n\n    const beforeRequest = XhrFunction.beforeRequest || videojs.Vhs.xhr.beforeRequest; // onRequest and onResponse hooks as a Set, at either the player or global level.\n    // TODO: new Set added here for beforeRequest alias. Remove this when beforeRequest is removed.\n\n    const _requestCallbackSet = XhrFunction._requestCallbackSet || videojs.Vhs.xhr._requestCallbackSet || new Set();\n    const _responseCallbackSet = XhrFunction._responseCallbackSet || videojs.Vhs.xhr._responseCallbackSet;\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      videojs.log.warn('beforeRequest is deprecated, use onRequest instead.');\n      _requestCallbackSet.add(beforeRequest);\n    } // Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden\n    // TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11\n\n    const xhrMethod = videojs.Vhs.xhr.original === true ? videojs.xhr : videojs.Vhs.xhr; // call all registered onRequest hooks, assign new options.\n\n    const beforeRequestOptions = callAllRequestHooks(_requestCallbackSet, options); // Remove the beforeRequest function from the hooks set so stale beforeRequest functions are not called.\n\n    _requestCallbackSet.delete(beforeRequest); // xhrMethod will call XMLHttpRequest.open and XMLHttpRequest.send\n\n    const request = xhrMethod(beforeRequestOptions || options, function (error, response) {\n      // call all registered onResponse hooks\n      callAllResponseHooks(_responseCallbackSet, request, error, response);\n      return callbackWrapper(request, error, response, callback);\n    });\n    const originalAbort = request.abort;\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n    request.uri = options.uri;\n    request.requestType = options.requestType;\n    request.requestTime = Date.now();\n    return request;\n  };\n  xhr.original = true;\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\nconst byterangeStr = function (byterange) {\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  let byterangeEnd;\n  const byterangeStart = byterange.offset;\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    byterangeEnd = window$1.BigInt(byterange.offset) + window$1.BigInt(byterange.length) - window$1.BigInt(1);\n  } else {\n    byterangeEnd = byterange.offset + byterange.length - 1;\n  }\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\nconst segmentXhrHeaders = function (segment) {\n  const headers = {};\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {number} i the iterator on the range to convert\n * @return {string} the range in string format\n */\n\nconst textRange = function (range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {number} e The number\n * @param {number} i the iterator\n * @return {string} the hex formatted number as a string\n */\n\nconst formatHexString = function (e, i) {\n  const value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nconst formatAsciiString = function (e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\nconst createTransferableMessage = function (message) {\n  const transferable = {};\n  Object.keys(message).forEach(key => {\n    const value = message[key];\n    if (isArrayBufferView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n *\n * @param {Object} initSegment\n *        the init segment object.\n *\n * @return {string} the generated init segment id\n */\n\nconst initSegmentId = function (initSegment) {\n  const byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n *\n * @param {Object} key the encryption key\n * @return {string} the unique id for the media segment key.\n */\n\nconst segmentKeyId = function (key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n *\n * @param {Array|TypedArray} data\n *        data to dump to a string\n *\n * @return {string} the data as a hex string.\n */\n\nconst hexDump = data => {\n  const bytes = Array.prototype.slice.call(data);\n  const step = 16;\n  let result = '';\n  let hex;\n  let ascii;\n  for (let j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n  return result;\n};\nconst tagDump = ({\n  bytes\n}) => hexDump(bytes);\nconst textRanges = ranges => {\n  let result = '';\n  let i;\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n  return result;\n};\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n\n// TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nconst SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nconst playerTimeToProgramTime = (playerTime, segment) => {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n  const transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  const transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  const startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  const offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\nconst originalSegmentVideoDuration = videoTimingInfo => {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {string} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\nconst findSegmentForProgramTime = (programTime, playlist) => {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  let dateTimeObject;\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n  let segment = playlist.segments[0];\n  if (dateTimeObject < new Date(segment.dateTimeObject)) {\n    // Requested time is before stream start.\n    return null;\n  }\n  for (let i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    const nextSegmentStart = new Date(playlist.segments[i + 1].dateTimeObject);\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n  const lastSegment = playlist.segments[playlist.segments.length - 1];\n  const lastSegmentStart = lastSegment.dateTimeObject;\n  const lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  const lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n  if (dateTimeObject > new Date(lastSegmentStart)) {\n    segment = lastSegment;\n  }\n  return {\n    segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\nconst findSegmentForPlayerTime = (time, playlist) => {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n  let segmentEnd = 0;\n  let segment;\n  for (let i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n  const lastSegment = playlist.segments[playlist.segments.length - 1];\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n    segment = lastSegment;\n  }\n  return {\n    segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {string} programTime The programTime as an ISO-8601 string\n * @return {number} offset\n */\n\nconst getOffsetFromTimestamp = (comparisonTimeStamp, programTime) => {\n  let segmentDateTime;\n  let programDateTime;\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n  const segmentTimeEpoch = segmentDateTime.getTime();\n  const programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\nconst verifyProgramDateTimeTags = playlist => {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n  for (let i = 0; i < playlist.segments.length; i++) {\n    const segment = playlist.segments[i];\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @return {string} err.message A detailed error message\n * @return {Object} programTime\n * @return {number} programTime.mediaSeconds The streamTime in seconds\n * @return {string} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\nconst getProgramTime = ({\n  playlist,\n  time = undefined,\n  callback\n}) => {\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n  const matchedSegment = findSegmentForPlayerTime(time, playlist);\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n  const programTimeObject = {\n    mediaSeconds: time\n  };\n  const programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {string} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @return {string} err.message A detailed error message\n * @return {number} newTime The exact time that was seeked to in seconds\n */\n\nconst seekToProgramTime = ({\n  programTime,\n  playlist,\n  retryCount = 2,\n  seekTo,\n  pauseAfterSeek = true,\n  tech,\n  callback\n}) => {\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n  const matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: `${programTime} was not found in the stream`\n    });\n  }\n  const segment = matchedSegment.segment;\n  const mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: `${programTime} is not buffered yet. Try again`\n      });\n    }\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', () => {\n      seekToProgramTime({\n        programTime,\n        playlist,\n        retryCount: retryCount - 1,\n        seekTo,\n        pauseAfterSeek,\n        tech,\n        callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n  const seekToTime = segment.start + mediaOffset;\n  const seekedCallback = () => {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n  seekTo(seekToTime);\n};\n\n// which will only happen if the request is complete.\n\nconst callbackOnCompleted = (request, cb) => {\n  if (request.readyState === 4) {\n    return cb();\n  }\n  return;\n};\nconst containerRequest = (uri, xhr, cb, requestType) => {\n  let bytes = [];\n  let id3Offset;\n  let finished = false;\n  const endRequestAndCallback = function (err, req, type, _bytes) {\n    req.abort();\n    finished = true;\n    return cb(err, req, type, _bytes);\n  };\n  const progressListener = function (error, request) {\n    if (finished) {\n      return;\n    }\n    if (error) {\n      error.metadata = getStreamingNetworkErrorMetadata({\n        requestType,\n        request,\n        error\n      });\n      return endRequestAndCallback(error, request, '', bytes);\n    } // grap the new part of content that was just downloaded\n\n    const newPart = request.responseText.substring(bytes && bytes.byteLength || 0, request.responseText.length); // add that onto bytes\n\n    bytes = concatTypedArrays(bytes, stringToBytes(newPart, true));\n    id3Offset = id3Offset || getId3Offset(bytes); // we need at least 10 bytes to determine a type\n    // or we need at least two bytes after an id3Offset\n\n    if (bytes.length < 10 || id3Offset && bytes.length < id3Offset + 2) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    }\n    const type = detectContainerForBytes(bytes); // if this looks like a ts segment but we don't have enough data\n    // to see the second sync byte, wait until we have enough data\n    // before declaring it ts\n\n    if (type === 'ts' && bytes.length < 188) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    } // this may be an unsynced ts segment\n    // wait for 376 bytes before detecting no container\n\n    if (!type && bytes.length < 376) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    }\n    return endRequestAndCallback(null, request, type, bytes);\n  };\n  const options = {\n    uri,\n    beforeSend(request) {\n      // this forces the browser to pass the bytes to us unprocessed\n      request.overrideMimeType('text/plain; charset=x-user-defined');\n      request.addEventListener('progress', function ({\n        total,\n        loaded\n      }) {\n        return callbackWrapper(request, null, {\n          statusCode: request.status\n        }, progressListener);\n      });\n    }\n  };\n  const request = xhr(options, function (error, response) {\n    return callbackWrapper(request, error, response, progressListener);\n  });\n  return request;\n};\nconst {\n  EventTarget\n} = videojs;\nconst dashPlaylistUnchanged = function (a, b) {\n  if (!isPlaylistUnchanged(a, b)) {\n    return false;\n  } // for dash the above check will often return true in scenarios where\n  // the playlist actually has changed because mediaSequence isn't a\n  // dash thing, and we often set it to 1. So if the playlists have the same amount\n  // of segments we return true.\n  // So for dash we need to make sure that the underlying segments are different.\n  // if sidx changed then the playlists are different.\n\n  if (a.sidx && b.sidx && (a.sidx.offset !== b.sidx.offset || a.sidx.length !== b.sidx.length)) {\n    return false;\n  } else if (!a.sidx && b.sidx || a.sidx && !b.sidx) {\n    return false;\n  } // one or the other does not have segments\n  // there was a change.\n\n  if (a.segments && !b.segments || !a.segments && b.segments) {\n    return false;\n  } // neither has segments nothing changed\n\n  if (!a.segments && !b.segments) {\n    return true;\n  } // check segments themselves\n\n  for (let i = 0; i < a.segments.length; i++) {\n    const aSegment = a.segments[i];\n    const bSegment = b.segments[i]; // if uris are different between segments there was a change\n\n    if (aSegment.uri !== bSegment.uri) {\n      return false;\n    } // neither segment has a byterange, there will be no byterange change.\n\n    if (!aSegment.byterange && !bSegment.byterange) {\n      continue;\n    }\n    const aByterange = aSegment.byterange;\n    const bByterange = bSegment.byterange; // if byterange only exists on one of the segments, there was a change.\n\n    if (aByterange && !bByterange || !aByterange && bByterange) {\n      return false;\n    } // if both segments have byterange with different offsets, there was a change.\n\n    if (aByterange.offset !== bByterange.offset || aByterange.length !== bByterange.length) {\n      return false;\n    }\n  } // if everything was the same with segments, this is the same playlist.\n\n  return true;\n};\n/**\n * Use the representation IDs from the mpd object to create groupIDs, the NAME is set to mandatory representation\n * ID in the parser. This allows for continuous playout across periods with the same representation IDs\n * (continuous periods as defined in DASH-IF 3.2.12). This is assumed in the mpd-parser as well. If we want to support\n * periods without continuous playback this function may need modification as well as the parser.\n */\n\nconst dashGroupId = (type, group, label, playlist) => {\n  // If the manifest somehow does not have an ID (non-dash compliant), use the label.\n  const playlistId = playlist.attributes.NAME || label;\n  return `placeholder-uri-${type}-${group}-${playlistId}`;\n};\n/**\n * Parses the main XML string and updates playlist URI references.\n *\n * @param {Object} config\n *        Object of arguments\n * @param {string} config.mainXml\n *        The mpd XML\n * @param {string} config.srcUrl\n *        The mpd URL\n * @param {Date} config.clientOffset\n *         A time difference between server and client\n * @param {Object} config.sidxMapping\n *        SIDX mappings for moof/mdat URIs and byte ranges\n * @return {Object}\n *         The parsed mpd manifest object\n */\n\nconst parseMainXml = ({\n  mainXml,\n  srcUrl,\n  clientOffset,\n  sidxMapping,\n  previousManifest\n}) => {\n  const manifest = parse(mainXml, {\n    manifestUri: srcUrl,\n    clientOffset,\n    sidxMapping,\n    previousManifest\n  });\n  addPropertiesToMain(manifest, srcUrl, dashGroupId);\n  return manifest;\n};\n/**\n * Removes any mediaGroup labels that no longer exist in the newMain\n *\n * @param {Object} update\n *         The previous mpd object being updated\n * @param {Object} newMain\n *         The new mpd object\n */\n\nconst removeOldMediaGroupLabels = (update, newMain) => {\n  forEachMediaGroup(update, (properties, type, group, label) => {\n    if (!newMain.mediaGroups[type][group] || !(label in newMain.mediaGroups[type][group])) {\n      delete update.mediaGroups[type][group][label];\n    }\n  });\n};\n/**\n * Returns a new main manifest that is the result of merging an updated main manifest\n * into the original version.\n *\n * @param {Object} oldMain\n *        The old parsed mpd object\n * @param {Object} newMain\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original main manifest with the updated media\n *         playlists merged in\n */\n\nconst updateMain = (oldMain, newMain, sidxMapping) => {\n  let noChanges = true;\n  let update = merge(oldMain, {\n    // These are top level properties that can be updated\n    duration: newMain.duration,\n    minimumUpdatePeriod: newMain.minimumUpdatePeriod,\n    timelineStarts: newMain.timelineStarts\n  }); // First update the playlists in playlist list\n\n  for (let i = 0; i < newMain.playlists.length; i++) {\n    const playlist = newMain.playlists[i];\n    if (playlist.sidx) {\n      const sidxKey = generateSidxKey(playlist.sidx); // add sidx segments to the playlist if we have all the sidx info already\n\n      if (sidxMapping && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx) {\n        addSidxSegmentsToPlaylist(playlist, sidxMapping[sidxKey].sidx, playlist.sidx.resolvedUri);\n      }\n    }\n    const playlistUpdate = updateMain$1(update, playlist, dashPlaylistUnchanged);\n    if (playlistUpdate) {\n      update = playlistUpdate;\n      noChanges = false;\n    }\n  } // Then update media group playlists\n\n  forEachMediaGroup(newMain, (properties, type, group, label) => {\n    if (properties.playlists && properties.playlists.length) {\n      const id = properties.playlists[0].id;\n      const playlistUpdate = updateMain$1(update, properties.playlists[0], dashPlaylistUnchanged);\n      if (playlistUpdate) {\n        update = playlistUpdate; // add new mediaGroup label if it doesn't exist and assign the new mediaGroup.\n\n        if (!(label in update.mediaGroups[type][group])) {\n          update.mediaGroups[type][group][label] = properties;\n        } // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n        noChanges = false;\n      }\n    }\n  }); // remove mediaGroup labels and references that no longer exist in the newMain\n\n  removeOldMediaGroupLabels(update, newMain);\n  if (newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n    noChanges = false;\n  }\n  if (noChanges) {\n    return null;\n  }\n  return update;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\nconst equivalentSidx = (a, b) => {\n  const neitherMap = Boolean(!a.map && !b.map);\n  const equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\nconst compareSidxEntry = (playlists, oldSidxMapping) => {\n  const newSidxMapping = {};\n  for (const id in playlists) {\n    const playlist = playlists[id];\n    const currentSidxInfo = playlist.sidx;\n    if (currentSidxInfo) {\n      const key = generateSidxKey(currentSidxInfo);\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n      const savedSidxInfo = oldSidxMapping[key].sidxInfo;\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} main the parsed mpd XML returned via mpd-parser\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\nconst filterChangedSidxMappings = (main, oldSidxMapping) => {\n  const videoSidx = compareSidxEntry(main.playlists, oldSidxMapping);\n  let mediaGroupSidx = videoSidx;\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    if (properties.playlists && properties.playlists.length) {\n      const playlists = properties.playlists;\n      mediaGroupSidx = merge(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n};\nclass DashPlaylistLoader extends EventTarget {\n  // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n  constructor(srcUrlOrPlaylist, vhs, options = {}, mainPlaylistLoader) {\n    super();\n    this.isPaused_ = true;\n    this.mainPlaylistLoader_ = mainPlaylistLoader || this;\n    if (!mainPlaylistLoader) {\n      this.isMain_ = true;\n    }\n    const {\n      withCredentials = false\n    } = options;\n    this.vhs_ = vhs;\n    this.withCredentials = withCredentials;\n    this.addMetadataToTextTrack = options.addMetadataToTextTrack;\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or object is required');\n    } // event naming?\n\n    this.on('minimumUpdatePeriod', () => {\n      this.refreshXml_();\n    }); // live playlist staleness timeout\n\n    this.on('mediaupdatetimeout', () => {\n      this.refreshMedia_(this.media().id);\n    });\n    this.state = 'HAVE_NOTHING';\n    this.loadedPlaylists_ = {};\n    this.logger_ = logger('DashPlaylistLoader'); // initialize the loader state\n    // The mainPlaylistLoader will be created with a string\n\n    if (this.isMain_) {\n      this.mainPlaylistLoader_.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      this.mainPlaylistLoader_.sidxMapping_ = {};\n    } else {\n      this.childPlaylist_ = srcUrlOrPlaylist;\n    }\n  }\n  get isPaused() {\n    return this.isPaused_;\n  }\n  requestErrored_(err, request, startingState) {\n    // disposed\n    if (!this.request) {\n      return true;\n    } // pending request is cleared\n\n    this.request = null;\n    if (err) {\n      // use the provided error object or create one\n      // based on the request/response\n      this.error = typeof err === 'object' && !(err instanceof Error) ? err : {\n        status: request.status,\n        message: 'DASH request error at URL: ' + request.uri,\n        response: request.response,\n        // MEDIA_ERR_NETWORK\n        code: 2,\n        metadata: err.metadata\n      };\n      if (startingState) {\n        this.state = startingState;\n      }\n      this.trigger('error');\n      return true;\n    }\n  }\n  /**\n   * Verify that the container of the sidx segment can be parsed\n   * and if it can, get and parse that segment.\n   */\n\n  addSidxSegments_(playlist, startingState, cb) {\n    const sidxKey = playlist.sidx && generateSidxKey(playlist.sidx); // playlist lacks sidx or sidx segments were added to this playlist already.\n\n    if (!playlist.sidx || !sidxKey || this.mainPlaylistLoader_.sidxMapping_[sidxKey]) {\n      // keep this function async\n      window$1.clearTimeout(this.mediaRequest_);\n      this.mediaRequest_ = window$1.setTimeout(() => cb(false), 0);\n      return;\n    } // resolve the segment URL relative to the playlist\n\n    const uri = resolveManifestRedirect(playlist.sidx.resolvedUri);\n    const fin = (err, request) => {\n      if (this.requestErrored_(err, request, startingState)) {\n        return;\n      }\n      const sidxMapping = this.mainPlaylistLoader_.sidxMapping_;\n      const {\n        requestType\n      } = request;\n      let sidx;\n      try {\n        sidx = parseSidx(toUint8(request.response).subarray(8));\n      } catch (e) {\n        e.metadata = getStreamingNetworkErrorMetadata({\n          requestType,\n          request,\n          parseFailure: true\n        }); // sidx parsing failed.\n\n        this.requestErrored_(e, request, startingState);\n        return;\n      }\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx,\n        sidx\n      };\n      addSidxSegmentsToPlaylist(playlist, sidx, playlist.sidx.resolvedUri);\n      return cb(true);\n    };\n    const REQUEST_TYPE = 'dash-sidx';\n    this.request = containerRequest(uri, this.vhs_.xhr, (err, request, container, bytes) => {\n      if (err) {\n        return fin(err, request);\n      }\n      if (!container || container !== 'mp4') {\n        const sidxContainer = container || 'unknown';\n        return fin({\n          status: request.status,\n          message: `Unsupported ${sidxContainer} container type for sidx segment at URL: ${uri}`,\n          // response is just bytes in this case\n          // but we really don't want to return that.\n          response: '',\n          playlist,\n          internal: true,\n          playlistExclusionDuration: Infinity,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        }, request);\n      } // if we already downloaded the sidx bytes in the container request, use them\n\n      const {\n        offset,\n        length\n      } = playlist.sidx.byterange;\n      if (bytes.length >= length + offset) {\n        return fin(err, {\n          response: bytes.subarray(offset, offset + length),\n          status: request.status,\n          uri: request.uri\n        });\n      } // otherwise request sidx bytes\n\n      this.request = this.vhs_.xhr({\n        uri,\n        responseType: 'arraybuffer',\n        requestType: 'dash-sidx',\n        headers: segmentXhrHeaders({\n          byterange: playlist.sidx.byterange\n        })\n      }, fin);\n    }, REQUEST_TYPE);\n  }\n  dispose() {\n    this.isPaused_ = true;\n    this.trigger('dispose');\n    this.stopRequest();\n    this.loadedPlaylists_ = {};\n    window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n    window$1.clearTimeout(this.mediaRequest_);\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    this.mediaRequest_ = null;\n    this.minimumUpdatePeriodTimeout_ = null;\n    if (this.mainPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n      this.mainPlaylistLoader_.createMupOnMedia_ = null;\n    }\n    this.off();\n  }\n  hasPendingRequest() {\n    return this.request || this.mediaRequest_;\n  }\n  stopRequest() {\n    if (this.request) {\n      const oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  media(playlist) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    }\n    const startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.mainPlaylistLoader_.main.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.mainPlaylistLoader_.main.playlists[playlist];\n    }\n    const mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n    if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        this.trigger('mediachange');\n      }\n      return;\n    } // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    } // switching from an already loaded playlist\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    this.addSidxSegments_(playlist, startingState, sidxChanged => {\n      // everything is ready just continue to haveMetadata\n      this.haveMetadata({\n        startingState,\n        playlist\n      });\n    });\n  }\n  haveMetadata({\n    startingState,\n    playlist\n  }) {\n    this.state = 'HAVE_METADATA';\n    this.loadedPlaylists_[playlist.id] = playlist;\n    window$1.clearTimeout(this.mediaRequest_);\n    this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n    this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n    // to resolve setup of media groups\n\n    if (startingState === 'HAVE_MAIN_MANIFEST') {\n      this.trigger('loadedmetadata');\n    } else {\n      // trigger media change if the active media has been updated\n      this.trigger('mediachange');\n    }\n  }\n  pause() {\n    this.isPaused_ = true;\n    if (this.mainPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n      this.mainPlaylistLoader_.createMupOnMedia_ = null;\n    }\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    if (this.isMain_) {\n      window$1.clearTimeout(this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_);\n      this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_ = null;\n    }\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    }\n  }\n  load(isFinalRendition) {\n    this.isPaused_ = false;\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    const media = this.media();\n    if (isFinalRendition) {\n      const delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(() => this.load(), delay);\n      return;\n    } // because the playlists are internal to the manifest, load should either load the\n    // main manifest, or do nothing but trigger an event\n\n    if (!this.started) {\n      this.start();\n      return;\n    }\n    if (media && !media.endList) {\n      // Check to see if this is the main loader and the MUP was cleared (this happens\n      // when the loader was paused). `media` should be set at this point since one is always\n      // set during `start()`.\n      if (this.isMain_ && !this.minimumUpdatePeriodTimeout_) {\n        // Trigger minimumUpdatePeriod to refresh the main manifest\n        this.trigger('minimumUpdatePeriod'); // Since there was no prior minimumUpdatePeriodTimeout it should be recreated\n\n        this.updateMinimumUpdatePeriodTimeout_();\n      }\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  start() {\n    this.started = true; // We don't need to request the main manifest again\n    // Call this asynchronously to match the xhr request behavior below\n\n    if (!this.isMain_) {\n      window$1.clearTimeout(this.mediaRequest_);\n      this.mediaRequest_ = window$1.setTimeout(() => this.haveMain_(), 0);\n      return;\n    }\n    this.requestMain_((req, mainChanged) => {\n      this.haveMain_();\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.mainPlaylistLoader_.main.playlists[0]);\n      }\n    });\n  }\n  requestMain_(cb) {\n    const metadata = {\n      manifestInfo: {\n        uri: this.mainPlaylistLoader_.srcUrl\n      }\n    };\n    this.trigger({\n      type: 'manifestrequeststart',\n      metadata\n    });\n    this.request = this.vhs_.xhr({\n      uri: this.mainPlaylistLoader_.srcUrl,\n      withCredentials: this.withCredentials,\n      requestType: 'dash-manifest'\n    }, (error, req) => {\n      if (error) {\n        const {\n          requestType\n        } = req;\n        error.metadata = getStreamingNetworkErrorMetadata({\n          requestType,\n          request: req,\n          error\n        });\n      }\n      if (this.requestErrored_(error, req)) {\n        if (this.state === 'HAVE_NOTHING') {\n          this.started = false;\n        }\n        return;\n      }\n      this.trigger({\n        type: 'manifestrequestcomplete',\n        metadata\n      });\n      const mainChanged = req.responseText !== this.mainPlaylistLoader_.mainXml_;\n      this.mainPlaylistLoader_.mainXml_ = req.responseText;\n      if (req.responseHeaders && req.responseHeaders.date) {\n        this.mainLoaded_ = Date.parse(req.responseHeaders.date);\n      } else {\n        this.mainLoaded_ = Date.now();\n      }\n      this.mainPlaylistLoader_.srcUrl = resolveManifestRedirect(this.mainPlaylistLoader_.srcUrl, req);\n      if (mainChanged) {\n        this.handleMain_();\n        this.syncClientServerClock_(() => {\n          return cb(req, mainChanged);\n        });\n        return;\n      }\n      return cb(req, mainChanged);\n    });\n  }\n  /**\n   * Parses the main xml for UTCTiming node to sync the client clock to the server\n   * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n   *\n   * @param {Function} done\n   *        Function to call when clock sync has completed\n   */\n\n  syncClientServerClock_(done) {\n    const utcTiming = parseUTCTiming(this.mainPlaylistLoader_.mainXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n    // server clock\n\n    if (utcTiming === null) {\n      this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n      return done();\n    }\n    if (utcTiming.method === 'DIRECT') {\n      this.mainPlaylistLoader_.clientOffset_ = utcTiming.value - Date.now();\n      return done();\n    }\n    this.request = this.vhs_.xhr({\n      uri: resolveUrl(this.mainPlaylistLoader_.srcUrl, utcTiming.value),\n      method: utcTiming.method,\n      withCredentials: this.withCredentials,\n      requestType: 'dash-clock-sync'\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      if (error) {\n        const {\n          requestType\n        } = req;\n        this.error.metadata = getStreamingNetworkErrorMetadata({\n          requestType,\n          request: req,\n          error\n        }); // sync request failed, fall back to using date header from mpd\n        // TODO: log warning\n\n        this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n        return done();\n      }\n      let serverTime;\n      if (utcTiming.method === 'HEAD') {\n        if (!req.responseHeaders || !req.responseHeaders.date) {\n          // expected date header not preset, fall back to using date header from mpd\n          // TODO: log warning\n          serverTime = this.mainLoaded_;\n        } else {\n          serverTime = Date.parse(req.responseHeaders.date);\n        }\n      } else {\n        serverTime = Date.parse(req.responseText);\n      }\n      this.mainPlaylistLoader_.clientOffset_ = serverTime - Date.now();\n      done();\n    });\n  }\n  haveMain_() {\n    this.state = 'HAVE_MAIN_MANIFEST';\n    if (this.isMain_) {\n      // We have the main playlist at this point, so\n      // trigger this to allow PlaylistController\n      // to make an initial playlist selection\n      this.trigger('loadedplaylist');\n    } else if (!this.media_) {\n      // no media playlist was specifically selected so select\n      // the one the child playlist loader was created with\n      this.media(this.childPlaylist_);\n    }\n  }\n  handleMain_() {\n    // clear media request\n    window$1.clearTimeout(this.mediaRequest_);\n    this.mediaRequest_ = null;\n    const oldMain = this.mainPlaylistLoader_.main;\n    const metadata = {\n      manifestInfo: {\n        uri: this.mainPlaylistLoader_.srcUrl\n      }\n    };\n    this.trigger({\n      type: 'manifestparsestart',\n      metadata\n    });\n    let newMain;\n    try {\n      newMain = parseMainXml({\n        mainXml: this.mainPlaylistLoader_.mainXml_,\n        srcUrl: this.mainPlaylistLoader_.srcUrl,\n        clientOffset: this.mainPlaylistLoader_.clientOffset_,\n        sidxMapping: this.mainPlaylistLoader_.sidxMapping_,\n        previousManifest: oldMain\n      });\n    } catch (error) {\n      this.error = error;\n      this.error.metadata = {\n        errorType: videojs.Error.StreamingDashManifestParserError,\n        error\n      };\n      this.trigger('error');\n    } // if we have an old main to compare the new main against\n\n    if (oldMain) {\n      newMain = updateMain(oldMain, newMain, this.mainPlaylistLoader_.sidxMapping_);\n    } // only update main if we have a new main\n\n    this.mainPlaylistLoader_.main = newMain ? newMain : oldMain;\n    const location = this.mainPlaylistLoader_.main.locations && this.mainPlaylistLoader_.main.locations[0];\n    if (location && location !== this.mainPlaylistLoader_.srcUrl) {\n      this.mainPlaylistLoader_.srcUrl = location;\n    }\n    if (!oldMain || newMain && newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n      this.updateMinimumUpdatePeriodTimeout_();\n    }\n    this.addEventStreamToMetadataTrack_(newMain);\n    if (newMain) {\n      const {\n        duration,\n        endList\n      } = newMain;\n      const renditions = [];\n      newMain.playlists.forEach(playlist => {\n        renditions.push({\n          id: playlist.id,\n          bandwidth: playlist.attributes.BANDWIDTH,\n          resolution: playlist.attributes.RESOLUTION,\n          codecs: playlist.attributes.CODECS\n        });\n      });\n      const parsedManifest = {\n        duration,\n        isLive: !endList,\n        renditions\n      };\n      metadata.parsedManifest = parsedManifest;\n      this.trigger({\n        type: 'manifestparsecomplete',\n        metadata\n      });\n    }\n    return Boolean(newMain);\n  }\n  updateMinimumUpdatePeriodTimeout_() {\n    const mpl = this.mainPlaylistLoader_; // cancel any pending creation of mup on media\n    // a new one will be added if needed.\n\n    if (mpl.createMupOnMedia_) {\n      mpl.off('loadedmetadata', mpl.createMupOnMedia_);\n      mpl.createMupOnMedia_ = null;\n    } // clear any pending timeouts\n\n    if (mpl.minimumUpdatePeriodTimeout_) {\n      window$1.clearTimeout(mpl.minimumUpdatePeriodTimeout_);\n      mpl.minimumUpdatePeriodTimeout_ = null;\n    }\n    let mup = mpl.main && mpl.main.minimumUpdatePeriod; // If the minimumUpdatePeriod has a value of 0, that indicates that the current\n    // MPD has no future validity, so a new one will need to be acquired when new\n    // media segments are to be made available. Thus, we use the target duration\n    // in this case\n\n    if (mup === 0) {\n      if (mpl.media()) {\n        mup = mpl.media().targetDuration * 1000;\n      } else {\n        mpl.createMupOnMedia_ = mpl.updateMinimumUpdatePeriodTimeout_;\n        mpl.one('loadedmetadata', mpl.createMupOnMedia_);\n      }\n    } // if minimumUpdatePeriod is invalid or <= zero, which\n    // can happen when a live video becomes VOD. skip timeout\n    // creation.\n\n    if (typeof mup !== 'number' || mup <= 0) {\n      if (mup < 0) {\n        this.logger_(`found invalid minimumUpdatePeriod of ${mup}, not setting a timeout`);\n      }\n      return;\n    }\n    this.createMUPTimeout_(mup);\n  }\n  createMUPTimeout_(mup) {\n    const mpl = this.mainPlaylistLoader_;\n    mpl.minimumUpdatePeriodTimeout_ = window$1.setTimeout(() => {\n      mpl.minimumUpdatePeriodTimeout_ = null;\n      mpl.trigger('minimumUpdatePeriod');\n      mpl.createMUPTimeout_(mup);\n    }, mup);\n  }\n  /**\n   * Sends request to refresh the main xml and updates the parsed main manifest\n   */\n\n  refreshXml_() {\n    this.requestMain_((req, mainChanged) => {\n      if (!mainChanged) {\n        return;\n      }\n      if (this.media_) {\n        this.media_ = this.mainPlaylistLoader_.main.playlists[this.media_.id];\n      } // This will filter out updated sidx info from the mapping\n\n      this.mainPlaylistLoader_.sidxMapping_ = filterChangedSidxMappings(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.sidxMapping_);\n      this.addSidxSegments_(this.media(), this.state, sidxChanged => {\n        // TODO: do we need to reload the current playlist?\n        this.refreshMedia_(this.media().id);\n      });\n    });\n  }\n  /**\n   * Refreshes the media playlist by re-parsing the main xml and updating playlist\n   * references. If this is an alternate loader, the updated parsed manifest is retrieved\n   * from the main loader.\n   */\n\n  refreshMedia_(mediaID) {\n    if (!mediaID) {\n      throw new Error('refreshMedia_ must take a media id');\n    } // for main we have to reparse the main xml\n    // to re-create segments based on current timing values\n    // which may change media. We only skip updating the main manifest\n    // if this is the first time this.media_ is being set.\n    // as main was just parsed in that case.\n\n    if (this.media_ && this.isMain_) {\n      this.handleMain_();\n    }\n    const playlists = this.mainPlaylistLoader_.main.playlists;\n    const mediaChanged = !this.media_ || this.media_ !== playlists[mediaID];\n    if (mediaChanged) {\n      this.media_ = playlists[mediaID];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n    if (!this.mediaUpdateTimeout) {\n      const createMediaUpdateTimeout = () => {\n        if (this.media().endList) {\n          return;\n        }\n        this.mediaUpdateTimeout = window$1.setTimeout(() => {\n          this.trigger('mediaupdatetimeout');\n          createMediaUpdateTimeout();\n        }, refreshDelay(this.media(), Boolean(mediaChanged)));\n      };\n      createMediaUpdateTimeout();\n    }\n    this.trigger('loadedplaylist');\n  }\n  /**\n   * Takes eventstream data from a parsed DASH manifest and adds it to the metadata text track.\n   *\n   * @param {manifest} newMain the newly parsed manifest\n   */\n\n  addEventStreamToMetadataTrack_(newMain) {\n    // Only add new event stream metadata if we have a new manifest.\n    if (newMain && this.mainPlaylistLoader_.main.eventStream) {\n      // convert EventStream to ID3-like data.\n      const metadataArray = this.mainPlaylistLoader_.main.eventStream.map(eventStreamNode => {\n        return {\n          cueTime: eventStreamNode.start,\n          frames: [{\n            data: eventStreamNode.messageData\n          }]\n        };\n      });\n      this.addMetadataToTextTrack('EventStream', metadataArray, this.mainPlaylistLoader_.main.duration);\n    }\n  }\n  /**\n   * Returns the key ID set from a playlist\n   *\n   * @param {playlist} playlist to fetch the key ID set from.\n   * @return a Set of 32 digit hex strings that represent the unique keyIds for that playlist.\n   */\n\n  getKeyIdSet(playlist) {\n    if (playlist.contentProtection) {\n      const keyIds = new Set();\n      for (const keysystem in playlist.contentProtection) {\n        const defaultKID = playlist.contentProtection[keysystem].attributes['cenc:default_KID'];\n        if (defaultKID) {\n          // DASH keyIds are separated by dashes.\n          keyIds.add(defaultKID.replace(/-/g, '').toLowerCase());\n        }\n      }\n      return keyIds;\n    }\n  }\n}\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  BACK_BUFFER_LENGTH: 30,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  // TODO: Remove this when experimentalBufferBasedABR is removed\n  EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,\n  BUFFER_LOW_WATER_LINE_RATE: 1,\n  // If the buffer is greater than the high water line, we won't switch down\n  BUFFER_HIGH_WATER_LINE: 30\n};\nconst stringToArrayBuffer = string => {\n  const view = new Uint8Array(new ArrayBuffer(string.length));\n  for (let i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n  return view.buffer;\n};\n\n/* global Blob, BlobBuilder, Worker */\n// unify worker interface\nconst browserWorkerPolyFill = function (workerObj) {\n  // node only supports on/off\n  workerObj.on = workerObj.addEventListener;\n  workerObj.off = workerObj.removeEventListener;\n  return workerObj;\n};\nconst createObjectURL = function (str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: 'application/javascript'\n    }));\n  } catch (e) {\n    const blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob());\n  }\n};\nconst factory = function (code) {\n  return function () {\n    const objectUrl = createObjectURL(code);\n    const worker = browserWorkerPolyFill(new Worker(objectUrl));\n    worker.objURL = objectUrl;\n    const terminate = worker.terminate;\n    worker.on = worker.addEventListener;\n    worker.off = worker.removeEventListener;\n    worker.terminate = function () {\n      URL.revokeObjectURL(objectUrl);\n      return terminate.call(this);\n    };\n    return worker;\n  };\n};\nconst transform = function (code) {\n  return `var browserWorkerPolyFill = ${browserWorkerPolyFill.toString()};\\n` + 'browserWorkerPolyFill(self);\\n' + code;\n};\nconst getWorkerString = function (fn) {\n  return fn.toString().replace(/^function.+?{/, '').slice(0, -1);\n};\n\n/* rollup-plugin-worker-factory start for worker!/home/runner/work/http-streaming/http-streaming/src/transmuxer-worker.js */\nconst workerCode$1 = transform(getWorkerString(function () {\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A lightweight readable stream implemention that handles event dispatching.\n   * Objects that inherit from streams should call init in their constructors.\n   */\n\n  var Stream$8 = function () {\n    this.init = function () {\n      var listeners = {};\n      /**\n       * Add a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      this.on = function (type, listener) {\n        if (!listeners[type]) {\n          listeners[type] = [];\n        }\n        listeners[type] = listeners[type].concat(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} a function previously registered for this\n       * type of event through `on`\n       */\n\n      this.off = function (type, listener) {\n        var index;\n        if (!listeners[type]) {\n          return false;\n        }\n        index = listeners[type].indexOf(listener);\n        listeners[type] = listeners[type].slice();\n        listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       * @param type {string} the event name\n       */\n\n      this.trigger = function (type) {\n        var callbacks, i, length, args;\n        callbacks = listeners[type];\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n        if (arguments.length === 2) {\n          length = callbacks.length;\n          for (i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          args = [];\n          i = arguments.length;\n          for (i = 1; i < arguments.length; ++i) {\n            args.push(arguments[i]);\n          }\n          length = callbacks.length;\n          for (i = 0; i < length; ++i) {\n            callbacks[i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n      this.dispose = function () {\n        listeners = {};\n      };\n    };\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   * @param destination {stream} the stream that will receive all `data` events\n   * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n   *                            when the current stream emits a 'done' event\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n  Stream$8.prototype.pipe = function (destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n    this.on('done', function (flushSource) {\n      destination.flush(flushSource);\n    });\n    this.on('partialdone', function (flushSource) {\n      destination.partialFlush(flushSource);\n    });\n    this.on('endedtimeline', function (flushSource) {\n      destination.endTimeline(flushSource);\n    });\n    this.on('reset', function (flushSource) {\n      destination.reset(flushSource);\n    });\n    return destination;\n  }; // Default stream functions that are expected to be overridden to perform\n  // actual work. These are provided by the prototype as a sort of no-op\n  // implementation so that we don't have to check for their existence in the\n  // `pipe` function above.\n\n  Stream$8.prototype.push = function (data) {\n    this.trigger('data', data);\n  };\n  Stream$8.prototype.flush = function (flushSource) {\n    this.trigger('done', flushSource);\n  };\n  Stream$8.prototype.partialFlush = function (flushSource) {\n    this.trigger('partialdone', flushSource);\n  };\n  Stream$8.prototype.endTimeline = function (flushSource) {\n    this.trigger('endedtimeline', flushSource);\n  };\n  Stream$8.prototype.reset = function (flushSource) {\n    this.trigger('reset', flushSource);\n  };\n  var stream = Stream$8;\n  var MAX_UINT32$1 = Math.pow(2, 32);\n  var getUint64$5 = function (uint8) {\n    var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n    var value;\n    if (dv.getBigUint64) {\n      value = dv.getBigUint64(0);\n      if (value < Number.MAX_SAFE_INTEGER) {\n        return Number(value);\n      }\n      return value;\n    }\n    return dv.getUint32(0) * MAX_UINT32$1 + dv.getUint32(4);\n  };\n  var numbers = {\n    getUint64: getUint64$5,\n    MAX_UINT32: MAX_UINT32$1\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Functions that generate fragmented MP4s suitable for use with Media\n   * Source Extensions.\n   */\n\n  var MAX_UINT32 = numbers.MAX_UINT32;\n  var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun$1, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n  (function () {\n    var i;\n    types = {\n      avc1: [],\n      // codingname\n      avcC: [],\n      btrt: [],\n      dinf: [],\n      dref: [],\n      esds: [],\n      ftyp: [],\n      hdlr: [],\n      mdat: [],\n      mdhd: [],\n      mdia: [],\n      mfhd: [],\n      minf: [],\n      moof: [],\n      moov: [],\n      mp4a: [],\n      // codingname\n      mvex: [],\n      mvhd: [],\n      pasp: [],\n      sdtp: [],\n      smhd: [],\n      stbl: [],\n      stco: [],\n      stsc: [],\n      stsd: [],\n      stsz: [],\n      stts: [],\n      styp: [],\n      tfdt: [],\n      tfhd: [],\n      traf: [],\n      trak: [],\n      trun: [],\n      trex: [],\n      tkhd: [],\n      vmhd: []\n    }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n    // don't throw an error\n\n    if (typeof Uint8Array === 'undefined') {\n      return;\n    }\n    for (i in types) {\n      if (types.hasOwnProperty(i)) {\n        types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n      }\n    }\n    MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n    AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n    MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n    VIDEO_HDLR = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0x76, 0x69, 0x64, 0x65,\n    // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]);\n    AUDIO_HDLR = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0x73, 0x6f, 0x75, 0x6e,\n    // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ]);\n    HDLR_TYPES = {\n      video: VIDEO_HDLR,\n      audio: AUDIO_HDLR\n    };\n    DREF = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x01,\n    // entry_count\n    0x00, 0x00, 0x00, 0x0c,\n    // entry_size\n    0x75, 0x72, 0x6c, 0x20,\n    // 'url' type\n    0x00,\n    // version 0\n    0x00, 0x00, 0x01 // entry_flags\n    ]);\n    SMHD = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00,\n    // balance, 0 means centered\n    0x00, 0x00 // reserved\n    ]);\n    STCO = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n    ]);\n    STSC = STCO;\n    STSZ = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n    ]);\n    STTS = STCO;\n    VMHD = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x01,\n    // flags\n    0x00, 0x00,\n    // graphicsmode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n    ]);\n  })();\n  box = function (type) {\n    var payload = [],\n      size = 0,\n      i,\n      result,\n      view;\n    for (i = 1; i < arguments.length; i++) {\n      payload.push(arguments[i]);\n    }\n    i = payload.length; // calculate the total size we need to allocate\n\n    while (i--) {\n      size += payload[i].byteLength;\n    }\n    result = new Uint8Array(size + 8);\n    view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n    view.setUint32(0, result.byteLength);\n    result.set(type, 4); // copy the payload into the result\n\n    for (i = 0, size = 8; i < payload.length; i++) {\n      result.set(payload[i], size);\n      size += payload[i].byteLength;\n    }\n    return result;\n  };\n  dinf = function () {\n    return box(types.dinf, box(types.dref, DREF));\n  };\n  esds = function (track) {\n    return box(types.esds, new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    // ES_Descriptor\n    0x03,\n    // tag, ES_DescrTag\n    0x19,\n    // length\n    0x00, 0x00,\n    // ES_ID\n    0x00,\n    // streamDependenceFlag, URL_flag, reserved, streamPriority\n    // DecoderConfigDescriptor\n    0x04,\n    // tag, DecoderConfigDescrTag\n    0x11,\n    // length\n    0x40,\n    // object type\n    0x15,\n    // streamType\n    0x00, 0x06, 0x00,\n    // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0,\n    // maxBitrate\n    0x00, 0x00, 0xda, 0xc0,\n    // avgBitrate\n    // DecoderSpecificInfo\n    0x05,\n    // tag, DecoderSpecificInfoTag\n    0x02,\n    // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n    ]));\n  };\n  ftyp = function () {\n    return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n  };\n  hdlr = function (type) {\n    return box(types.hdlr, HDLR_TYPES[type]);\n  };\n  mdat = function (data) {\n    return box(types.mdat, data);\n  };\n  mdhd = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x02,\n    // creation_time\n    0x00, 0x00, 0x00, 0x03,\n    // modification_time\n    0x00, 0x01, 0x5f, 0x90,\n    // timescale, 90,000 \"ticks\" per second\n    track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF,\n    // duration\n    0x55, 0xc4,\n    // 'und' language (undetermined)\n    0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n    // defined. The sample rate can be parsed out of an ADTS header, for\n    // instance.\n\n    if (track.samplerate) {\n      result[12] = track.samplerate >>> 24 & 0xFF;\n      result[13] = track.samplerate >>> 16 & 0xFF;\n      result[14] = track.samplerate >>> 8 & 0xFF;\n      result[15] = track.samplerate & 0xFF;\n    }\n    return box(types.mdhd, result);\n  };\n  mdia = function (track) {\n    return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n  };\n  mfhd = function (sequenceNumber) {\n    return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00,\n    // flags\n    (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n    ]));\n  };\n  minf = function (track) {\n    return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n  };\n  moof = function (sequenceNumber, tracks) {\n    var trackFragments = [],\n      i = tracks.length; // build traf boxes for each track fragment\n\n    while (i--) {\n      trackFragments[i] = traf(tracks[i]);\n    }\n    return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n  };\n  /**\n   * Returns a movie box.\n   * @param tracks {array} the tracks associated with this movie\n   * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n   */\n\n  moov = function (tracks) {\n    var i = tracks.length,\n      boxes = [];\n    while (i--) {\n      boxes[i] = trak(tracks[i]);\n    }\n    return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n  };\n  mvex = function (tracks) {\n    var i = tracks.length,\n      boxes = [];\n    while (i--) {\n      boxes[i] = trex(tracks[i]);\n    }\n    return box.apply(null, [types.mvex].concat(boxes));\n  };\n  mvhd = function (duration) {\n    var bytes = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x01,\n    // creation_time\n    0x00, 0x00, 0x00, 0x02,\n    // modification_time\n    0x00, 0x01, 0x5f, 0x90,\n    // timescale, 90,000 \"ticks\" per second\n    (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF,\n    // duration\n    0x00, 0x01, 0x00, 0x00,\n    // 1.0 rate\n    0x01, 0x00,\n    // 1.0 volume\n    0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n    // transformation: unity matrix\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n    return box(types.mvhd, bytes);\n  };\n  sdtp = function (track) {\n    var samples = track.samples || [],\n      bytes = new Uint8Array(4 + samples.length),\n      flags,\n      i; // leave the full box header (4 bytes) all zero\n    // write the sample table\n\n    for (i = 0; i < samples.length; i++) {\n      flags = samples[i].flags;\n      bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n    }\n    return box(types.sdtp, bytes);\n  };\n  stbl = function (track) {\n    return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n  };\n  (function () {\n    var videoSample, audioSample;\n    stsd = function (track) {\n      return box(types.stsd, new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n    };\n    videoSample = function (track) {\n      var sps = track.sps || [],\n        pps = track.pps || [],\n        sequenceParameterSets = [],\n        pictureParameterSets = [],\n        i,\n        avc1Box; // assemble the SPSs\n\n      for (i = 0; i < sps.length; i++) {\n        sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n        sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n        sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n      } // assemble the PPSs\n\n      for (i = 0; i < pps.length; i++) {\n        pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n        pictureParameterSets.push(pps[i].byteLength & 0xFF);\n        pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n      }\n      avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // data_reference_index\n      0x00, 0x00,\n      // pre_defined\n      0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // pre_defined\n      (track.width & 0xff00) >> 8, track.width & 0xff,\n      // width\n      (track.height & 0xff00) >> 8, track.height & 0xff,\n      // height\n      0x00, 0x48, 0x00, 0x00,\n      // horizresolution\n      0x00, 0x48, 0x00, 0x00,\n      // vertresolution\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // frame_count\n      0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // compressorname\n      0x00, 0x18,\n      // depth = 24\n      0x11, 0x11 // pre_defined = -1\n      ]), box(types.avcC, new Uint8Array([0x01,\n      // configurationVersion\n      track.profileIdc,\n      // AVCProfileIndication\n      track.profileCompatibility,\n      // profile_compatibility\n      track.levelIdc,\n      // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n      ].concat([sps.length],\n      // numOfSequenceParameterSets\n      sequenceParameterSets,\n      // \"SPS\"\n      [pps.length],\n      // numOfPictureParameterSets\n      pictureParameterSets // \"PPS\"\n      ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80,\n      // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0,\n      // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n      ]))];\n      if (track.sarRatio) {\n        var hSpacing = track.sarRatio[0],\n          vSpacing = track.sarRatio[1];\n        avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n      }\n      return box.apply(null, avc1Box);\n    };\n    audioSample = function (track) {\n      return box(types.mp4a, new Uint8Array([\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // data_reference_index\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff,\n      // channelcount\n      (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff,\n      // samplesize\n      0x00, 0x00,\n      // pre_defined\n      0x00, 0x00,\n      // reserved\n      (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n      ]), esds(track));\n    };\n  })();\n  tkhd = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x07,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // creation_time\n    0x00, 0x00, 0x00, 0x00,\n    // modification_time\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF,\n    // duration\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00,\n    // layer\n    0x00, 0x00,\n    // alternate_group\n    0x01, 0x00,\n    // non-audio track volume\n    0x00, 0x00,\n    // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n    // transformation: unity matrix\n    (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00,\n    // width\n    (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n    ]);\n    return box(types.tkhd, result);\n  };\n  /**\n   * Generate a track fragment (traf) box. A traf box collects metadata\n   * about tracks in a movie fragment (moof) box.\n   */\n\n  traf = function (track) {\n    var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n    trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x3a,\n    // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x01,\n    // sample_description_index\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_duration\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_size\n    0x00, 0x00, 0x00, 0x00 // default_sample_flags\n    ]));\n    upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / MAX_UINT32);\n    lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % MAX_UINT32);\n    trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01,\n    // version 1\n    0x00, 0x00, 0x00,\n    // flags\n    // baseMediaDecodeTime\n    upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n    // the containing moof to the first payload byte of the associated\n    // mdat\n\n    dataOffset = 32 +\n    // tfhd\n    20 +\n    // tfdt\n    8 +\n    // traf header\n    16 +\n    // mfhd\n    8 +\n    // moof header\n    8; // mdat header\n    // audio tracks require less metadata\n\n    if (track.type === 'audio') {\n      trackFragmentRun = trun$1(track, dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n    } // video tracks should contain an independent and disposable samples\n    // box (sdtp)\n    // generate one and adjust offsets to match\n\n    sampleDependencyTable = sdtp(track);\n    trackFragmentRun = trun$1(track, sampleDependencyTable.length + dataOffset);\n    return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n  };\n  /**\n   * Generate a track box.\n   * @param track {object} a track definition\n   * @return {Uint8Array} the track box\n   */\n\n  trak = function (track) {\n    track.duration = track.duration || 0xffffffff;\n    return box(types.trak, tkhd(track), mdia(track));\n  };\n  trex = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x01,\n    // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_duration\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]); // the last two bytes of default_sample_flags is the sample\n    // degradation priority, a hint about the importance of this sample\n    // relative to others. Lower the degradation priority for all sample\n    // types other than video.\n\n    if (track.type !== 'video') {\n      result[result.length - 1] = 0x00;\n    }\n    return box(types.trex, result);\n  };\n  (function () {\n    var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n    // duration is present for the first sample, it will be present for\n    // all subsequent samples.\n    // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n    trunHeader = function (samples, offset) {\n      var durationPresent = 0,\n        sizePresent = 0,\n        flagsPresent = 0,\n        compositionTimeOffset = 0; // trun flag constants\n\n      if (samples.length) {\n        if (samples[0].duration !== undefined) {\n          durationPresent = 0x1;\n        }\n        if (samples[0].size !== undefined) {\n          sizePresent = 0x2;\n        }\n        if (samples[0].flags !== undefined) {\n          flagsPresent = 0x4;\n        }\n        if (samples[0].compositionTimeOffset !== undefined) {\n          compositionTimeOffset = 0x8;\n        }\n      }\n      return [0x00,\n      // version 0\n      0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01,\n      // flags\n      (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF,\n      // sample_count\n      (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n      ];\n    };\n    videoTrun = function (track, offset) {\n      var bytesOffest, bytes, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 16 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 16);\n      bytes.set(header);\n      bytesOffest = header.length;\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n\n        bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\n        bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\n\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\n      }\n      return box(types.trun, bytes);\n    };\n    audioTrun = function (track, offset) {\n      var bytes, bytesOffest, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 8 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 8);\n      bytes.set(header);\n      bytesOffest = header.length;\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n      }\n      return box(types.trun, bytes);\n    };\n    trun$1 = function (track, offset) {\n      if (track.type === 'audio') {\n        return audioTrun(track, offset);\n      }\n      return videoTrun(track, offset);\n    };\n  })();\n  var mp4Generator = {\n    ftyp: ftyp,\n    mdat: mdat,\n    moof: moof,\n    moov: moov,\n    initSegment: function (tracks) {\n      var fileType = ftyp(),\n        movie = moov(tracks),\n        result;\n      result = new Uint8Array(fileType.byteLength + movie.byteLength);\n      result.set(fileType);\n      result.set(movie, fileType.byteLength);\n      return result;\n    }\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n  // composed of the nal units that make up that frame\n  // Also keep track of cummulative data about the frame from the nal units such\n  // as the frame duration, starting pts, etc.\n\n  var groupNalsIntoFrames = function (nalUnits) {\n    var i,\n      currentNal,\n      currentFrame = [],\n      frames = []; // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength = 0;\n    frames.nalCount = 0;\n    frames.duration = 0;\n    currentFrame.byteLength = 0;\n    for (i = 0; i < nalUnits.length; i++) {\n      currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n      if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n        // Since the very first nal unit is expected to be an AUD\n        // only push to the frames array when currentFrame is not empty\n        if (currentFrame.length) {\n          currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n          frames.byteLength += currentFrame.byteLength;\n          frames.nalCount += currentFrame.length;\n          frames.duration += currentFrame.duration;\n          frames.push(currentFrame);\n        }\n        currentFrame = [currentNal];\n        currentFrame.byteLength = currentNal.data.byteLength;\n        currentFrame.pts = currentNal.pts;\n        currentFrame.dts = currentNal.dts;\n      } else {\n        // Specifically flag key frames for ease of use later\n        if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n          currentFrame.keyFrame = true;\n        }\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        currentFrame.byteLength += currentNal.data.byteLength;\n        currentFrame.push(currentNal);\n      }\n    } // For the last frame, use the duration of the previous frame if we\n    // have nothing better to go on\n\n    if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n      currentFrame.duration = frames[frames.length - 1].duration;\n    } // Push the final frame\n    // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength += currentFrame.byteLength;\n    frames.nalCount += currentFrame.length;\n    frames.duration += currentFrame.duration;\n    frames.push(currentFrame);\n    return frames;\n  }; // Convert an array of frames into an array of Gop with each Gop being composed\n  // of the frames that make up that Gop\n  // Also keep track of cummulative data about the Gop from the frames such as the\n  // Gop duration, starting pts, etc.\n\n  var groupFramesIntoGops = function (frames) {\n    var i,\n      currentFrame,\n      currentGop = [],\n      gops = []; // We must pre-set some of the values on the Gop since we\n    // keep running totals of these values\n\n    currentGop.byteLength = 0;\n    currentGop.nalCount = 0;\n    currentGop.duration = 0;\n    currentGop.pts = frames[0].pts;\n    currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n    gops.byteLength = 0;\n    gops.nalCount = 0;\n    gops.duration = 0;\n    gops.pts = frames[0].pts;\n    gops.dts = frames[0].dts;\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      if (currentFrame.keyFrame) {\n        // Since the very first frame is expected to be an keyframe\n        // only push to the gops array when currentGop is not empty\n        if (currentGop.length) {\n          gops.push(currentGop);\n          gops.byteLength += currentGop.byteLength;\n          gops.nalCount += currentGop.nalCount;\n          gops.duration += currentGop.duration;\n        }\n        currentGop = [currentFrame];\n        currentGop.nalCount = currentFrame.length;\n        currentGop.byteLength = currentFrame.byteLength;\n        currentGop.pts = currentFrame.pts;\n        currentGop.dts = currentFrame.dts;\n        currentGop.duration = currentFrame.duration;\n      } else {\n        currentGop.duration += currentFrame.duration;\n        currentGop.nalCount += currentFrame.length;\n        currentGop.byteLength += currentFrame.byteLength;\n        currentGop.push(currentFrame);\n      }\n    }\n    if (gops.length && currentGop.duration <= 0) {\n      currentGop.duration = gops[gops.length - 1].duration;\n    }\n    gops.byteLength += currentGop.byteLength;\n    gops.nalCount += currentGop.nalCount;\n    gops.duration += currentGop.duration; // push the final Gop\n\n    gops.push(currentGop);\n    return gops;\n  };\n  /*\n   * Search for the first keyframe in the GOPs and throw away all frames\n   * until that keyframe. Then extend the duration of the pulled keyframe\n   * and pull the PTS and DTS of the keyframe so that it covers the time\n   * range of the frames that were disposed.\n   *\n   * @param {Array} gops video GOPs\n   * @returns {Array} modified video GOPs\n   */\n\n  var extendFirstKeyFrame = function (gops) {\n    var currentGop;\n    if (!gops[0][0].keyFrame && gops.length > 1) {\n      // Remove the first GOP\n      currentGop = gops.shift();\n      gops.byteLength -= currentGop.byteLength;\n      gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n      // first gop to cover the time period of the\n      // frames we just removed\n\n      gops[0][0].dts = currentGop.dts;\n      gops[0][0].pts = currentGop.pts;\n      gops[0][0].duration += currentGop.duration;\n    }\n    return gops;\n  };\n  /**\n   * Default sample object\n   * see ISO/IEC 14496-12:2012, section 8.6.4.3\n   */\n\n  var createDefaultSample = function () {\n    return {\n      size: 0,\n      flags: {\n        isLeading: 0,\n        dependsOn: 1,\n        isDependedOn: 0,\n        hasRedundancy: 0,\n        degradationPriority: 0,\n        isNonSyncSample: 1\n      }\n    };\n  };\n  /*\n   * Collates information from a video frame into an object for eventual\n   * entry into an MP4 sample table.\n   *\n   * @param {Object} frame the video frame\n   * @param {Number} dataOffset the byte offset to position the sample\n   * @return {Object} object containing sample table info for a frame\n   */\n\n  var sampleForFrame = function (frame, dataOffset) {\n    var sample = createDefaultSample();\n    sample.dataOffset = dataOffset;\n    sample.compositionTimeOffset = frame.pts - frame.dts;\n    sample.duration = frame.duration;\n    sample.size = 4 * frame.length; // Space for nal unit size\n\n    sample.size += frame.byteLength;\n    if (frame.keyFrame) {\n      sample.flags.dependsOn = 2;\n      sample.flags.isNonSyncSample = 0;\n    }\n    return sample;\n  }; // generate the track's sample table from an array of gops\n\n  var generateSampleTable$1 = function (gops, baseDataOffset) {\n    var h,\n      i,\n      sample,\n      currentGop,\n      currentFrame,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h];\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i];\n        sample = sampleForFrame(currentFrame, dataOffset);\n        dataOffset += sample.size;\n        samples.push(sample);\n      }\n    }\n    return samples;\n  }; // generate the track's raw mdat data from an array of gops\n\n  var concatenateNalData = function (gops) {\n    var h,\n      i,\n      j,\n      currentGop,\n      currentFrame,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = gops.byteLength,\n      numberOfNals = gops.nalCount,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each Gop..\n\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h]; // For each Frame..\n\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i]; // For each NAL..\n\n        for (j = 0; j < currentFrame.length; j++) {\n          currentNal = currentFrame[j];\n          view.setUint32(dataOffset, currentNal.data.byteLength);\n          dataOffset += 4;\n          data.set(currentNal.data, dataOffset);\n          dataOffset += currentNal.data.byteLength;\n        }\n      }\n    }\n    return data;\n  }; // generate the track's sample table from a frame\n\n  var generateSampleTableForFrame = function (frame, baseDataOffset) {\n    var sample,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n    sample = sampleForFrame(frame, dataOffset);\n    samples.push(sample);\n    return samples;\n  }; // generate the track's raw mdat data from a frame\n\n  var concatenateNalDataForFrame = function (frame) {\n    var i,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = frame.byteLength,\n      numberOfNals = frame.length,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each NAL..\n\n    for (i = 0; i < frame.length; i++) {\n      currentNal = frame[i];\n      view.setUint32(dataOffset, currentNal.data.byteLength);\n      dataOffset += 4;\n      data.set(currentNal.data, dataOffset);\n      dataOffset += currentNal.data.byteLength;\n    }\n    return data;\n  };\n  var frameUtils$1 = {\n    groupNalsIntoFrames: groupNalsIntoFrames,\n    groupFramesIntoGops: groupFramesIntoGops,\n    extendFirstKeyFrame: extendFirstKeyFrame,\n    generateSampleTable: generateSampleTable$1,\n    concatenateNalData: concatenateNalData,\n    generateSampleTableForFrame: generateSampleTableForFrame,\n    concatenateNalDataForFrame: concatenateNalDataForFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var highPrefix = [33, 16, 5, 32, 164, 27];\n  var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n  var zeroFill = function (count) {\n    var a = [];\n    while (count--) {\n      a.push(0);\n    }\n    return a;\n  };\n  var makeTable = function (metaTable) {\n    return Object.keys(metaTable).reduce(function (obj, key) {\n      obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n        return arr.concat(part);\n      }, []));\n      return obj;\n    }, {});\n  };\n  var silence;\n  var silence_1 = function () {\n    if (!silence) {\n      // Frames-of-silence to use for filling in missing AAC frames\n      var coneOfSilence = {\n        96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n        88200: [highPrefix, [231], zeroFill(170), [56]],\n        64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n        48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n        44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n        32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n        24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n        16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n        12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n        11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n        8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n      };\n      silence = makeTable(coneOfSilence);\n    }\n    return silence;\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$4 = 90000,\n    // 90kHz clock\n    secondsToVideoTs,\n    secondsToAudioTs,\n    videoTsToSeconds,\n    audioTsToSeconds,\n    audioTsToVideoTs,\n    videoTsToAudioTs,\n    metadataTsToSeconds;\n  secondsToVideoTs = function (seconds) {\n    return seconds * ONE_SECOND_IN_TS$4;\n  };\n  secondsToAudioTs = function (seconds, sampleRate) {\n    return seconds * sampleRate;\n  };\n  videoTsToSeconds = function (timestamp) {\n    return timestamp / ONE_SECOND_IN_TS$4;\n  };\n  audioTsToSeconds = function (timestamp, sampleRate) {\n    return timestamp / sampleRate;\n  };\n  audioTsToVideoTs = function (timestamp, sampleRate) {\n    return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n  };\n  videoTsToAudioTs = function (timestamp, sampleRate) {\n    return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n  };\n  /**\n   * Adjust ID3 tag or caption timing information by the timeline pts values\n   * (if keepOriginalTimestamps is false) and convert to seconds\n   */\n\n  metadataTsToSeconds = function (timestamp, timelineStartPts, keepOriginalTimestamps) {\n    return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n  };\n  var clock$2 = {\n    ONE_SECOND_IN_TS: ONE_SECOND_IN_TS$4,\n    secondsToVideoTs: secondsToVideoTs,\n    secondsToAudioTs: secondsToAudioTs,\n    videoTsToSeconds: videoTsToSeconds,\n    audioTsToSeconds: audioTsToSeconds,\n    audioTsToVideoTs: audioTsToVideoTs,\n    videoTsToAudioTs: videoTsToAudioTs,\n    metadataTsToSeconds: metadataTsToSeconds\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var coneOfSilence = silence_1;\n  var clock$1 = clock$2;\n  /**\n   * Sum the `byteLength` properties of the data in each AAC frame\n   */\n\n  var sumFrameByteLengths = function (array) {\n    var i,\n      currentObj,\n      sum = 0; // sum the byteLength's all each nal unit in the frame\n\n    for (i = 0; i < array.length; i++) {\n      currentObj = array[i];\n      sum += currentObj.data.byteLength;\n    }\n    return sum;\n  }; // Possibly pad (prefix) the audio track with silence if appending this track\n  // would lead to the introduction of a gap in the audio buffer\n\n  var prefixWithSilence = function (track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n    var baseMediaDecodeTimeTs,\n      frameDuration = 0,\n      audioGapDuration = 0,\n      audioFillFrameCount = 0,\n      audioFillDuration = 0,\n      silentFrame,\n      i,\n      firstFrame;\n    if (!frames.length) {\n      return;\n    }\n    baseMediaDecodeTimeTs = clock$1.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n    frameDuration = Math.ceil(clock$1.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n    if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n      // insert the shortest possible amount (audio gap or audio to video gap)\n      audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n      audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n      audioFillDuration = audioFillFrameCount * frameDuration;\n    } // don't attempt to fill gaps smaller than a single frame or larger\n    // than a half second\n\n    if (audioFillFrameCount < 1 || audioFillDuration > clock$1.ONE_SECOND_IN_TS / 2) {\n      return;\n    }\n    silentFrame = coneOfSilence()[track.samplerate];\n    if (!silentFrame) {\n      // we don't have a silent frame pregenerated for the sample rate, so use a frame\n      // from the content instead\n      silentFrame = frames[0].data;\n    }\n    for (i = 0; i < audioFillFrameCount; i++) {\n      firstFrame = frames[0];\n      frames.splice(0, 0, {\n        data: silentFrame,\n        dts: firstFrame.dts - frameDuration,\n        pts: firstFrame.pts - frameDuration\n      });\n    }\n    track.baseMediaDecodeTime -= Math.floor(clock$1.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    return audioFillDuration;\n  }; // If the audio segment extends before the earliest allowed dts\n  // value, remove AAC frames until starts at or after the earliest\n  // allowed DTS so that we don't end up with a negative baseMedia-\n  // DecodeTime for the audio track\n\n  var trimAdtsFramesByEarliestDts = function (adtsFrames, track, earliestAllowedDts) {\n    if (track.minSegmentDts >= earliestAllowedDts) {\n      return adtsFrames;\n    } // We will need to recalculate the earliest segment Dts\n\n    track.minSegmentDts = Infinity;\n    return adtsFrames.filter(function (currentFrame) {\n      // If this is an allowed frame, keep it and record it's Dts\n      if (currentFrame.dts >= earliestAllowedDts) {\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n        track.minSegmentPts = track.minSegmentDts;\n        return true;\n      } // Otherwise, discard it\n\n      return false;\n    });\n  }; // generate the track's raw mdat data from an array of frames\n\n  var generateSampleTable = function (frames) {\n    var i,\n      currentFrame,\n      samples = [];\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      samples.push({\n        size: currentFrame.data.byteLength,\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\n      });\n    }\n    return samples;\n  }; // generate the track's sample table from an array of frames\n\n  var concatenateFrameData = function (frames) {\n    var i,\n      currentFrame,\n      dataOffset = 0,\n      data = new Uint8Array(sumFrameByteLengths(frames));\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      data.set(currentFrame.data, dataOffset);\n      dataOffset += currentFrame.data.byteLength;\n    }\n    return data;\n  };\n  var audioFrameUtils$1 = {\n    prefixWithSilence: prefixWithSilence,\n    trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n    generateSampleTable: generateSampleTable,\n    concatenateFrameData: concatenateFrameData\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$3 = clock$2.ONE_SECOND_IN_TS;\n  /**\n   * Store information about the start and end of the track and the\n   * duration for each frame/sample we process in order to calculate\n   * the baseMediaDecodeTime\n   */\n\n  var collectDtsInfo = function (track, data) {\n    if (typeof data.pts === 'number') {\n      if (track.timelineStartInfo.pts === undefined) {\n        track.timelineStartInfo.pts = data.pts;\n      }\n      if (track.minSegmentPts === undefined) {\n        track.minSegmentPts = data.pts;\n      } else {\n        track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n      }\n      if (track.maxSegmentPts === undefined) {\n        track.maxSegmentPts = data.pts;\n      } else {\n        track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n      }\n    }\n    if (typeof data.dts === 'number') {\n      if (track.timelineStartInfo.dts === undefined) {\n        track.timelineStartInfo.dts = data.dts;\n      }\n      if (track.minSegmentDts === undefined) {\n        track.minSegmentDts = data.dts;\n      } else {\n        track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n      }\n      if (track.maxSegmentDts === undefined) {\n        track.maxSegmentDts = data.dts;\n      } else {\n        track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n      }\n    }\n  };\n  /**\n   * Clear values used to calculate the baseMediaDecodeTime between\n   * tracks\n   */\n\n  var clearDtsInfo = function (track) {\n    delete track.minSegmentDts;\n    delete track.maxSegmentDts;\n    delete track.minSegmentPts;\n    delete track.maxSegmentPts;\n  };\n  /**\n   * Calculate the track's baseMediaDecodeTime based on the earliest\n   * DTS the transmuxer has ever seen and the minimum DTS for the\n   * current track\n   * @param track {object} track metadata configuration\n   * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  var calculateTrackBaseMediaDecodeTime = function (track, keepOriginalTimestamps) {\n    var baseMediaDecodeTime,\n      scale,\n      minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n    if (!keepOriginalTimestamps) {\n      minSegmentDts -= track.timelineStartInfo.dts;\n    } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n    // we want the start of the first segment to be placed\n\n    baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n    baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n    baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n    if (track.type === 'audio') {\n      // Audio has a different clock equal to the sampling_rate so we need to\n      // scale the PTS values into the clock rate of the track\n      scale = track.samplerate / ONE_SECOND_IN_TS$3;\n      baseMediaDecodeTime *= scale;\n      baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n    }\n    return baseMediaDecodeTime;\n  };\n  var trackDecodeInfo$1 = {\n    clearDtsInfo: clearDtsInfo,\n    calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n    collectDtsInfo: collectDtsInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // payload type field to indicate how they are to be\n  // interpreted. CEAS-708 caption content is always transmitted with\n  // payload type 0x04.\n\n  var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n  /**\n    * Parse a supplemental enhancement information (SEI) NAL unit.\n    * Stops parsing once a message of type ITU T T35 has been found.\n    *\n    * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n    * @return {object} the parsed SEI payload\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n    */\n\n  var parseSei = function (bytes) {\n    var i = 0,\n      result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n      payloadType = 0,\n      payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n    while (i < bytes.byteLength) {\n      // stop once we have hit the end of the sei_rbsp\n      if (bytes[i] === RBSP_TRAILING_BITS) {\n        break;\n      } // Parse payload type\n\n      while (bytes[i] === 0xFF) {\n        payloadType += 255;\n        i++;\n      }\n      payloadType += bytes[i++]; // Parse payload size\n\n      while (bytes[i] === 0xFF) {\n        payloadSize += 255;\n        i++;\n      }\n      payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n      // there can only ever be one caption message in a frame's sei\n\n      if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n        var userIdentifier = String.fromCharCode(bytes[i + 3], bytes[i + 4], bytes[i + 5], bytes[i + 6]);\n        if (userIdentifier === 'GA94') {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } else {\n          result.payload = void 0;\n        }\n      } // skip the payload and parse the next message\n\n      i += payloadSize;\n      payloadType = 0;\n      payloadSize = 0;\n    }\n    return result;\n  }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n  var parseUserData = function (sei) {\n    // itu_t_t35_contry_code must be 181 (United States) for\n    // captions\n    if (sei.payload[0] !== 181) {\n      return null;\n    } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n    if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n      return null;\n    } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n    if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n      return null;\n    } // finally, user_data_type_code should be 0x03 for caption data\n\n    if (sei.payload[7] !== 0x03) {\n      return null;\n    } // return the user_data_type_structure and strip the trailing\n    // marker bits\n\n    return sei.payload.subarray(8, sei.payload.length - 1);\n  }; // see CEA-708-D, section 4.4\n\n  var parseCaptionPackets = function (pts, userData) {\n    var results = [],\n      i,\n      count,\n      offset,\n      data; // if this is just filler, return immediately\n\n    if (!(userData[0] & 0x40)) {\n      return results;\n    } // parse out the cc_data_1 and cc_data_2 fields\n\n    count = userData[0] & 0x1f;\n    for (i = 0; i < count; i++) {\n      offset = i * 3;\n      data = {\n        type: userData[offset + 2] & 0x03,\n        pts: pts\n      }; // capture cc data when cc_valid is 1\n\n      if (userData[offset + 2] & 0x04) {\n        data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n        results.push(data);\n      }\n    }\n    return results;\n  };\n  var discardEmulationPreventionBytes$1 = function (data) {\n    var length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength,\n      newData; // Find all `Emulation Prevention Bytes`\n\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    } // Create a new array to hold the NAL unit data\n\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n    return newData;\n  }; // exports\n\n  var captionPacketParser = {\n    parseSei: parseSei,\n    parseUserData: parseUserData,\n    parseCaptionPackets: parseCaptionPackets,\n    discardEmulationPreventionBytes: discardEmulationPreventionBytes$1,\n    USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // Link To Transport\n  // -----------------\n\n  var Stream$7 = stream;\n  var cea708Parser = captionPacketParser;\n  var CaptionStream$2 = function (options) {\n    options = options || {};\n    CaptionStream$2.prototype.init.call(this); // parse708captions flag, default to true\n\n    this.parse708captions_ = typeof options.parse708captions === 'boolean' ? options.parse708captions : true;\n    this.captionPackets_ = [];\n    this.ccStreams_ = [new Cea608Stream(0, 0),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n    ];\n    if (this.parse708captions_) {\n      this.cc708Stream_ = new Cea708Stream({\n        captionServices: options.captionServices\n      }); // eslint-disable-line no-use-before-define\n    }\n    this.reset(); // forward data and done events from CCs to this CaptionStream\n\n    this.ccStreams_.forEach(function (cc) {\n      cc.on('data', this.trigger.bind(this, 'data'));\n      cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      cc.on('done', this.trigger.bind(this, 'done'));\n    }, this);\n    if (this.parse708captions_) {\n      this.cc708Stream_.on('data', this.trigger.bind(this, 'data'));\n      this.cc708Stream_.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      this.cc708Stream_.on('done', this.trigger.bind(this, 'done'));\n    }\n  };\n  CaptionStream$2.prototype = new Stream$7();\n  CaptionStream$2.prototype.push = function (event) {\n    var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n    if (event.nalUnitType !== 'sei_rbsp') {\n      return;\n    } // parse the sei\n\n    sei = cea708Parser.parseSei(event.escapedRBSP); // no payload data, skip\n\n    if (!sei.payload) {\n      return;\n    } // ignore everything but user_data_registered_itu_t_t35\n\n    if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n      return;\n    } // parse out the user data payload\n\n    userData = cea708Parser.parseUserData(sei); // ignore unrecognized userData\n\n    if (!userData) {\n      return;\n    } // Sometimes, the same segment # will be downloaded twice. To stop the\n    // caption data from being processed twice, we track the latest dts we've\n    // received and ignore everything with a dts before that. However, since\n    // data for a specific dts can be split across packets on either side of\n    // a segment boundary, we need to make sure we *don't* ignore the packets\n    // from the *next* segment that have dts === this.latestDts_. By constantly\n    // tracking the number of packets received with dts === this.latestDts_, we\n    // know how many should be ignored once we start receiving duplicates.\n\n    if (event.dts < this.latestDts_) {\n      // We've started getting older data, so set the flag.\n      this.ignoreNextEqualDts_ = true;\n      return;\n    } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n      this.numSameDts_--;\n      if (!this.numSameDts_) {\n        // We've received the last duplicate packet, time to start processing again\n        this.ignoreNextEqualDts_ = false;\n      }\n      return;\n    } // parse out CC data packets and save them for later\n\n    newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n    this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n    if (this.latestDts_ !== event.dts) {\n      this.numSameDts_ = 0;\n    }\n    this.numSameDts_++;\n    this.latestDts_ = event.dts;\n  };\n  CaptionStream$2.prototype.flushCCStreams = function (flushType) {\n    this.ccStreams_.forEach(function (cc) {\n      return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n    }, this);\n  };\n  CaptionStream$2.prototype.flushStream = function (flushType) {\n    // make sure we actually parsed captions before proceeding\n    if (!this.captionPackets_.length) {\n      this.flushCCStreams(flushType);\n      return;\n    } // In Chrome, the Array#sort function is not stable so add a\n    // presortIndex that we can use to ensure we get a stable-sort\n\n    this.captionPackets_.forEach(function (elem, idx) {\n      elem.presortIndex = idx;\n    }); // sort caption byte-pairs based on their PTS values\n\n    this.captionPackets_.sort(function (a, b) {\n      if (a.pts === b.pts) {\n        return a.presortIndex - b.presortIndex;\n      }\n      return a.pts - b.pts;\n    });\n    this.captionPackets_.forEach(function (packet) {\n      if (packet.type < 2) {\n        // Dispatch packet to the right Cea608Stream\n        this.dispatchCea608Packet(packet);\n      } else {\n        // Dispatch packet to the Cea708Stream\n        this.dispatchCea708Packet(packet);\n      }\n    }, this);\n    this.captionPackets_.length = 0;\n    this.flushCCStreams(flushType);\n  };\n  CaptionStream$2.prototype.flush = function () {\n    return this.flushStream('flush');\n  }; // Only called if handling partial data\n\n  CaptionStream$2.prototype.partialFlush = function () {\n    return this.flushStream('partialFlush');\n  };\n  CaptionStream$2.prototype.reset = function () {\n    this.latestDts_ = null;\n    this.ignoreNextEqualDts_ = false;\n    this.numSameDts_ = 0;\n    this.activeCea608Channel_ = [null, null];\n    this.ccStreams_.forEach(function (ccStream) {\n      ccStream.reset();\n    });\n  }; // From the CEA-608 spec:\n\n  /*\n   * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n   * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n   * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n   * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n   * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n   * to switch to captioning or Text.\n  */\n  // With that in mind, we ignore any data between an XDS control code and a\n  // subsequent closed-captioning control code.\n\n  CaptionStream$2.prototype.dispatchCea608Packet = function (packet) {\n    // NOTE: packet.type is the CEA608 field\n    if (this.setsTextOrXDSActive(packet)) {\n      this.activeCea608Channel_[packet.type] = null;\n    } else if (this.setsChannel1Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 0;\n    } else if (this.setsChannel2Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 1;\n    }\n    if (this.activeCea608Channel_[packet.type] === null) {\n      // If we haven't received anything to set the active channel, or the\n      // packets are Text/XDS data, discard the data; we don't want jumbled\n      // captions\n      return;\n    }\n    this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n  };\n  CaptionStream$2.prototype.setsChannel1Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1000;\n  };\n  CaptionStream$2.prototype.setsChannel2Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1800;\n  };\n  CaptionStream$2.prototype.setsTextOrXDSActive = function (packet) {\n    return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n  };\n  CaptionStream$2.prototype.dispatchCea708Packet = function (packet) {\n    if (this.parse708captions_) {\n      this.cc708Stream_.push(packet);\n    }\n  }; // ----------------------\n  // Session to Application\n  // ----------------------\n  // This hash maps special and extended character codes to their\n  // proper Unicode equivalent. The first one-byte key is just a\n  // non-standard character code. The two-byte keys that follow are\n  // the extended CEA708 character codes, along with the preceding\n  // 0x10 extended character byte to distinguish these codes from\n  // non-extended character codes. Every CEA708 character code that\n  // is not in this object maps directly to a standard unicode\n  // character code.\n  // The transparent space and non-breaking transparent space are\n  // technically not fully supported since there is no code to\n  // make them transparent, so they have normal non-transparent\n  // stand-ins.\n  // The special closed caption (CC) character isn't a standard\n  // unicode character, so a fairly similar unicode character was\n  // chosen in it's place.\n\n  var CHARACTER_TRANSLATION_708 = {\n    0x7f: 0x266a,\n    // ♪\n    0x1020: 0x20,\n    // Transparent Space\n    0x1021: 0xa0,\n    // Nob-breaking Transparent Space\n    0x1025: 0x2026,\n    // …\n    0x102a: 0x0160,\n    // Š\n    0x102c: 0x0152,\n    // Œ\n    0x1030: 0x2588,\n    // █\n    0x1031: 0x2018,\n    // ‘\n    0x1032: 0x2019,\n    // ’\n    0x1033: 0x201c,\n    // “\n    0x1034: 0x201d,\n    // ”\n    0x1035: 0x2022,\n    // •\n    0x1039: 0x2122,\n    // ™\n    0x103a: 0x0161,\n    // š\n    0x103c: 0x0153,\n    // œ\n    0x103d: 0x2120,\n    // ℠\n    0x103f: 0x0178,\n    // Ÿ\n    0x1076: 0x215b,\n    // ⅛\n    0x1077: 0x215c,\n    // ⅜\n    0x1078: 0x215d,\n    // ⅝\n    0x1079: 0x215e,\n    // ⅞\n    0x107a: 0x23d0,\n    // ⏐\n    0x107b: 0x23a4,\n    // ⎤\n    0x107c: 0x23a3,\n    // ⎣\n    0x107d: 0x23af,\n    // ⎯\n    0x107e: 0x23a6,\n    // ⎦\n    0x107f: 0x23a1,\n    // ⎡\n    0x10a0: 0x3138 // ㄸ (CC char)\n  };\n  var get708CharFromCode = function (code) {\n    var newCode = CHARACTER_TRANSLATION_708[code] || code;\n    if (code & 0x1000 && code === newCode) {\n      // Invalid extended code\n      return '';\n    }\n    return String.fromCharCode(newCode);\n  };\n  var within708TextBlock = function (b) {\n    return 0x20 <= b && b <= 0x7f || 0xa0 <= b && b <= 0xff;\n  };\n  var Cea708Window = function (windowNum) {\n    this.windowNum = windowNum;\n    this.reset();\n  };\n  Cea708Window.prototype.reset = function () {\n    this.clearText();\n    this.pendingNewLine = false;\n    this.winAttr = {};\n    this.penAttr = {};\n    this.penLoc = {};\n    this.penColor = {}; // These default values are arbitrary,\n    // defineWindow will usually override them\n\n    this.visible = 0;\n    this.rowLock = 0;\n    this.columnLock = 0;\n    this.priority = 0;\n    this.relativePositioning = 0;\n    this.anchorVertical = 0;\n    this.anchorHorizontal = 0;\n    this.anchorPoint = 0;\n    this.rowCount = 1;\n    this.virtualRowCount = this.rowCount + 1;\n    this.columnCount = 41;\n    this.windowStyle = 0;\n    this.penStyle = 0;\n  };\n  Cea708Window.prototype.getText = function () {\n    return this.rows.join('\\n');\n  };\n  Cea708Window.prototype.clearText = function () {\n    this.rows = [''];\n    this.rowIdx = 0;\n  };\n  Cea708Window.prototype.newLine = function (pts) {\n    if (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow === 'function') {\n      this.beforeRowOverflow(pts);\n    }\n    if (this.rows.length > 0) {\n      this.rows.push('');\n      this.rowIdx++;\n    } // Show all virtual rows since there's no visible scrolling\n\n    while (this.rows.length > this.virtualRowCount) {\n      this.rows.shift();\n      this.rowIdx--;\n    }\n  };\n  Cea708Window.prototype.isEmpty = function () {\n    if (this.rows.length === 0) {\n      return true;\n    } else if (this.rows.length === 1) {\n      return this.rows[0] === '';\n    }\n    return false;\n  };\n  Cea708Window.prototype.addText = function (text) {\n    this.rows[this.rowIdx] += text;\n  };\n  Cea708Window.prototype.backspace = function () {\n    if (!this.isEmpty()) {\n      var row = this.rows[this.rowIdx];\n      this.rows[this.rowIdx] = row.substr(0, row.length - 1);\n    }\n  };\n  var Cea708Service = function (serviceNum, encoding, stream) {\n    this.serviceNum = serviceNum;\n    this.text = '';\n    this.currentWindow = new Cea708Window(-1);\n    this.windows = [];\n    this.stream = stream; // Try to setup a TextDecoder if an `encoding` value was provided\n\n    if (typeof encoding === 'string') {\n      this.createTextDecoder(encoding);\n    }\n  };\n  /**\n   * Initialize service windows\n   * Must be run before service use\n   *\n   * @param  {Integer}  pts               PTS value\n   * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window\n   */\n\n  Cea708Service.prototype.init = function (pts, beforeRowOverflow) {\n    this.startPts = pts;\n    for (var win = 0; win < 8; win++) {\n      this.windows[win] = new Cea708Window(win);\n      if (typeof beforeRowOverflow === 'function') {\n        this.windows[win].beforeRowOverflow = beforeRowOverflow;\n      }\n    }\n  };\n  /**\n   * Set current window of service to be affected by commands\n   *\n   * @param  {Integer} windowNum Window number\n   */\n\n  Cea708Service.prototype.setCurrentWindow = function (windowNum) {\n    this.currentWindow = this.windows[windowNum];\n  };\n  /**\n   * Try to create a TextDecoder if it is natively supported\n   */\n\n  Cea708Service.prototype.createTextDecoder = function (encoding) {\n    if (typeof TextDecoder === 'undefined') {\n      this.stream.trigger('log', {\n        level: 'warn',\n        message: 'The `encoding` option is unsupported without TextDecoder support'\n      });\n    } else {\n      try {\n        this.textDecoder_ = new TextDecoder(encoding);\n      } catch (error) {\n        this.stream.trigger('log', {\n          level: 'warn',\n          message: 'TextDecoder could not be created with ' + encoding + ' encoding. ' + error\n        });\n      }\n    }\n  };\n  var Cea708Stream = function (options) {\n    options = options || {};\n    Cea708Stream.prototype.init.call(this);\n    var self = this;\n    var captionServices = options.captionServices || {};\n    var captionServiceEncodings = {};\n    var serviceProps; // Get service encodings from captionServices option block\n\n    Object.keys(captionServices).forEach(serviceName => {\n      serviceProps = captionServices[serviceName];\n      if (/^SERVICE/.test(serviceName)) {\n        captionServiceEncodings[serviceName] = serviceProps.encoding;\n      }\n    });\n    this.serviceEncodings = captionServiceEncodings;\n    this.current708Packet = null;\n    this.services = {};\n    this.push = function (packet) {\n      if (packet.type === 3) {\n        // 708 packet start\n        self.new708Packet();\n        self.add708Bytes(packet);\n      } else {\n        if (self.current708Packet === null) {\n          // This should only happen at the start of a file if there's no packet start.\n          self.new708Packet();\n        }\n        self.add708Bytes(packet);\n      }\n    };\n  };\n  Cea708Stream.prototype = new Stream$7();\n  /**\n   * Push current 708 packet, create new 708 packet.\n   */\n\n  Cea708Stream.prototype.new708Packet = function () {\n    if (this.current708Packet !== null) {\n      this.push708Packet();\n    }\n    this.current708Packet = {\n      data: [],\n      ptsVals: []\n    };\n  };\n  /**\n   * Add pts and both bytes from packet into current 708 packet.\n   */\n\n  Cea708Stream.prototype.add708Bytes = function (packet) {\n    var data = packet.ccData;\n    var byte0 = data >>> 8;\n    var byte1 = data & 0xff; // I would just keep a list of packets instead of bytes, but it isn't clear in the spec\n    // that service blocks will always line up with byte pairs.\n\n    this.current708Packet.ptsVals.push(packet.pts);\n    this.current708Packet.data.push(byte0);\n    this.current708Packet.data.push(byte1);\n  };\n  /**\n   * Parse completed 708 packet into service blocks and push each service block.\n   */\n\n  Cea708Stream.prototype.push708Packet = function () {\n    var packet708 = this.current708Packet;\n    var packetData = packet708.data;\n    var serviceNum = null;\n    var blockSize = null;\n    var i = 0;\n    var b = packetData[i++];\n    packet708.seq = b >> 6;\n    packet708.sizeCode = b & 0x3f; // 0b00111111;\n\n    for (; i < packetData.length; i++) {\n      b = packetData[i++];\n      serviceNum = b >> 5;\n      blockSize = b & 0x1f; // 0b00011111\n\n      if (serviceNum === 7 && blockSize > 0) {\n        // Extended service num\n        b = packetData[i++];\n        serviceNum = b;\n      }\n      this.pushServiceBlock(serviceNum, i, blockSize);\n      if (blockSize > 0) {\n        i += blockSize - 1;\n      }\n    }\n  };\n  /**\n   * Parse service block, execute commands, read text.\n   *\n   * Note: While many of these commands serve important purposes,\n   * many others just parse out the parameters or attributes, but\n   * nothing is done with them because this is not a full and complete\n   * implementation of the entire 708 spec.\n   *\n   * @param  {Integer} serviceNum Service number\n   * @param  {Integer} start      Start index of the 708 packet data\n   * @param  {Integer} size       Block size\n   */\n\n  Cea708Stream.prototype.pushServiceBlock = function (serviceNum, start, size) {\n    var b;\n    var i = start;\n    var packetData = this.current708Packet.data;\n    var service = this.services[serviceNum];\n    if (!service) {\n      service = this.initService(serviceNum, i);\n    }\n    for (; i < start + size && i < packetData.length; i++) {\n      b = packetData[i];\n      if (within708TextBlock(b)) {\n        i = this.handleText(i, service);\n      } else if (b === 0x18) {\n        i = this.multiByteCharacter(i, service);\n      } else if (b === 0x10) {\n        i = this.extendedCommands(i, service);\n      } else if (0x80 <= b && b <= 0x87) {\n        i = this.setCurrentWindow(i, service);\n      } else if (0x98 <= b && b <= 0x9f) {\n        i = this.defineWindow(i, service);\n      } else if (b === 0x88) {\n        i = this.clearWindows(i, service);\n      } else if (b === 0x8c) {\n        i = this.deleteWindows(i, service);\n      } else if (b === 0x89) {\n        i = this.displayWindows(i, service);\n      } else if (b === 0x8a) {\n        i = this.hideWindows(i, service);\n      } else if (b === 0x8b) {\n        i = this.toggleWindows(i, service);\n      } else if (b === 0x97) {\n        i = this.setWindowAttributes(i, service);\n      } else if (b === 0x90) {\n        i = this.setPenAttributes(i, service);\n      } else if (b === 0x91) {\n        i = this.setPenColor(i, service);\n      } else if (b === 0x92) {\n        i = this.setPenLocation(i, service);\n      } else if (b === 0x8f) {\n        service = this.reset(i, service);\n      } else if (b === 0x08) {\n        // BS: Backspace\n        service.currentWindow.backspace();\n      } else if (b === 0x0c) {\n        // FF: Form feed\n        service.currentWindow.clearText();\n      } else if (b === 0x0d) {\n        // CR: Carriage return\n        service.currentWindow.pendingNewLine = true;\n      } else if (b === 0x0e) {\n        // HCR: Horizontal carriage return\n        service.currentWindow.clearText();\n      } else if (b === 0x8d) {\n        // DLY: Delay, nothing to do\n        i++;\n      } else ;\n    }\n  };\n  /**\n   * Execute an extended command\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.extendedCommands = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    if (within708TextBlock(b)) {\n      i = this.handleText(i, service, {\n        isExtended: true\n      });\n    }\n    return i;\n  };\n  /**\n   * Get PTS value of a given byte index\n   *\n   * @param  {Integer} byteIndex  Index of the byte\n   * @return {Integer}            PTS\n   */\n\n  Cea708Stream.prototype.getPts = function (byteIndex) {\n    // There's 1 pts value per 2 bytes\n    return this.current708Packet.ptsVals[Math.floor(byteIndex / 2)];\n  };\n  /**\n   * Initializes a service\n   *\n   * @param  {Integer} serviceNum Service number\n   * @return {Service}            Initialized service object\n   */\n\n  Cea708Stream.prototype.initService = function (serviceNum, i) {\n    var serviceName = 'SERVICE' + serviceNum;\n    var self = this;\n    var serviceName;\n    var encoding;\n    if (serviceName in this.serviceEncodings) {\n      encoding = this.serviceEncodings[serviceName];\n    }\n    this.services[serviceNum] = new Cea708Service(serviceNum, encoding, self);\n    this.services[serviceNum].init(this.getPts(i), function (pts) {\n      self.flushDisplayed(pts, self.services[serviceNum]);\n    });\n    return this.services[serviceNum];\n  };\n  /**\n   * Execute text writing to current window\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.handleText = function (i, service, options) {\n    var isExtended = options && options.isExtended;\n    var isMultiByte = options && options.isMultiByte;\n    var packetData = this.current708Packet.data;\n    var extended = isExtended ? 0x1000 : 0x0000;\n    var currentByte = packetData[i];\n    var nextByte = packetData[i + 1];\n    var win = service.currentWindow;\n    var char;\n    var charCodeArray; // Converts an array of bytes to a unicode hex string.\n\n    function toHexString(byteArray) {\n      return byteArray.map(byte => {\n        return ('0' + (byte & 0xFF).toString(16)).slice(-2);\n      }).join('');\n    }\n    if (isMultiByte) {\n      charCodeArray = [currentByte, nextByte];\n      i++;\n    } else {\n      charCodeArray = [currentByte];\n    } // Use the TextDecoder if one was created for this service\n\n    if (service.textDecoder_ && !isExtended) {\n      char = service.textDecoder_.decode(new Uint8Array(charCodeArray));\n    } else {\n      // We assume any multi-byte char without a decoder is unicode.\n      if (isMultiByte) {\n        const unicode = toHexString(charCodeArray); // Takes a unicode hex string and creates a single character.\n\n        char = String.fromCharCode(parseInt(unicode, 16));\n      } else {\n        char = get708CharFromCode(extended | currentByte);\n      }\n    }\n    if (win.pendingNewLine && !win.isEmpty()) {\n      win.newLine(this.getPts(i));\n    }\n    win.pendingNewLine = false;\n    win.addText(char);\n    return i;\n  };\n  /**\n   * Handle decoding of multibyte character\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.multiByteCharacter = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var firstByte = packetData[i + 1];\n    var secondByte = packetData[i + 2];\n    if (within708TextBlock(firstByte) && within708TextBlock(secondByte)) {\n      i = this.handleText(++i, service, {\n        isMultiByte: true\n      });\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the CW# command.\n   *\n   * Set the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setCurrentWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    return i;\n  };\n  /**\n   * Parse and execute the DF# command.\n   *\n   * Define a window and set it as the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.defineWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    var win = service.currentWindow;\n    b = packetData[++i];\n    win.visible = (b & 0x20) >> 5; // v\n\n    win.rowLock = (b & 0x10) >> 4; // rl\n\n    win.columnLock = (b & 0x08) >> 3; // cl\n\n    win.priority = b & 0x07; // p\n\n    b = packetData[++i];\n    win.relativePositioning = (b & 0x80) >> 7; // rp\n\n    win.anchorVertical = b & 0x7f; // av\n\n    b = packetData[++i];\n    win.anchorHorizontal = b; // ah\n\n    b = packetData[++i];\n    win.anchorPoint = (b & 0xf0) >> 4; // ap\n\n    win.rowCount = b & 0x0f; // rc\n\n    b = packetData[++i];\n    win.columnCount = b & 0x3f; // cc\n\n    b = packetData[++i];\n    win.windowStyle = (b & 0x38) >> 3; // ws\n\n    win.penStyle = b & 0x07; // ps\n    // The spec says there are (rowCount+1) \"virtual rows\"\n\n    win.virtualRowCount = win.rowCount + 1;\n    return i;\n  };\n  /**\n   * Parse and execute the SWA command.\n   *\n   * Set attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setWindowAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var winAttr = service.currentWindow.winAttr;\n    b = packetData[++i];\n    winAttr.fillOpacity = (b & 0xc0) >> 6; // fo\n\n    winAttr.fillRed = (b & 0x30) >> 4; // fr\n\n    winAttr.fillGreen = (b & 0x0c) >> 2; // fg\n\n    winAttr.fillBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    winAttr.borderType = (b & 0xc0) >> 6; // bt\n\n    winAttr.borderRed = (b & 0x30) >> 4; // br\n\n    winAttr.borderGreen = (b & 0x0c) >> 2; // bg\n\n    winAttr.borderBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    winAttr.borderType += (b & 0x80) >> 5; // bt\n\n    winAttr.wordWrap = (b & 0x40) >> 6; // ww\n\n    winAttr.printDirection = (b & 0x30) >> 4; // pd\n\n    winAttr.scrollDirection = (b & 0x0c) >> 2; // sd\n\n    winAttr.justify = b & 0x03; // j\n\n    b = packetData[++i];\n    winAttr.effectSpeed = (b & 0xf0) >> 4; // es\n\n    winAttr.effectDirection = (b & 0x0c) >> 2; // ed\n\n    winAttr.displayEffect = b & 0x03; // de\n\n    return i;\n  };\n  /**\n   * Gather text from all displayed windows and push a caption to output.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   */\n\n  Cea708Stream.prototype.flushDisplayed = function (pts, service) {\n    var displayedText = []; // TODO: Positioning not supported, displaying multiple windows will not necessarily\n    // display text in the correct order, but sample files so far have not shown any issue.\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (service.windows[winId].visible && !service.windows[winId].isEmpty()) {\n        displayedText.push(service.windows[winId].getText());\n      }\n    }\n    service.endPts = pts;\n    service.text = displayedText.join('\\n\\n');\n    this.pushCaption(service);\n    service.startPts = pts;\n  };\n  /**\n   * Push a caption to output if the caption contains text.\n   *\n   * @param  {Service} service  The service object to be affected\n   */\n\n  Cea708Stream.prototype.pushCaption = function (service) {\n    if (service.text !== '') {\n      this.trigger('data', {\n        startPts: service.startPts,\n        endPts: service.endPts,\n        text: service.text,\n        stream: 'cc708_' + service.serviceNum\n      });\n      service.text = '';\n      service.startPts = service.endPts;\n    }\n  };\n  /**\n   * Parse and execute the DSW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.displayWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 1;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the HDW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.hideWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 0;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the TGW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.toggleWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible ^= 1;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the CLW command.\n   *\n   * Clear text of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.clearWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].clearText();\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the DLW command.\n   *\n   * Re-initialize windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.deleteWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].reset();\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the SPA command.\n   *\n   * Set pen attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penAttr = service.currentWindow.penAttr;\n    b = packetData[++i];\n    penAttr.textTag = (b & 0xf0) >> 4; // tt\n\n    penAttr.offset = (b & 0x0c) >> 2; // o\n\n    penAttr.penSize = b & 0x03; // s\n\n    b = packetData[++i];\n    penAttr.italics = (b & 0x80) >> 7; // i\n\n    penAttr.underline = (b & 0x40) >> 6; // u\n\n    penAttr.edgeType = (b & 0x38) >> 3; // et\n\n    penAttr.fontStyle = b & 0x07; // fs\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPC command.\n   *\n   * Set pen color of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenColor = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penColor = service.currentWindow.penColor;\n    b = packetData[++i];\n    penColor.fgOpacity = (b & 0xc0) >> 6; // fo\n\n    penColor.fgRed = (b & 0x30) >> 4; // fr\n\n    penColor.fgGreen = (b & 0x0c) >> 2; // fg\n\n    penColor.fgBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    penColor.bgOpacity = (b & 0xc0) >> 6; // bo\n\n    penColor.bgRed = (b & 0x30) >> 4; // br\n\n    penColor.bgGreen = (b & 0x0c) >> 2; // bg\n\n    penColor.bgBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    penColor.edgeRed = (b & 0x30) >> 4; // er\n\n    penColor.edgeGreen = (b & 0x0c) >> 2; // eg\n\n    penColor.edgeBlue = b & 0x03; // eb\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPL command.\n   *\n   * Set pen location of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenLocation = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penLoc = service.currentWindow.penLoc; // Positioning isn't really supported at the moment, so this essentially just inserts a linebreak\n\n    service.currentWindow.pendingNewLine = true;\n    b = packetData[++i];\n    penLoc.row = b & 0x0f; // r\n\n    b = packetData[++i];\n    penLoc.column = b & 0x3f; // c\n\n    return i;\n  };\n  /**\n   * Execute the RST command.\n   *\n   * Reset service to a clean slate. Re-initialize.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Service}          Re-initialized service\n   */\n\n  Cea708Stream.prototype.reset = function (i, service) {\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    return this.initService(service.serviceNum, i);\n  }; // This hash maps non-ASCII, special, and extended character codes to their\n  // proper Unicode equivalent. The first keys that are only a single byte\n  // are the non-standard ASCII characters, which simply map the CEA608 byte\n  // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n  // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n  // can be performed regardless of the field and data channel on which the\n  // character code was received.\n\n  var CHARACTER_TRANSLATION = {\n    0x2a: 0xe1,\n    // á\n    0x5c: 0xe9,\n    // é\n    0x5e: 0xed,\n    // í\n    0x5f: 0xf3,\n    // ó\n    0x60: 0xfa,\n    // ú\n    0x7b: 0xe7,\n    // ç\n    0x7c: 0xf7,\n    // ÷\n    0x7d: 0xd1,\n    // Ñ\n    0x7e: 0xf1,\n    // ñ\n    0x7f: 0x2588,\n    // █\n    0x0130: 0xae,\n    // ®\n    0x0131: 0xb0,\n    // °\n    0x0132: 0xbd,\n    // ½\n    0x0133: 0xbf,\n    // ¿\n    0x0134: 0x2122,\n    // ™\n    0x0135: 0xa2,\n    // ¢\n    0x0136: 0xa3,\n    // £\n    0x0137: 0x266a,\n    // ♪\n    0x0138: 0xe0,\n    // à\n    0x0139: 0xa0,\n    //\n    0x013a: 0xe8,\n    // è\n    0x013b: 0xe2,\n    // â\n    0x013c: 0xea,\n    // ê\n    0x013d: 0xee,\n    // î\n    0x013e: 0xf4,\n    // ô\n    0x013f: 0xfb,\n    // û\n    0x0220: 0xc1,\n    // Á\n    0x0221: 0xc9,\n    // É\n    0x0222: 0xd3,\n    // Ó\n    0x0223: 0xda,\n    // Ú\n    0x0224: 0xdc,\n    // Ü\n    0x0225: 0xfc,\n    // ü\n    0x0226: 0x2018,\n    // ‘\n    0x0227: 0xa1,\n    // ¡\n    0x0228: 0x2a,\n    // *\n    0x0229: 0x27,\n    // '\n    0x022a: 0x2014,\n    // —\n    0x022b: 0xa9,\n    // ©\n    0x022c: 0x2120,\n    // ℠\n    0x022d: 0x2022,\n    // •\n    0x022e: 0x201c,\n    // “\n    0x022f: 0x201d,\n    // ”\n    0x0230: 0xc0,\n    // À\n    0x0231: 0xc2,\n    // Â\n    0x0232: 0xc7,\n    // Ç\n    0x0233: 0xc8,\n    // È\n    0x0234: 0xca,\n    // Ê\n    0x0235: 0xcb,\n    // Ë\n    0x0236: 0xeb,\n    // ë\n    0x0237: 0xce,\n    // Î\n    0x0238: 0xcf,\n    // Ï\n    0x0239: 0xef,\n    // ï\n    0x023a: 0xd4,\n    // Ô\n    0x023b: 0xd9,\n    // Ù\n    0x023c: 0xf9,\n    // ù\n    0x023d: 0xdb,\n    // Û\n    0x023e: 0xab,\n    // «\n    0x023f: 0xbb,\n    // »\n    0x0320: 0xc3,\n    // Ã\n    0x0321: 0xe3,\n    // ã\n    0x0322: 0xcd,\n    // Í\n    0x0323: 0xcc,\n    // Ì\n    0x0324: 0xec,\n    // ì\n    0x0325: 0xd2,\n    // Ò\n    0x0326: 0xf2,\n    // ò\n    0x0327: 0xd5,\n    // Õ\n    0x0328: 0xf5,\n    // õ\n    0x0329: 0x7b,\n    // {\n    0x032a: 0x7d,\n    // }\n    0x032b: 0x5c,\n    // \\\n    0x032c: 0x5e,\n    // ^\n    0x032d: 0x5f,\n    // _\n    0x032e: 0x7c,\n    // |\n    0x032f: 0x7e,\n    // ~\n    0x0330: 0xc4,\n    // Ä\n    0x0331: 0xe4,\n    // ä\n    0x0332: 0xd6,\n    // Ö\n    0x0333: 0xf6,\n    // ö\n    0x0334: 0xdf,\n    // ß\n    0x0335: 0xa5,\n    // ¥\n    0x0336: 0xa4,\n    // ¤\n    0x0337: 0x2502,\n    // │\n    0x0338: 0xc5,\n    // Å\n    0x0339: 0xe5,\n    // å\n    0x033a: 0xd8,\n    // Ø\n    0x033b: 0xf8,\n    // ø\n    0x033c: 0x250c,\n    // ┌\n    0x033d: 0x2510,\n    // ┐\n    0x033e: 0x2514,\n    // └\n    0x033f: 0x2518 // ┘\n  };\n  var getCharFromCode = function (code) {\n    if (code === null) {\n      return '';\n    }\n    code = CHARACTER_TRANSLATION[code] || code;\n    return String.fromCharCode(code);\n  }; // the index of the last row in a CEA-608 display buffer\n\n  var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n  // getting it through bit logic.\n\n  var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n  // cells. The \"bottom\" row is the last element in the outer array.\n  // We keep track of positioning information as we go by storing the\n  // number of indentations and the tab offset in this buffer.\n\n  var createDisplayBuffer = function () {\n    var result = [],\n      i = BOTTOM_ROW + 1;\n    while (i--) {\n      result.push({\n        text: '',\n        indent: 0,\n        offset: 0\n      });\n    }\n    return result;\n  };\n  var Cea608Stream = function (field, dataChannel) {\n    Cea608Stream.prototype.init.call(this);\n    this.field_ = field || 0;\n    this.dataChannel_ = dataChannel || 0;\n    this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n    this.setConstants();\n    this.reset();\n    this.push = function (packet) {\n      var data, swap, char0, char1, text; // remove the parity bits\n\n      data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n      if (data === this.lastControlCode_) {\n        this.lastControlCode_ = null;\n        return;\n      } // Store control codes\n\n      if ((data & 0xf000) === 0x1000) {\n        this.lastControlCode_ = data;\n      } else if (data !== this.PADDING_) {\n        this.lastControlCode_ = null;\n      }\n      char0 = data >>> 8;\n      char1 = data & 0xff;\n      if (data === this.PADDING_) {\n        return;\n      } else if (data === this.RESUME_CAPTION_LOADING_) {\n        this.mode_ = 'popOn';\n      } else if (data === this.END_OF_CAPTION_) {\n        // If an EOC is received while in paint-on mode, the displayed caption\n        // text should be swapped to non-displayed memory as if it was a pop-on\n        // caption. Because of that, we should explicitly switch back to pop-on\n        // mode\n        this.mode_ = 'popOn';\n        this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n        this.flushDisplayed(packet.pts); // flip memory\n\n        swap = this.displayed_;\n        this.displayed_ = this.nonDisplayed_;\n        this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n        this.startPts_ = packet.pts;\n      } else if (data === this.ROLL_UP_2_ROWS_) {\n        this.rollUpRows_ = 2;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_3_ROWS_) {\n        this.rollUpRows_ = 3;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_4_ROWS_) {\n        this.rollUpRows_ = 4;\n        this.setRollUp(packet.pts);\n      } else if (data === this.CARRIAGE_RETURN_) {\n        this.clearFormatting(packet.pts);\n        this.flushDisplayed(packet.pts);\n        this.shiftRowsUp_();\n        this.startPts_ = packet.pts;\n      } else if (data === this.BACKSPACE_) {\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_].text = this.nonDisplayed_[this.row_].text.slice(0, -1);\n        } else {\n          this.displayed_[this.row_].text = this.displayed_[this.row_].text.slice(0, -1);\n        }\n      } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n        this.nonDisplayed_ = createDisplayBuffer();\n      } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n        if (this.mode_ !== 'paintOn') {\n          // NOTE: This should be removed when proper caption positioning is\n          // implemented\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        }\n        this.mode_ = 'paintOn';\n        this.startPts_ = packet.pts; // Append special characters to caption text\n      } else if (this.isSpecialCharacter(char0, char1)) {\n        // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Append extended characters to caption text\n      } else if (this.isExtCharacter(char0, char1)) {\n        // Extended characters always follow their \"non-extended\" equivalents.\n        // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n        // decoders are supposed to drop the \"è\", while compliant decoders\n        // backspace the \"e\" and insert \"è\".\n        // Delete the previous character\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_].text = this.nonDisplayed_[this.row_].text.slice(0, -1);\n        } else {\n          this.displayed_[this.row_].text = this.displayed_[this.row_].text.slice(0, -1);\n        } // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Process mid-row codes\n      } else if (this.isMidRowCode(char0, char1)) {\n        // Attributes are not additive, so clear all formatting\n        this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n        // should be replaced with spaces, so add one now\n\n        this[this.mode_](packet.pts, ' ');\n        this.column_++;\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n        if ((char1 & 0x1) === 0x1) {\n          this.addFormatting(packet.pts, ['u']);\n        } // Detect offset control codes and adjust cursor\n      } else if (this.isOffsetControlCode(char0, char1)) {\n        // Cursor position is set by indent PAC (see below) in 4-column\n        // increments, with an additional offset code of 1-3 to reach any\n        // of the 32 columns specified by CEA-608. So all we need to do\n        // here is increment the column cursor by the given offset.\n        const offset = char1 & 0x03; // For an offest value 1-3, set the offset for that caption\n        // in the non-displayed array.\n\n        this.nonDisplayed_[this.row_].offset = offset;\n        this.column_ += offset; // Detect PACs (Preamble Address Codes)\n      } else if (this.isPAC(char0, char1)) {\n        // There's no logic for PAC -> row mapping, so we have to just\n        // find the row code in an array and use its index :(\n        var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n        if (this.mode_ === 'rollUp') {\n          // This implies that the base row is incorrectly set.\n          // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n          // of roll-up rows set.\n          if (row - this.rollUpRows_ + 1 < 0) {\n            row = this.rollUpRows_ - 1;\n          }\n          this.setRollUp(packet.pts, row);\n        } // Ensure the row is between 0 and 14, otherwise use the most\n        // recent or default row.\n\n        if (row !== this.row_ && row >= 0 && row <= 14) {\n          // formatting is only persistent for current row\n          this.clearFormatting(packet.pts);\n          this.row_ = row;\n        } // All PACs can apply underline, so detect and apply\n        // (All odd-numbered second bytes set underline)\n\n        if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n          this.addFormatting(packet.pts, ['u']);\n        }\n        if ((data & 0x10) === 0x10) {\n          // We've got an indent level code. Each successive even number\n          // increments the column cursor by 4, so we can get the desired\n          // column position by bit-shifting to the right (to get n/2)\n          // and multiplying by 4.\n          const indentations = (data & 0xe) >> 1;\n          this.column_ = indentations * 4; // add to the number of indentations for positioning\n\n          this.nonDisplayed_[this.row_].indent += indentations;\n        }\n        if (this.isColorPAC(char1)) {\n          // it's a color code, though we only support white, which\n          // can be either normal or italicized. white italics can be\n          // either 0x4e or 0x6e depending on the row, so we just\n          // bitwise-and with 0xe to see if italics should be turned on\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n        } // We have a normal character in char0, and possibly one in char1\n      } else if (this.isNormalChar(char0)) {\n        if (char1 === 0x00) {\n          char1 = null;\n        }\n        text = getCharFromCode(char0);\n        text += getCharFromCode(char1);\n        this[this.mode_](packet.pts, text);\n        this.column_ += text.length;\n      } // finish data processing\n    };\n  };\n  Cea608Stream.prototype = new Stream$7(); // Trigger a cue point that captures the current state of the\n  // display buffer\n\n  Cea608Stream.prototype.flushDisplayed = function (pts) {\n    const logWarning = index => {\n      this.trigger('log', {\n        level: 'warn',\n        message: 'Skipping a malformed 608 caption at index ' + index + '.'\n      });\n    };\n    const content = [];\n    this.displayed_.forEach((row, i) => {\n      if (row && row.text && row.text.length) {\n        try {\n          // remove spaces from the start and end of the string\n          row.text = row.text.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          logWarning(i);\n        } // See the below link for more details on the following fields:\n        // https://dvcs.w3.org/hg/text-tracks/raw-file/default/608toVTT/608toVTT.html#positioning-in-cea-608\n\n        if (row.text.length) {\n          content.push({\n            // The text to be displayed in the caption from this specific row, with whitespace removed.\n            text: row.text,\n            // Value between 1 and 15 representing the PAC row used to calculate line height.\n            line: i + 1,\n            // A number representing the indent position by percentage (CEA-608 PAC indent code).\n            // The value will be a number between 10 and 80. Offset is used to add an aditional\n            // value to the position if necessary.\n            position: 10 + Math.min(70, row.indent * 10) + row.offset * 2.5\n          });\n        }\n      } else if (row === undefined || row === null) {\n        logWarning(i);\n      }\n    });\n    if (content.length) {\n      this.trigger('data', {\n        startPts: this.startPts_,\n        endPts: pts,\n        content,\n        stream: this.name_\n      });\n    }\n  };\n  /**\n   * Zero out the data, used for startup and on seek\n   */\n\n  Cea608Stream.prototype.reset = function () {\n    this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n    // actually display captions. If a caption is shifted to a row\n    // with a lower index than this, it is cleared from the display\n    // buffer\n\n    this.topRow_ = 0;\n    this.startPts_ = 0;\n    this.displayed_ = createDisplayBuffer();\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n    this.column_ = 0;\n    this.row_ = BOTTOM_ROW;\n    this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n    this.formatting_ = [];\n  };\n  /**\n   * Sets up control code and related constants for this instance\n   */\n\n  Cea608Stream.prototype.setConstants = function () {\n    // The following attributes have these uses:\n    // ext_ :    char0 for mid-row codes, and the base for extended\n    //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n    //           extended codes)\n    // control_: char0 for control codes, except byte-shifted to the\n    //           left so that we can do this.control_ | CONTROL_CODE\n    // offset_:  char0 for tab offset codes\n    //\n    // It's also worth noting that control codes, and _only_ control codes,\n    // differ between field 1 and field2. Field 2 control codes are always\n    // their field 1 value plus 1. That's why there's the \"| field\" on the\n    // control value.\n    if (this.dataChannel_ === 0) {\n      this.BASE_ = 0x10;\n      this.EXT_ = 0x11;\n      this.CONTROL_ = (0x14 | this.field_) << 8;\n      this.OFFSET_ = 0x17;\n    } else if (this.dataChannel_ === 1) {\n      this.BASE_ = 0x18;\n      this.EXT_ = 0x19;\n      this.CONTROL_ = (0x1c | this.field_) << 8;\n      this.OFFSET_ = 0x1f;\n    } // Constants for the LSByte command codes recognized by Cea608Stream. This\n    // list is not exhaustive. For a more comprehensive listing and semantics see\n    // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n    // Padding\n\n    this.PADDING_ = 0x0000; // Pop-on Mode\n\n    this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n    this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n    this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n    this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n    this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n    this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n    this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n    this.BACKSPACE_ = this.CONTROL_ | 0x21;\n    this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n    this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n  };\n  /**\n   * Detects if the 2-byte packet data is a special character\n   *\n   * Special characters have a second byte in the range 0x30 to 0x3f,\n   * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an special character\n   */\n\n  Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet data is an extended character\n   *\n   * Extended characters have a second byte in the range 0x20 to 0x3f,\n   * with the first byte being 0x12 or 0x13 (for data channel 1) or\n   * 0x1a or 0x1b (for data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an extended character\n   */\n\n  Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n    return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet is a mid-row code\n   *\n   * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n   * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n   * channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a mid-row code\n   */\n\n  Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n  };\n  /**\n   * Detects if the 2-byte packet is an offset control code\n   *\n   * Offset control codes have a second byte in the range 0x21 to 0x23,\n   * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an offset control code\n   */\n\n  Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n    return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n  };\n  /**\n   * Detects if the 2-byte packet is a Preamble Address Code\n   *\n   * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n   * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n   * range 0x40 to 0x7f.\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a PAC\n   */\n\n  Cea608Stream.prototype.isPAC = function (char0, char1) {\n    return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a packet's second byte is in the range of a PAC color code\n   *\n   * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n   * 0x60 to 0x6f.\n   *\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the byte is a color PAC\n   */\n\n  Cea608Stream.prototype.isColorPAC = function (char1) {\n    return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a single byte is in the range of a normal character\n   *\n   * Normal text bytes are in the range 0x20 to 0x7f.\n   *\n   * @param  {Integer} char  The byte\n   * @return {Boolean}       Whether the byte is a normal character\n   */\n\n  Cea608Stream.prototype.isNormalChar = function (char) {\n    return char >= 0x20 && char <= 0x7f;\n  };\n  /**\n   * Configures roll-up\n   *\n   * @param  {Integer} pts         Current PTS\n   * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n   *                               a new position\n   */\n\n  Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n    // Reset the base row to the bottom row when switching modes\n    if (this.mode_ !== 'rollUp') {\n      this.row_ = BOTTOM_ROW;\n      this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n      this.flushDisplayed(pts);\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.displayed_ = createDisplayBuffer();\n    }\n    if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n      // move currently displayed captions (up or down) to the new base row\n      for (var i = 0; i < this.rollUpRows_; i++) {\n        this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n        this.displayed_[this.row_ - i] = {\n          text: '',\n          indent: 0,\n          offset: 0\n        };\n      }\n    }\n    if (newBaseRow === undefined) {\n      newBaseRow = this.row_;\n    }\n    this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n  }; // Adds the opening HTML tag for the passed character to the caption text,\n  // and keeps track of it for later closing\n\n  Cea608Stream.prototype.addFormatting = function (pts, format) {\n    this.formatting_ = this.formatting_.concat(format);\n    var text = format.reduce(function (text, format) {\n      return text + '<' + format + '>';\n    }, '');\n    this[this.mode_](pts, text);\n  }; // Adds HTML closing tags for current formatting to caption text and\n  // clears remembered formatting\n\n  Cea608Stream.prototype.clearFormatting = function (pts) {\n    if (!this.formatting_.length) {\n      return;\n    }\n    var text = this.formatting_.reverse().reduce(function (text, format) {\n      return text + '</' + format + '>';\n    }, '');\n    this.formatting_ = [];\n    this[this.mode_](pts, text);\n  }; // Mode Implementations\n\n  Cea608Stream.prototype.popOn = function (pts, text) {\n    var baseRow = this.nonDisplayed_[this.row_].text; // buffer characters\n\n    baseRow += text;\n    this.nonDisplayed_[this.row_].text = baseRow;\n  };\n  Cea608Stream.prototype.rollUp = function (pts, text) {\n    var baseRow = this.displayed_[this.row_].text;\n    baseRow += text;\n    this.displayed_[this.row_].text = baseRow;\n  };\n  Cea608Stream.prototype.shiftRowsUp_ = function () {\n    var i; // clear out inactive rows\n\n    for (i = 0; i < this.topRow_; i++) {\n      this.displayed_[i] = {\n        text: '',\n        indent: 0,\n        offset: 0\n      };\n    }\n    for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n      this.displayed_[i] = {\n        text: '',\n        indent: 0,\n        offset: 0\n      };\n    } // shift displayed rows up\n\n    for (i = this.topRow_; i < this.row_; i++) {\n      this.displayed_[i] = this.displayed_[i + 1];\n    } // clear out the bottom row\n\n    this.displayed_[this.row_] = {\n      text: '',\n      indent: 0,\n      offset: 0\n    };\n  };\n  Cea608Stream.prototype.paintOn = function (pts, text) {\n    var baseRow = this.displayed_[this.row_].text;\n    baseRow += text;\n    this.displayed_[this.row_].text = baseRow;\n  }; // exports\n\n  var captionStream = {\n    CaptionStream: CaptionStream$2,\n    Cea608Stream: Cea608Stream,\n    Cea708Stream: Cea708Stream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var streamTypes = {\n    H264_STREAM_TYPE: 0x1B,\n    ADTS_STREAM_TYPE: 0x0F,\n    METADATA_STREAM_TYPE: 0x15\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and corrects\n   * decode and presentation time stamps to account for a rollover\n   * of the 33 bit value.\n   */\n\n  var Stream$6 = stream;\n  var MAX_TS = 8589934592;\n  var RO_THRESH = 4294967296;\n  var TYPE_SHARED = 'shared';\n  var handleRollover$1 = function (value, reference) {\n    var direction = 1;\n    if (value > reference) {\n      // If the current timestamp value is greater than our reference timestamp and we detect a\n      // timestamp rollover, this means the roll over is happening in the opposite direction.\n      // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n      // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n      // rollover point. In loading this segment, the timestamp values will be very large,\n      // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n      // the time stamp to be `value - 2^33`.\n      direction = -1;\n    } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n    // cause an incorrect adjustment.\n\n    while (Math.abs(reference - value) > RO_THRESH) {\n      value += direction * MAX_TS;\n    }\n    return value;\n  };\n  var TimestampRolloverStream$1 = function (type) {\n    var lastDTS, referenceDTS;\n    TimestampRolloverStream$1.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n    // video and audio. We could use `undefined` here, but having a string\n    // makes debugging a little clearer.\n\n    this.type_ = type || TYPE_SHARED;\n    this.push = function (data) {\n      /**\n       * Rollover stream expects data from elementary stream.\n       * Elementary stream can push forward 2 types of data\n       * - Parsed Video/Audio/Timed-metadata PES (packetized elementary stream) packets\n       * - Tracks metadata from PMT (Program Map Table)\n       * Rollover stream expects pts/dts info to be available, since it stores lastDTS\n       * We should ignore non-PES packets since they may override lastDTS to undefined.\n       * lastDTS is important to signal the next segments\n       * about rollover from the previous segments.\n       */\n      if (data.type === 'metadata') {\n        this.trigger('data', data);\n        return;\n      } // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n      // streams will only accept data that matches their type.\n\n      if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n        return;\n      }\n      if (referenceDTS === undefined) {\n        referenceDTS = data.dts;\n      }\n      data.dts = handleRollover$1(data.dts, referenceDTS);\n      data.pts = handleRollover$1(data.pts, referenceDTS);\n      lastDTS = data.dts;\n      this.trigger('data', data);\n    };\n    this.flush = function () {\n      referenceDTS = lastDTS;\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n    this.discontinuity = function () {\n      referenceDTS = void 0;\n      lastDTS = void 0;\n    };\n    this.reset = function () {\n      this.discontinuity();\n      this.trigger('reset');\n    };\n  };\n  TimestampRolloverStream$1.prototype = new Stream$6();\n  var timestampRolloverStream = {\n    TimestampRolloverStream: TimestampRolloverStream$1,\n    handleRollover: handleRollover$1\n  }; // Once IE11 support is dropped, this function should be removed.\n\n  var typedArrayIndexOf$1 = (typedArray, element, fromIndex) => {\n    if (!typedArray) {\n      return -1;\n    }\n    var currentIndex = fromIndex;\n    for (; currentIndex < typedArray.length; currentIndex++) {\n      if (typedArray[currentIndex] === element) {\n        return currentIndex;\n      }\n    }\n    return -1;\n  };\n  var typedArray = {\n    typedArrayIndexOf: typedArrayIndexOf$1\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Tools for parsing ID3 frame data\n   * @see http://id3.org/id3v2.3.0\n   */\n\n  var typedArrayIndexOf = typedArray.typedArrayIndexOf,\n    // Frames that allow different types of text encoding contain a text\n    // encoding description byte [ID3v2.4.0 section 4.]\n    textEncodingDescriptionByte = {\n      Iso88591: 0x00,\n      // ISO-8859-1, terminated with \\0.\n      Utf16: 0x01,\n      // UTF-16 encoded Unicode BOM, terminated with \\0\\0\n      Utf16be: 0x02,\n      // UTF-16BE encoded Unicode, without BOM, terminated with \\0\\0\n      Utf8: 0x03 // UTF-8 encoded Unicode, terminated with \\0\n    },\n    // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding \n    percentEncode$1 = function (bytes, start, end) {\n      var i,\n        result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    },\n    // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function (bytes, start, end) {\n      return decodeURIComponent(percentEncode$1(bytes, start, end));\n    },\n    // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591$1 = function (bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    },\n    parseSyncSafeInteger$1 = function (data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n    frameParsers = {\n      'APIC': function (frame) {\n        var i = 1,\n          mimeTypeEndIndex,\n          descriptionEndIndex,\n          LINK_MIME_TYPE = '-->';\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        } // parsing fields [ID3v2.4.0 section 4.14.]\n\n        mimeTypeEndIndex = typedArrayIndexOf(frame.data, 0, i);\n        if (mimeTypeEndIndex < 0) {\n          // malformed frame\n          return;\n        } // parsing Mime type field (terminated with \\0)\n\n        frame.mimeType = parseIso88591$1(frame.data, i, mimeTypeEndIndex);\n        i = mimeTypeEndIndex + 1; // parsing 1-byte Picture Type field\n\n        frame.pictureType = frame.data[i];\n        i++;\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, i);\n        if (descriptionEndIndex < 0) {\n          // malformed frame\n          return;\n        } // parsing Description field (terminated with \\0)\n\n        frame.description = parseUtf8(frame.data, i, descriptionEndIndex);\n        i = descriptionEndIndex + 1;\n        if (frame.mimeType === LINK_MIME_TYPE) {\n          // parsing Picture Data field as URL (always represented as ISO-8859-1 [ID3v2.4.0 section 4.])\n          frame.url = parseIso88591$1(frame.data, i, frame.data.length);\n        } else {\n          // parsing Picture Data field as binary data\n          frame.pictureData = frame.data.subarray(i, frame.data.length);\n        }\n      },\n      'T*': function (frame) {\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        } // parse text field, do not include null terminator in the frame value\n        // frames that allow different types of encoding contain terminated text [ID3v2.4.0 section 4.]\n\n        frame.value = parseUtf8(frame.data, 1, frame.data.length).replace(/\\0*$/, ''); // text information frames supports multiple strings, stored as a terminator separated list [ID3v2.4.0 section 4.2.]\n\n        frame.values = frame.value.split('\\0');\n      },\n      'TXXX': function (frame) {\n        var descriptionEndIndex;\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n        if (descriptionEndIndex === -1) {\n          return;\n        } // parse the text fields\n\n        frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // do not include the null terminator in the tag value\n        // frames that allow different types of encoding contain terminated text\n        // [ID3v2.4.0 section 4.]\n\n        frame.value = parseUtf8(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0*$/, '');\n        frame.data = frame.value;\n      },\n      'W*': function (frame) {\n        // parse URL field; URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n        // if the value is followed by a string termination all the following information should be ignored [ID3v2.4.0 section 4.3]\n        frame.url = parseIso88591$1(frame.data, 0, frame.data.length).replace(/\\0.*$/, '');\n      },\n      'WXXX': function (frame) {\n        var descriptionEndIndex;\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n        if (descriptionEndIndex === -1) {\n          return;\n        } // parse the description and URL fields\n\n        frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n        // if the value is followed by a string termination all the following information\n        // should be ignored [ID3v2.4.0 section 4.3]\n\n        frame.url = parseIso88591$1(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0.*$/, '');\n      },\n      'PRIV': function (frame) {\n        var i;\n        for (i = 0; i < frame.data.length; i++) {\n          if (frame.data[i] === 0) {\n            // parse the description and URL fields\n            frame.owner = parseIso88591$1(frame.data, 0, i);\n            break;\n          }\n        }\n        frame.privateData = frame.data.subarray(i + 1);\n        frame.data = frame.privateData;\n      }\n    };\n  var parseId3Frames$1 = function (data) {\n    var frameSize,\n      frameHeader,\n      frameStart = 10,\n      tagSize = 0,\n      frames = []; // If we don't have enough data for a header, 10 bytes, \n    // or 'ID3' in the first 3 bytes this is not a valid ID3 tag.\n\n    if (data.length < 10 || data[0] !== 'I'.charCodeAt(0) || data[1] !== 'D'.charCodeAt(0) || data[2] !== '3'.charCodeAt(0)) {\n      return;\n    } // the frame size is transmitted as a 28-bit integer in the\n    // last four bytes of the ID3 header.\n    // The most significant bit of each byte is dropped and the\n    // results concatenated to recover the actual value.\n\n    tagSize = parseSyncSafeInteger$1(data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n    // convenient for our comparisons to include it\n\n    tagSize += 10; // check bit 6 of byte 5 for the extended header flag.\n\n    var hasExtendedHeader = data[5] & 0x40;\n    if (hasExtendedHeader) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger$1(data.subarray(10, 14));\n      tagSize -= parseSyncSafeInteger$1(data.subarray(16, 20)); // clip any padding off the end\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger$1(data.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n        break;\n      }\n      frameHeader = String.fromCharCode(data[frameStart], data[frameStart + 1], data[frameStart + 2], data[frameStart + 3]);\n      var frame = {\n        id: frameHeader,\n        data: data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id; // parse frame values\n\n      if (frameParsers[frame.id]) {\n        // use frame specific parser\n        frameParsers[frame.id](frame);\n      } else if (frame.id[0] === 'T') {\n        // use text frame generic parser\n        frameParsers['T*'](frame);\n      } else if (frame.id[0] === 'W') {\n        // use URL link frame generic parser\n        frameParsers['W*'](frame);\n      }\n      frames.push(frame);\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n    return frames;\n  };\n  var parseId3 = {\n    parseId3Frames: parseId3Frames$1,\n    parseSyncSafeInteger: parseSyncSafeInteger$1,\n    frameParsers: frameParsers\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and parses out\n   * ID3 metadata from them, if present.\n   * @see http://id3.org/id3v2.3.0\n   */\n\n  var Stream$5 = stream,\n    StreamTypes$3 = streamTypes,\n    id3 = parseId3,\n    MetadataStream;\n  MetadataStream = function (options) {\n    var settings = {\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n      // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n      // tag data that is not complete enough to be parsed\n      buffer = [],\n      // the total number of bytes currently in the buffer\n      bufferSize = 0,\n      i;\n    MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n    // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n    this.dispatchType = StreamTypes$3.METADATA_STREAM_TYPE.toString(16);\n    if (settings.descriptor) {\n      for (i = 0; i < settings.descriptor.length; i++) {\n        this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n      }\n    }\n    this.push = function (chunk) {\n      var tag, frameStart, frameSize, frame, i, frameHeader;\n      if (chunk.type !== 'timed-metadata') {\n        return;\n      } // if data_alignment_indicator is set in the PES header,\n      // we must have the start of a new ID3 tag. Assume anything\n      // remaining in the buffer was malformed and throw it out\n\n      if (chunk.dataAlignmentIndicator) {\n        bufferSize = 0;\n        buffer.length = 0;\n      } // ignore events that don't look like ID3 data\n\n      if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping unrecognized metadata packet'\n        });\n        return;\n      } // add this chunk to the data we've collected so far\n\n      buffer.push(chunk);\n      bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n      if (buffer.length === 1) {\n        // the frame size is transmitted as a 28-bit integer in the\n        // last four bytes of the ID3 header.\n        // The most significant bit of each byte is dropped and the\n        // results concatenated to recover the actual value.\n        tagSize = id3.parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n        // convenient for our comparisons to include it\n\n        tagSize += 10;\n      } // if the entire frame has not arrived, wait for more data\n\n      if (bufferSize < tagSize) {\n        return;\n      } // collect the entire frame so it can be parsed\n\n      tag = {\n        data: new Uint8Array(tagSize),\n        frames: [],\n        pts: buffer[0].pts,\n        dts: buffer[0].dts\n      };\n      for (i = 0; i < tagSize;) {\n        tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n        i += buffer[0].data.byteLength;\n        bufferSize -= buffer[0].data.byteLength;\n        buffer.shift();\n      } // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n      if (tag.data[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += id3.parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n        tagSize -= id3.parseSyncSafeInteger(tag.data.subarray(16, 20));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = id3.parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n        if (frameSize < 1) {\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Malformed ID3 frame encountered. Skipping remaining metadata parsing.'\n          }); // If the frame is malformed, don't parse any further frames but allow previous valid parsed frames\n          // to be sent along.\n\n          break;\n        }\n        frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n        frame = {\n          id: frameHeader,\n          data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n        };\n        frame.key = frame.id; // parse frame values\n\n        if (id3.frameParsers[frame.id]) {\n          // use frame specific parser\n          id3.frameParsers[frame.id](frame);\n        } else if (frame.id[0] === 'T') {\n          // use text frame generic parser\n          id3.frameParsers['T*'](frame);\n        } else if (frame.id[0] === 'W') {\n          // use URL link frame generic parser\n          id3.frameParsers['W*'](frame);\n        } // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var d = frame.data,\n            size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n        tag.frames.push(frame);\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < tagSize);\n      this.trigger('data', tag);\n    };\n  };\n  MetadataStream.prototype = new Stream$5();\n  var metadataStream = MetadataStream;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream$4 = stream,\n    CaptionStream$1 = captionStream,\n    StreamTypes$2 = streamTypes,\n    TimestampRolloverStream = timestampRolloverStream.TimestampRolloverStream; // object types\n\n  var TransportPacketStream, TransportParseStream, ElementaryStream; // constants\n\n  var MP2T_PACKET_LENGTH$1 = 188,\n    // bytes\n    SYNC_BYTE$1 = 0x47;\n  /**\n   * Splits an incoming stream of binary data into MPEG-2 Transport\n   * Stream packets.\n   */\n\n  TransportPacketStream = function () {\n    var buffer = new Uint8Array(MP2T_PACKET_LENGTH$1),\n      bytesInBuffer = 0;\n    TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n    /**\n     * Split a stream of data into M2TS packets\n    **/\n\n    this.push = function (bytes) {\n      var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH$1,\n        everything; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (bytesInBuffer) {\n        everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n        everything.set(buffer.subarray(0, bytesInBuffer));\n        everything.set(bytes, bytesInBuffer);\n        bytesInBuffer = 0;\n      } else {\n        everything = bytes;\n      } // While we have enough data for a packet\n\n      while (endIndex < everything.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (everything[startIndex] === SYNC_BYTE$1 && everything[endIndex] === SYNC_BYTE$1) {\n          // We found a packet so emit it and jump one whole packet forward in\n          // the stream\n          this.trigger('data', everything.subarray(startIndex, endIndex));\n          startIndex += MP2T_PACKET_LENGTH$1;\n          endIndex += MP2T_PACKET_LENGTH$1;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n        startIndex++;\n        endIndex++;\n      } // If there was some data left over at the end of the segment that couldn't\n      // possibly be a whole packet, keep it because it might be the start of a packet\n      // that continues in the next segment\n\n      if (startIndex < everything.byteLength) {\n        buffer.set(everything.subarray(startIndex), 0);\n        bytesInBuffer = everything.byteLength - startIndex;\n      }\n    };\n    /**\n     * Passes identified M2TS packets to the TransportParseStream to be parsed\n    **/\n\n    this.flush = function () {\n      // If the buffer contains a whole packet when we are being flushed, emit it\n      // and empty the buffer. Otherwise hold onto the data because it may be\n      // important for decoding the next segment\n      if (bytesInBuffer === MP2T_PACKET_LENGTH$1 && buffer[0] === SYNC_BYTE$1) {\n        this.trigger('data', buffer);\n        bytesInBuffer = 0;\n      }\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n    this.reset = function () {\n      bytesInBuffer = 0;\n      this.trigger('reset');\n    };\n  };\n  TransportPacketStream.prototype = new Stream$4();\n  /**\n   * Accepts an MP2T TransportPacketStream and emits data events with parsed\n   * forms of the individual transport stream packets.\n   */\n\n  TransportParseStream = function () {\n    var parsePsi, parsePat, parsePmt, self;\n    TransportParseStream.prototype.init.call(this);\n    self = this;\n    this.packetsWaitingForPmt = [];\n    this.programMapTable = undefined;\n    parsePsi = function (payload, psi) {\n      var offset = 0; // PSI packets may be split into multiple sections and those\n      // sections may be split into multiple packets. If a PSI\n      // section starts in this packet, the payload_unit_start_indicator\n      // will be true and the first byte of the payload will indicate\n      // the offset from the current position to the start of the\n      // section.\n\n      if (psi.payloadUnitStartIndicator) {\n        offset += payload[offset] + 1;\n      }\n      if (psi.type === 'pat') {\n        parsePat(payload.subarray(offset), psi);\n      } else {\n        parsePmt(payload.subarray(offset), psi);\n      }\n    };\n    parsePat = function (payload, pat) {\n      pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n      pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n      // skip the PSI header and parse the first PMT entry\n\n      self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n      pat.pmtPid = self.pmtPid;\n    };\n    /**\n     * Parse out the relevant fields of a Program Map Table (PMT).\n     * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n     * packet. The first byte in this array should be the table_id\n     * field.\n     * @param pmt {object} the object that should be decorated with\n     * fields parsed from the PMT.\n     */\n\n    parsePmt = function (payload, pmt) {\n      var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n      // take effect. We don't believe this should ever be the case\n      // for HLS but we'll ignore \"forward\" PMT declarations if we see\n      // them. Future PMT declarations have the current_next_indicator\n      // set to zero.\n\n      if (!(payload[5] & 0x01)) {\n        return;\n      } // overwrite any existing program map table\n\n      self.programMapTable = {\n        video: null,\n        audio: null,\n        'timed-metadata': {}\n      }; // the mapping table ends at the end of the current section\n\n      sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n      tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n      // long the program info descriptors are\n\n      programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n      offset = 12 + programInfoLength;\n      while (offset < tableEnd) {\n        var streamType = payload[offset];\n        var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n        // TODO: should this be done for metadata too? for now maintain behavior of\n        //       multiple metadata streams\n\n        if (streamType === StreamTypes$2.H264_STREAM_TYPE && self.programMapTable.video === null) {\n          self.programMapTable.video = pid;\n        } else if (streamType === StreamTypes$2.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n          self.programMapTable.audio = pid;\n        } else if (streamType === StreamTypes$2.METADATA_STREAM_TYPE) {\n          // map pid to stream type for metadata streams\n          self.programMapTable['timed-metadata'][pid] = streamType;\n        } // move to the next table entry\n        // skip past the elementary stream descriptors, if present\n\n        offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n      } // record the map on the packet as well\n\n      pmt.programMapTable = self.programMapTable;\n    };\n    /**\n     * Deliver a new MP2T packet to the next stream in the pipeline.\n     */\n\n    this.push = function (packet) {\n      var result = {},\n        offset = 4;\n      result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n      result.pid = packet[1] & 0x1f;\n      result.pid <<= 8;\n      result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n      // fifth byte of the TS packet header. The adaptation field is\n      // used to add stuffing to PES packets that don't fill a complete\n      // TS packet, and to specify some forms of timing and control data\n      // that we do not currently use.\n\n      if ((packet[3] & 0x30) >>> 4 > 0x01) {\n        offset += packet[offset] + 1;\n      } // parse the rest of the packet based on the type\n\n      if (result.pid === 0) {\n        result.type = 'pat';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result);\n      } else if (result.pid === this.pmtPid) {\n        result.type = 'pmt';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n        while (this.packetsWaitingForPmt.length) {\n          this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n        }\n      } else if (this.programMapTable === undefined) {\n        // When we have not seen a PMT yet, defer further processing of\n        // PES packets until one has been parsed\n        this.packetsWaitingForPmt.push([packet, offset, result]);\n      } else {\n        this.processPes_(packet, offset, result);\n      }\n    };\n    this.processPes_ = function (packet, offset, result) {\n      // set the appropriate stream type\n      if (result.pid === this.programMapTable.video) {\n        result.streamType = StreamTypes$2.H264_STREAM_TYPE;\n      } else if (result.pid === this.programMapTable.audio) {\n        result.streamType = StreamTypes$2.ADTS_STREAM_TYPE;\n      } else {\n        // if not video or audio, it is timed-metadata or unknown\n        // if unknown, streamType will be undefined\n        result.streamType = this.programMapTable['timed-metadata'][result.pid];\n      }\n      result.type = 'pes';\n      result.data = packet.subarray(offset);\n      this.trigger('data', result);\n    };\n  };\n  TransportParseStream.prototype = new Stream$4();\n  TransportParseStream.STREAM_TYPES = {\n    h264: 0x1b,\n    adts: 0x0f\n  };\n  /**\n   * Reconsistutes program elementary stream (PES) packets from parsed\n   * transport stream packets. That is, if you pipe an\n   * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n   * events will be events which capture the bytes for individual PES\n   * packets plus relevant metadata that has been extracted from the\n   * container.\n   */\n\n  ElementaryStream = function () {\n    var self = this,\n      segmentHadPmt = false,\n      // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n      audio = {\n        data: [],\n        size: 0\n      },\n      timedMetadata = {\n        data: [],\n        size: 0\n      },\n      programMapTable,\n      parsePes = function (payload, pes) {\n        var ptsDtsFlags;\n        const startPrefix = payload[0] << 16 | payload[1] << 8 | payload[2]; // default to an empty array\n\n        pes.data = new Uint8Array(); // In certain live streams, the start of a TS fragment has ts packets\n        // that are frame data that is continuing from the previous fragment. This\n        // is to check that the pes data is the start of a new pes payload\n\n        if (startPrefix !== 1) {\n          return;\n        } // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function (stream, type, forceFlush) {\n        var packetData = new Uint8Array(stream.size),\n          event = {\n            type: type\n          },\n          i = 0,\n          offset = 0,\n          packetFlushable = false,\n          fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream.data.length || stream.size < 9) {\n          return;\n        }\n        event.trackId = stream.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream.data.length; i++) {\n          fragment = stream.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream.size = 0;\n          stream.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n    ElementaryStream.prototype.init.call(this);\n    /**\n     * Identifies M2TS packet types and parses PES packets using metadata\n     * parsed from the PMT\n     **/\n\n    this.push = function (data) {\n      ({\n        pat: function () {// we have to wait for the PMT to arrive as well before we\n          // have any meaningful metadata\n        },\n        pes: function () {\n          var stream, streamType;\n          switch (data.streamType) {\n            case StreamTypes$2.H264_STREAM_TYPE:\n              stream = video;\n              streamType = 'video';\n              break;\n            case StreamTypes$2.ADTS_STREAM_TYPE:\n              stream = audio;\n              streamType = 'audio';\n              break;\n            case StreamTypes$2.METADATA_STREAM_TYPE:\n              stream = timedMetadata;\n              streamType = 'timed-metadata';\n              break;\n            default:\n              // ignore unknown stream types\n              return;\n          } // if a new packet is starting, we can flush the completed\n          // packet\n\n          if (data.payloadUnitStartIndicator) {\n            flushStream(stream, streamType, true);\n          } // buffer this fragment until we are sure we've received the\n          // complete payload\n\n          stream.data.push(data);\n          stream.size += data.data.byteLength;\n        },\n        pmt: function () {\n          var event = {\n            type: 'metadata',\n            tracks: []\n          };\n          programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n          if (programMapTable.video !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.video,\n              codec: 'avc',\n              type: 'video'\n            });\n          }\n          if (programMapTable.audio !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.audio,\n              codec: 'adts',\n              type: 'audio'\n            });\n          }\n          segmentHadPmt = true;\n          self.trigger('data', event);\n        }\n      })[data.type]();\n    };\n    this.reset = function () {\n      video.size = 0;\n      video.data.length = 0;\n      audio.size = 0;\n      audio.data.length = 0;\n      this.trigger('reset');\n    };\n    /**\n     * Flush any remaining input. Video PES packets may be of variable\n     * length. Normally, the start of a new video packet can trigger the\n     * finalization of the previous packet. That is not possible if no\n     * more video is forthcoming, however. In that case, some other\n     * mechanism (like the end of the file) has to be employed. When it is\n     * clear that no additional data is forthcoming, calling this method\n     * will flush the buffered packets.\n     */\n\n    this.flushStreams_ = function () {\n      // !!THIS ORDER IS IMPORTANT!!\n      // video first then audio\n      flushStream(video, 'video');\n      flushStream(audio, 'audio');\n      flushStream(timedMetadata, 'timed-metadata');\n    };\n    this.flush = function () {\n      // if on flush we haven't had a pmt emitted\n      // and we have a pmt to emit. emit the pmt\n      // so that we trigger a trackinfo downstream.\n      if (!segmentHadPmt && programMapTable) {\n        var pmt = {\n          type: 'metadata',\n          tracks: []\n        }; // translate audio and video streams to tracks\n\n        if (programMapTable.video !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n        self.trigger('data', pmt);\n      }\n      segmentHadPmt = false;\n      this.flushStreams_();\n      this.trigger('done');\n    };\n  };\n  ElementaryStream.prototype = new Stream$4();\n  var m2ts$1 = {\n    PAT_PID: 0x0000,\n    MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH$1,\n    TransportPacketStream: TransportPacketStream,\n    TransportParseStream: TransportParseStream,\n    ElementaryStream: ElementaryStream,\n    TimestampRolloverStream: TimestampRolloverStream,\n    CaptionStream: CaptionStream$1.CaptionStream,\n    Cea608Stream: CaptionStream$1.Cea608Stream,\n    Cea708Stream: CaptionStream$1.Cea708Stream,\n    MetadataStream: metadataStream\n  };\n  for (var type in StreamTypes$2) {\n    if (StreamTypes$2.hasOwnProperty(type)) {\n      m2ts$1[type] = StreamTypes$2[type];\n    }\n  }\n  var m2ts_1 = m2ts$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var Stream$3 = stream;\n  var ONE_SECOND_IN_TS$2 = clock$2.ONE_SECOND_IN_TS;\n  var AdtsStream$1;\n  var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  /*\n   * Accepts a ElementaryStream and emits data events with parsed\n   * AAC Audio Frames of the individual packets. Input audio in ADTS\n   * format is unpacked and re-emitted as AAC frames.\n   *\n   * @see http://wiki.multimedia.cx/index.php?title=ADTS\n   * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n   */\n\n  AdtsStream$1 = function (handlePartialSegments) {\n    var buffer,\n      frameNum = 0;\n    AdtsStream$1.prototype.init.call(this);\n    this.skipWarn_ = function (start, end) {\n      this.trigger('log', {\n        level: 'warn',\n        message: `adts skiping bytes ${start} to ${end} in frame ${frameNum} outside syncword`\n      });\n    };\n    this.push = function (packet) {\n      var i = 0,\n        frameLength,\n        protectionSkipBytes,\n        oldBuffer,\n        sampleCount,\n        adtsFrameDuration;\n      if (!handlePartialSegments) {\n        frameNum = 0;\n      }\n      if (packet.type !== 'audio') {\n        // ignore non-audio data\n        return;\n      } // Prepend any data in the buffer to the input data so that we can parse\n      // aac frames the cross a PES packet boundary\n\n      if (buffer && buffer.length) {\n        oldBuffer = buffer;\n        buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n        buffer.set(oldBuffer);\n        buffer.set(packet.data, oldBuffer.byteLength);\n      } else {\n        buffer = packet.data;\n      } // unpack any ADTS frames which have been fully received\n      // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n      var skip; // We use i + 7 here because we want to be able to parse the entire header.\n      // If we don't have enough bytes to do that, then we definitely won't have a full frame.\n\n      while (i + 7 < buffer.length) {\n        // Look for the start of an ADTS header..\n        if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n          if (typeof skip !== 'number') {\n            skip = i;\n          } // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n\n          i++;\n          continue;\n        }\n        if (typeof skip === 'number') {\n          this.skipWarn_(skip, i);\n          skip = null;\n        } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n        // end of the ADTS header\n\n        protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n        // end of the sync sequence\n        // NOTE: frame length includes the size of the header\n\n        frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n        sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n        adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2]; // If we don't have enough data to actually finish this ADTS frame,\n        // then we have to wait for more data\n\n        if (buffer.byteLength - i < frameLength) {\n          break;\n        } // Otherwise, deliver the complete AAC frame\n\n        this.trigger('data', {\n          pts: packet.pts + frameNum * adtsFrameDuration,\n          dts: packet.dts + frameNum * adtsFrameDuration,\n          sampleCount: sampleCount,\n          audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n          channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n          samplerate: ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2],\n          samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n          // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n          samplesize: 16,\n          // data is the frame without it's header\n          data: buffer.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n        });\n        frameNum++;\n        i += frameLength;\n      }\n      if (typeof skip === 'number') {\n        this.skipWarn_(skip, i);\n        skip = null;\n      } // remove processed bytes from the buffer.\n\n      buffer = buffer.subarray(i);\n    };\n    this.flush = function () {\n      frameNum = 0;\n      this.trigger('done');\n    };\n    this.reset = function () {\n      buffer = void 0;\n      this.trigger('reset');\n    };\n    this.endTimeline = function () {\n      buffer = void 0;\n      this.trigger('endedtimeline');\n    };\n  };\n  AdtsStream$1.prototype = new Stream$3();\n  var adts = AdtsStream$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ExpGolomb$1;\n  /**\n   * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n   * scheme used by h264.\n   */\n\n  ExpGolomb$1 = function (workingData) {\n    var\n      // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n      // the current word being examined\n      workingWord = 0,\n      // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n    // ():uint\n\n    this.length = function () {\n      return 8 * workingBytesAvailable;\n    }; // ():uint\n\n    this.bitsAvailable = function () {\n      return 8 * workingBytesAvailable + workingBitsAvailable;\n    }; // ():void\n\n    this.loadWord = function () {\n      var position = workingData.byteLength - workingBytesAvailable,\n        workingBytes = new Uint8Array(4),\n        availableBytes = Math.min(4, workingBytesAvailable);\n      if (availableBytes === 0) {\n        throw new Error('no bytes available');\n      }\n      workingBytes.set(workingData.subarray(position, position + availableBytes));\n      workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n      workingBitsAvailable = availableBytes * 8;\n      workingBytesAvailable -= availableBytes;\n    }; // (count:int):void\n\n    this.skipBits = function (count) {\n      var skipBytes; // :int\n\n      if (workingBitsAvailable > count) {\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      } else {\n        count -= workingBitsAvailable;\n        skipBytes = Math.floor(count / 8);\n        count -= skipBytes * 8;\n        workingBytesAvailable -= skipBytes;\n        this.loadWord();\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      }\n    }; // (size:int):uint\n\n    this.readBits = function (size) {\n      var bits = Math.min(workingBitsAvailable, size),\n        // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n      // if size > 31, handle error\n\n      workingBitsAvailable -= bits;\n      if (workingBitsAvailable > 0) {\n        workingWord <<= bits;\n      } else if (workingBytesAvailable > 0) {\n        this.loadWord();\n      }\n      bits = size - bits;\n      if (bits > 0) {\n        return valu << bits | this.readBits(bits);\n      }\n      return valu;\n    }; // ():uint\n\n    this.skipLeadingZeros = function () {\n      var leadingZeroCount; // :uint\n\n      for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n        if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n          // the first bit of working word is 1\n          workingWord <<= leadingZeroCount;\n          workingBitsAvailable -= leadingZeroCount;\n          return leadingZeroCount;\n        }\n      } // we exhausted workingWord and still have not found a 1\n\n      this.loadWord();\n      return leadingZeroCount + this.skipLeadingZeros();\n    }; // ():void\n\n    this.skipUnsignedExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():void\n\n    this.skipExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():uint\n\n    this.readUnsignedExpGolomb = function () {\n      var clz = this.skipLeadingZeros(); // :uint\n\n      return this.readBits(clz + 1) - 1;\n    }; // ():int\n\n    this.readExpGolomb = function () {\n      var valu = this.readUnsignedExpGolomb(); // :int\n\n      if (0x01 & valu) {\n        // the number is odd if the low order bit is set\n        return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n      }\n      return -1 * (valu >>> 1); // divide by two then make it negative\n    }; // Some convenience functions\n    // :Boolean\n\n    this.readBoolean = function () {\n      return this.readBits(1) === 1;\n    }; // ():int\n\n    this.readUnsignedByte = function () {\n      return this.readBits(8);\n    };\n    this.loadWord();\n  };\n  var expGolomb = ExpGolomb$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var Stream$2 = stream;\n  var ExpGolomb = expGolomb;\n  var H264Stream$1, NalByteStream;\n  var PROFILES_WITH_OPTIONAL_SPS_DATA;\n  /**\n   * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n   */\n\n  NalByteStream = function () {\n    var syncPoint = 0,\n      i,\n      buffer;\n    NalByteStream.prototype.init.call(this);\n    /*\n     * Scans a byte stream and triggers a data event with the NAL units found.\n     * @param {Object} data Event received from H264Stream\n     * @param {Uint8Array} data.data The h264 byte stream to be scanned\n     *\n     * @see H264Stream.push\n     */\n\n    this.push = function (data) {\n      var swapBuffer;\n      if (!buffer) {\n        buffer = data.data;\n      } else {\n        swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n        swapBuffer.set(buffer);\n        swapBuffer.set(data.data, buffer.byteLength);\n        buffer = swapBuffer;\n      }\n      var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n      // scan for NAL unit boundaries\n      // a match looks like this:\n      // 0 0 1 .. NAL .. 0 0 1\n      // ^ sync point        ^ i\n      // or this:\n      // 0 0 1 .. NAL .. 0 0 0\n      // ^ sync point        ^ i\n      // advance the sync point to a NAL start, if necessary\n\n      for (; syncPoint < len - 3; syncPoint++) {\n        if (buffer[syncPoint + 2] === 1) {\n          // the sync point is properly aligned\n          i = syncPoint + 5;\n          break;\n        }\n      }\n      while (i < len) {\n        // look at the current byte to determine if we've hit the end of\n        // a NAL unit boundary\n        switch (buffer[i]) {\n          case 0:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0) {\n              i += 2;\n              break;\n            } else if (buffer[i - 2] !== 0) {\n              i++;\n              break;\n            } // deliver the NAL unit if it isn't empty\n\n            if (syncPoint + 3 !== i - 2) {\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            } // drop trailing zeroes\n\n            do {\n              i++;\n            } while (buffer[i] !== 1 && i < len);\n            syncPoint = i - 2;\n            i += 3;\n            break;\n          case 1:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n              i += 3;\n              break;\n            } // deliver the NAL unit\n\n            this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            syncPoint = i - 2;\n            i += 3;\n            break;\n          default:\n            // the current byte isn't a one or zero, so it cannot be part\n            // of a sync sequence\n            i += 3;\n            break;\n        }\n      } // filter out the NAL units that were delivered\n\n      buffer = buffer.subarray(syncPoint);\n      i -= syncPoint;\n      syncPoint = 0;\n    };\n    this.reset = function () {\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('reset');\n    };\n    this.flush = function () {\n      // deliver the last buffered NAL unit\n      if (buffer && buffer.byteLength > 3) {\n        this.trigger('data', buffer.subarray(syncPoint + 3));\n      } // reset the stream state\n\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n  };\n  NalByteStream.prototype = new Stream$2(); // values of profile_idc that indicate additional fields are included in the SPS\n  // see Recommendation ITU-T H.264 (4/2013),\n  // 7.3.2.1.1 Sequence parameter set data syntax\n\n  PROFILES_WITH_OPTIONAL_SPS_DATA = {\n    100: true,\n    110: true,\n    122: true,\n    244: true,\n    44: true,\n    83: true,\n    86: true,\n    118: true,\n    128: true,\n    // TODO: the three profiles below don't\n    // appear to have sps data in the specificiation anymore?\n    138: true,\n    139: true,\n    134: true\n  };\n  /**\n   * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n   * events.\n   */\n\n  H264Stream$1 = function () {\n    var nalByteStream = new NalByteStream(),\n      self,\n      trackId,\n      currentPts,\n      currentDts,\n      discardEmulationPreventionBytes,\n      readSequenceParameterSet,\n      skipScalingList;\n    H264Stream$1.prototype.init.call(this);\n    self = this;\n    /*\n     * Pushes a packet from a stream onto the NalByteStream\n     *\n     * @param {Object} packet - A packet received from a stream\n     * @param {Uint8Array} packet.data - The raw bytes of the packet\n     * @param {Number} packet.dts - Decode timestamp of the packet\n     * @param {Number} packet.pts - Presentation timestamp of the packet\n     * @param {Number} packet.trackId - The id of the h264 track this packet came from\n     * @param {('video'|'audio')} packet.type - The type of packet\n     *\n     */\n\n    this.push = function (packet) {\n      if (packet.type !== 'video') {\n        return;\n      }\n      trackId = packet.trackId;\n      currentPts = packet.pts;\n      currentDts = packet.dts;\n      nalByteStream.push(packet);\n    };\n    /*\n     * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n     * for the NALUs to the next stream component.\n     * Also, preprocess caption and sequence parameter NALUs.\n     *\n     * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n     * @see NalByteStream.push\n     */\n\n    nalByteStream.on('data', function (data) {\n      var event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data,\n        nalUnitTypeCode: data[0] & 0x1f\n      };\n      switch (event.nalUnitTypeCode) {\n        case 0x05:\n          event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n          break;\n        case 0x06:\n          event.nalUnitType = 'sei_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          break;\n        case 0x07:\n          event.nalUnitType = 'seq_parameter_set_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          event.config = readSequenceParameterSet(event.escapedRBSP);\n          break;\n        case 0x08:\n          event.nalUnitType = 'pic_parameter_set_rbsp';\n          break;\n        case 0x09:\n          event.nalUnitType = 'access_unit_delimiter_rbsp';\n          break;\n      } // This triggers data on the H264Stream\n\n      self.trigger('data', event);\n    });\n    nalByteStream.on('done', function () {\n      self.trigger('done');\n    });\n    nalByteStream.on('partialdone', function () {\n      self.trigger('partialdone');\n    });\n    nalByteStream.on('reset', function () {\n      self.trigger('reset');\n    });\n    nalByteStream.on('endedtimeline', function () {\n      self.trigger('endedtimeline');\n    });\n    this.flush = function () {\n      nalByteStream.flush();\n    };\n    this.partialFlush = function () {\n      nalByteStream.partialFlush();\n    };\n    this.reset = function () {\n      nalByteStream.reset();\n    };\n    this.endTimeline = function () {\n      nalByteStream.endTimeline();\n    };\n    /**\n     * Advance the ExpGolomb decoder past a scaling list. The scaling\n     * list is optionally transmitted as part of a sequence parameter\n     * set and is not relevant to transmuxing.\n     * @param count {number} the number of entries in this scaling list\n     * @param expGolombDecoder {object} an ExpGolomb pointed to the\n     * start of a scaling list\n     * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n     */\n\n    skipScalingList = function (count, expGolombDecoder) {\n      var lastScale = 8,\n        nextScale = 8,\n        j,\n        deltaScale;\n      for (j = 0; j < count; j++) {\n        if (nextScale !== 0) {\n          deltaScale = expGolombDecoder.readExpGolomb();\n          nextScale = (lastScale + deltaScale + 256) % 256;\n        }\n        lastScale = nextScale === 0 ? lastScale : nextScale;\n      }\n    };\n    /**\n     * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n     * Sequence Payload\"\n     * @param data {Uint8Array} the bytes of a RBSP from a NAL\n     * unit\n     * @return {Uint8Array} the RBSP without any Emulation\n     * Prevention Bytes\n     */\n\n    discardEmulationPreventionBytes = function (data) {\n      var length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength,\n        newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n        newData[i] = data[sourceIndex];\n      }\n      return newData;\n    };\n    /**\n     * Read a sequence parameter set and return some interesting video\n     * properties. A sequence parameter set is the H264 metadata that\n     * describes the properties of upcoming video frames.\n     * @param data {Uint8Array} the bytes of a sequence parameter set\n     * @return {object} an object with configuration parsed from the\n     * sequence parameter set, including the dimensions of the\n     * associated video frames.\n     */\n\n    readSequenceParameterSet = function (data) {\n      var frameCropLeftOffset = 0,\n        frameCropRightOffset = 0,\n        frameCropTopOffset = 0,\n        frameCropBottomOffset = 0,\n        expGolombDecoder,\n        profileIdc,\n        levelIdc,\n        profileCompatibility,\n        chromaFormatIdc,\n        picOrderCntType,\n        numRefFramesInPicOrderCntCycle,\n        picWidthInMbsMinus1,\n        picHeightInMapUnitsMinus1,\n        frameMbsOnlyFlag,\n        scalingListCount,\n        sarRatio = [1, 1],\n        aspectRatioIdc,\n        i;\n      expGolombDecoder = new ExpGolomb(data);\n      profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n      profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n      levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n      // some profiles have more optional data we don't need\n\n      if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n        chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n        if (chromaFormatIdc === 3) {\n          expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n        }\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n        expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // seq_scaling_matrix_present_flag\n          scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n          for (i = 0; i < scalingListCount; i++) {\n            if (expGolombDecoder.readBoolean()) {\n              // seq_scaling_list_present_flag[ i ]\n              if (i < 6) {\n                skipScalingList(16, expGolombDecoder);\n              } else {\n                skipScalingList(64, expGolombDecoder);\n              }\n            }\n          }\n        }\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n      picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n      if (picOrderCntType === 0) {\n        expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n      } else if (picOrderCntType === 1) {\n        expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n        numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n        for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n          expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n        }\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n      expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n      picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n      if (frameMbsOnlyFlag === 0) {\n        expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n      }\n      expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n      if (expGolombDecoder.readBoolean()) {\n        // frame_cropping_flag\n        frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n      }\n      if (expGolombDecoder.readBoolean()) {\n        // vui_parameters_present_flag\n        if (expGolombDecoder.readBoolean()) {\n          // aspect_ratio_info_present_flag\n          aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n          switch (aspectRatioIdc) {\n            case 1:\n              sarRatio = [1, 1];\n              break;\n            case 2:\n              sarRatio = [12, 11];\n              break;\n            case 3:\n              sarRatio = [10, 11];\n              break;\n            case 4:\n              sarRatio = [16, 11];\n              break;\n            case 5:\n              sarRatio = [40, 33];\n              break;\n            case 6:\n              sarRatio = [24, 11];\n              break;\n            case 7:\n              sarRatio = [20, 11];\n              break;\n            case 8:\n              sarRatio = [32, 11];\n              break;\n            case 9:\n              sarRatio = [80, 33];\n              break;\n            case 10:\n              sarRatio = [18, 11];\n              break;\n            case 11:\n              sarRatio = [15, 11];\n              break;\n            case 12:\n              sarRatio = [64, 33];\n              break;\n            case 13:\n              sarRatio = [160, 99];\n              break;\n            case 14:\n              sarRatio = [4, 3];\n              break;\n            case 15:\n              sarRatio = [3, 2];\n              break;\n            case 16:\n              sarRatio = [2, 1];\n              break;\n            case 255:\n              {\n                sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                break;\n              }\n          }\n          if (sarRatio) {\n            sarRatio[0] / sarRatio[1];\n          }\n        }\n      }\n      return {\n        profileIdc: profileIdc,\n        levelIdc: levelIdc,\n        profileCompatibility: profileCompatibility,\n        width: (picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2,\n        height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n        // sar is sample aspect ratio\n        sarRatio: sarRatio\n      };\n    };\n  };\n  H264Stream$1.prototype = new Stream$2();\n  var h264 = {\n    H264Stream: H264Stream$1,\n    NalByteStream: NalByteStream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about Aac data.\n   */\n\n  var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  var parseId3TagSize = function (header, byteIndex) {\n    var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4; // if we get a negative returnSize clamp it to 0\n\n    returnSize = returnSize >= 0 ? returnSize : 0;\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n    return returnSize + 10;\n  };\n  var getId3Offset = function (data, offset) {\n    if (data.length - offset < 10 || data[offset] !== 'I'.charCodeAt(0) || data[offset + 1] !== 'D'.charCodeAt(0) || data[offset + 2] !== '3'.charCodeAt(0)) {\n      return offset;\n    }\n    offset += parseId3TagSize(data, offset);\n    return getId3Offset(data, offset);\n  }; // TODO: use vhs-utils\n\n  var isLikelyAacData$1 = function (data) {\n    var offset = getId3Offset(data, 0);\n    return data.length >= offset + 2 && (data[offset] & 0xFF) === 0xFF && (data[offset + 1] & 0xF0) === 0xF0 &&\n    // verify that the 2 layer bits are 0, aka this\n    // is not mp3 data but aac data.\n    (data[offset + 1] & 0x16) === 0x10;\n  };\n  var parseSyncSafeInteger = function (data) {\n    return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n  }; // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n  var percentEncode = function (bytes, start, end) {\n    var i,\n      result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  }; // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n\n  var parseIso88591 = function (bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  };\n  var parseAdtsSize = function (header, byteIndex) {\n    var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n    return highTwo | middle | lowThree;\n  };\n  var parseType$5 = function (header, byteIndex) {\n    if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n      return 'timed-metadata';\n    } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n      return 'audio';\n    }\n    return null;\n  };\n  var parseSampleRate = function (packet) {\n    var i = 0;\n    while (i + 5 < packet.length) {\n      if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n      return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n    }\n    return null;\n  };\n  var parseAacTimestamp = function (packet) {\n    var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n    frameStart = 10;\n    if (packet[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n        return null;\n      }\n      frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n      if (frameHeader === 'PRIV') {\n        frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n        for (var i = 0; i < frame.byteLength; i++) {\n          if (frame[i] === 0) {\n            var owner = parseIso88591(frame, 0, i);\n            if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.subarray(i + 1);\n              var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              return size;\n            }\n            break;\n          }\n        }\n      }\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < packet.byteLength);\n    return null;\n  };\n  var utils = {\n    isLikelyAacData: isLikelyAacData$1,\n    parseId3TagSize: parseId3TagSize,\n    parseAdtsSize: parseAdtsSize,\n    parseType: parseType$5,\n    parseSampleRate: parseSampleRate,\n    parseAacTimestamp: parseAacTimestamp\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based aac to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream$1 = stream;\n  var aacUtils = utils; // Constants\n\n  var AacStream$1;\n  /**\n   * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n   */\n\n  AacStream$1 = function () {\n    var everything = new Uint8Array(),\n      timeStamp = 0;\n    AacStream$1.prototype.init.call(this);\n    this.setTimestamp = function (timestamp) {\n      timeStamp = timestamp;\n    };\n    this.push = function (bytes) {\n      var frameSize = 0,\n        byteIndex = 0,\n        bytesLeft,\n        chunk,\n        packet,\n        tempLength; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (everything.length) {\n        tempLength = everything.length;\n        everything = new Uint8Array(bytes.byteLength + tempLength);\n        everything.set(everything.subarray(0, tempLength));\n        everything.set(bytes, tempLength);\n      } else {\n        everything = bytes;\n      }\n      while (everything.length - byteIndex >= 3) {\n        if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (everything.length - byteIndex < 10) {\n            break;\n          } // check framesize\n\n          frameSize = aacUtils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n          // Add to byteIndex to support multiple ID3 tags in sequence\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n          chunk = {\n            type: 'timed-metadata',\n            data: everything.subarray(byteIndex, byteIndex + frameSize)\n          };\n          this.trigger('data', chunk);\n          byteIndex += frameSize;\n          continue;\n        } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (everything.length - byteIndex < 7) {\n            break;\n          }\n          frameSize = aacUtils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n          packet = {\n            type: 'audio',\n            data: everything.subarray(byteIndex, byteIndex + frameSize),\n            pts: timeStamp,\n            dts: timeStamp\n          };\n          this.trigger('data', packet);\n          byteIndex += frameSize;\n          continue;\n        }\n        byteIndex++;\n      }\n      bytesLeft = everything.length - byteIndex;\n      if (bytesLeft > 0) {\n        everything = everything.subarray(byteIndex);\n      } else {\n        everything = new Uint8Array();\n      }\n    };\n    this.reset = function () {\n      everything = new Uint8Array();\n      this.trigger('reset');\n    };\n    this.endTimeline = function () {\n      everything = new Uint8Array();\n      this.trigger('endedtimeline');\n    };\n  };\n  AacStream$1.prototype = new Stream$1();\n  var aac = AacStream$1;\n  var AUDIO_PROPERTIES$1 = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n  var audioProperties = AUDIO_PROPERTIES$1;\n  var VIDEO_PROPERTIES$1 = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\n  var videoProperties = VIDEO_PROPERTIES$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream = stream;\n  var mp4 = mp4Generator;\n  var frameUtils = frameUtils$1;\n  var audioFrameUtils = audioFrameUtils$1;\n  var trackDecodeInfo = trackDecodeInfo$1;\n  var m2ts = m2ts_1;\n  var clock = clock$2;\n  var AdtsStream = adts;\n  var H264Stream = h264.H264Stream;\n  var AacStream = aac;\n  var isLikelyAacData = utils.isLikelyAacData;\n  var ONE_SECOND_IN_TS$1 = clock$2.ONE_SECOND_IN_TS;\n  var AUDIO_PROPERTIES = audioProperties;\n  var VIDEO_PROPERTIES = videoProperties; // object types\n\n  var VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n  var retriggerForStream = function (key, event) {\n    event.stream = key;\n    this.trigger('log', event);\n  };\n  var addPipelineLogRetriggers = function (transmuxer, pipeline) {\n    var keys = Object.keys(pipeline);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]; // skip non-stream keys and headOfPipeline\n      // which is just a duplicate\n\n      if (key === 'headOfPipeline' || !pipeline[key].on) {\n        continue;\n      }\n      pipeline[key].on('log', retriggerForStream.bind(transmuxer, key));\n    }\n  };\n  /**\n   * Compare two arrays (even typed) for same-ness\n   */\n\n  var arrayEquals = function (a, b) {\n    var i;\n    if (a.length !== b.length) {\n      return false;\n    } // compare the value of each element in the array\n\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var generateSegmentTimingInfo = function (baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n    var ptsOffsetFromDts = startPts - startDts,\n      decodeDuration = endDts - startDts,\n      presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n    // however, the player time values will reflect a start from the baseMediaDecodeTime.\n    // In order to provide relevant values for the player times, base timing info on the\n    // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n    return {\n      start: {\n        dts: baseMediaDecodeTime,\n        pts: baseMediaDecodeTime + ptsOffsetFromDts\n      },\n      end: {\n        dts: baseMediaDecodeTime + decodeDuration,\n        pts: baseMediaDecodeTime + presentationDuration\n      },\n      prependedContentDuration: prependedContentDuration,\n      baseMediaDecodeTime: baseMediaDecodeTime\n    };\n  };\n  /**\n   * Constructs a single-track, ISO BMFF media segment from AAC data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  AudioSegmentStream = function (track, options) {\n    var adtsFrames = [],\n      sequenceNumber,\n      earliestAllowedDts = 0,\n      audioAppendStartTs = 0,\n      videoBaseMediaDecodeTime = Infinity;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n    AudioSegmentStream.prototype.init.call(this);\n    this.push = function (data) {\n      trackDecodeInfo.collectDtsInfo(track, data);\n      if (track) {\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          track[prop] = data[prop];\n        });\n      } // buffer audio data until end() is called\n\n      adtsFrames.push(data);\n    };\n    this.setEarliestDts = function (earliestDts) {\n      earliestAllowedDts = earliestDts;\n    };\n    this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      videoBaseMediaDecodeTime = baseMediaDecodeTime;\n    };\n    this.setAudioAppendStart = function (timestamp) {\n      audioAppendStartTs = timestamp;\n    };\n    this.flush = function () {\n      var frames, moof, mdat, boxes, frameDuration, segmentDuration, videoClockCyclesOfSilencePrefixed; // return early if no audio data has been observed\n\n      if (adtsFrames.length === 0) {\n        this.trigger('done', 'AudioSegmentStream');\n        return;\n      }\n      frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps); // amount of audio filled but the value is in video clock rather than audio clock\n\n      videoClockCyclesOfSilencePrefixed = audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n      // samples (that is, adts frames) in the audio data\n\n      track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n      mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n      adtsFrames = [];\n      moof = mp4.moof(sequenceNumber, [track]);\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      trackDecodeInfo.clearDtsInfo(track);\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n      // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n      // valid use-case where an init segment/data should be triggered without associated\n      // frames. Leaving for now, but should be looked into.\n\n      if (frames.length) {\n        segmentDuration = frames.length * frameDuration;\n        this.trigger('segmentTimingInfo', generateSegmentTimingInfo(\n        // The audio track's baseMediaDecodeTime is in audio clock cycles, but the\n        // frame info is in video clock cycles. Convert to match expectation of\n        // listeners (that all timestamps will be based on video clock cycles).\n        clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate),\n        // frame times are already in video clock, as is segment duration\n        frames[0].dts, frames[0].pts, frames[0].dts + segmentDuration, frames[0].pts + segmentDuration, videoClockCyclesOfSilencePrefixed || 0));\n        this.trigger('timingInfo', {\n          start: frames[0].pts,\n          end: frames[0].pts + segmentDuration\n        });\n      }\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.trigger('done', 'AudioSegmentStream');\n    };\n    this.reset = function () {\n      trackDecodeInfo.clearDtsInfo(track);\n      adtsFrames = [];\n      this.trigger('reset');\n    };\n  };\n  AudioSegmentStream.prototype = new Stream();\n  /**\n   * Constructs a single-track, ISO BMFF media segment from H264 data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n   *        gopsToAlignWith list when attempting to align gop pts\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  VideoSegmentStream = function (track, options) {\n    var sequenceNumber,\n      nalUnits = [],\n      gopsToAlignWith = [],\n      config,\n      pps;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n    VideoSegmentStream.prototype.init.call(this);\n    delete track.minPTS;\n    this.gopCache_ = [];\n    /**\n      * Constructs a ISO BMFF segment given H264 nalUnits\n      * @param {Object} nalUnit A data event representing a nalUnit\n      * @param {String} nalUnit.nalUnitType\n      * @param {Object} nalUnit.config Properties for a mp4 track\n      * @param {Uint8Array} nalUnit.data The nalUnit bytes\n      * @see lib/codecs/h264.js\n     **/\n\n    this.push = function (nalUnit) {\n      trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n      if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n        config = nalUnit.config;\n        track.sps = [nalUnit.data];\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          track[prop] = config[prop];\n        }, this);\n      }\n      if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n        pps = nalUnit.data;\n        track.pps = [nalUnit.data];\n      } // buffer video until flush() is called\n\n      nalUnits.push(nalUnit);\n    };\n    /**\n      * Pass constructed ISO BMFF track and boxes on to the\n      * next stream in the pipeline\n     **/\n\n    this.flush = function () {\n      var frames,\n        gopForFusion,\n        gops,\n        moof,\n        mdat,\n        boxes,\n        prependedContentDuration = 0,\n        firstGop,\n        lastGop; // Throw away nalUnits at the start of the byte stream until\n      // we find the first AUD\n\n      while (nalUnits.length) {\n        if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n          break;\n        }\n        nalUnits.shift();\n      } // Return early if no video data has been observed\n\n      if (nalUnits.length === 0) {\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      } // Organize the raw nal-units into arrays that represent\n      // higher-level constructs such as frames and gops\n      // (group-of-pictures)\n\n      frames = frameUtils.groupNalsIntoFrames(nalUnits);\n      gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n      // a problem since MSE (on Chrome) requires a leading keyframe.\n      //\n      // We have two approaches to repairing this situation:\n      // 1) GOP-FUSION:\n      //    This is where we keep track of the GOPS (group-of-pictures)\n      //    from previous fragments and attempt to find one that we can\n      //    prepend to the current fragment in order to create a valid\n      //    fragment.\n      // 2) KEYFRAME-PULLING:\n      //    Here we search for the first keyframe in the fragment and\n      //    throw away all the frames between the start of the fragment\n      //    and that keyframe. We then extend the duration and pull the\n      //    PTS of the keyframe forward so that it covers the time range\n      //    of the frames that were disposed of.\n      //\n      // #1 is far prefereable over #2 which can cause \"stuttering\" but\n      // requires more things to be just right.\n\n      if (!gops[0][0].keyFrame) {\n        // Search for a gop for fusion from our gopCache\n        gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n        if (gopForFusion) {\n          // in order to provide more accurate timing information about the segment, save\n          // the number of seconds prepended to the original segment due to GOP fusion\n          prependedContentDuration = gopForFusion.duration;\n          gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n          // new gop at the beginning\n\n          gops.byteLength += gopForFusion.byteLength;\n          gops.nalCount += gopForFusion.nalCount;\n          gops.pts = gopForFusion.pts;\n          gops.dts = gopForFusion.dts;\n          gops.duration += gopForFusion.duration;\n        } else {\n          // If we didn't find a candidate gop fall back to keyframe-pulling\n          gops = frameUtils.extendFirstKeyFrame(gops);\n        }\n      } // Trim gops to align with gopsToAlignWith\n\n      if (gopsToAlignWith.length) {\n        var alignedGops;\n        if (options.alignGopsAtEnd) {\n          alignedGops = this.alignGopsAtEnd_(gops);\n        } else {\n          alignedGops = this.alignGopsAtStart_(gops);\n        }\n        if (!alignedGops) {\n          // save all the nals in the last GOP into the gop cache\n          this.gopCache_.unshift({\n            gop: gops.pop(),\n            pps: track.pps,\n            sps: track.sps\n          }); // Keep a maximum of 6 GOPs in the cache\n\n          this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n          nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n        // when recalculated before sending off to CoalesceStream\n\n        trackDecodeInfo.clearDtsInfo(track);\n        gops = alignedGops;\n      }\n      trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n      // samples (that is, frames) in the video data\n\n      track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n      mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n      this.trigger('processedGopsInfo', gops.map(function (gop) {\n        return {\n          pts: gop.pts,\n          dts: gop.dts,\n          byteLength: gop.byteLength\n        };\n      }));\n      firstGop = gops[0];\n      lastGop = gops[gops.length - 1];\n      this.trigger('segmentTimingInfo', generateSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n      this.trigger('timingInfo', {\n        start: gops[0].pts,\n        end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n      }); // save all the nals in the last GOP into the gop cache\n\n      this.gopCache_.unshift({\n        gop: gops.pop(),\n        pps: track.pps,\n        sps: track.sps\n      }); // Keep a maximum of 6 GOPs in the cache\n\n      this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n      nalUnits = [];\n      this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n      this.trigger('timelineStartInfo', track.timelineStartInfo);\n      moof = mp4.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n      // throwing away hundreds of media segment fragments\n\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.resetStream_(); // Continue with the flush process now\n\n      this.trigger('done', 'VideoSegmentStream');\n    };\n    this.reset = function () {\n      this.resetStream_();\n      nalUnits = [];\n      this.gopCache_.length = 0;\n      gopsToAlignWith.length = 0;\n      this.trigger('reset');\n    };\n    this.resetStream_ = function () {\n      trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n      // for instance, when we are rendition switching\n\n      config = undefined;\n      pps = undefined;\n    }; // Search for a candidate Gop for gop-fusion from the gop cache and\n    // return it or return null if no good candidate was found\n\n    this.getGopForFusion_ = function (nalUnit) {\n      var halfSecond = 45000,\n        // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n        // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n        dtsDistance,\n        nearestGopObj,\n        currentGop,\n        currentGopObj,\n        i; // Search for the GOP nearest to the beginning of this nal unit\n\n      for (i = 0; i < this.gopCache_.length; i++) {\n        currentGopObj = this.gopCache_[i];\n        currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n        if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n          continue;\n        } // Reject Gops that would require a negative baseMediaDecodeTime\n\n        if (currentGop.dts < track.timelineStartInfo.dts) {\n          continue;\n        } // The distance between the end of the gop and the start of the nalUnit\n\n        dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n        // a half-second of the nal unit\n\n        if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n          // Always use the closest GOP we found if there is more than\n          // one candidate\n          if (!nearestGopObj || nearestDistance > dtsDistance) {\n            nearestGopObj = currentGopObj;\n            nearestDistance = dtsDistance;\n          }\n        }\n      }\n      if (nearestGopObj) {\n        return nearestGopObj.gop;\n      }\n      return null;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the START of the list\n\n    this.alignGopsAtStart_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n      byteLength = gops.byteLength;\n      nalCount = gops.nalCount;\n      duration = gops.duration;\n      alignIndex = gopIndex = 0;\n      while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n        if (align.pts === gop.pts) {\n          break;\n        }\n        if (gop.pts > align.pts) {\n          // this current gop starts after the current gop we want to align on, so increment\n          // align index\n          alignIndex++;\n          continue;\n        } // current gop starts before the current gop we want to align on. so increment gop\n        // index\n\n        gopIndex++;\n        byteLength -= gop.byteLength;\n        nalCount -= gop.nalCount;\n        duration -= gop.duration;\n      }\n      if (gopIndex === 0) {\n        // no gops to trim\n        return gops;\n      }\n      if (gopIndex === gops.length) {\n        // all gops trimmed, skip appending all gops\n        return null;\n      }\n      alignedGops = gops.slice(gopIndex);\n      alignedGops.byteLength = byteLength;\n      alignedGops.duration = duration;\n      alignedGops.nalCount = nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the END of the list\n\n    this.alignGopsAtEnd_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n      alignIndex = gopsToAlignWith.length - 1;\n      gopIndex = gops.length - 1;\n      alignEndIndex = null;\n      matchFound = false;\n      while (alignIndex >= 0 && gopIndex >= 0) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n        if (align.pts === gop.pts) {\n          matchFound = true;\n          break;\n        }\n        if (align.pts > gop.pts) {\n          alignIndex--;\n          continue;\n        }\n        if (alignIndex === gopsToAlignWith.length - 1) {\n          // gop.pts is greater than the last alignment candidate. If no match is found\n          // by the end of this loop, we still want to append gops that come after this\n          // point\n          alignEndIndex = gopIndex;\n        }\n        gopIndex--;\n      }\n      if (!matchFound && alignEndIndex === null) {\n        return null;\n      }\n      var trimIndex;\n      if (matchFound) {\n        trimIndex = gopIndex;\n      } else {\n        trimIndex = alignEndIndex;\n      }\n      if (trimIndex === 0) {\n        return gops;\n      }\n      var alignedGops = gops.slice(trimIndex);\n      var metadata = alignedGops.reduce(function (total, gop) {\n        total.byteLength += gop.byteLength;\n        total.duration += gop.duration;\n        total.nalCount += gop.nalCount;\n        return total;\n      }, {\n        byteLength: 0,\n        duration: 0,\n        nalCount: 0\n      });\n      alignedGops.byteLength = metadata.byteLength;\n      alignedGops.duration = metadata.duration;\n      alignedGops.nalCount = metadata.nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    };\n    this.alignGopsWith = function (newGopsToAlignWith) {\n      gopsToAlignWith = newGopsToAlignWith;\n    };\n  };\n  VideoSegmentStream.prototype = new Stream();\n  /**\n   * A Stream that can combine multiple streams (ie. audio & video)\n   * into a single output segment for MSE. Also supports audio-only\n   * and video-only streams.\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at media timeline start.\n   */\n\n  CoalesceStream = function (options, metadataStream) {\n    // Number of Tracks per output segment\n    // If greater than 1, we combine multiple\n    // tracks into a single segment\n    this.numberOfTracks = 0;\n    this.metadataStream = metadataStream;\n    options = options || {};\n    if (typeof options.remux !== 'undefined') {\n      this.remuxTracks = !!options.remux;\n    } else {\n      this.remuxTracks = true;\n    }\n    if (typeof options.keepOriginalTimestamps === 'boolean') {\n      this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n    } else {\n      this.keepOriginalTimestamps = false;\n    }\n    this.pendingTracks = [];\n    this.videoTrack = null;\n    this.pendingBoxes = [];\n    this.pendingCaptions = [];\n    this.pendingMetadata = [];\n    this.pendingBytes = 0;\n    this.emittedTracks = 0;\n    CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n    this.push = function (output) {\n      // buffer incoming captions until the associated video segment\n      // finishes\n      if (output.content || output.text) {\n        return this.pendingCaptions.push(output);\n      } // buffer incoming id3 tags until the final flush\n\n      if (output.frames) {\n        return this.pendingMetadata.push(output);\n      } // Add this track to the list of pending tracks and store\n      // important information required for the construction of\n      // the final segment\n\n      this.pendingTracks.push(output.track);\n      this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n      // We unshift audio and push video because\n      // as of Chrome 75 when switching from\n      // one init segment to another if the video\n      // mdat does not appear after the audio mdat\n      // only audio will play for the duration of our transmux.\n\n      if (output.track.type === 'video') {\n        this.videoTrack = output.track;\n        this.pendingBoxes.push(output.boxes);\n      }\n      if (output.track.type === 'audio') {\n        this.audioTrack = output.track;\n        this.pendingBoxes.unshift(output.boxes);\n      }\n    };\n  };\n  CoalesceStream.prototype = new Stream();\n  CoalesceStream.prototype.flush = function (flushSource) {\n    var offset = 0,\n      event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n      caption,\n      id3,\n      initSegment,\n      timelineStartPts = 0,\n      i;\n    if (this.pendingTracks.length < this.numberOfTracks) {\n      if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n        // Return because we haven't received a flush from a data-generating\n        // portion of the segment (meaning that we have only recieved meta-data\n        // or captions.)\n        return;\n      } else if (this.remuxTracks) {\n        // Return until we have enough tracks from the pipeline to remux (if we\n        // are remuxing audio and video into a single MP4)\n        return;\n      } else if (this.pendingTracks.length === 0) {\n        // In the case where we receive a flush without any data having been\n        // received we consider it an emitted track for the purposes of coalescing\n        // `done` events.\n        // We do this for the case where there is an audio and video track in the\n        // segment but no audio data. (seen in several playlists with alternate\n        // audio tracks and no audio present in the main TS segments.)\n        this.emittedTracks++;\n        if (this.emittedTracks >= this.numberOfTracks) {\n          this.trigger('done');\n          this.emittedTracks = 0;\n        }\n        return;\n      }\n    }\n    if (this.videoTrack) {\n      timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n      VIDEO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.videoTrack[prop];\n      }, this);\n    } else if (this.audioTrack) {\n      timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n      AUDIO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.audioTrack[prop];\n      }, this);\n    }\n    if (this.videoTrack || this.audioTrack) {\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n        caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n      // We include captions and ID3 tags for backwards compatibility,\n      // ideally we should send only video and audio in the data event\n\n      this.trigger('data', event); // Emit each caption to the outside world\n      // Ideally, this would happen immediately on parsing captions,\n      // but we need to ensure that video data is sent back first\n      // so that caption timing can be adjusted to match video timing\n\n      for (i = 0; i < event.captions.length; i++) {\n        caption = event.captions[i];\n        this.trigger('caption', caption);\n      } // Emit each id3 tag to the outside world\n      // Ideally, this would happen immediately on parsing the tag,\n      // but we need to ensure that video data is sent back first\n      // so that ID3 frame timing can be adjusted to match video timing\n\n      for (i = 0; i < event.metadata.length; i++) {\n        id3 = event.metadata[i];\n        this.trigger('id3Frame', id3);\n      }\n    } // Only emit `done` if all tracks have been flushed and emitted\n\n    if (this.emittedTracks >= this.numberOfTracks) {\n      this.trigger('done');\n      this.emittedTracks = 0;\n    }\n  };\n  CoalesceStream.prototype.setRemux = function (val) {\n    this.remuxTracks = val;\n  };\n  /**\n   * A Stream that expects MP2T binary data as input and produces\n   * corresponding media segments, suitable for use with Media Source\n   * Extension (MSE) implementations that support the ISO BMFF byte\n   * stream format, like Chrome.\n   */\n\n  Transmuxer = function (options) {\n    var self = this,\n      hasFlushed = true,\n      videoTrack,\n      audioTrack;\n    Transmuxer.prototype.init.call(this);\n    options = options || {};\n    this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n    this.transmuxPipeline_ = {};\n    this.setupAacPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'aac';\n      pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.aacStream = new AacStream();\n      pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n      pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n      pipeline.adtsStream = new AdtsStream();\n      pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.aacStream;\n      pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n      pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n      pipeline.metadataStream.on('timestamp', function (frame) {\n        pipeline.aacStream.setTimestamp(frame.timeStamp);\n      });\n      pipeline.aacStream.on('data', function (data) {\n        if (data.type !== 'timed-metadata' && data.type !== 'audio' || pipeline.audioSegmentStream) {\n          return;\n        }\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        }; // hook up the audio segment stream to the first track with aac data\n\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n        pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n        pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream); // emit pmt info\n\n        self.trigger('trackinfo', {\n          hasAudio: !!audioTrack,\n          hasVideo: !!videoTrack\n        });\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    };\n    this.setupTsPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'ts';\n      pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.packetStream = new m2ts.TransportPacketStream();\n      pipeline.parseStream = new m2ts.TransportParseStream();\n      pipeline.elementaryStream = new m2ts.ElementaryStream();\n      pipeline.timestampRolloverStream = new m2ts.TimestampRolloverStream();\n      pipeline.adtsStream = new AdtsStream();\n      pipeline.h264Stream = new H264Stream();\n      pipeline.captionStream = new m2ts.CaptionStream(options);\n      pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n      pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n      // demux the streams\n\n      pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n      pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n      pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n      pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n      pipeline.elementaryStream.on('data', function (data) {\n        var i;\n        if (data.type === 'metadata') {\n          i = data.tracks.length; // scan the tracks listed in the metadata\n\n          while (i--) {\n            if (!videoTrack && data.tracks[i].type === 'video') {\n              videoTrack = data.tracks[i];\n              videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            } else if (!audioTrack && data.tracks[i].type === 'audio') {\n              audioTrack = data.tracks[i];\n              audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            }\n          } // hook up the video segment stream to the first track with h264 data\n\n          if (videoTrack && !pipeline.videoSegmentStream) {\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n            pipeline.videoSegmentStream.on('log', self.getLogTrigger_('videoSegmentStream'));\n            pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n              // When video emits timelineStartInfo data after a flush, we forward that\n              // info to the AudioSegmentStream, if it exists, because video timeline\n              // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n              // because this is a particularly subtle form of timestamp alteration.\n              if (audioTrack && !options.keepOriginalTimestamps) {\n                audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                // very earliest DTS we have seen in video because Chrome will\n                // interpret any video track with a baseMediaDecodeTime that is\n                // non-zero as a gap.\n\n                pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n            pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n            pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n              if (audioTrack) {\n                pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n            pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n          }\n          if (audioTrack && !pipeline.audioSegmentStream) {\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n            pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo'));\n            pipeline.audioSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'audioSegmentTimingInfo')); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          } // emit pmt info\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n      pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n        id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n        self.trigger('id3Frame', id3Frame);\n      });\n      pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    }; // hook up the segment streams once track metadata is delivered\n\n    this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      var pipeline = this.transmuxPipeline_;\n      if (!options.keepOriginalTimestamps) {\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n      if (audioTrack) {\n        audioTrack.timelineStartInfo.dts = undefined;\n        audioTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(audioTrack);\n        if (pipeline.audioTimestampRolloverStream) {\n          pipeline.audioTimestampRolloverStream.discontinuity();\n        }\n      }\n      if (videoTrack) {\n        if (pipeline.videoSegmentStream) {\n          pipeline.videoSegmentStream.gopCache_ = [];\n        }\n        videoTrack.timelineStartInfo.dts = undefined;\n        videoTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(videoTrack);\n        pipeline.captionStream.reset();\n      }\n      if (pipeline.timestampRolloverStream) {\n        pipeline.timestampRolloverStream.discontinuity();\n      }\n    };\n    this.setAudioAppendStart = function (timestamp) {\n      if (audioTrack) {\n        this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n      }\n    };\n    this.setRemux = function (val) {\n      var pipeline = this.transmuxPipeline_;\n      options.remux = val;\n      if (pipeline && pipeline.coalesceStream) {\n        pipeline.coalesceStream.setRemux(val);\n      }\n    };\n    this.alignGopsWith = function (gopsToAlignWith) {\n      if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n        this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n      }\n    };\n    this.getLogTrigger_ = function (key) {\n      var self = this;\n      return function (event) {\n        event.stream = key;\n        self.trigger('log', event);\n      };\n    }; // feed incoming data to the front of the parsing pipeline\n\n    this.push = function (data) {\n      if (hasFlushed) {\n        var isAac = isLikelyAacData(data);\n        if (isAac && this.transmuxPipeline_.type !== 'aac') {\n          this.setupAacPipeline();\n        } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n          this.setupTsPipeline();\n        }\n        hasFlushed = false;\n      }\n      this.transmuxPipeline_.headOfPipeline.push(data);\n    }; // flush any buffered data\n\n    this.flush = function () {\n      hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n      this.transmuxPipeline_.headOfPipeline.flush();\n    };\n    this.endTimeline = function () {\n      this.transmuxPipeline_.headOfPipeline.endTimeline();\n    };\n    this.reset = function () {\n      if (this.transmuxPipeline_.headOfPipeline) {\n        this.transmuxPipeline_.headOfPipeline.reset();\n      }\n    }; // Caption data has to be reset when seeking outside buffered range\n\n    this.resetCaptions = function () {\n      if (this.transmuxPipeline_.captionStream) {\n        this.transmuxPipeline_.captionStream.reset();\n      }\n    };\n  };\n  Transmuxer.prototype = new Stream();\n  var transmuxer = {\n    Transmuxer: Transmuxer,\n    VideoSegmentStream: VideoSegmentStream,\n    AudioSegmentStream: AudioSegmentStream,\n    AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n    VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n    // exported for testing\n    generateSegmentTimingInfo: generateSegmentTimingInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var toUnsigned$3 = function (value) {\n    return value >>> 0;\n  };\n  var toHexString$1 = function (value) {\n    return ('00' + value.toString(16)).slice(-2);\n  };\n  var bin = {\n    toUnsigned: toUnsigned$3,\n    toHexString: toHexString$1\n  };\n  var parseType$4 = function (buffer) {\n    var result = '';\n    result += String.fromCharCode(buffer[0]);\n    result += String.fromCharCode(buffer[1]);\n    result += String.fromCharCode(buffer[2]);\n    result += String.fromCharCode(buffer[3]);\n    return result;\n  };\n  var parseType_1 = parseType$4;\n  var toUnsigned$2 = bin.toUnsigned;\n  var parseType$3 = parseType_1;\n  var findBox$5 = function (data, path) {\n    var results = [],\n      i,\n      size,\n      type,\n      end,\n      subresults;\n    if (!path.length) {\n      // short-circuit the search for empty paths\n      return null;\n    }\n    for (i = 0; i < data.byteLength;) {\n      size = toUnsigned$2(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n      type = parseType$3(data.subarray(i + 4, i + 8));\n      end = size > 1 ? i + size : data.byteLength;\n      if (type === path[0]) {\n        if (path.length === 1) {\n          // this is the end of the path and we've found the box we were\n          // looking for\n          results.push(data.subarray(i + 8, end));\n        } else {\n          // recursively search for the next box along the path\n          subresults = findBox$5(data.subarray(i + 8, end), path.slice(1));\n          if (subresults.length) {\n            results = results.concat(subresults);\n          }\n        }\n      }\n      i = end;\n    } // we've finished searching all of data\n\n    return results;\n  };\n  var findBox_1 = findBox$5;\n  var toUnsigned$1 = bin.toUnsigned;\n  var getUint64$4 = numbers.getUint64;\n  var tfdt = function (data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n    if (result.version === 1) {\n      result.baseMediaDecodeTime = getUint64$4(data.subarray(4));\n    } else {\n      result.baseMediaDecodeTime = toUnsigned$1(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]);\n    }\n    return result;\n  };\n  var parseTfdt$3 = tfdt;\n  var tfhd = function (data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4)\n      },\n      baseDataOffsetPresent = result.flags[2] & 0x01,\n      sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n      defaultSampleDurationPresent = result.flags[2] & 0x08,\n      defaultSampleSizePresent = result.flags[2] & 0x10,\n      defaultSampleFlagsPresent = result.flags[2] & 0x20,\n      durationIsEmpty = result.flags[0] & 0x010000,\n      defaultBaseIsMoof = result.flags[0] & 0x020000,\n      i;\n    i = 8;\n    if (baseDataOffsetPresent) {\n      i += 4; // truncate top 4 bytes\n      // FIXME: should we read the full 64 bits?\n\n      result.baseDataOffset = view.getUint32(12);\n      i += 4;\n    }\n    if (sampleDescriptionIndexPresent) {\n      result.sampleDescriptionIndex = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleDurationPresent) {\n      result.defaultSampleDuration = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleSizePresent) {\n      result.defaultSampleSize = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleFlagsPresent) {\n      result.defaultSampleFlags = view.getUint32(i);\n    }\n    if (durationIsEmpty) {\n      result.durationIsEmpty = true;\n    }\n    if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n      result.baseDataOffsetIsMoof = true;\n    }\n    return result;\n  };\n  var parseTfhd$2 = tfhd;\n  var getUint64$3 = numbers.getUint64;\n  var parseSidx = function (data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        references: [],\n        referenceId: view.getUint32(4),\n        timescale: view.getUint32(8)\n      },\n      i = 12;\n    if (result.version === 0) {\n      result.earliestPresentationTime = view.getUint32(i);\n      result.firstOffset = view.getUint32(i + 4);\n      i += 8;\n    } else {\n      // read 64 bits\n      result.earliestPresentationTime = getUint64$3(data.subarray(i));\n      result.firstOffset = getUint64$3(data.subarray(i + 8));\n      i += 16;\n    }\n    i += 2; // reserved\n\n    var referenceCount = view.getUint16(i);\n    i += 2; // start of references\n\n    for (; referenceCount > 0; i += 12, referenceCount--) {\n      result.references.push({\n        referenceType: (data[i] & 0x80) >>> 7,\n        referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n        subsegmentDuration: view.getUint32(i + 4),\n        startsWithSap: !!(data[i + 8] & 0x80),\n        sapType: (data[i + 8] & 0x70) >>> 4,\n        sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n      });\n    }\n    return result;\n  };\n  var parseSidx_1 = parseSidx;\n  var parseSampleFlags$1 = function (flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: flags[2] << 8 | flags[3]\n    };\n  };\n  var parseSampleFlags_1 = parseSampleFlags$1;\n  var parseSampleFlags = parseSampleFlags_1;\n  var trun = function (data) {\n    var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        samples: []\n      },\n      view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      // Flag interpretation\n      dataOffsetPresent = result.flags[2] & 0x01,\n      // compare with 2nd byte of 0x1\n      firstSampleFlagsPresent = result.flags[2] & 0x04,\n      // compare with 2nd byte of 0x4\n      sampleDurationPresent = result.flags[1] & 0x01,\n      // compare with 2nd byte of 0x100\n      sampleSizePresent = result.flags[1] & 0x02,\n      // compare with 2nd byte of 0x200\n      sampleFlagsPresent = result.flags[1] & 0x04,\n      // compare with 2nd byte of 0x400\n      sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n      // compare with 2nd byte of 0x800\n      sampleCount = view.getUint32(4),\n      offset = 8,\n      sample;\n    if (dataOffsetPresent) {\n      // 32 bit signed integer\n      result.dataOffset = view.getInt32(offset);\n      offset += 4;\n    } // Overrides the flags for the first sample only. The order of\n    // optional values will be: duration, size, compositionTimeOffset\n\n    if (firstSampleFlagsPresent && sampleCount) {\n      sample = {\n        flags: parseSampleFlags(data.subarray(offset, offset + 4))\n      };\n      offset += 4;\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n        offset += 4;\n      }\n      result.samples.push(sample);\n      sampleCount--;\n    }\n    while (sampleCount--) {\n      sample = {};\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleFlagsPresent) {\n        sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n        offset += 4;\n      }\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n        offset += 4;\n      }\n      result.samples.push(sample);\n    }\n    return result;\n  };\n  var parseTrun$2 = trun;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Parse the internal MP4 structure into an equivalent javascript\n   * object.\n   */\n\n  var numberHelpers = numbers;\n  var getUint64$2 = numberHelpers.getUint64;\n  var inspectMp4,\n    textifyMp4,\n    parseMp4Date = function (seconds) {\n      return new Date(seconds * 1000 - 2082844800000);\n    },\n    parseType$2 = parseType_1,\n    findBox$4 = findBox_1,\n    nalParse = function (avcStream) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n        result = [],\n        i,\n        length;\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n          continue;\n        }\n        switch (avcStream[i] & 0x1F) {\n          case 0x01:\n            result.push('slice_layer_without_partitioning_rbsp');\n            break;\n          case 0x05:\n            result.push('slice_layer_without_partitioning_rbsp_idr');\n            break;\n          case 0x06:\n            result.push('sei_rbsp');\n            break;\n          case 0x07:\n            result.push('seq_parameter_set_rbsp');\n            break;\n          case 0x08:\n            result.push('pic_parameter_set_rbsp');\n            break;\n          case 0x09:\n            result.push('access_unit_delimiter_rbsp');\n            break;\n          default:\n            result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n            break;\n        }\n      }\n      return result;\n    },\n    // registry of handlers for individual mp4 box types\n    parse = {\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      avc1: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          dataReferenceIndex: view.getUint16(6),\n          width: view.getUint16(24),\n          height: view.getUint16(26),\n          horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n          vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n          frameCount: view.getUint16(40),\n          depth: view.getUint16(74),\n          config: inspectMp4(data.subarray(78, data.byteLength))\n        };\n      },\n      avcC: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            configurationVersion: data[0],\n            avcProfileIndication: data[1],\n            profileCompatibility: data[2],\n            avcLevelIndication: data[3],\n            lengthSizeMinusOne: data[4] & 0x03,\n            sps: [],\n            pps: []\n          },\n          numOfSequenceParameterSets = data[5] & 0x1f,\n          numOfPictureParameterSets,\n          nalSize,\n          offset,\n          i; // iterate past any SPSs\n\n        offset = 6;\n        for (i = 0; i < numOfSequenceParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        } // iterate past any PPSs\n\n        numOfPictureParameterSets = data[offset];\n        offset++;\n        for (i = 0; i < numOfPictureParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n        return result;\n      },\n      btrt: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          bufferSizeDB: view.getUint32(0),\n          maxBitrate: view.getUint32(4),\n          avgBitrate: view.getUint32(8)\n        };\n      },\n      edts: function edts(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      elst: function elst(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: view.getUint8(0),\n            flags: new Uint8Array(data.subarray(1, 4)),\n            edits: []\n          },\n          entryCount = view.getUint32(4),\n          i;\n        for (i = 8; entryCount; entryCount--) {\n          if (result.version === 0) {\n            result.edits.push({\n              segmentDuration: view.getUint32(i),\n              mediaTime: view.getInt32(i + 4),\n              mediaRate: view.getUint16(i + 8) + view.getUint16(i + 10) / (256 * 256)\n            });\n            i += 12;\n          } else {\n            result.edits.push({\n              segmentDuration: getUint64$2(data.subarray(i)),\n              mediaTime: getUint64$2(data.subarray(i + 8)),\n              mediaRate: view.getUint16(i + 16) + view.getUint16(i + 18) / (256 * 256)\n            });\n            i += 20;\n          }\n        }\n        return result;\n      },\n      esds: function (data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          esId: data[6] << 8 | data[7],\n          streamPriority: data[8] & 0x1f,\n          decoderConfig: {\n            objectProfileIndication: data[11],\n            streamType: data[12] >>> 2 & 0x3f,\n            bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n            maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n            avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n            decoderConfigDescriptor: {\n              tag: data[24],\n              length: data[25],\n              audioObjectType: data[26] >>> 3 & 0x1f,\n              samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n              channelConfiguration: data[27] >>> 3 & 0x0f\n            }\n          }\n        };\n      },\n      ftyp: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            majorBrand: parseType$2(data.subarray(0, 4)),\n            minorVersion: view.getUint32(4),\n            compatibleBrands: []\n          },\n          i = 8;\n        while (i < data.byteLength) {\n          result.compatibleBrands.push(parseType$2(data.subarray(i, i + 4)));\n          i += 4;\n        }\n        return result;\n      },\n      dinf: function (data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      dref: function (data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          dataReferences: inspectMp4(data.subarray(8))\n        };\n      },\n      hdlr: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: view.getUint8(0),\n            flags: new Uint8Array(data.subarray(1, 4)),\n            handlerType: parseType$2(data.subarray(8, 12)),\n            name: ''\n          },\n          i = 8; // parse out the name field\n\n        for (i = 24; i < data.byteLength; i++) {\n          if (data[i] === 0x00) {\n            // the name field is null-terminated\n            i++;\n            break;\n          }\n          result.name += String.fromCharCode(data[i]);\n        } // decode UTF-8 to javascript's internal representation\n        // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n\n        result.name = decodeURIComponent(escape(result.name));\n        return result;\n      },\n      mdat: function (data) {\n        return {\n          byteLength: data.byteLength,\n          nals: nalParse(data)\n        };\n      },\n      mdhd: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          i = 4,\n          language,\n          result = {\n            version: view.getUint8(0),\n            flags: new Uint8Array(data.subarray(1, 4)),\n            language: ''\n          };\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n        i += 4; // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n        // each field is the packed difference between its ASCII value and 0x60\n\n        language = view.getUint16(i);\n        result.language += String.fromCharCode((language >> 10) + 0x60);\n        result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n        result.language += String.fromCharCode((language & 0x1f) + 0x60);\n        return result;\n      },\n      mdia: function (data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mfhd: function (data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n      },\n      minf: function (data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      mp4a: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            // 6 bytes reserved\n            dataReferenceIndex: view.getUint16(6),\n            // 4 + 4 bytes reserved\n            channelcount: view.getUint16(16),\n            samplesize: view.getUint16(18),\n            // 2 bytes pre_defined\n            // 2 bytes reserved\n            samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n          }; // if there are more bytes to process, assume this is an ISO/IEC\n        // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n\n        if (data.byteLength > 28) {\n          result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n        }\n        return result;\n      },\n      moof: function (data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      moov: function (data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvex: function (data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvhd: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          i = 4,\n          result = {\n            version: view.getUint8(0),\n            flags: new Uint8Array(data.subarray(1, 4))\n          };\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n        i += 4; // convert fixed-point, base 16 back to a number\n\n        result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        i += 2 * 4;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        i += 6 * 4;\n        result.nextTrackId = view.getUint32(i);\n        return result;\n      },\n      pdin: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          rate: view.getUint32(4),\n          initialDelay: view.getUint32(8)\n        };\n      },\n      sdtp: function (data) {\n        var result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            samples: []\n          },\n          i;\n        for (i = 4; i < data.byteLength; i++) {\n          result.samples.push({\n            dependsOn: (data[i] & 0x30) >> 4,\n            isDependedOn: (data[i] & 0x0c) >> 2,\n            hasRedundancy: data[i] & 0x03\n          });\n        }\n        return result;\n      },\n      sidx: parseSidx_1,\n      smhd: function (data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          balance: data[4] + data[5] / 256\n        };\n      },\n      stbl: function (data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      ctts: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: view.getUint8(0),\n            flags: new Uint8Array(data.subarray(1, 4)),\n            compositionOffsets: []\n          },\n          entryCount = view.getUint32(4),\n          i;\n        for (i = 8; entryCount; i += 8, entryCount--) {\n          result.compositionOffsets.push({\n            sampleCount: view.getUint32(i),\n            sampleOffset: view[result.version === 0 ? 'getUint32' : 'getInt32'](i + 4)\n          });\n        }\n        return result;\n      },\n      stss: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: view.getUint8(0),\n            flags: new Uint8Array(data.subarray(1, 4)),\n            syncSamples: []\n          },\n          entryCount = view.getUint32(4),\n          i;\n        for (i = 8; entryCount; i += 4, entryCount--) {\n          result.syncSamples.push(view.getUint32(i));\n        }\n        return result;\n      },\n      stco: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            chunkOffsets: []\n          },\n          entryCount = view.getUint32(4),\n          i;\n        for (i = 8; entryCount; i += 4, entryCount--) {\n          result.chunkOffsets.push(view.getUint32(i));\n        }\n        return result;\n      },\n      stsc: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          entryCount = view.getUint32(4),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            sampleToChunks: []\n          },\n          i;\n        for (i = 8; entryCount; i += 12, entryCount--) {\n          result.sampleToChunks.push({\n            firstChunk: view.getUint32(i),\n            samplesPerChunk: view.getUint32(i + 4),\n            sampleDescriptionIndex: view.getUint32(i + 8)\n          });\n        }\n        return result;\n      },\n      stsd: function (data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleDescriptions: inspectMp4(data.subarray(8))\n        };\n      },\n      stsz: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            sampleSize: view.getUint32(4),\n            entries: []\n          },\n          i;\n        for (i = 12; i < data.byteLength; i += 4) {\n          result.entries.push(view.getUint32(i));\n        }\n        return result;\n      },\n      stts: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            timeToSamples: []\n          },\n          entryCount = view.getUint32(4),\n          i;\n        for (i = 8; entryCount; i += 8, entryCount--) {\n          result.timeToSamples.push({\n            sampleCount: view.getUint32(i),\n            sampleDelta: view.getUint32(i + 4)\n          });\n        }\n        return result;\n      },\n      styp: function (data) {\n        return parse.ftyp(data);\n      },\n      tfdt: parseTfdt$3,\n      tfhd: parseTfhd$2,\n      tkhd: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          i = 4,\n          result = {\n            version: view.getUint8(0),\n            flags: new Uint8Array(data.subarray(1, 4))\n          };\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n        i += 4;\n        i += 2 * 4;\n        result.layer = view.getUint16(i);\n        i += 2;\n        result.alternateGroup = view.getUint16(i);\n        i += 2; // convert fixed-point, base 16 back to a number\n\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        result.width = view.getUint16(i) + view.getUint16(i + 2) / 65536;\n        i += 4;\n        result.height = view.getUint16(i) + view.getUint16(i + 2) / 65536;\n        return result;\n      },\n      traf: function (data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trak: function (data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trex: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4),\n          defaultSampleDescriptionIndex: view.getUint32(8),\n          defaultSampleDuration: view.getUint32(12),\n          defaultSampleSize: view.getUint32(16),\n          sampleDependsOn: data[20] & 0x03,\n          sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n          sampleHasRedundancy: (data[21] & 0x30) >> 4,\n          samplePaddingValue: (data[21] & 0x0e) >> 1,\n          sampleIsDifferenceSample: !!(data[21] & 0x01),\n          sampleDegradationPriority: view.getUint16(22)\n        };\n      },\n      trun: parseTrun$2,\n      'url ': function (data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      },\n      vmhd: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          graphicsmode: view.getUint16(4),\n          opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n        };\n      }\n    };\n  /**\n   * Return a javascript array of box objects parsed from an ISO base\n   * media file.\n   * @param data {Uint8Array} the binary data of the media to be inspected\n   * @return {array} a javascript array of potentially nested box objects\n   */\n\n  inspectMp4 = function (data) {\n    var i = 0,\n      result = [],\n      view,\n      size,\n      type,\n      end,\n      box; // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n\n    var ab = new ArrayBuffer(data.length);\n    var v = new Uint8Array(ab);\n    for (var z = 0; z < data.length; ++z) {\n      v[z] = data[z];\n    }\n    view = new DataView(ab);\n    while (i < data.byteLength) {\n      // parse box data\n      size = view.getUint32(i);\n      type = parseType$2(data.subarray(i + 4, i + 8));\n      end = size > 1 ? i + size : data.byteLength; // parse type-specific data\n\n      box = (parse[type] || function (data) {\n        return {\n          data: data\n        };\n      })(data.subarray(i + 8, end));\n      box.size = size;\n      box.type = type; // store this box and move to the next\n\n      result.push(box);\n      i = end;\n    }\n    return result;\n  };\n  /**\n   * Returns a textual representation of the javascript represtentation\n   * of an MP4 file. You can use it as an alternative to\n   * JSON.stringify() to compare inspected MP4s.\n   * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n   * file\n   * @param depth {number} (optional) the number of ancestor boxes of\n   * the elements of inspectedMp4. Assumed to be zero if unspecified.\n   * @return {string} a text representation of the parsed MP4\n   */\n\n  textifyMp4 = function (inspectedMp4, depth) {\n    var indent;\n    depth = depth || 0;\n    indent = new Array(depth * 2 + 1).join(' '); // iterate over all the boxes\n\n    return inspectedMp4.map(function (box, index) {\n      // list the box type first at the current indentation level\n      return indent + box.type + '\\n' +\n      // the type is already included and handle child boxes separately\n      Object.keys(box).filter(function (key) {\n        return key !== 'type' && key !== 'boxes'; // output all the box properties\n      }).map(function (key) {\n        var prefix = indent + '  ' + key + ': ',\n          value = box[key]; // print out raw bytes as hexademical\n\n        if (value instanceof Uint8Array || value instanceof Uint32Array) {\n          var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (byte) {\n            return ' ' + ('00' + byte.toString(16)).slice(-2);\n          }).join('').match(/.{1,24}/g);\n          if (!bytes) {\n            return prefix + '<>';\n          }\n          if (bytes.length === 1) {\n            return prefix + '<' + bytes.join('').slice(1) + '>';\n          }\n          return prefix + '<\\n' + bytes.map(function (line) {\n            return indent + '  ' + line;\n          }).join('\\n') + '\\n' + indent + '  >';\n        } // stringify generic objects\n\n        return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n          if (index === 0) {\n            return line;\n          }\n          return indent + '  ' + line;\n        }).join('\\n');\n      }).join('\\n') + (\n      // recursively textify the child boxes\n      box.boxes ? '\\n' + textifyMp4(box.boxes, depth + 1) : '');\n    }).join('\\n');\n  };\n  var mp4Inspector = {\n    inspect: inspectMp4,\n    textify: textifyMp4,\n    parseType: parseType$2,\n    findBox: findBox$4,\n    parseTraf: parse.traf,\n    parseTfdt: parse.tfdt,\n    parseHdlr: parse.hdlr,\n    parseTfhd: parse.tfhd,\n    parseTrun: parse.trun,\n    parseSidx: parse.sidx\n  };\n  /**\n   * Returns the first string in the data array ending with a null char '\\0'\n   * @param {UInt8} data \n   * @returns the string with the null char\n   */\n\n  var uint8ToCString$1 = function (data) {\n    var index = 0;\n    var curChar = String.fromCharCode(data[index]);\n    var retString = '';\n    while (curChar !== '\\0') {\n      retString += curChar;\n      index++;\n      curChar = String.fromCharCode(data[index]);\n    } // Add nullChar\n\n    retString += curChar;\n    return retString;\n  };\n  var string = {\n    uint8ToCString: uint8ToCString$1\n  };\n  var uint8ToCString = string.uint8ToCString;\n  var getUint64$1 = numbers.getUint64;\n  /**\n   * Based on: ISO/IEC 23009 Section: 5.10.3.3\n   * References:\n   * https://dashif-documents.azurewebsites.net/Events/master/event.html#emsg-format\n   * https://aomediacodec.github.io/id3-emsg/\n   * \n   * Takes emsg box data as a uint8 array and returns a emsg box object\n   * @param {UInt8Array} boxData data from emsg box\n   * @returns A parsed emsg box object\n   */\n\n  var parseEmsgBox = function (boxData) {\n    // version + flags\n    var offset = 4;\n    var version = boxData[0];\n    var scheme_id_uri, value, timescale, presentation_time, presentation_time_delta, event_duration, id, message_data;\n    if (version === 0) {\n      scheme_id_uri = uint8ToCString(boxData.subarray(offset));\n      offset += scheme_id_uri.length;\n      value = uint8ToCString(boxData.subarray(offset));\n      offset += value.length;\n      var dv = new DataView(boxData.buffer);\n      timescale = dv.getUint32(offset);\n      offset += 4;\n      presentation_time_delta = dv.getUint32(offset);\n      offset += 4;\n      event_duration = dv.getUint32(offset);\n      offset += 4;\n      id = dv.getUint32(offset);\n      offset += 4;\n    } else if (version === 1) {\n      var dv = new DataView(boxData.buffer);\n      timescale = dv.getUint32(offset);\n      offset += 4;\n      presentation_time = getUint64$1(boxData.subarray(offset));\n      offset += 8;\n      event_duration = dv.getUint32(offset);\n      offset += 4;\n      id = dv.getUint32(offset);\n      offset += 4;\n      scheme_id_uri = uint8ToCString(boxData.subarray(offset));\n      offset += scheme_id_uri.length;\n      value = uint8ToCString(boxData.subarray(offset));\n      offset += value.length;\n    }\n    message_data = new Uint8Array(boxData.subarray(offset, boxData.byteLength));\n    var emsgBox = {\n      scheme_id_uri,\n      value,\n      // if timescale is undefined or 0 set to 1 \n      timescale: timescale ? timescale : 1,\n      presentation_time,\n      presentation_time_delta,\n      event_duration,\n      id,\n      message_data\n    };\n    return isValidEmsgBox(version, emsgBox) ? emsgBox : undefined;\n  };\n  /**\n   * Scales a presentation time or time delta with an offset with a provided timescale\n   * @param {number} presentationTime \n   * @param {number} timescale \n   * @param {number} timeDelta \n   * @param {number} offset \n   * @returns the scaled time as a number\n   */\n\n  var scaleTime = function (presentationTime, timescale, timeDelta, offset) {\n    return presentationTime || presentationTime === 0 ? presentationTime / timescale : offset + timeDelta / timescale;\n  };\n  /**\n   * Checks the emsg box data for validity based on the version\n   * @param {number} version of the emsg box to validate\n   * @param {Object} emsg the emsg data to validate\n   * @returns if the box is valid as a boolean\n   */\n\n  var isValidEmsgBox = function (version, emsg) {\n    var hasScheme = emsg.scheme_id_uri !== '\\0';\n    var isValidV0Box = version === 0 && isDefined(emsg.presentation_time_delta) && hasScheme;\n    var isValidV1Box = version === 1 && isDefined(emsg.presentation_time) && hasScheme; // Only valid versions of emsg are 0 and 1\n\n    return !(version > 1) && isValidV0Box || isValidV1Box;\n  }; // Utility function to check if an object is defined\n\n  var isDefined = function (data) {\n    return data !== undefined || data !== null;\n  };\n  var emsg$1 = {\n    parseEmsgBox: parseEmsgBox,\n    scaleTime: scaleTime\n  };\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about MP4s.\n   */\n\n  var toUnsigned = bin.toUnsigned;\n  var toHexString = bin.toHexString;\n  var findBox$3 = findBox_1;\n  var parseType$1 = parseType_1;\n  var emsg = emsg$1;\n  var parseTfhd$1 = parseTfhd$2;\n  var parseTrun$1 = parseTrun$2;\n  var parseTfdt$2 = parseTfdt$3;\n  var getUint64 = numbers.getUint64;\n  var timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks, getTimescaleFromMediaHeader$1, getEmsgID3;\n  var window$2 = window_1;\n  var parseId3Frames = parseId3.parseId3Frames;\n  /**\n   * Parses an MP4 initialization segment and extracts the timescale\n   * values for any declared tracks. Timescale values indicate the\n   * number of clock ticks per second to assume for time-based values\n   * elsewhere in the MP4.\n   *\n   * To determine the start time of an MP4, you need two pieces of\n   * information: the timescale unit and the earliest base media decode\n   * time. Multiple timescales can be specified within an MP4 but the\n   * base media decode time is always expressed in the timescale from\n   * the media header box for the track:\n   * ```\n   * moov > trak > mdia > mdhd.timescale\n   * ```\n   * @param init {Uint8Array} the bytes of the init segment\n   * @return {object} a hash of track ids to timescale values or null if\n   * the init segment is malformed.\n   */\n\n  timescale = function (init) {\n    var result = {},\n      traks = findBox$3(init, ['moov', 'trak']); // mdhd timescale\n\n    return traks.reduce(function (result, trak) {\n      var tkhd, version, index, id, mdhd;\n      tkhd = findBox$3(trak, ['tkhd'])[0];\n      if (!tkhd) {\n        return null;\n      }\n      version = tkhd[0];\n      index = version === 0 ? 12 : 20;\n      id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n      mdhd = findBox$3(trak, ['mdia', 'mdhd'])[0];\n      if (!mdhd) {\n        return null;\n      }\n      version = mdhd[0];\n      index = version === 0 ? 12 : 20;\n      result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n      return result;\n    }, result);\n  };\n  /**\n   * Determine the base media decode start time, in seconds, for an MP4\n   * fragment. If multiple fragments are specified, the earliest time is\n   * returned.\n   *\n   * The base media decode time can be parsed from track fragment\n   * metadata:\n   * ```\n   * moof > traf > tfdt.baseMediaDecodeTime\n   * ```\n   * It requires the timescale value from the mdhd to interpret.\n   *\n   * @param timescale {object} a hash of track ids to timescale values.\n   * @return {number} the earliest base media decode start time for the\n   * fragment, in seconds\n   */\n\n  startTime = function (timescale, fragment) {\n    var trafs; // we need info from two childrend of each track fragment box\n\n    trafs = findBox$3(fragment, ['moof', 'traf']); // determine the start times for each track\n\n    var lowestTime = trafs.reduce(function (acc, traf) {\n      var tfhd = findBox$3(traf, ['tfhd'])[0]; // get the track id from the tfhd\n\n      var id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n      var scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n      var tfdt = findBox$3(traf, ['tfdt'])[0];\n      var dv = new DataView(tfdt.buffer, tfdt.byteOffset, tfdt.byteLength);\n      var baseTime; // version 1 is 64 bit\n\n      if (tfdt[0] === 1) {\n        baseTime = getUint64(tfdt.subarray(4, 12));\n      } else {\n        baseTime = dv.getUint32(4);\n      } // convert base time to seconds if it is a valid number.\n\n      let seconds;\n      if (typeof baseTime === 'bigint') {\n        seconds = baseTime / window$2.BigInt(scale);\n      } else if (typeof baseTime === 'number' && !isNaN(baseTime)) {\n        seconds = baseTime / scale;\n      }\n      if (seconds < Number.MAX_SAFE_INTEGER) {\n        seconds = Number(seconds);\n      }\n      if (seconds < acc) {\n        acc = seconds;\n      }\n      return acc;\n    }, Infinity);\n    return typeof lowestTime === 'bigint' || isFinite(lowestTime) ? lowestTime : 0;\n  };\n  /**\n   * Determine the composition start, in seconds, for an MP4\n   * fragment.\n   *\n   * The composition start time of a fragment can be calculated using the base\n   * media decode time, composition time offset, and timescale, as follows:\n   *\n   * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n   *\n   * All of the aforementioned information is contained within a media fragment's\n   * `traf` box, except for timescale info, which comes from the initialization\n   * segment, so a track id (also contained within a `traf`) is also necessary to\n   * associate it with a timescale\n   *\n   *\n   * @param timescales {object} - a hash of track ids to timescale values.\n   * @param fragment {Unit8Array} - the bytes of a media segment\n   * @return {number} the composition start time for the fragment, in seconds\n   **/\n\n  compositionStartTime = function (timescales, fragment) {\n    var trafBoxes = findBox$3(fragment, ['moof', 'traf']);\n    var baseMediaDecodeTime = 0;\n    var compositionTimeOffset = 0;\n    var trackId;\n    if (trafBoxes && trafBoxes.length) {\n      // The spec states that track run samples contained within a `traf` box are contiguous, but\n      // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n      // We will assume that they are, so we only need the first to calculate start time.\n      var tfhd = findBox$3(trafBoxes[0], ['tfhd'])[0];\n      var trun = findBox$3(trafBoxes[0], ['trun'])[0];\n      var tfdt = findBox$3(trafBoxes[0], ['tfdt'])[0];\n      if (tfhd) {\n        var parsedTfhd = parseTfhd$1(tfhd);\n        trackId = parsedTfhd.trackId;\n      }\n      if (tfdt) {\n        var parsedTfdt = parseTfdt$2(tfdt);\n        baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\n      }\n      if (trun) {\n        var parsedTrun = parseTrun$1(trun);\n        if (parsedTrun.samples && parsedTrun.samples.length) {\n          compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\n        }\n      }\n    } // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n    // specified.\n\n    var timescale = timescales[trackId] || 90e3; // return the composition start time, in seconds\n\n    if (typeof baseMediaDecodeTime === 'bigint') {\n      compositionTimeOffset = window$2.BigInt(compositionTimeOffset);\n      timescale = window$2.BigInt(timescale);\n    }\n    var result = (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n    if (typeof result === 'bigint' && result < Number.MAX_SAFE_INTEGER) {\n      result = Number(result);\n    }\n    return result;\n  };\n  /**\n    * Find the trackIds of the video tracks in this source.\n    * Found by parsing the Handler Reference and Track Header Boxes:\n    *   moov > trak > mdia > hdlr\n    *   moov > trak > tkhd\n    *\n    * @param {Uint8Array} init - The bytes of the init segment for this source\n    * @return {Number[]} A list of trackIds\n    *\n    * @see ISO-BMFF-12/2015, Section 8.4.3\n   **/\n\n  getVideoTrackIds = function (init) {\n    var traks = findBox$3(init, ['moov', 'trak']);\n    var videoTrackIds = [];\n    traks.forEach(function (trak) {\n      var hdlrs = findBox$3(trak, ['mdia', 'hdlr']);\n      var tkhds = findBox$3(trak, ['tkhd']);\n      hdlrs.forEach(function (hdlr, index) {\n        var handlerType = parseType$1(hdlr.subarray(8, 12));\n        var tkhd = tkhds[index];\n        var view;\n        var version;\n        var trackId;\n        if (handlerType === 'vide') {\n          view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n          version = view.getUint8(0);\n          trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n          videoTrackIds.push(trackId);\n        }\n      });\n    });\n    return videoTrackIds;\n  };\n  getTimescaleFromMediaHeader$1 = function (mdhd) {\n    // mdhd is a FullBox, meaning it will have its own version as the first byte\n    var version = mdhd[0];\n    var index = version === 0 ? 12 : 20;\n    return toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n  };\n  /**\n   * Get all the video, audio, and hint tracks from a non fragmented\n   * mp4 segment\n   */\n\n  getTracks = function (init) {\n    var traks = findBox$3(init, ['moov', 'trak']);\n    var tracks = [];\n    traks.forEach(function (trak) {\n      var track = {};\n      var tkhd = findBox$3(trak, ['tkhd'])[0];\n      var view, tkhdVersion; // id\n\n      if (tkhd) {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        tkhdVersion = view.getUint8(0);\n        track.id = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n      }\n      var hdlr = findBox$3(trak, ['mdia', 'hdlr'])[0]; // type\n\n      if (hdlr) {\n        var type = parseType$1(hdlr.subarray(8, 12));\n        if (type === 'vide') {\n          track.type = 'video';\n        } else if (type === 'soun') {\n          track.type = 'audio';\n        } else {\n          track.type = type;\n        }\n      } // codec\n\n      var stsd = findBox$3(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n      if (stsd) {\n        var sampleDescriptions = stsd.subarray(8); // gives the codec type string\n\n        track.codec = parseType$1(sampleDescriptions.subarray(4, 8));\n        var codecBox = findBox$3(sampleDescriptions, [track.codec])[0];\n        var codecConfig, codecConfigType;\n        if (codecBox) {\n          // https://tools.ietf.org/html/rfc6381#section-3.3\n          if (/^[asm]vc[1-9]$/i.test(track.codec)) {\n            // we don't need anything but the \"config\" parameter of the\n            // avc1 codecBox\n            codecConfig = codecBox.subarray(78);\n            codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n            if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n              track.codec += '.'; // left padded with zeroes for single digit hex\n              // profile idc\n\n              track.codec += toHexString(codecConfig[9]); // the byte containing the constraint_set flags\n\n              track.codec += toHexString(codecConfig[10]); // level idc\n\n              track.codec += toHexString(codecConfig[11]);\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'avc1.4d400d';\n            }\n          } else if (/^mp4[a,v]$/i.test(track.codec)) {\n            // we do not need anything but the streamDescriptor of the mp4a codecBox\n            codecConfig = codecBox.subarray(28);\n            codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n            if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n              track.codec += '.' + toHexString(codecConfig[19]); // this value is only a single digit\n\n              track.codec += '.' + toHexString(codecConfig[20] >>> 2 & 0x3f).replace(/^0/, '');\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'mp4a.40.2';\n            }\n          } else {\n            // flac, opus, etc\n            track.codec = track.codec.toLowerCase();\n          }\n        }\n      }\n      var mdhd = findBox$3(trak, ['mdia', 'mdhd'])[0];\n      if (mdhd) {\n        track.timescale = getTimescaleFromMediaHeader$1(mdhd);\n      }\n      tracks.push(track);\n    });\n    return tracks;\n  };\n  /**\n   * Returns an array of emsg ID3 data from the provided segmentData.\n   * An offset can also be provided as the Latest Arrival Time to calculate \n   * the Event Start Time of v0 EMSG boxes. \n   * See: https://dashif-documents.azurewebsites.net/Events/master/event.html#Inband-event-timing\n   * \n   * @param {Uint8Array} segmentData the segment byte array.\n   * @param {number} offset the segment start time or Latest Arrival Time, \n   * @return {Object[]} an array of ID3 parsed from EMSG boxes\n   */\n\n  getEmsgID3 = function (segmentData, offset = 0) {\n    var emsgBoxes = findBox$3(segmentData, ['emsg']);\n    return emsgBoxes.map(data => {\n      var parsedBox = emsg.parseEmsgBox(new Uint8Array(data));\n      var parsedId3Frames = parseId3Frames(parsedBox.message_data);\n      return {\n        cueTime: emsg.scaleTime(parsedBox.presentation_time, parsedBox.timescale, parsedBox.presentation_time_delta, offset),\n        duration: emsg.scaleTime(parsedBox.event_duration, parsedBox.timescale),\n        frames: parsedId3Frames\n      };\n    });\n  };\n  var probe$2 = {\n    // export mp4 inspector's findBox and parseType for backwards compatibility\n    findBox: findBox$3,\n    parseType: parseType$1,\n    timescale: timescale,\n    startTime: startTime,\n    compositionStartTime: compositionStartTime,\n    videoTrackIds: getVideoTrackIds,\n    tracks: getTracks,\n    getTimescaleFromMediaHeader: getTimescaleFromMediaHeader$1,\n    getEmsgID3: getEmsgID3\n  };\n  const {\n    parseTrun\n  } = mp4Inspector;\n  const {\n    findBox: findBox$2\n  } = probe$2;\n  var window$1 = window_1;\n  /**\n   * Utility function for parsing data from mdat boxes.\n   * @param {Array<Uint8Array>} segment the segment data to create mdat/traf pairs from.\n   * @returns mdat and traf boxes paired up for easier parsing.\n   */\n\n  var getMdatTrafPairs$2 = function (segment) {\n    var trafs = findBox$2(segment, ['moof', 'traf']);\n    var mdats = findBox$2(segment, ['mdat']);\n    var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n    mdats.forEach(function (mdat, index) {\n      var matchingTraf = trafs[index];\n      mdatTrafPairs.push({\n        mdat: mdat,\n        traf: matchingTraf\n      });\n    });\n    return mdatTrafPairs;\n  };\n  /**\n    * Parses sample information out of Track Run Boxes and calculates\n    * the absolute presentation and decode timestamps of each sample.\n    *\n    * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n    * @param {Number|BigInt} baseMediaDecodeTime - base media decode time from tfdt\n        @see ISO-BMFF-12/2015, Section 8.8.12\n    * @param {Object} tfhd - The parsed Track Fragment Header\n    *   @see inspect.parseTfhd\n    * @return {Object[]} the parsed samples\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var parseSamples$2 = function (truns, baseMediaDecodeTime, tfhd) {\n    var currentDts = baseMediaDecodeTime;\n    var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n    var defaultSampleSize = tfhd.defaultSampleSize || 0;\n    var trackId = tfhd.trackId;\n    var allSamples = [];\n    truns.forEach(function (trun) {\n      // Note: We currently do not parse the sample table as well\n      // as the trun. It's possible some sources will require this.\n      // moov > trak > mdia > minf > stbl\n      var trackRun = parseTrun(trun);\n      var samples = trackRun.samples;\n      samples.forEach(function (sample) {\n        if (sample.duration === undefined) {\n          sample.duration = defaultSampleDuration;\n        }\n        if (sample.size === undefined) {\n          sample.size = defaultSampleSize;\n        }\n        sample.trackId = trackId;\n        sample.dts = currentDts;\n        if (sample.compositionTimeOffset === undefined) {\n          sample.compositionTimeOffset = 0;\n        }\n        if (typeof currentDts === 'bigint') {\n          sample.pts = currentDts + window$1.BigInt(sample.compositionTimeOffset);\n          currentDts += window$1.BigInt(sample.duration);\n        } else {\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        }\n      });\n      allSamples = allSamples.concat(samples);\n    });\n    return allSamples;\n  };\n  var samples = {\n    getMdatTrafPairs: getMdatTrafPairs$2,\n    parseSamples: parseSamples$2\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band CEA-708 captions out of FMP4 segments.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   */\n\n  var discardEmulationPreventionBytes = captionPacketParser.discardEmulationPreventionBytes;\n  var CaptionStream = captionStream.CaptionStream;\n  var findBox$1 = findBox_1;\n  var parseTfdt$1 = parseTfdt$3;\n  var parseTfhd = parseTfhd$2;\n  var {\n    getMdatTrafPairs: getMdatTrafPairs$1,\n    parseSamples: parseSamples$1\n  } = samples;\n  /**\n    * Maps an offset in the mdat to a sample based on the the size of the samples.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Number} offset - The offset into the mdat\n    * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n    * @return {?Object} The matching sample, or null if no match was found.\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var mapToSample = function (offset, samples) {\n    var approximateOffset = offset;\n    for (var i = 0; i < samples.length; i++) {\n      var sample = samples[i];\n      if (approximateOffset < sample.size) {\n        return sample;\n      }\n      approximateOffset -= sample.size;\n    }\n    return null;\n  };\n  /**\n    * Finds SEI nal units contained in a Media Data Box.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Uint8Array} avcStream - The bytes of the mdat\n    * @param {Object[]} samples - The samples parsed out by `parseSamples`\n    * @param {Number} trackId - The trackId of this video track\n    * @return {Object[]} seiNals - the parsed SEI NALUs found.\n    *   The contents of the seiNal should match what is expected by\n    *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n    *\n    * @see ISO-BMFF-12/2015, Section 8.1.1\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n   **/\n\n  var findSeiNals = function (avcStream, samples, trackId) {\n    var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = {\n        logs: [],\n        seiNals: []\n      },\n      seiNal,\n      i,\n      length,\n      lastMatchedSample;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4; // Bail if this doesn't appear to be an H264 stream\n\n      if (length <= 0) {\n        continue;\n      }\n      switch (avcStream[i] & 0x1F) {\n        case 0x06:\n          var data = avcStream.subarray(i + 1, i + 1 + length);\n          var matchingSample = mapToSample(i, samples);\n          seiNal = {\n            nalUnitType: 'sei_rbsp',\n            size: length,\n            data: data,\n            escapedRBSP: discardEmulationPreventionBytes(data),\n            trackId: trackId\n          };\n          if (matchingSample) {\n            seiNal.pts = matchingSample.pts;\n            seiNal.dts = matchingSample.dts;\n            lastMatchedSample = matchingSample;\n          } else if (lastMatchedSample) {\n            // If a matching sample cannot be found, use the last\n            // sample's values as they should be as close as possible\n            seiNal.pts = lastMatchedSample.pts;\n            seiNal.dts = lastMatchedSample.dts;\n          } else {\n            result.logs.push({\n              level: 'warn',\n              message: 'We\\'ve encountered a nal unit without data at ' + i + ' for trackId ' + trackId + '. See mux.js#223.'\n            });\n            break;\n          }\n          result.seiNals.push(seiNal);\n          break;\n      }\n    }\n    return result;\n  };\n  /**\n    * Parses out caption nals from an FMP4 segment's video tracks.\n    *\n    * @param {Uint8Array} segment - The bytes of a single segment\n    * @param {Number} videoTrackId - The trackId of a video track in the segment\n    * @return {Object.<Number, Object[]>} A mapping of video trackId to\n    *   a list of seiNals found in that track\n   **/\n\n  var parseCaptionNals = function (segment, videoTrackId) {\n    var captionNals = {};\n    var mdatTrafPairs = getMdatTrafPairs$1(segment);\n    mdatTrafPairs.forEach(function (pair) {\n      var mdat = pair.mdat;\n      var traf = pair.traf;\n      var tfhd = findBox$1(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n      var headerInfo = parseTfhd(tfhd[0]);\n      var trackId = headerInfo.trackId;\n      var tfdt = findBox$1(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n      var baseMediaDecodeTime = tfdt.length > 0 ? parseTfdt$1(tfdt[0]).baseMediaDecodeTime : 0;\n      var truns = findBox$1(traf, ['trun']);\n      var samples;\n      var result; // Only parse video data for the chosen video track\n\n      if (videoTrackId === trackId && truns.length > 0) {\n        samples = parseSamples$1(truns, baseMediaDecodeTime, headerInfo);\n        result = findSeiNals(mdat, samples, trackId);\n        if (!captionNals[trackId]) {\n          captionNals[trackId] = {\n            seiNals: [],\n            logs: []\n          };\n        }\n        captionNals[trackId].seiNals = captionNals[trackId].seiNals.concat(result.seiNals);\n        captionNals[trackId].logs = captionNals[trackId].logs.concat(result.logs);\n      }\n    });\n    return captionNals;\n  };\n  /**\n    * Parses out inband captions from an MP4 container and returns\n    * caption objects that can be used by WebVTT and the TextTrack API.\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n    * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number} trackId - The id of the video track to parse\n    * @param {Number} timescale - The timescale for the video track from the init segment\n    *\n    * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n    * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n    * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n    * @return {Object[]} parsedCaptions[].content - A list of individual caption segments\n    * @return {String} parsedCaptions[].content.text - The visible content of the caption segment\n    * @return {Number} parsedCaptions[].content.line - The line height from 1-15 for positioning of the caption segment\n    * @return {Number} parsedCaptions[].content.position - The column indent percentage for cue positioning from 10-80\n   **/\n\n  var parseEmbeddedCaptions = function (segment, trackId, timescale) {\n    var captionNals; // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n\n    if (trackId === null) {\n      return null;\n    }\n    captionNals = parseCaptionNals(segment, trackId);\n    var trackNals = captionNals[trackId] || {};\n    return {\n      seiNals: trackNals.seiNals,\n      logs: trackNals.logs,\n      timescale: timescale\n    };\n  };\n  /**\n    * Converts SEI NALUs into captions that can be used by video.js\n   **/\n\n  var CaptionParser = function () {\n    var isInitialized = false;\n    var captionStream; // Stores segments seen before trackId and timescale are set\n\n    var segmentCache; // Stores video track ID of the track being parsed\n\n    var trackId; // Stores the timescale of the track being parsed\n\n    var timescale; // Stores captions parsed so far\n\n    var parsedCaptions; // Stores whether we are receiving partial data or not\n\n    var parsingPartial;\n    /**\n      * A method to indicate whether a CaptionParser has been initalized\n      * @returns {Boolean}\n     **/\n\n    this.isInitialized = function () {\n      return isInitialized;\n    };\n    /**\n      * Initializes the underlying CaptionStream, SEI NAL parsing\n      * and management, and caption collection\n     **/\n\n    this.init = function (options) {\n      captionStream = new CaptionStream();\n      isInitialized = true;\n      parsingPartial = options ? options.isPartial : false; // Collect dispatched captions\n\n      captionStream.on('data', function (event) {\n        // Convert to seconds in the source's timescale\n        event.startTime = event.startPts / timescale;\n        event.endTime = event.endPts / timescale;\n        parsedCaptions.captions.push(event);\n        parsedCaptions.captionStreams[event.stream] = true;\n      });\n      captionStream.on('log', function (log) {\n        parsedCaptions.logs.push(log);\n      });\n    };\n    /**\n      * Determines if a new video track will be selected\n      * or if the timescale changed\n      * @return {Boolean}\n     **/\n\n    this.isNewInit = function (videoTrackIds, timescales) {\n      if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n        return false;\n      }\n      return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n    };\n    /**\n      * Parses out SEI captions and interacts with underlying\n      * CaptionStream to return dispatched captions\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n      * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n      * @see parseEmbeddedCaptions\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.parse = function (segment, videoTrackIds, timescales) {\n      var parsedData;\n      if (!this.isInitialized()) {\n        return null; // This is not likely to be a video segment\n      } else if (!videoTrackIds || !timescales) {\n        return null;\n      } else if (this.isNewInit(videoTrackIds, timescales)) {\n        // Use the first video track only as there is no\n        // mechanism to switch to other video tracks\n        trackId = videoTrackIds[0];\n        timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n        // data until we have one.\n        // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n      } else if (trackId === null || !timescale) {\n        segmentCache.push(segment);\n        return null;\n      } // Now that a timescale and trackId is set, parse cached segments\n\n      while (segmentCache.length > 0) {\n        var cachedSegment = segmentCache.shift();\n        this.parse(cachedSegment, videoTrackIds, timescales);\n      }\n      parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n      if (parsedData && parsedData.logs) {\n        parsedCaptions.logs = parsedCaptions.logs.concat(parsedData.logs);\n      }\n      if (parsedData === null || !parsedData.seiNals) {\n        if (parsedCaptions.logs.length) {\n          return {\n            logs: parsedCaptions.logs,\n            captions: [],\n            captionStreams: []\n          };\n        }\n        return null;\n      }\n      this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n      this.flushStream();\n      return parsedCaptions;\n    };\n    /**\n      * Pushes SEI NALUs onto CaptionStream\n      * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n      * Assumes that `parseCaptionNals` has been called first\n      * @see m2ts/caption-stream.js\n      **/\n\n    this.pushNals = function (nals) {\n      if (!this.isInitialized() || !nals || nals.length === 0) {\n        return null;\n      }\n      nals.forEach(function (nal) {\n        captionStream.push(nal);\n      });\n    };\n    /**\n      * Flushes underlying CaptionStream to dispatch processed, displayable captions\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.flushStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n      if (!parsingPartial) {\n        captionStream.flush();\n      } else {\n        captionStream.partialFlush();\n      }\n    };\n    /**\n      * Reset caption buckets for new data\n     **/\n\n    this.clearParsedCaptions = function () {\n      parsedCaptions.captions = [];\n      parsedCaptions.captionStreams = {};\n      parsedCaptions.logs = [];\n    };\n    /**\n      * Resets underlying CaptionStream\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.resetCaptionStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n      captionStream.reset();\n    };\n    /**\n      * Convenience method to clear all captions flushed from the\n      * CaptionStream and still being parsed\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.clearAllCaptions = function () {\n      this.clearParsedCaptions();\n      this.resetCaptionStream();\n    };\n    /**\n      * Reset caption parser\n     **/\n\n    this.reset = function () {\n      segmentCache = [];\n      trackId = null;\n      timescale = null;\n      if (!parsedCaptions) {\n        parsedCaptions = {\n          captions: [],\n          // CC1, CC2, CC3, CC4\n          captionStreams: {},\n          logs: []\n        };\n      } else {\n        this.clearParsedCaptions();\n      }\n      this.resetCaptionStream();\n    };\n    this.reset();\n  };\n  var captionParser = CaptionParser;\n  const {\n    parseTfdt\n  } = mp4Inspector;\n  const findBox = findBox_1;\n  const {\n    getTimescaleFromMediaHeader\n  } = probe$2;\n  const {\n    parseSamples,\n    getMdatTrafPairs\n  } = samples;\n  /**\n   * Module for parsing WebVTT text and styles from FMP4 segments.\n   * Based on the ISO/IEC 14496-30.\n   */\n\n  const WebVttParser = function () {\n    // default timescale to 90k\n    let timescale = 90e3;\n    /**\n     * Parses the timescale from the init segment.\n     * @param {Array<Uint8Array>} segment The initialization segment to parse the timescale from.\n     */\n\n    this.init = function (segment) {\n      // We just need the timescale from the init segment.\n      const mdhd = findBox(segment, ['moov', 'trak', 'mdia', 'mdhd'])[0];\n      if (mdhd) {\n        timescale = getTimescaleFromMediaHeader(mdhd);\n      }\n    };\n    /**\n     * Parses a WebVTT FMP4 segment.\n     * @param {Array<Uint8Array>} segment The content segment to parse the WebVTT cues from.\n     * @returns The WebVTT cue text, styling, and timing info as an array of cue objects.\n     */\n\n    this.parseSegment = function (segment) {\n      const vttCues = [];\n      const mdatTrafPairs = getMdatTrafPairs(segment);\n      let baseMediaDecodeTime = 0;\n      mdatTrafPairs.forEach(function (pair) {\n        const mdatBox = pair.mdat;\n        const trafBox = pair.traf; // zero or one.\n\n        const tfdtBox = findBox(trafBox, ['tfdt'])[0]; // zero or one.\n\n        const tfhdBox = findBox(trafBox, ['tfhd'])[0]; // zero or more.\n\n        const trunBoxes = findBox(trafBox, ['trun']);\n        if (tfdtBox) {\n          const tfdt = parseTfdt(tfdtBox);\n          baseMediaDecodeTime = tfdt.baseMediaDecodeTime;\n        }\n        if (trunBoxes.length && tfhdBox) {\n          const samples = parseSamples(trunBoxes, baseMediaDecodeTime, tfhdBox);\n          let mdatOffset = 0;\n          samples.forEach(function (sample) {\n            // decode utf8 payload\n            const UTF_8 = 'utf-8';\n            const textDecoder = new TextDecoder(UTF_8); // extract sample data from the mdat box.\n            // WebVTT Sample format:\n            // Exactly one VTTEmptyCueBox box\n            // OR one or more VTTCueBox boxes.\n\n            const sampleData = mdatBox.slice(mdatOffset, mdatOffset + sample.size); // single vtte box.\n\n            const vtteBox = findBox(sampleData, ['vtte'])[0]; // empty box\n\n            if (vtteBox) {\n              mdatOffset += sample.size;\n              return;\n            } // TODO: Support 'vtta' boxes.\n            // VTTAdditionalTextBoxes can be interleaved between VTTCueBoxes.\n\n            const vttcBoxes = findBox(sampleData, ['vttc']);\n            vttcBoxes.forEach(function (vttcBox) {\n              // mandatory payload box.\n              const paylBox = findBox(vttcBox, ['payl'])[0]; // optional settings box\n\n              const sttgBox = findBox(vttcBox, ['sttg'])[0];\n              const start = sample.pts / timescale;\n              const end = (sample.pts + sample.duration) / timescale;\n              let cueText, settings; // contains cue text.\n\n              if (paylBox) {\n                try {\n                  cueText = textDecoder.decode(paylBox);\n                } catch (e) {\n                  console.error(e);\n                }\n              } // settings box contains styling.\n\n              if (sttgBox) {\n                try {\n                  settings = textDecoder.decode(sttgBox);\n                } catch (e) {\n                  console.error(e);\n                }\n              }\n              if (sample.duration && cueText) {\n                vttCues.push({\n                  cueText,\n                  start,\n                  end,\n                  settings\n                });\n              }\n            });\n            mdatOffset += sample.size;\n          });\n        }\n      });\n      return vttCues;\n    };\n  };\n  var webvttParser = WebVttParser;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about TS Segments.\n   */\n\n  var StreamTypes$1 = streamTypes;\n  var parsePid = function (packet) {\n    var pid = packet[1] & 0x1f;\n    pid <<= 8;\n    pid |= packet[2];\n    return pid;\n  };\n  var parsePayloadUnitStartIndicator = function (packet) {\n    return !!(packet[1] & 0x40);\n  };\n  var parseAdaptionField = function (packet) {\n    var offset = 0; // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n\n    if ((packet[3] & 0x30) >>> 4 > 0x01) {\n      offset += packet[4] + 1;\n    }\n    return offset;\n  };\n  var parseType = function (packet, pmtPid) {\n    var pid = parsePid(packet);\n    if (pid === 0) {\n      return 'pat';\n    } else if (pid === pmtPid) {\n      return 'pmt';\n    } else if (pmtPid) {\n      return 'pes';\n    }\n    return null;\n  };\n  var parsePat = function (packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var offset = 4 + parseAdaptionField(packet);\n    if (pusi) {\n      offset += packet[offset] + 1;\n    }\n    return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n  };\n  var parsePmt = function (packet) {\n    var programMapTable = {};\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var payloadOffset = 4 + parseAdaptionField(packet);\n    if (pusi) {\n      payloadOffset += packet[payloadOffset] + 1;\n    } // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n\n    if (!(packet[payloadOffset + 5] & 0x01)) {\n      return;\n    }\n    var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n    sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n    tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n\n    programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n    var offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n      programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n\n      offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n    }\n    return programMapTable;\n  };\n  var parsePesType = function (packet, programMapTable) {\n    var pid = parsePid(packet);\n    var type = programMapTable[pid];\n    switch (type) {\n      case StreamTypes$1.H264_STREAM_TYPE:\n        return 'video';\n      case StreamTypes$1.ADTS_STREAM_TYPE:\n        return 'audio';\n      case StreamTypes$1.METADATA_STREAM_TYPE:\n        return 'timed-metadata';\n      default:\n        return null;\n    }\n  };\n  var parsePesTime = function (packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    if (!pusi) {\n      return null;\n    }\n    var offset = 4 + parseAdaptionField(packet);\n    if (offset >= packet.byteLength) {\n      // From the H 222.0 MPEG-TS spec\n      // \"For transport stream packets carrying PES packets, stuffing is needed when there\n      //  is insufficient PES packet data to completely fill the transport stream packet\n      //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n      //  the sum of the lengths of the data elements in it, so that the payload bytes\n      //  remaining after the adaptation field exactly accommodates the available PES packet\n      //  data.\"\n      //\n      // If the offset is >= the length of the packet, then the packet contains no data\n      // and instead is just adaption field stuffing bytes\n      return null;\n    }\n    var pes = null;\n    var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n    // and a DTS value. Determine what combination of values is\n    // available to work with.\n\n    ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n    // performs all bitwise operations on 32-bit integers but javascript\n    // supports a much greater range (52-bits) of integer using standard\n    // mathematical operations.\n    // We construct a 31-bit value using bitwise operators over the 31\n    // most significant bits and then multiply by 4 (equal to a left-shift\n    // of 2) before we add the final 2 least significant bits of the\n    // timestamp (equal to an OR.)\n\n    if (ptsDtsFlags & 0xC0) {\n      pes = {}; // the PTS and DTS are not written out directly. For information\n      // on how they are encoded, see\n      // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n      pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n      pes.pts *= 4; // Left shift by 2\n\n      pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n      pes.dts = pes.pts;\n      if (ptsDtsFlags & 0x40) {\n        pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n        pes.dts *= 4; // Left shift by 2\n\n        pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n      }\n    }\n    return pes;\n  };\n  var parseNalUnitType = function (type) {\n    switch (type) {\n      case 0x05:\n        return 'slice_layer_without_partitioning_rbsp_idr';\n      case 0x06:\n        return 'sei_rbsp';\n      case 0x07:\n        return 'seq_parameter_set_rbsp';\n      case 0x08:\n        return 'pic_parameter_set_rbsp';\n      case 0x09:\n        return 'access_unit_delimiter_rbsp';\n      default:\n        return null;\n    }\n  };\n  var videoPacketContainsKeyFrame = function (packet) {\n    var offset = 4 + parseAdaptionField(packet);\n    var frameBuffer = packet.subarray(offset);\n    var frameI = 0;\n    var frameSyncPoint = 0;\n    var foundKeyFrame = false;\n    var nalType; // advance the sync point to a NAL start, if necessary\n\n    for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n      if (frameBuffer[frameSyncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        frameI = frameSyncPoint + 5;\n        break;\n      }\n    }\n    while (frameI < frameBuffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (frameBuffer[frameI]) {\n        case 0:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0) {\n            frameI += 2;\n            break;\n          } else if (frameBuffer[frameI - 2] !== 0) {\n            frameI++;\n            break;\n          }\n          if (frameSyncPoint + 3 !== frameI - 2) {\n            nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n            if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n              foundKeyFrame = true;\n            }\n          } // drop trailing zeroes\n\n          do {\n            frameI++;\n          } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n        case 1:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n            frameI += 3;\n            break;\n          }\n          nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n          if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n            foundKeyFrame = true;\n          }\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n        default:\n          // the current byte isn't a one or zero, so it cannot be part\n          // of a sync sequence\n          frameI += 3;\n          break;\n      }\n    }\n    frameBuffer = frameBuffer.subarray(frameSyncPoint);\n    frameI -= frameSyncPoint;\n    frameSyncPoint = 0; // parse the final nal\n\n    if (frameBuffer && frameBuffer.byteLength > 3) {\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n    }\n    return foundKeyFrame;\n  };\n  var probe$1 = {\n    parseType: parseType,\n    parsePat: parsePat,\n    parsePmt: parsePmt,\n    parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n    parsePesType: parsePesType,\n    parsePesTime: parsePesTime,\n    videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Parse mpeg2 transport stream packets to extract basic timing information\n   */\n\n  var StreamTypes = streamTypes;\n  var handleRollover = timestampRolloverStream.handleRollover;\n  var probe = {};\n  probe.ts = probe$1;\n  probe.aac = utils;\n  var ONE_SECOND_IN_TS = clock$2.ONE_SECOND_IN_TS;\n  var MP2T_PACKET_LENGTH = 188,\n    // bytes\n    SYNC_BYTE = 0x47;\n  /**\n   * walks through segment data looking for pat and pmt packets to parse out\n   * program map table information\n   */\n\n  var parsePsi_ = function (bytes, pmt) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type;\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pat':\n            pmt.pid = probe.ts.parsePat(packet);\n            break;\n          case 'pmt':\n            var table = probe.ts.parsePmt(packet);\n            pmt.table = pmt.table || {};\n            Object.keys(table).forEach(function (key) {\n              pmt.table[key] = table[key];\n            });\n            break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last audio pes packets\n   */\n\n  var parseAudioPes_ = function (bytes, pmt, result) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed;\n    var endLoop = false; // Start walking from start of segment to get first audio packet\n\n    while (endIndex <= bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last audio packet\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last video pes packets as well as timing information for the first\n   * key frame.\n   */\n\n  var parseVideoPes_ = function (bytes, pmt, result) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed,\n      frame,\n      i,\n      pes;\n    var endLoop = false;\n    var currentFrame = {\n      data: [],\n      size: 0\n    }; // Start walking from start of segment to get first video packet\n\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'video') {\n              if (pusi && !endLoop) {\n                parsed = probe.ts.parsePesTime(packet);\n                if (parsed) {\n                  parsed.type = 'video';\n                  result.video.push(parsed);\n                  endLoop = true;\n                }\n              }\n              if (!result.firstKeyFrame) {\n                if (pusi) {\n                  if (currentFrame.size !== 0) {\n                    frame = new Uint8Array(currentFrame.size);\n                    i = 0;\n                    while (currentFrame.data.length) {\n                      pes = currentFrame.data.shift();\n                      frame.set(pes, i);\n                      i += pes.byteLength;\n                    }\n                    if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                      var firstKeyFrame = probe.ts.parsePesTime(frame); // PTS/DTS may not be available. Simply *not* setting\n                      // the keyframe seems to work fine with HLS playback\n                      // and definitely preferable to a crash with TypeError...\n\n                      if (firstKeyFrame) {\n                        result.firstKeyFrame = firstKeyFrame;\n                        result.firstKeyFrame.type = 'video';\n                      } else {\n                        // eslint-disable-next-line\n                        console.warn('Failed to extract PTS/DTS from PES at first keyframe. ' + 'This could be an unusual TS segment, or else mux.js did not ' + 'parse your TS segment correctly. If you know your TS ' + 'segments do contain PTS/DTS on keyframes please file a bug ' + 'report! You can try ffprobe to double check for yourself.');\n                      }\n                    }\n                    currentFrame.size = 0;\n                  }\n                }\n                currentFrame.data.push(packet);\n                currentFrame.size += packet.byteLength;\n              }\n            }\n            break;\n        }\n        if (endLoop && result.firstKeyFrame) {\n          break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last video packet\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * Adjusts the timestamp information for the segment to account for\n   * rollover and convert to seconds based on pes packet timescale (90khz clock)\n   */\n\n  var adjustTimestamp_ = function (segmentInfo, baseTimestamp) {\n    if (segmentInfo.audio && segmentInfo.audio.length) {\n      var audioBaseTimestamp = baseTimestamp;\n      if (typeof audioBaseTimestamp === 'undefined' || isNaN(audioBaseTimestamp)) {\n        audioBaseTimestamp = segmentInfo.audio[0].dts;\n      }\n      segmentInfo.audio.forEach(function (info) {\n        info.dts = handleRollover(info.dts, audioBaseTimestamp);\n        info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n    }\n    if (segmentInfo.video && segmentInfo.video.length) {\n      var videoBaseTimestamp = baseTimestamp;\n      if (typeof videoBaseTimestamp === 'undefined' || isNaN(videoBaseTimestamp)) {\n        videoBaseTimestamp = segmentInfo.video[0].dts;\n      }\n      segmentInfo.video.forEach(function (info) {\n        info.dts = handleRollover(info.dts, videoBaseTimestamp);\n        info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n      if (segmentInfo.firstKeyFrame) {\n        var frame = segmentInfo.firstKeyFrame;\n        frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n        frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n        frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n        frame.ptsTime = frame.pts / ONE_SECOND_IN_TS;\n      }\n    }\n  };\n  /**\n   * inspects the aac data stream for start and end time information\n   */\n\n  var inspectAac_ = function (bytes) {\n    var endLoop = false,\n      audioCount = 0,\n      sampleRate = null,\n      timestamp = null,\n      frameSize = 0,\n      byteIndex = 0,\n      packet;\n    while (bytes.length - byteIndex >= 3) {\n      var type = probe.aac.parseType(bytes, byteIndex);\n      switch (type) {\n        case 'timed-metadata':\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (bytes.length - byteIndex < 10) {\n            endLoop = true;\n            break;\n          }\n          frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n          if (timestamp === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            timestamp = probe.aac.parseAacTimestamp(packet);\n          }\n          byteIndex += frameSize;\n          break;\n        case 'audio':\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (bytes.length - byteIndex < 7) {\n            endLoop = true;\n            break;\n          }\n          frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n          if (sampleRate === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            sampleRate = probe.aac.parseSampleRate(packet);\n          }\n          audioCount++;\n          byteIndex += frameSize;\n          break;\n        default:\n          byteIndex++;\n          break;\n      }\n      if (endLoop) {\n        return null;\n      }\n    }\n    if (sampleRate === null || timestamp === null) {\n      return null;\n    }\n    var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n    var result = {\n      audio: [{\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      }, {\n        type: 'audio',\n        dts: timestamp + audioCount * 1024 * audioTimescale,\n        pts: timestamp + audioCount * 1024 * audioTimescale\n      }]\n    };\n    return result;\n  };\n  /**\n   * inspects the transport stream segment data for start and end time information\n   * of the audio and video tracks (when present) as well as the first key frame's\n   * start time.\n   */\n\n  var inspectTs_ = function (bytes) {\n    var pmt = {\n      pid: null,\n      table: null\n    };\n    var result = {};\n    parsePsi_(bytes, pmt);\n    for (var pid in pmt.table) {\n      if (pmt.table.hasOwnProperty(pid)) {\n        var type = pmt.table[pid];\n        switch (type) {\n          case StreamTypes.H264_STREAM_TYPE:\n            result.video = [];\n            parseVideoPes_(bytes, pmt, result);\n            if (result.video.length === 0) {\n              delete result.video;\n            }\n            break;\n          case StreamTypes.ADTS_STREAM_TYPE:\n            result.audio = [];\n            parseAudioPes_(bytes, pmt, result);\n            if (result.audio.length === 0) {\n              delete result.audio;\n            }\n            break;\n        }\n      }\n    }\n    return result;\n  };\n  /**\n   * Inspects segment byte data and returns an object with start and end timing information\n   *\n   * @param {Uint8Array} bytes The segment byte data\n   * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n   *  timestamps for rollover. This value must be in 90khz clock.\n   * @return {Object} Object containing start and end frame timing info of segment.\n   */\n\n  var inspect = function (bytes, baseTimestamp) {\n    var isAacData = probe.aac.isLikelyAacData(bytes);\n    var result;\n    if (isAacData) {\n      result = inspectAac_(bytes);\n    } else {\n      result = inspectTs_(bytes);\n    }\n    if (!result || !result.audio && !result.video) {\n      return null;\n    }\n    adjustTimestamp_(result, baseTimestamp);\n    return result;\n  };\n  var tsInspector = {\n    inspect: inspect,\n    parseAudioPes_: parseAudioPes_\n  };\n  /* global self */\n\n  /**\n   * Re-emits transmuxer events by converting them into messages to the\n   * world outside the worker.\n   *\n   * @param {Object} transmuxer the transmuxer to wire events on\n   * @private\n   */\n\n  const wireTransmuxerEvents = function (self, transmuxer) {\n    transmuxer.on('data', function (segment) {\n      // transfer ownership of the underlying ArrayBuffer\n      // instead of doing a copy to save memory\n      // ArrayBuffers are transferable but generic TypedArrays are not\n      // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n      const initArray = segment.initSegment;\n      segment.initSegment = {\n        data: initArray.buffer,\n        byteOffset: initArray.byteOffset,\n        byteLength: initArray.byteLength\n      };\n      const typedArray = segment.data;\n      segment.data = typedArray.buffer;\n      self.postMessage({\n        action: 'data',\n        segment,\n        byteOffset: typedArray.byteOffset,\n        byteLength: typedArray.byteLength\n      }, [segment.data]);\n    });\n    transmuxer.on('done', function (data) {\n      self.postMessage({\n        action: 'done'\n      });\n    });\n    transmuxer.on('gopInfo', function (gopInfo) {\n      self.postMessage({\n        action: 'gopInfo',\n        gopInfo\n      });\n    });\n    transmuxer.on('videoSegmentTimingInfo', function (timingInfo) {\n      const videoSegmentTimingInfo = {\n        start: {\n          decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n      if (timingInfo.prependedContentDuration) {\n        videoSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n      self.postMessage({\n        action: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo\n      });\n    });\n    transmuxer.on('audioSegmentTimingInfo', function (timingInfo) {\n      // Note that all times for [audio/video]SegmentTimingInfo events are in video clock\n      const audioSegmentTimingInfo = {\n        start: {\n          decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n      if (timingInfo.prependedContentDuration) {\n        audioSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n      self.postMessage({\n        action: 'audioSegmentTimingInfo',\n        audioSegmentTimingInfo\n      });\n    });\n    transmuxer.on('id3Frame', function (id3Frame) {\n      self.postMessage({\n        action: 'id3Frame',\n        id3Frame\n      });\n    });\n    transmuxer.on('caption', function (caption) {\n      self.postMessage({\n        action: 'caption',\n        caption\n      });\n    });\n    transmuxer.on('trackinfo', function (trackInfo) {\n      self.postMessage({\n        action: 'trackinfo',\n        trackInfo\n      });\n    });\n    transmuxer.on('audioTimingInfo', function (audioTimingInfo) {\n      // convert to video TS since we prioritize video time over audio\n      self.postMessage({\n        action: 'audioTimingInfo',\n        audioTimingInfo: {\n          start: clock$2.videoTsToSeconds(audioTimingInfo.start),\n          end: clock$2.videoTsToSeconds(audioTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('videoTimingInfo', function (videoTimingInfo) {\n      self.postMessage({\n        action: 'videoTimingInfo',\n        videoTimingInfo: {\n          start: clock$2.videoTsToSeconds(videoTimingInfo.start),\n          end: clock$2.videoTsToSeconds(videoTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('log', function (log) {\n      self.postMessage({\n        action: 'log',\n        log\n      });\n    });\n  };\n  /**\n   * All incoming messages route through this hash. If no function exists\n   * to handle an incoming message, then we ignore the message.\n   *\n   * @class MessageHandlers\n   * @param {Object} options the options to initialize with\n   */\n\n  class MessageHandlers {\n    constructor(self, options) {\n      this.options = options || {};\n      this.self = self;\n      this.init();\n    }\n    /**\n     * initialize our web worker and wire all the events.\n     */\n\n    init() {\n      if (this.transmuxer) {\n        this.transmuxer.dispose();\n      }\n      this.transmuxer = new transmuxer.Transmuxer(this.options);\n      wireTransmuxerEvents(this.self, this.transmuxer);\n    }\n    pushMp4Captions(data) {\n      if (!this.captionParser) {\n        this.captionParser = new captionParser();\n        this.captionParser.init();\n      }\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      const parsed = this.captionParser.parse(segment, data.trackIds, data.timescales);\n      this.self.postMessage({\n        action: 'mp4Captions',\n        captions: parsed && parsed.captions || [],\n        logs: parsed && parsed.logs || [],\n        data: segment.buffer\n      }, [segment.buffer]);\n    }\n    /**\n     * Initializes the WebVttParser and passes the init segment.\n     *\n     * @param {Uint8Array} data mp4 boxed WebVTT init segment data\n     */\n\n    initMp4WebVttParser(data) {\n      if (!this.webVttParser) {\n        this.webVttParser = new webvttParser();\n      }\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength); // Set the timescale for the parser.\n      // This can be called repeatedly in order to set and re-set the timescale.\n\n      this.webVttParser.init(segment);\n    }\n    /**\n     * Parse an mp4 encapsulated WebVTT segment and return an array of cues.\n     *\n     * @param {Uint8Array} data a text/webvtt segment\n     * @return {Object[]} an array of parsed cue objects\n     */\n\n    getMp4WebVttText(data) {\n      if (!this.webVttParser) {\n        // timescale might not be set yet if the parser is created before an init segment is passed.\n        // default timescale is 90k.\n        this.webVttParser = new webvttParser();\n      }\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      const parsed = this.webVttParser.parseSegment(segment);\n      this.self.postMessage({\n        action: 'getMp4WebVttText',\n        mp4VttCues: parsed || [],\n        data: segment.buffer\n      }, [segment.buffer]);\n    }\n    probeMp4StartTime({\n      timescales,\n      data\n    }) {\n      const startTime = probe$2.startTime(timescales, data);\n      this.self.postMessage({\n        action: 'probeMp4StartTime',\n        startTime,\n        data\n      }, [data.buffer]);\n    }\n    probeMp4Tracks({\n      data\n    }) {\n      const tracks = probe$2.tracks(data);\n      this.self.postMessage({\n        action: 'probeMp4Tracks',\n        tracks,\n        data\n      }, [data.buffer]);\n    }\n    /**\n     * Probes an mp4 segment for EMSG boxes containing ID3 data.\n     * https://aomediacodec.github.io/id3-emsg/\n     *\n     * @param {Uint8Array} data segment data\n     * @param {number} offset segment start time\n     * @return {Object[]} an array of ID3 frames\n     */\n\n    probeEmsgID3({\n      data,\n      offset\n    }) {\n      const id3Frames = probe$2.getEmsgID3(data, offset);\n      this.self.postMessage({\n        action: 'probeEmsgID3',\n        id3Frames,\n        emsgData: data\n      }, [data.buffer]);\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start time of the segment in it's\n     * internal \"media time,\" as well as whether it contains video and/or audio.\n     *\n     * @private\n     * @param {Uint8Array} bytes - segment bytes\n     * @param {number} baseStartTime\n     *        Relative reference timestamp used when adjusting frame timestamps for rollover.\n     *        This value should be in seconds, as it's converted to a 90khz clock within the\n     *        function body.\n     * @return {Object} The start time of the current segment in \"media time\" as well as\n     *                  whether it contains video and/or audio\n     */\n\n    probeTs({\n      data,\n      baseStartTime\n    }) {\n      const tsStartTime = typeof baseStartTime === 'number' && !isNaN(baseStartTime) ? baseStartTime * clock$2.ONE_SECOND_IN_TS : void 0;\n      const timeInfo = tsInspector.inspect(data, tsStartTime);\n      let result = null;\n      if (timeInfo) {\n        result = {\n          // each type's time info comes back as an array of 2 times, start and end\n          hasVideo: timeInfo.video && timeInfo.video.length === 2 || false,\n          hasAudio: timeInfo.audio && timeInfo.audio.length === 2 || false\n        };\n        if (result.hasVideo) {\n          result.videoStart = timeInfo.video[0].ptsTime;\n        }\n        if (result.hasAudio) {\n          result.audioStart = timeInfo.audio[0].ptsTime;\n        }\n      }\n      this.self.postMessage({\n        action: 'probeTs',\n        result,\n        data\n      }, [data.buffer]);\n    }\n    clearAllMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearAllCaptions();\n      }\n    }\n    clearParsedMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearParsedCaptions();\n      }\n    }\n    /**\n     * Adds data (a ts segment) to the start of the transmuxer pipeline for\n     * processing.\n     *\n     * @param {ArrayBuffer} data data to push into the muxer\n     */\n\n    push(data) {\n      // Cast array buffer to correct type for transmuxer\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      this.transmuxer.push(segment);\n    }\n    /**\n     * Recreate the transmuxer so that the next segment added via `push`\n     * start with a fresh transmuxer.\n     */\n\n    reset() {\n      this.transmuxer.reset();\n    }\n    /**\n     * Set the value that will be used as the `baseMediaDecodeTime` time for the\n     * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n     * set relative to the first based on the PTS values.\n     *\n     * @param {Object} data used to set the timestamp offset in the muxer\n     */\n\n    setTimestampOffset(data) {\n      const timestampOffset = data.timestampOffset || 0;\n      this.transmuxer.setBaseMediaDecodeTime(Math.round(clock$2.secondsToVideoTs(timestampOffset)));\n    }\n    setAudioAppendStart(data) {\n      this.transmuxer.setAudioAppendStart(Math.ceil(clock$2.secondsToVideoTs(data.appendStart)));\n    }\n    setRemux(data) {\n      this.transmuxer.setRemux(data.remux);\n    }\n    /**\n     * Forces the pipeline to finish processing the last segment and emit it's\n     * results.\n     *\n     * @param {Object} data event data, not really used\n     */\n\n    flush(data) {\n      this.transmuxer.flush(); // transmuxed done action is fired after both audio/video pipelines are flushed\n\n      self.postMessage({\n        action: 'done',\n        type: 'transmuxed'\n      });\n    }\n    endTimeline() {\n      this.transmuxer.endTimeline(); // transmuxed endedtimeline action is fired after both audio/video pipelines end their\n      // timelines\n\n      self.postMessage({\n        action: 'endedtimeline',\n        type: 'transmuxed'\n      });\n    }\n    alignGopsWith(data) {\n      this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n    }\n  }\n  /**\n   * Our web worker interface so that things can talk to mux.js\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   *\n   * @param {Object} self the scope for the web worker\n   */\n\n  self.onmessage = function (event) {\n    if (event.data.action === 'init' && event.data.options) {\n      this.messageHandlers = new MessageHandlers(self, event.data.options);\n      return;\n    }\n    if (!this.messageHandlers) {\n      this.messageHandlers = new MessageHandlers(self);\n    }\n    if (event.data && event.data.action && event.data.action !== 'init') {\n      if (this.messageHandlers[event.data.action]) {\n        this.messageHandlers[event.data.action](event.data);\n      }\n    }\n  };\n}));\nvar TransmuxWorker = factory(workerCode$1);\n/* rollup-plugin-worker-factory end for worker!/home/runner/work/http-streaming/http-streaming/src/transmuxer-worker.js */\n\nconst handleData_ = (event, transmuxedData, callback) => {\n  const {\n    type,\n    initSegment,\n    captions,\n    captionStreams,\n    metadata,\n    videoFrameDtsTime,\n    videoFramePtsTime\n  } = event.data.segment;\n  transmuxedData.buffer.push({\n    captions,\n    captionStreams,\n    metadata\n  });\n  const boxes = event.data.segment.boxes || {\n    data: event.data.segment.data\n  };\n  const result = {\n    type,\n    // cast ArrayBuffer to TypedArray\n    data: new Uint8Array(boxes.data, boxes.data.byteOffset, boxes.data.byteLength),\n    initSegment: new Uint8Array(initSegment.data, initSegment.byteOffset, initSegment.byteLength)\n  };\n  if (typeof videoFrameDtsTime !== 'undefined') {\n    result.videoFrameDtsTime = videoFrameDtsTime;\n  }\n  if (typeof videoFramePtsTime !== 'undefined') {\n    result.videoFramePtsTime = videoFramePtsTime;\n  }\n  callback(result);\n};\nconst handleDone_ = ({\n  transmuxedData,\n  callback\n}) => {\n  // Previously we only returned data on data events,\n  // not on done events. Clear out the buffer to keep that consistent.\n  transmuxedData.buffer = []; // all buffers should have been flushed from the muxer, so start processing anything we\n  // have received\n\n  callback(transmuxedData);\n};\nconst handleGopInfo_ = (event, transmuxedData) => {\n  transmuxedData.gopInfo = event.data.gopInfo;\n};\nconst processTransmux = options => {\n  const {\n    transmuxer,\n    bytes,\n    audioAppendStart,\n    gopsToAlignWith,\n    remux,\n    onData,\n    onTrackInfo,\n    onAudioTimingInfo,\n    onVideoTimingInfo,\n    onVideoSegmentTimingInfo,\n    onAudioSegmentTimingInfo,\n    onId3,\n    onCaptions,\n    onDone,\n    onEndedTimeline,\n    onTransmuxerLog,\n    isEndOfTimeline,\n    segment,\n    triggerSegmentEventFn\n  } = options;\n  const transmuxedData = {\n    buffer: []\n  };\n  let waitForEndedTimelineEvent = isEndOfTimeline;\n  const handleMessage = event => {\n    if (transmuxer.currentTransmux !== options) {\n      // disposed\n      return;\n    }\n    if (event.data.action === 'data') {\n      handleData_(event, transmuxedData, onData);\n    }\n    if (event.data.action === 'trackinfo') {\n      onTrackInfo(event.data.trackInfo);\n    }\n    if (event.data.action === 'gopInfo') {\n      handleGopInfo_(event, transmuxedData);\n    }\n    if (event.data.action === 'audioTimingInfo') {\n      onAudioTimingInfo(event.data.audioTimingInfo);\n    }\n    if (event.data.action === 'videoTimingInfo') {\n      onVideoTimingInfo(event.data.videoTimingInfo);\n    }\n    if (event.data.action === 'videoSegmentTimingInfo') {\n      onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);\n    }\n    if (event.data.action === 'audioSegmentTimingInfo') {\n      onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);\n    }\n    if (event.data.action === 'id3Frame') {\n      onId3([event.data.id3Frame], event.data.id3Frame.dispatchType);\n    }\n    if (event.data.action === 'caption') {\n      onCaptions(event.data.caption);\n    }\n    if (event.data.action === 'endedtimeline') {\n      waitForEndedTimelineEvent = false;\n      onEndedTimeline();\n    }\n    if (event.data.action === 'log') {\n      onTransmuxerLog(event.data.log);\n    } // wait for the transmuxed event since we may have audio and video\n\n    if (event.data.type !== 'transmuxed') {\n      return;\n    } // If the \"endedtimeline\" event has not yet fired, and this segment represents the end\n    // of a timeline, that means there may still be data events before the segment\n    // processing can be considerred complete. In that case, the final event should be\n    // an \"endedtimeline\" event with the type \"transmuxed.\"\n\n    if (waitForEndedTimelineEvent) {\n      return;\n    }\n    transmuxer.onmessage = null;\n    handleDone_({\n      transmuxedData,\n      callback: onDone\n    });\n    /* eslint-disable no-use-before-define */\n\n    dequeue(transmuxer);\n    /* eslint-enable */\n  };\n  const handleError = () => {\n    const error = {\n      message: 'Received an error message from the transmuxer worker',\n      metadata: {\n        errorType: videojs.Error.StreamingFailedToTransmuxSegment,\n        segmentInfo: segmentInfoPayload({\n          segment\n        })\n      }\n    };\n    onDone(null, error);\n  };\n  transmuxer.onmessage = handleMessage;\n  transmuxer.onerror = handleError;\n  if (audioAppendStart) {\n    transmuxer.postMessage({\n      action: 'setAudioAppendStart',\n      appendStart: audioAppendStart\n    });\n  } // allow empty arrays to be passed to clear out GOPs\n\n  if (Array.isArray(gopsToAlignWith)) {\n    transmuxer.postMessage({\n      action: 'alignGopsWith',\n      gopsToAlignWith\n    });\n  }\n  if (typeof remux !== 'undefined') {\n    transmuxer.postMessage({\n      action: 'setRemux',\n      remux\n    });\n  }\n  if (bytes.byteLength) {\n    const buffer = bytes instanceof ArrayBuffer ? bytes : bytes.buffer;\n    const byteOffset = bytes instanceof ArrayBuffer ? 0 : bytes.byteOffset;\n    triggerSegmentEventFn({\n      type: 'segmenttransmuxingstart',\n      segment\n    });\n    transmuxer.postMessage({\n      action: 'push',\n      // Send the typed-array of data as an ArrayBuffer so that\n      // it can be sent as a \"Transferable\" and avoid the costly\n      // memory copy\n      data: buffer,\n      // To recreate the original typed-array, we need information\n      // about what portion of the ArrayBuffer it was a view into\n      byteOffset,\n      byteLength: bytes.byteLength\n    }, [buffer]);\n  }\n  if (isEndOfTimeline) {\n    transmuxer.postMessage({\n      action: 'endTimeline'\n    });\n  } // even if we didn't push any bytes, we have to make sure we flush in case we reached\n  // the end of the segment\n\n  transmuxer.postMessage({\n    action: 'flush'\n  });\n};\nconst dequeue = transmuxer => {\n  transmuxer.currentTransmux = null;\n  if (transmuxer.transmuxQueue.length) {\n    transmuxer.currentTransmux = transmuxer.transmuxQueue.shift();\n    if (typeof transmuxer.currentTransmux === 'function') {\n      transmuxer.currentTransmux();\n    } else {\n      processTransmux(transmuxer.currentTransmux);\n    }\n  }\n};\nconst processAction = (transmuxer, action) => {\n  transmuxer.postMessage({\n    action\n  });\n  dequeue(transmuxer);\n};\nconst enqueueAction = (action, transmuxer) => {\n  if (!transmuxer.currentTransmux) {\n    transmuxer.currentTransmux = action;\n    processAction(transmuxer, action);\n    return;\n  }\n  transmuxer.transmuxQueue.push(processAction.bind(null, transmuxer, action));\n};\nconst reset = transmuxer => {\n  enqueueAction('reset', transmuxer);\n};\nconst endTimeline = transmuxer => {\n  enqueueAction('endTimeline', transmuxer);\n};\nconst transmux = options => {\n  if (!options.transmuxer.currentTransmux) {\n    options.transmuxer.currentTransmux = options;\n    processTransmux(options);\n    return;\n  }\n  options.transmuxer.transmuxQueue.push(options);\n};\nconst createTransmuxer = options => {\n  const transmuxer = new TransmuxWorker();\n  transmuxer.currentTransmux = null;\n  transmuxer.transmuxQueue = [];\n  const term = transmuxer.terminate;\n  transmuxer.terminate = () => {\n    transmuxer.currentTransmux = null;\n    transmuxer.transmuxQueue.length = 0;\n    return term.call(transmuxer);\n  };\n  transmuxer.postMessage({\n    action: 'init',\n    options\n  });\n  return transmuxer;\n};\nvar segmentTransmuxer = {\n  reset,\n  endTimeline,\n  transmux,\n  createTransmuxer\n};\nconst workerCallback = function (options) {\n  const transmuxer = options.transmuxer;\n  const endAction = options.endAction || options.action;\n  const callback = options.callback;\n  const message = _extends({}, options, {\n    endAction: null,\n    transmuxer: null,\n    callback: null\n  });\n  const listenForEndEvent = event => {\n    if (event.data.action !== endAction) {\n      return;\n    }\n    transmuxer.removeEventListener('message', listenForEndEvent); // transfer ownership of bytes back to us.\n\n    if (event.data.data) {\n      event.data.data = new Uint8Array(event.data.data, options.byteOffset || 0, options.byteLength || event.data.data.byteLength);\n      if (options.data) {\n        options.data = event.data.data;\n      }\n    }\n    callback(event.data);\n  };\n  transmuxer.addEventListener('message', listenForEndEvent);\n  if (options.data) {\n    const isArrayBuffer = options.data instanceof ArrayBuffer;\n    message.byteOffset = isArrayBuffer ? 0 : options.data.byteOffset;\n    message.byteLength = options.data.byteLength;\n    const transfers = [isArrayBuffer ? options.data : options.data.buffer];\n    transmuxer.postMessage(message, transfers);\n  } else {\n    transmuxer.postMessage(message);\n  }\n};\nconst REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\nconst WEB_VTT_CODEC = 'wvtt';\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nconst abortAll = activeXhrs => {\n  activeXhrs.forEach(xhr => {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\nconst getRequestStats = request => {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\nconst getProgressStats = progressEvent => {\n  const request = progressEvent.target;\n  const roundTripTime = Date.now() - request.requestTime;\n  const stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\nconst handleErrors = (error, request) => {\n  const {\n    requestType\n  } = request;\n  const metadata = getStreamingNetworkErrorMetadata({\n    requestType,\n    request,\n    error\n  });\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request,\n      metadata\n    };\n  }\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request,\n      metadata\n    };\n  }\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request,\n      metadata\n    };\n  }\n  if (request.responseType === 'arraybuffer' && request.response.byteLength === 0) {\n    return {\n      status: request.status,\n      message: 'Empty HLS response at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request,\n      metadata\n    };\n  }\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Array} objects - objects to add the key bytes to.\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleKeyResponse = (segment, objects, finishProcessingFn, triggerSegmentEventFn) => (error, request) => {\n  const response = request.response;\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  if (response.byteLength !== 16) {\n    return finishProcessingFn({\n      status: request.status,\n      message: 'Invalid HLS key at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    }, segment);\n  }\n  const view = new DataView(response);\n  const bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n  for (let i = 0; i < objects.length; i++) {\n    objects[i].bytes = bytes;\n  }\n  const keyInfo = {\n    uri: request.uri\n  };\n  triggerSegmentEventFn({\n    type: 'segmentkeyloadcomplete',\n    segment,\n    keyInfo\n  });\n  return finishProcessingFn(null, segment);\n};\n/**\n * Processes an mp4 init segment depending on the codec through the transmuxer.\n *\n * @param {Object} segment init segment to process\n * @param {string} codec the codec of the text segments\n */\n\nconst initMp4Text = (segment, codec) => {\n  if (codec === WEB_VTT_CODEC) {\n    segment.transmuxer.postMessage({\n      action: 'initMp4WebVttParser',\n      data: segment.map.bytes\n    });\n  }\n};\n/**\n * Parses an mp4 text segment with the transmuxer and calls the doneFn from\n * the segment loader.\n *\n * @param {Object} segment the text segment to parse\n * @param {string} codec the codec of the text segment\n * @param {Function} doneFn the doneFn passed from the segment loader\n */\n\nconst parseMp4TextSegment = (segment, codec, doneFn) => {\n  if (codec === WEB_VTT_CODEC) {\n    workerCallback({\n      action: 'getMp4WebVttText',\n      data: segment.bytes,\n      transmuxer: segment.transmuxer,\n      callback: ({\n        data,\n        mp4VttCues\n      }) => {\n        segment.bytes = data;\n        doneFn(null, segment, {\n          mp4VttCues\n        });\n      }\n    });\n  }\n};\nconst parseInitSegment = (segment, callback) => {\n  const type = detectContainerForBytes(segment.map.bytes); // TODO: We should also handle ts init segments here, but we\n  // only know how to parse mp4 init segments at the moment\n\n  if (type !== 'mp4') {\n    const uri = segment.map.resolvedUri || segment.map.uri;\n    const mediaType = type || 'unknown';\n    return callback({\n      internal: true,\n      message: `Found unsupported ${mediaType} container for initialization segment at URL: ${uri}`,\n      code: REQUEST_ERRORS.FAILURE,\n      metadata: {\n        mediaType\n      }\n    });\n  }\n  workerCallback({\n    action: 'probeMp4Tracks',\n    data: segment.map.bytes,\n    transmuxer: segment.transmuxer,\n    callback: ({\n      tracks,\n      data\n    }) => {\n      // transfer bytes back to us\n      segment.map.bytes = data;\n      tracks.forEach(function (track) {\n        segment.map.tracks = segment.map.tracks || {}; // only support one track of each type for now\n\n        if (segment.map.tracks[track.type]) {\n          return;\n        }\n        segment.map.tracks[track.type] = track;\n        if (typeof track.id === 'number' && track.timescale) {\n          segment.map.timescales = segment.map.timescales || {};\n          segment.map.timescales[track.id] = track.timescale;\n        }\n        if (track.type === 'text') {\n          initMp4Text(segment, track.codec);\n        }\n      });\n      return callback(null);\n    }\n  });\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleInitSegmentResponse = ({\n  segment,\n  finishProcessingFn,\n  triggerSegmentEventFn\n}) => (error, request) => {\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  const bytes = new Uint8Array(request.response);\n  triggerSegmentEventFn({\n    type: 'segmentloaded',\n    segment\n  }); // init segment is encypted, we will have to wait\n  // until the key request is done to decrypt.\n\n  if (segment.map.key) {\n    segment.map.encryptedBytes = bytes;\n    return finishProcessingFn(null, segment);\n  }\n  segment.map.bytes = bytes;\n  parseInitSegment(segment, function (parseError) {\n    if (parseError) {\n      parseError.xhr = request;\n      parseError.status = request.status;\n      return finishProcessingFn(parseError, segment);\n    }\n    finishProcessingFn(null, segment);\n  });\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleSegmentResponse = ({\n  segment,\n  finishProcessingFn,\n  responseType,\n  triggerSegmentEventFn\n}) => (error, request) => {\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  triggerSegmentEventFn({\n    type: 'segmentloaded',\n    segment\n  });\n  const newBytes =\n  // although responseText \"should\" exist, this guard serves to prevent an error being\n  // thrown for two primary cases:\n  // 1. the mime type override stops working, or is not implemented for a specific\n  //    browser\n  // 2. when using mock XHR libraries like sinon that do not allow the override behavior\n  responseType === 'arraybuffer' || !request.responseText ? request.response : stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar || 0));\n  segment.stats = getRequestStats(request);\n  if (segment.key) {\n    segment.encryptedBytes = new Uint8Array(newBytes);\n  } else {\n    segment.bytes = new Uint8Array(newBytes);\n  }\n  return finishProcessingFn(null, segment);\n};\nconst transmuxAndNotify = ({\n  segment,\n  bytes,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog,\n  triggerSegmentEventFn\n}) => {\n  const fmp4Tracks = segment.map && segment.map.tracks || {};\n  const isMuxed = Boolean(fmp4Tracks.audio && fmp4Tracks.video); // Keep references to each function so we can null them out after we're done with them.\n  // One reason for this is that in the case of full segments, we want to trust start\n  // times from the probe, rather than the transmuxer.\n\n  let audioStartFn = timingInfoFn.bind(null, segment, 'audio', 'start');\n  const audioEndFn = timingInfoFn.bind(null, segment, 'audio', 'end');\n  let videoStartFn = timingInfoFn.bind(null, segment, 'video', 'start');\n  const videoEndFn = timingInfoFn.bind(null, segment, 'video', 'end');\n  const finish = () => transmux({\n    bytes,\n    transmuxer: segment.transmuxer,\n    audioAppendStart: segment.audioAppendStart,\n    gopsToAlignWith: segment.gopsToAlignWith,\n    remux: isMuxed,\n    onData: result => {\n      result.type = result.type === 'combined' ? 'video' : result.type;\n      dataFn(segment, result);\n    },\n    onTrackInfo: trackInfo => {\n      if (trackInfoFn) {\n        if (isMuxed) {\n          trackInfo.isMuxed = true;\n        }\n        trackInfoFn(segment, trackInfo);\n      }\n    },\n    onAudioTimingInfo: audioTimingInfo => {\n      // we only want the first start value we encounter\n      if (audioStartFn && typeof audioTimingInfo.start !== 'undefined') {\n        audioStartFn(audioTimingInfo.start);\n        audioStartFn = null;\n      } // we want to continually update the end time\n\n      if (audioEndFn && typeof audioTimingInfo.end !== 'undefined') {\n        audioEndFn(audioTimingInfo.end);\n      }\n    },\n    onVideoTimingInfo: videoTimingInfo => {\n      // we only want the first start value we encounter\n      if (videoStartFn && typeof videoTimingInfo.start !== 'undefined') {\n        videoStartFn(videoTimingInfo.start);\n        videoStartFn = null;\n      } // we want to continually update the end time\n\n      if (videoEndFn && typeof videoTimingInfo.end !== 'undefined') {\n        videoEndFn(videoTimingInfo.end);\n      }\n    },\n    onVideoSegmentTimingInfo: videoSegmentTimingInfo => {\n      const timingInfo = {\n        pts: {\n          start: videoSegmentTimingInfo.start.presentation,\n          end: videoSegmentTimingInfo.end.presentation\n        },\n        dts: {\n          start: videoSegmentTimingInfo.start.decode,\n          end: videoSegmentTimingInfo.end.decode\n        }\n      };\n      triggerSegmentEventFn({\n        type: 'segmenttransmuxingtiminginfoavailable',\n        segment,\n        timingInfo\n      });\n      videoSegmentTimingInfoFn(videoSegmentTimingInfo);\n    },\n    onAudioSegmentTimingInfo: audioSegmentTimingInfo => {\n      const timingInfo = {\n        pts: {\n          start: audioSegmentTimingInfo.start.pts,\n          end: audioSegmentTimingInfo.end.pts\n        },\n        dts: {\n          start: audioSegmentTimingInfo.start.dts,\n          end: audioSegmentTimingInfo.end.dts\n        }\n      };\n      triggerSegmentEventFn({\n        type: 'segmenttransmuxingtiminginfoavailable',\n        segment,\n        timingInfo\n      });\n      audioSegmentTimingInfoFn(audioSegmentTimingInfo);\n    },\n    onId3: (id3Frames, dispatchType) => {\n      id3Fn(segment, id3Frames, dispatchType);\n    },\n    onCaptions: captions => {\n      captionsFn(segment, [captions]);\n    },\n    isEndOfTimeline,\n    onEndedTimeline: () => {\n      endedTimelineFn();\n    },\n    onTransmuxerLog,\n    onDone: (result, error) => {\n      if (!doneFn) {\n        return;\n      }\n      result.type = result.type === 'combined' ? 'video' : result.type;\n      triggerSegmentEventFn({\n        type: 'segmenttransmuxingcomplete',\n        segment\n      });\n      doneFn(error, segment, result);\n    },\n    segment,\n    triggerSegmentEventFn\n  }); // In the transmuxer, we don't yet have the ability to extract a \"proper\" start time.\n  // Meaning cached frame data may corrupt our notion of where this segment\n  // really starts. To get around this, probe for the info needed.\n\n  workerCallback({\n    action: 'probeTs',\n    transmuxer: segment.transmuxer,\n    data: bytes,\n    baseStartTime: segment.baseStartTime,\n    callback: data => {\n      segment.bytes = bytes = data.data;\n      const probeResult = data.result;\n      if (probeResult) {\n        trackInfoFn(segment, {\n          hasAudio: probeResult.hasAudio,\n          hasVideo: probeResult.hasVideo,\n          isMuxed\n        });\n        trackInfoFn = null;\n      }\n      finish();\n    }\n  });\n};\nconst handleSegmentBytes = ({\n  segment,\n  bytes,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog,\n  triggerSegmentEventFn\n}) => {\n  let bytesAsUint8Array = new Uint8Array(bytes); // TODO:\n  // We should have a handler that fetches the number of bytes required\n  // to check if something is fmp4. This will allow us to save bandwidth\n  // because we can only exclude a playlist and abort requests\n  // by codec after trackinfo triggers.\n\n  if (isLikelyFmp4MediaSegment(bytesAsUint8Array)) {\n    segment.isFmp4 = true;\n    const {\n      tracks\n    } = segment.map;\n    const isMp4TextSegment = tracks.text && (!tracks.audio || !tracks.video);\n    if (isMp4TextSegment) {\n      dataFn(segment, {\n        data: bytesAsUint8Array,\n        type: 'text'\n      });\n      parseMp4TextSegment(segment, tracks.text.codec, doneFn);\n      return;\n    }\n    const trackInfo = {\n      isFmp4: true,\n      hasVideo: !!tracks.video,\n      hasAudio: !!tracks.audio\n    }; // if we have a audio track, with a codec that is not set to\n    // encrypted audio\n\n    if (tracks.audio && tracks.audio.codec && tracks.audio.codec !== 'enca') {\n      trackInfo.audioCodec = tracks.audio.codec;\n    } // if we have a video track, with a codec that is not set to\n    // encrypted video\n\n    if (tracks.video && tracks.video.codec && tracks.video.codec !== 'encv') {\n      trackInfo.videoCodec = tracks.video.codec;\n    }\n    if (tracks.video && tracks.audio) {\n      trackInfo.isMuxed = true;\n    } // since we don't support appending fmp4 data on progress, we know we have the full\n    // segment here\n\n    trackInfoFn(segment, trackInfo); // The probe doesn't provide the segment end time, so only callback with the start\n    // time. The end time can be roughly calculated by the receiver using the duration.\n    //\n    // Note that the start time returned by the probe reflects the baseMediaDecodeTime, as\n    // that is the true start of the segment (where the playback engine should begin\n    // decoding).\n\n    const finishLoading = (captions, id3Frames) => {\n      // if the track still has audio at this point it is only possible\n      // for it to be audio only. See `tracks.video && tracks.audio` if statement\n      // above.\n      // we make sure to use segment.bytes here as that\n      dataFn(segment, {\n        data: bytesAsUint8Array,\n        type: trackInfo.hasAudio && !trackInfo.isMuxed ? 'audio' : 'video'\n      });\n      if (id3Frames && id3Frames.length) {\n        id3Fn(segment, id3Frames);\n      }\n      if (captions && captions.length) {\n        captionsFn(segment, captions);\n      }\n      doneFn(null, segment, {});\n    };\n    workerCallback({\n      action: 'probeMp4StartTime',\n      timescales: segment.map.timescales,\n      data: bytesAsUint8Array,\n      transmuxer: segment.transmuxer,\n      callback: ({\n        data,\n        startTime\n      }) => {\n        // transfer bytes back to us\n        bytes = data.buffer;\n        segment.bytes = bytesAsUint8Array = data;\n        if (trackInfo.hasAudio && !trackInfo.isMuxed) {\n          timingInfoFn(segment, 'audio', 'start', startTime);\n        }\n        if (trackInfo.hasVideo) {\n          timingInfoFn(segment, 'video', 'start', startTime);\n        }\n        workerCallback({\n          action: 'probeEmsgID3',\n          data: bytesAsUint8Array,\n          transmuxer: segment.transmuxer,\n          offset: startTime,\n          callback: ({\n            emsgData,\n            id3Frames\n          }) => {\n            // transfer bytes back to us\n            bytes = emsgData.buffer;\n            segment.bytes = bytesAsUint8Array = emsgData; // Run through the CaptionParser in case there are captions.\n            // Initialize CaptionParser if it hasn't been yet\n\n            if (!tracks.video || !emsgData.byteLength || !segment.transmuxer) {\n              finishLoading(undefined, id3Frames);\n              return;\n            }\n            workerCallback({\n              action: 'pushMp4Captions',\n              endAction: 'mp4Captions',\n              transmuxer: segment.transmuxer,\n              data: bytesAsUint8Array,\n              timescales: segment.map.timescales,\n              trackIds: [tracks.video.id],\n              callback: message => {\n                // transfer bytes back to us\n                bytes = message.data.buffer;\n                segment.bytes = bytesAsUint8Array = message.data;\n                message.logs.forEach(function (log) {\n                  onTransmuxerLog(merge(log, {\n                    stream: 'mp4CaptionParser'\n                  }));\n                });\n                finishLoading(message.captions, id3Frames);\n              }\n            });\n          }\n        });\n      }\n    });\n    return;\n  } // VTT or other segments that don't need processing\n\n  if (!segment.transmuxer) {\n    doneFn(null, segment, {});\n    return;\n  }\n  if (typeof segment.container === 'undefined') {\n    segment.container = detectContainerForBytes(bytesAsUint8Array);\n  }\n  if (segment.container !== 'ts' && segment.container !== 'aac') {\n    trackInfoFn(segment, {\n      hasAudio: false,\n      hasVideo: false\n    });\n    doneFn(null, segment, {});\n    return;\n  } // ts or aac\n\n  transmuxAndNotify({\n    segment,\n    bytes,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog,\n    triggerSegmentEventFn\n  });\n};\nconst decrypt = function ({\n  id,\n  key,\n  encryptedBytes,\n  decryptionWorker,\n  segment,\n  doneFn\n}, callback) {\n  const decryptionHandler = event => {\n    if (event.data.source === id) {\n      decryptionWorker.removeEventListener('message', decryptionHandler);\n      const decrypted = event.data.decrypted;\n      callback(new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength));\n    }\n  };\n  decryptionWorker.onerror = () => {\n    const message = 'An error occurred in the decryption worker';\n    const segmentInfo = segmentInfoPayload({\n      segment\n    });\n    const decryptError = {\n      message,\n      metadata: {\n        error: new Error(message),\n        errorType: videojs.Error.StreamingFailedToDecryptSegment,\n        segmentInfo,\n        keyInfo: {\n          uri: segment.key.resolvedUri || segment.map.key.resolvedUri\n        }\n      }\n    };\n    doneFn(decryptError, segment);\n  };\n  decryptionWorker.addEventListener('message', decryptionHandler);\n  let keyBytes;\n  if (key.bytes.slice) {\n    keyBytes = key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(key.bytes));\n  } // incrementally decrypt the bytes\n\n  decryptionWorker.postMessage(createTransferableMessage({\n    source: id,\n    encrypted: encryptedBytes,\n    key: keyBytes,\n    iv: key.iv\n  }), [encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\nconst decryptSegment = ({\n  decryptionWorker,\n  segment,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog,\n  triggerSegmentEventFn\n}) => {\n  triggerSegmentEventFn({\n    type: 'segmentdecryptionstart'\n  });\n  decrypt({\n    id: segment.requestId,\n    key: segment.key,\n    encryptedBytes: segment.encryptedBytes,\n    decryptionWorker,\n    segment,\n    doneFn\n  }, decryptedBytes => {\n    segment.bytes = decryptedBytes;\n    triggerSegmentEventFn({\n      type: 'segmentdecryptioncomplete',\n      segment\n    });\n    handleSegmentBytes({\n      segment,\n      bytes: segment.bytes,\n      trackInfoFn,\n      timingInfoFn,\n      videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn,\n      id3Fn,\n      captionsFn,\n      isEndOfTimeline,\n      endedTimelineFn,\n      dataFn,\n      doneFn,\n      onTransmuxerLog,\n      triggerSegmentEventFn\n    });\n  });\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\nconst waitForCompletion = ({\n  activeXhrs,\n  decryptionWorker,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog,\n  triggerSegmentEventFn\n}) => {\n  let count = 0;\n  let didError = false;\n  return (error, segment) => {\n    if (didError) {\n      return;\n    }\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n    count += 1;\n    if (count === activeXhrs.length) {\n      const segmentFinish = function () {\n        if (segment.encryptedBytes) {\n          return decryptSegment({\n            decryptionWorker,\n            segment,\n            trackInfoFn,\n            timingInfoFn,\n            videoSegmentTimingInfoFn,\n            audioSegmentTimingInfoFn,\n            id3Fn,\n            captionsFn,\n            isEndOfTimeline,\n            endedTimelineFn,\n            dataFn,\n            doneFn,\n            onTransmuxerLog,\n            triggerSegmentEventFn\n          });\n        } // Otherwise, everything is ready just continue\n\n        handleSegmentBytes({\n          segment,\n          bytes: segment.bytes,\n          trackInfoFn,\n          timingInfoFn,\n          videoSegmentTimingInfoFn,\n          audioSegmentTimingInfoFn,\n          id3Fn,\n          captionsFn,\n          isEndOfTimeline,\n          endedTimelineFn,\n          dataFn,\n          doneFn,\n          onTransmuxerLog,\n          triggerSegmentEventFn\n        });\n      }; // Keep track of when *all* of the requests have completed\n\n      segment.endOfAllRequests = Date.now();\n      if (segment.map && segment.map.encryptedBytes && !segment.map.bytes) {\n        triggerSegmentEventFn({\n          type: 'segmentdecryptionstart',\n          segment\n        });\n        return decrypt({\n          decryptionWorker,\n          // add -init to the \"id\" to differentiate between segment\n          // and init segment decryption, just in case they happen\n          // at the same time at some point in the future.\n          id: segment.requestId + '-init',\n          encryptedBytes: segment.map.encryptedBytes,\n          key: segment.map.key,\n          segment,\n          doneFn\n        }, decryptedBytes => {\n          segment.map.bytes = decryptedBytes;\n          triggerSegmentEventFn({\n            type: 'segmentdecryptioncomplete',\n            segment\n          });\n          parseInitSegment(segment, parseError => {\n            if (parseError) {\n              abortAll(activeXhrs);\n              return doneFn(parseError, segment);\n            }\n            segmentFinish();\n          });\n        });\n      }\n      segmentFinish();\n    }\n  };\n};\n/**\n * Calls the abort callback if any request within the batch was aborted. Will only call\n * the callback once per batch of requests, even if multiple were aborted.\n *\n * @param {Object} loadendState - state to check to see if the abort function was called\n * @param {Function} abortFn - callback to call for abort\n */\n\nconst handleLoadEnd = ({\n  loadendState,\n  abortFn\n}) => event => {\n  const request = event.target;\n  if (request.aborted && abortFn && !loadendState.calledAbortFn) {\n    abortFn();\n    loadendState.calledAbortFn = true;\n  }\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\nconst handleProgress = ({\n  segment,\n  progressFn,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn\n}) => event => {\n  const request = event.target;\n  if (request.aborted) {\n    return;\n  }\n  segment.stats = merge(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n  if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n    segment.stats.firstBytesReceivedAt = Date.now();\n  }\n  return progressFn(event, segment);\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [transmuxer]: Object,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} abortFn - a callback called (only once) if any piece of a request was\n *                             aborted\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that receives data from the main segment's xhr\n *                            request, transmuxed if needed\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @return {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\nconst mediaSegmentRequest = ({\n  xhr,\n  xhrOptions,\n  decryptionWorker,\n  segment,\n  abortFn,\n  progressFn,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog,\n  triggerSegmentEventFn\n}) => {\n  const activeXhrs = [];\n  const finishProcessingFn = waitForCompletion({\n    activeXhrs,\n    decryptionWorker,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog,\n    triggerSegmentEventFn\n  }); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    const objects = [segment.key];\n    if (segment.map && !segment.map.bytes && segment.map.key && segment.map.key.resolvedUri === segment.key.resolvedUri) {\n      objects.push(segment.map.key);\n    }\n    const keyRequestOptions = merge(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer',\n      requestType: 'segment-key'\n    });\n    const keyRequestCallback = handleKeyResponse(segment, objects, finishProcessingFn, triggerSegmentEventFn);\n    const keyInfo = {\n      uri: segment.key.resolvedUri\n    };\n    triggerSegmentEventFn({\n      type: 'segmentkeyloadstart',\n      segment,\n      keyInfo\n    });\n    const keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n  if (segment.map && !segment.map.bytes) {\n    const differentMapKey = segment.map.key && (!segment.key || segment.key.resolvedUri !== segment.map.key.resolvedUri);\n    if (differentMapKey) {\n      const mapKeyRequestOptions = merge(xhrOptions, {\n        uri: segment.map.key.resolvedUri,\n        responseType: 'arraybuffer',\n        requestType: 'segment-key'\n      });\n      const mapKeyRequestCallback = handleKeyResponse(segment, [segment.map.key], finishProcessingFn, triggerSegmentEventFn);\n      const keyInfo = {\n        uri: segment.map.key.resolvedUri\n      };\n      triggerSegmentEventFn({\n        type: 'segmentkeyloadstart',\n        segment,\n        keyInfo\n      });\n      const mapKeyXhr = xhr(mapKeyRequestOptions, mapKeyRequestCallback);\n      activeXhrs.push(mapKeyXhr);\n    }\n    const initSegmentOptions = merge(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map),\n      requestType: 'segment-media-initialization'\n    });\n    const initSegmentRequestCallback = handleInitSegmentResponse({\n      segment,\n      finishProcessingFn,\n      triggerSegmentEventFn\n    });\n    triggerSegmentEventFn({\n      type: 'segmentloadstart',\n      segment\n    });\n    const initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n  const segmentRequestOptions = merge(xhrOptions, {\n    uri: segment.part && segment.part.resolvedUri || segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment),\n    requestType: 'segment'\n  });\n  const segmentRequestCallback = handleSegmentResponse({\n    segment,\n    finishProcessingFn,\n    responseType: segmentRequestOptions.responseType,\n    triggerSegmentEventFn\n  });\n  triggerSegmentEventFn({\n    type: 'segmentloadstart',\n    segment\n  });\n  const segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress({\n    segment,\n    progressFn,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn\n  }));\n  activeXhrs.push(segmentXhr); // since all parts of the request must be considered, but should not make callbacks\n  // multiple times, provide a shared state object\n\n  const loadendState = {};\n  activeXhrs.forEach(activeXhr => {\n    activeXhr.addEventListener('loadend', handleLoadEnd({\n      loadendState,\n      abortFn\n    }));\n  });\n  return () => abortAll(activeXhrs);\n};\n\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\nconst logFn$1 = logger('CodecUtils');\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n *\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\nconst getCodecs = function (media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  const mediaAttributes = media.attributes || {};\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n};\nconst isMaat = (main, media) => {\n  const mediaAttributes = media.attributes || {};\n  return main && main.mediaGroups && main.mediaGroups.AUDIO && mediaAttributes.AUDIO && main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n};\nconst isMuxed = (main, media) => {\n  if (!isMaat(main, media)) {\n    return true;\n  }\n  const mediaAttributes = media.attributes || {};\n  const audioGroup = main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n  for (const groupId in audioGroup) {\n    // If an audio group has a URI (the case for HLS, as HLS will use external playlists),\n    // or there are listed playlists (the case for DASH, as the manifest will have already\n    // provided all of the details necessary to generate the audio playlist, as opposed to\n    // HLS' externally requested playlists), then the content is demuxed.\n    if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n      return true;\n    }\n  }\n  return false;\n};\nconst unwrapCodecList = function (codecList) {\n  const codecs = {};\n  codecList.forEach(({\n    mediaType,\n    type,\n    details\n  }) => {\n    codecs[mediaType] = codecs[mediaType] || [];\n    codecs[mediaType].push(translateLegacyCodec(`${type}${details}`));\n  });\n  Object.keys(codecs).forEach(function (mediaType) {\n    if (codecs[mediaType].length > 1) {\n      logFn$1(`multiple ${mediaType} codecs found as attributes: ${codecs[mediaType].join(', ')}. Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.`);\n      codecs[mediaType] = null;\n      return;\n    }\n    codecs[mediaType] = codecs[mediaType][0];\n  });\n  return codecs;\n};\nconst codecCount = function (codecObj) {\n  let count = 0;\n  if (codecObj.audio) {\n    count++;\n  }\n  if (codecObj.video) {\n    count++;\n  }\n  return count;\n};\n/**\n * Calculates the codec strings for a working configuration of\n * SourceBuffers to play variant streams in a main playlist. If\n * there is no possible working configuration, an empty object will be\n * returned.\n *\n * @param main {Object} the m3u8 object for the main playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Object} the codec strings.\n *\n * @private\n */\n\nconst codecsForPlaylist = function (main, media) {\n  const mediaAttributes = media.attributes || {};\n  const codecInfo = unwrapCodecList(getCodecs(media) || []); // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n  if (isMaat(main, media) && !codecInfo.audio) {\n    if (!isMuxed(main, media)) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      const defaultCodecs = unwrapCodecList(codecsFromDefault(main, mediaAttributes.AUDIO) || []);\n      if (defaultCodecs.audio) {\n        codecInfo.audio = defaultCodecs.audio;\n      }\n    }\n  }\n  return codecInfo;\n};\nconst logFn = logger('PlaylistSelector');\nconst representationToString = function (representation) {\n  if (!representation || !representation.playlist) {\n    return;\n  }\n  const playlist = representation.playlist;\n  return JSON.stringify({\n    id: playlist.id,\n    bandwidth: representation.bandwidth,\n    width: representation.width,\n    height: representation.height,\n    codecs: playlist.attributes && playlist.attributes.CODECS || ''\n  });\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\nconst safeGetComputedStyle = function (el, property) {\n  if (!el) {\n    return '';\n  }\n  const result = window$1.getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\nconst stableSort = function (array, sortFn) {\n  const newArray = array.slice();\n  array.sort(function (left, right) {\n    const cmp = sortFn(left, right);\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\nconst comparePlaylistBandwidth = function (left, right) {\n  let leftBandwidth;\n  let rightBandwidth;\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\nconst comparePlaylistResolution = function (left, right) {\n  let leftWidth;\n  let rightWidth;\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} main\n *        Object representation of the main manifest\n * @param {number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {number} playerWidth\n *        Current width of the player element (should account for the device pixel ratio)\n * @param {number} playerHeight\n *        Current height of the player element (should account for the device pixel ratio)\n * @param {boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @param {Object} playlistController\n *        the current playlistController object\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\nlet simpleSelector = function (main, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions, playlistController) {\n  // If we end up getting called before `main` is available, exit early\n  if (!main) {\n    return;\n  }\n  const options = {\n    bandwidth: playerBandwidth,\n    width: playerWidth,\n    height: playerHeight,\n    limitRenditionByPlayerDimensions\n  };\n  let playlists = main.playlists; // if playlist is audio only, select between currently active audio group playlists.\n\n  if (Playlist.isAudioOnly(main)) {\n    playlists = playlistController.getAudioTrackPlaylists_(); // add audioOnly to options so that we log audioOnly: true\n    // at the buttom of this function for debugging.\n\n    options.audioOnly = true;\n  } // convert the playlists to an intermediary representation to make comparisons easier\n\n  let sortedPlaylistReps = playlists.map(playlist => {\n    let bandwidth;\n    const width = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    const height = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes && playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth,\n      width,\n      height,\n      playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, (left, right) => left.bandwidth - right.bandwidth); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isIncompatible(rep.playlist)); // filter out any playlists that have been disabled manually through the representations\n  // api or excluded temporarily due to playback errors.\n\n  let enabledPlaylistReps = sortedPlaylistReps.filter(rep => Playlist.isEnabled(rep.playlist));\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been excluded or disabled\n    // by the user through the representations api. In this case, ignore exclusion and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isDisabled(rep.playlist));\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n  const bandwidthPlaylistReps = enabledPlaylistReps.filter(rep => rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth);\n  let highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  const bandwidthBestRep = bandwidthPlaylistReps.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    const chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n    if (chosenRep && chosenRep.playlist) {\n      let type = 'sortedPlaylistReps';\n      if (bandwidthBestRep) {\n        type = 'bandwidthBestRep';\n      }\n      if (enabledPlaylistReps[0]) {\n        type = 'enabledPlaylistReps';\n      }\n      logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n      return chosenRep.playlist;\n    }\n    logFn('could not choose a playlist with options', options);\n    return null;\n  } // filter out playlists without resolution information\n\n  const haveResolution = bandwidthPlaylistReps.filter(rep => rep.width && rep.height); // sort variants by resolution\n\n  stableSort(haveResolution, (left, right) => left.width - right.width); // if we have the exact resolution as the player use it\n\n  const resolutionBestRepList = haveResolution.filter(rep => rep.width === playerWidth && rep.height === playerHeight);\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  const resolutionBestRep = resolutionBestRepList.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n  let resolutionPlusOneList;\n  let resolutionPlusOneSmallest;\n  let resolutionPlusOneRep; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(rep => rep.width > playerWidth || rep.height > playerHeight); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(rep => rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n  }\n  let leastPixelDiffRep; // If this selector proves to be better than others,\n  // resolutionPlusOneRep and resolutionBestRep and all\n  // the code involving them should be removed.\n\n  if (playlistController.leastPixelDiffSelector) {\n    // find the variant that is closest to the player's pixel size\n    const leastPixelDiffList = haveResolution.map(rep => {\n      rep.pixelDiff = Math.abs(rep.width - playerWidth) + Math.abs(rep.height - playerHeight);\n      return rep;\n    }); // get the highest bandwidth, closest resolution playlist\n\n    stableSort(leastPixelDiffList, (left, right) => {\n      // sort by highest bandwidth if pixelDiff is the same\n      if (left.pixelDiff === right.pixelDiff) {\n        return right.bandwidth - left.bandwidth;\n      }\n      return left.pixelDiff - right.pixelDiff;\n    });\n    leastPixelDiffRep = leastPixelDiffList[0];\n  } // fallback chain of variants\n\n  const chosenRep = leastPixelDiffRep || resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  if (chosenRep && chosenRep.playlist) {\n    let type = 'sortedPlaylistReps';\n    if (leastPixelDiffRep) {\n      type = 'leastPixelDiffRep';\n    } else if (resolutionPlusOneRep) {\n      type = 'resolutionPlusOneRep';\n    } else if (resolutionBestRep) {\n      type = 'resolutionBestRep';\n    } else if (bandwidthBestRep) {\n      type = 'bandwidthBestRep';\n    } else if (enabledPlaylistReps[0]) {\n      type = 'enabledPlaylistReps';\n    }\n    logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n    return chosenRep.playlist;\n  }\n  logFn('could not choose a playlist with options', options);\n  return null;\n};\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\nconst lastBandwidthSelector = function () {\n  let pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n  if (!isNaN(this.customPixelRatio)) {\n    pixelRatio = this.customPixelRatio;\n  }\n  return simpleSelector(this.playlists.main, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n};\n/**\n * Chooses the appropriate media playlist based on an\n * exponential-weighted moving average of the bandwidth after\n * filtering for player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @param {number} decay - a number between 0 and 1. Higher values of\n * this parameter will cause previous bandwidth estimates to lose\n * significance more quickly.\n * @return {Function} a function which can be invoked to create a new\n * playlist selector function.\n * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n */\n\nconst movingAverageBandwidthSelector = function (decay) {\n  let average = -1;\n  let lastSystemBandwidth = -1;\n  if (decay < 0 || decay > 1) {\n    throw new Error('Moving average bandwidth decay must be between 0 and 1.');\n  }\n  return function () {\n    let pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n    if (!isNaN(this.customPixelRatio)) {\n      pixelRatio = this.customPixelRatio;\n    }\n    if (average < 0) {\n      average = this.systemBandwidth;\n      lastSystemBandwidth = this.systemBandwidth;\n    } // stop the average value from decaying for every 250ms\n    // when the systemBandwidth is constant\n    // and\n    // stop average from setting to a very low value when the\n    // systemBandwidth becomes 0 in case of chunk cancellation\n\n    if (this.systemBandwidth > 0 && this.systemBandwidth !== lastSystemBandwidth) {\n      average = decay * this.systemBandwidth + (1 - decay) * average;\n      lastSystemBandwidth = this.systemBandwidth;\n    }\n    return simpleSelector(this.playlists.main, average, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n  };\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.main\n *        Object representation of the main manifest\n * @param {number} settings.currentTime\n *        The current time of the player\n * @param {number} settings.bandwidth\n *        Current measured bandwidth\n * @param {number} settings.duration\n *        Duration of the media\n * @param {number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\nconst minRebufferMaxBandwidthSelector = function (settings) {\n  const {\n    main,\n    currentTime,\n    bandwidth,\n    duration,\n    segmentDuration,\n    timeUntilRebuffer,\n    currentTimeline,\n    syncController\n  } = settings; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  const compatiblePlaylists = main.playlists.filter(playlist => !Playlist.isIncompatible(playlist)); // filter out any playlists that have been disabled manually through the representations\n  // api or excluded temporarily due to playback errors.\n\n  let enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been excluded or disabled\n    // by the user through the representations api. In this case, ignore exclusion and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(playlist => !Playlist.isDisabled(playlist));\n  }\n  const bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  const rebufferingEstimates = bandwidthPlaylists.map(playlist => {\n    const syncPoint = syncController.getSyncPoint(playlist, duration, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    const numRequests = syncPoint ? 1 : 2;\n    const requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    const rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist,\n      rebufferingImpact\n    };\n  });\n  const noRebufferingPlaylists = rebufferingEstimates.filter(estimate => estimate.rebufferingImpact <= 0); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, (a, b) => comparePlaylistBandwidth(b.playlist, a.playlist));\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n  stableSort(rebufferingEstimates, (a, b) => a.rebufferingImpact - b.rebufferingImpact);\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\nconst lowestBitrateCompatibleVariantSelector = function () {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  const playlists = this.playlists.main.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, (a, b) => comparePlaylistBandwidth(a, b)); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  const playlistsWithVideo = playlists.filter(playlist => !!codecsForPlaylist(this.playlists.main, playlist).video);\n  return playlistsWithVideo[0] || null;\n};\n\n/**\n * Combine all segments into a single Uint8Array\n *\n * @param {Object} segmentObj\n * @return {Uint8Array} concatenated bytes\n * @private\n */\nconst concatSegments = segmentObj => {\n  let offset = 0;\n  let tempBuffer;\n  if (segmentObj.bytes) {\n    tempBuffer = new Uint8Array(segmentObj.bytes); // combine the individual segments into one large typed-array\n\n    segmentObj.segments.forEach(segment => {\n      tempBuffer.set(segment, offset);\n      offset += segment.byteLength;\n    });\n  }\n  return tempBuffer;\n};\n/**\n * Example:\n * https://host.com/path1/path2/path3/segment.ts?arg1=val1\n * -->\n * path3/segment.ts\n *\n * @param resolvedUri\n * @return {string}\n */\n\nfunction compactSegmentUrlDescription(resolvedUri) {\n  try {\n    return new URL(resolvedUri).pathname.split('/').slice(-2).join('/');\n  } catch (e) {\n    return '';\n  }\n}\n\n/**\n * @file text-tracks.js\n */\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStream the caption stream to create\n * @private\n */\n\nconst createCaptionsTrackIfNotExists = function (inbandTextTracks, tech, captionStream) {\n  if (!inbandTextTracks[captionStream]) {\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-608'\n    });\n    let instreamId = captionStream; // we need to translate SERVICEn for 708 to how mux.js currently labels them\n\n    if (/^cc708_/.test(captionStream)) {\n      instreamId = 'SERVICE' + captionStream.split('_')[1];\n    }\n    const track = tech.textTracks().getTrackById(instreamId);\n    if (track) {\n      // Resuse an existing track with a CC# id because this was\n      // very likely created by videojs-contrib-hls from information\n      // in the m3u8 for us to use\n      inbandTextTracks[captionStream] = track;\n    } else {\n      // This section gets called when we have caption services that aren't specified in the manifest.\n      // Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.\n      const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n      let label = captionStream;\n      let language = captionStream;\n      let def = false;\n      const captionService = captionServices[instreamId];\n      if (captionService) {\n        label = captionService.label;\n        language = captionService.language;\n        def = captionService.default;\n      } // Otherwise, create a track with the default `CC#` label and\n      // without a language\n\n      inbandTextTracks[captionStream] = tech.addRemoteTextTrack({\n        kind: 'captions',\n        id: instreamId,\n        // TODO: investigate why this doesn't seem to turn the caption on by default\n        default: def,\n        label,\n        language\n      }, false).track;\n    }\n  }\n};\n/**\n * Add caption text track data to a source handler given an array of captions\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {Array} captionArray an array of caption data\n * @private\n */\n\nconst addCaptionData = function ({\n  inbandTextTracks,\n  captionArray,\n  timestampOffset\n}) {\n  if (!captionArray) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  captionArray.forEach(caption => {\n    const track = caption.stream; // in CEA 608 captions, video.js/mux.js sends a content array\n    // with positioning data\n\n    if (caption.content) {\n      caption.content.forEach(value => {\n        const cue = new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, value.text);\n        cue.line = value.line;\n        cue.align = 'left';\n        cue.position = value.position;\n        cue.positionAlign = 'line-left';\n        inbandTextTracks[track].addCue(cue);\n      });\n    } else {\n      // otherwise, a text value with combined captions is sent\n      inbandTextTracks[track].addCue(new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, caption.text));\n    }\n  });\n};\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\nconst deprecateOldCue = function (cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get() {\n        videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get() {\n        videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get() {\n        videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n/**\n * Add metadata text track data to a source handler given an array of metadata\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {Array} metadataArray an array of meta data\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {number} videoDuration the duration of the video\n * @private\n */\n\nconst addMetadata = ({\n  inbandTextTracks,\n  metadataArray,\n  timestampOffset,\n  videoDuration\n}) => {\n  if (!metadataArray) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  const metadataTrack = inbandTextTracks.metadataTrack_;\n  if (!metadataTrack) {\n    return;\n  }\n  metadataArray.forEach(metadata => {\n    const time = metadata.cueTime + timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n    // ignore this bit of metadata.\n    // This likely occurs when you have an non-timed ID3 tag like TIT2,\n    // which is the \"Title/Songname/Content description\" frame\n\n    if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n      return;\n    } // If we have no frames, we can't create a cue.\n\n    if (!metadata.frames || !metadata.frames.length) {\n      return;\n    }\n    metadata.frames.forEach(frame => {\n      const cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n      cue.frame = frame;\n      cue.value = frame;\n      deprecateOldCue(cue);\n      metadataTrack.addCue(cue);\n    });\n  });\n  if (!metadataTrack.cues || !metadataTrack.cues.length) {\n    return;\n  } // Updating the metadeta cues so that\n  // the endTime of each cue is the startTime of the next cue\n  // the endTime of last cue is the duration of the video\n\n  const cues = metadataTrack.cues;\n  const cuesArray = []; // Create a copy of the TextTrackCueList...\n  // ...disregarding cues with a falsey value\n\n  for (let i = 0; i < cues.length; i++) {\n    if (cues[i]) {\n      cuesArray.push(cues[i]);\n    }\n  } // Group cues by their startTime value\n\n  const cuesGroupedByStartTime = cuesArray.reduce((obj, cue) => {\n    const timeSlot = obj[cue.startTime] || [];\n    timeSlot.push(cue);\n    obj[cue.startTime] = timeSlot;\n    return obj;\n  }, {}); // Sort startTimes by ascending order\n\n  const sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort((a, b) => Number(a) - Number(b)); // Map each cue group's endTime to the next group's startTime\n\n  sortedStartTimes.forEach((startTime, idx) => {\n    const cueGroup = cuesGroupedByStartTime[startTime];\n    const finiteDuration = isFinite(videoDuration) ? videoDuration : startTime;\n    const nextTime = Number(sortedStartTimes[idx + 1]) || finiteDuration; // Map each cue's endTime the next group's startTime\n\n    cueGroup.forEach(cue => {\n      cue.endTime = nextTime;\n    });\n  });\n}; // object for mapping daterange attributes\n\nconst dateRangeAttr = {\n  id: 'ID',\n  class: 'CLASS',\n  startDate: 'START-DATE',\n  duration: 'DURATION',\n  endDate: 'END-DATE',\n  endOnNext: 'END-ON-NEXT',\n  plannedDuration: 'PLANNED-DURATION',\n  scte35Out: 'SCTE35-OUT',\n  scte35In: 'SCTE35-IN'\n};\nconst dateRangeKeysToOmit = new Set(['id', 'class', 'startDate', 'duration', 'endDate', 'endOnNext', 'startTime', 'endTime', 'processDateRange']);\n/**\n * Add DateRange metadata text track to a source handler given an array of metadata\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {Array} dateRanges parsed media playlist\n * @private\n */\n\nconst addDateRangeMetadata = ({\n  inbandTextTracks,\n  dateRanges\n}) => {\n  const metadataTrack = inbandTextTracks.metadataTrack_;\n  if (!metadataTrack) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  dateRanges.forEach(dateRange => {\n    // we generate multiple cues for each date range with different attributes\n    for (const key of Object.keys(dateRange)) {\n      if (dateRangeKeysToOmit.has(key)) {\n        continue;\n      }\n      const cue = new Cue(dateRange.startTime, dateRange.endTime, '');\n      cue.id = dateRange.id;\n      cue.type = 'com.apple.quicktime.HLS';\n      cue.value = {\n        key: dateRangeAttr[key],\n        data: dateRange[key]\n      };\n      if (key === 'scte35Out' || key === 'scte35In') {\n        cue.value.data = new Uint8Array(cue.value.data.match(/[\\da-f]{2}/gi)).buffer;\n      }\n      metadataTrack.addCue(cue);\n    }\n    dateRange.processDateRange();\n  });\n};\n/**\n * Create metadata text track on video.js if it does not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {string} dispatchType the inband metadata track dispatch type\n * @param {Object} tech the video.js tech\n * @private\n */\n\nconst createMetadataTrackIfNotExists = (inbandTextTracks, dispatchType, tech) => {\n  if (inbandTextTracks.metadataTrack_) {\n    return;\n  }\n  inbandTextTracks.metadataTrack_ = tech.addRemoteTextTrack({\n    kind: 'metadata',\n    label: 'Timed Metadata'\n  }, false).track;\n  if (!videojs.browser.IS_ANY_SAFARI) {\n    inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType = dispatchType;\n  }\n};\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\nconst removeCuesFromTrack = function (start, end, track) {\n  let i;\n  let cue;\n  if (!track) {\n    return;\n  }\n  if (!track.cues) {\n    return;\n  }\n  i = track.cues.length;\n  while (i--) {\n    cue = track.cues[i]; // Remove any cue within the provided start and end time\n\n    if (cue.startTime >= start && cue.endTime <= end) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * Remove duplicate cues from a track on video.js (a cue is considered a\n * duplicate if it has the same time interval and text as another)\n *\n * @param {Object} track the text track to remove the duplicate cues from\n * @private\n */\n\nconst removeDuplicateCuesFromTrack = function (track) {\n  const cues = track.cues;\n  if (!cues) {\n    return;\n  }\n  const uniqueCues = {};\n  for (let i = cues.length - 1; i >= 0; i--) {\n    const cue = cues[i];\n    const cueKey = `${cue.startTime}-${cue.endTime}-${cue.text}`;\n    if (uniqueCues[cueKey]) {\n      track.removeCue(cue);\n    } else {\n      uniqueCues[cueKey] = cue;\n    }\n  }\n};\n\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\nconst gopsSafeToAlignWith = (buffer, currentTime, mapping) => {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n  const currentTimePts = Math.ceil((currentTime - mapping + 3) * ONE_SECOND_IN_TS);\n  let i;\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\nconst updateGopBuffer = (buffer, gops, replace) => {\n  if (!gops.length) {\n    return buffer;\n  }\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n  const start = gops[0].pts;\n  let i = 0;\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\nconst removeGopBuffer = (buffer, start, end, mapping) => {\n  const startPts = Math.ceil((start - mapping) * ONE_SECOND_IN_TS);\n  const endPts = Math.ceil((end - mapping) * ONE_SECOND_IN_TS);\n  const updatedBuffer = buffer.slice();\n  let i = buffer.length;\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n  let j = i + 1;\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\nconst shallowEqual = function (a, b) {\n  // if both are undefined\n  // or one or the other is undefined\n  // they are not equal\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // they are the same object and thus, equal\n\n  if (a === b) {\n    return true;\n  } // sort keys so we can make sure they have\n  // all the same keys later.\n\n  const akeys = Object.keys(a).sort();\n  const bkeys = Object.keys(b).sort(); // different number of keys, not equal\n\n  if (akeys.length !== bkeys.length) {\n    return false;\n  }\n  for (let i = 0; i < akeys.length; i++) {\n    const key = akeys[i]; // different sorted keys, not equal\n\n    if (key !== bkeys[i]) {\n      return false;\n    } // different values, not equal\n\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * The segment loader has no recourse except to fetch a segment in the\n * current playlist and use the internal timestamps in that segment to\n * generate a syncPoint. This function returns a good candidate index\n * for that process.\n *\n * @param {Array} segments - the segments array from a playlist.\n * @return {number} An index of a segment from the playlist to load\n */\n\nconst getSyncSegmentCandidate = function (currentTimeline, segments, targetTime) {\n  segments = segments || [];\n  const timelineSegments = [];\n  let time = 0;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    if (currentTimeline === segment.timeline) {\n      timelineSegments.push(i);\n      time += segment.duration;\n      if (time > targetTime) {\n        return i;\n      }\n    }\n  }\n  if (timelineSegments.length === 0) {\n    return 0;\n  } // default to the last timeline segment\n\n  return timelineSegments[timelineSegments.length - 1];\n}; // In the event of a quota exceeded error, keep at least one second of back buffer. This\n// number was arbitrarily chosen and may be updated in the future, but seemed reasonable\n// as a start to prevent any potential issues with removing content too close to the\n// playhead.\n\nconst MIN_BACK_BUFFER = 1; // in ms\n\nconst CHECK_BUFFER_DELAY = 500;\nconst finite = num => typeof num === 'number' && isFinite(num); // With most content hovering around 30fps, if a segment has a duration less than a half\n// frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will\n// not accurately reflect the rest of the content.\n\nconst MIN_SEGMENT_DURATION_TO_SAVE_STATS = 1 / 60;\nconst illegalMediaSwitch = (loaderType, startingMedia, trackInfo) => {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !trackInfo) {\n    return null;\n  }\n  if (!trackInfo.hasAudio && !trackInfo.hasVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n  if (startingMedia.hasVideo && !trackInfo.hasVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n  if (!startingMedia.hasVideo && trackInfo.hasVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interrupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {number} currentTime\n *        The current time of the player\n * @param {number} targetDuration\n *        The target duration of the current playlist\n * @return {number}\n *         Time that is safe to remove from the back buffer without interrupting playback\n */\n\nconst safeBackBufferTrimTime = (seekable, currentTime, targetDuration) => {\n  // 30 seconds before the playhead provides a safe default for trimming.\n  //\n  // Choosing a reasonable default is particularly important for high bitrate content and\n  // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n  // throw an APPEND_BUFFER_ERR.\n  let trimTime = currentTime - Config.BACK_BUFFER_LENGTH;\n  if (seekable.length) {\n    // Some live playlists may have a shorter window of content than the full allowed back\n    // buffer. For these playlists, don't save content that's no longer within the window.\n    trimTime = Math.max(trimTime, seekable.start(0));\n  } // Don't remove within target duration of the current time to avoid the possibility of\n  // removing the GOP currently being played, as removing it can cause playback stalls.\n\n  const maxTrimTime = currentTime - targetDuration;\n  return Math.min(maxTrimTime, trimTime);\n};\nconst segmentInfoString = segmentInfo => {\n  const {\n    startOfSegment,\n    duration,\n    segment,\n    part,\n    playlist: {\n      mediaSequence: seq,\n      id,\n      segments = []\n    },\n    mediaIndex: index,\n    partIndex,\n    timeline\n  } = segmentInfo;\n  const segmentLen = segments.length - 1;\n  let selection = 'mediaIndex/partIndex increment';\n  if (segmentInfo.getMediaInfoForTime) {\n    selection = `getMediaInfoForTime (${segmentInfo.getMediaInfoForTime})`;\n  } else if (segmentInfo.isSyncRequest) {\n    selection = 'getSyncSegmentCandidate (isSyncRequest)';\n  }\n  if (segmentInfo.independent) {\n    selection += ` with independent ${segmentInfo.independent}`;\n  }\n  const hasPartIndex = typeof partIndex === 'number';\n  const name = segmentInfo.segment.uri ? 'segment' : 'pre-segment';\n  const zeroBasedPartCount = hasPartIndex ? getKnownPartCount({\n    preloadSegment: segment\n  }) - 1 : 0;\n  return `${name} [${seq + index}/${seq + segmentLen}]` + (hasPartIndex ? ` part [${partIndex}/${zeroBasedPartCount}]` : '') + ` segment start/end [${segment.start} => ${segment.end}]` + (hasPartIndex ? ` part start/end [${part.start} => ${part.end}]` : '') + ` startOfSegment [${startOfSegment}]` + ` duration [${duration}]` + ` timeline [${timeline}]` + ` selected by [${selection}]` + ` playlist [${id}]`;\n};\nconst timingInfoPropertyForMedia = mediaType => `${mediaType}TimingInfo`;\n/**\n * Returns the timestamp offset to use for the segment.\n *\n * @param {number} segmentTimeline\n *        The timeline of the segment\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} startOfSegment\n *        The estimated segment start\n * @param {TimeRange[]} buffered\n *        The loader's buffer\n * @param {boolean} overrideCheck\n *        If true, no checks are made to see if the timestamp offset value should be set,\n *        but sets it directly to a value.\n *\n * @return {number|null}\n *         Either a number representing a new timestamp offset, or null if the segment is\n *         part of the same timeline\n */\n\nconst timestampOffsetForSegment = ({\n  segmentTimeline,\n  currentTimeline,\n  startOfSegment,\n  buffered,\n  overrideCheck\n}) => {\n  // Check to see if we are crossing a discontinuity to see if we need to set the\n  // timestamp offset on the transmuxer and source buffer.\n  //\n  // Previously, we changed the timestampOffset if the start of this segment was less than\n  // the currently set timestampOffset, but this isn't desirable as it can produce bad\n  // behavior, especially around long running live streams.\n  if (!overrideCheck && segmentTimeline === currentTimeline) {\n    return null;\n  } // When changing renditions, it's possible to request a segment on an older timeline. For\n  // instance, given two renditions with the following:\n  //\n  // #EXTINF:10\n  // segment1\n  // #EXT-X-DISCONTINUITY\n  // #EXTINF:10\n  // segment2\n  // #EXTINF:10\n  // segment3\n  //\n  // And the current player state:\n  //\n  // current time: 8\n  // buffer: 0 => 20\n  //\n  // The next segment on the current rendition would be segment3, filling the buffer from\n  // 20s onwards. However, if a rendition switch happens after segment2 was requested,\n  // then the next segment to be requested will be segment1 from the new rendition in\n  // order to fill time 8 and onwards. Using the buffered end would result in repeated\n  // content (since it would position segment1 of the new rendition starting at 20s). This\n  // case can be identified when the new segment's timeline is a prior value. Instead of\n  // using the buffered end, the startOfSegment can be used, which, hopefully, will be\n  // more accurate to the actual start time of the segment.\n\n  if (segmentTimeline < currentTimeline) {\n    return startOfSegment;\n  } // segmentInfo.startOfSegment used to be used as the timestamp offset, however, that\n  // value uses the end of the last segment if it is available. While this value\n  // should often be correct, it's better to rely on the buffered end, as the new\n  // content post discontinuity should line up with the buffered end as if it were\n  // time 0 for the new content.\n\n  return buffered.length ? buffered.end(buffered.length - 1) : startOfSegment;\n};\n/**\n * Returns whether or not the loader should wait for a timeline change from the timeline\n * change controller before processing the segment.\n *\n * Primary timing in VHS goes by video. This is different from most media players, as\n * audio is more often used as the primary timing source. For the foreseeable future, VHS\n * will continue to use video as the primary timing source, due to the current logic and\n * expectations built around it.\n\n * Since the timing follows video, in order to maintain sync, the video loader is\n * responsible for setting both audio and video source buffer timestamp offsets.\n *\n * Setting different values for audio and video source buffers could lead to\n * desyncing. The following examples demonstrate some of the situations where this\n * distinction is important. Note that all of these cases involve demuxed content. When\n * content is muxed, the audio and video are packaged together, therefore syncing\n * separate media playlists is not an issue.\n *\n * CASE 1: Audio prepares to load a new timeline before video:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:                     ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader              ^\n *\n * In the above example, the audio loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the video loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the audio loader goes ahead and loads and appends the 6th segment before the video\n * loader crosses the discontinuity, then when appended, the 6th audio segment will use\n * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,\n * the audio loader must provide the audioAppendStart value to trim the content in the\n * transmuxer, and that value relies on the audio timestamp offset. Since the audio\n * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the\n * segment until that value is provided.\n *\n * CASE 2: Video prepares to load a new timeline before audio:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:             ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader                      ^\n *\n * In the above example, the video loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the audio loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the video loader goes ahead and loads and appends the 6th segment, then once the\n * segment is loaded and processed, both the video and audio timestamp offsets will be\n * set, since video is used as the primary timing source. This is to ensure content lines\n * up appropriately, as any modifications to the video timing are reflected by audio when\n * the video loader sets the audio and video timestamp offsets to the same value. However,\n * setting the timestamp offset for audio before audio has had a chance to change\n * timelines will likely lead to desyncing, as the audio loader will append segment 5 with\n * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.\n *\n * CASE 3: When seeking, audio prepares to load a new timeline before video\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:           ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader            ^\n *\n * In the above example, both audio and video loaders are loading segments from timeline\n * 0, but imagine that the seek originated from timeline 1.\n *\n * When seeking to a new timeline, the timestamp offset will be set based on the expected\n * segment start of the loaded video segment. In order to maintain sync, the audio loader\n * must wait for the video loader to load its segment and update both the audio and video\n * timestamp offsets before it may load and append its own segment. This is the case\n * whether the seek results in a mismatched segment request (e.g., the audio loader\n * chooses to load segment 3 and the video loader chooses to load segment 4) or the\n * loaders choose to load the same segment index from each playlist, as the segments may\n * not be aligned perfectly, even for matching segment indexes.\n *\n * @param {Object} timelinechangeController\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} segmentTimeline\n *        The timeline of the segment being loaded\n * @param {('main'|'audio')} loaderType\n *        The loader type\n * @param {boolean} audioDisabled\n *        Whether the audio is disabled for the loader. This should only be true when the\n *        loader may have muxed audio in its segment, but should not append it, e.g., for\n *        the main loader when an alternate audio playlist is active.\n *\n * @return {boolean}\n *         Whether the loader should wait for a timeline change from the timeline change\n *         controller before processing the segment\n */\n\nconst shouldWaitForTimelineChange = ({\n  timelineChangeController,\n  currentTimeline,\n  segmentTimeline,\n  loaderType,\n  audioDisabled\n}) => {\n  if (currentTimeline === segmentTimeline) {\n    return false;\n  }\n  if (loaderType === 'audio') {\n    const lastMainTimelineChange = timelineChangeController.lastTimelineChange({\n      type: 'main'\n    }); // Audio loader should wait if:\n    //\n    // * main hasn't had a timeline change yet (thus has not loaded its first segment)\n    // * main hasn't yet changed to the timeline audio is looking to load\n\n    return !lastMainTimelineChange || lastMainTimelineChange.to !== segmentTimeline;\n  } // The main loader only needs to wait for timeline changes if there's demuxed audio.\n  // Otherwise, there's nothing to wait for, since audio would be muxed into the main\n  // loader's segments (or the content is audio/video only and handled by the main\n  // loader).\n\n  if (loaderType === 'main' && audioDisabled) {\n    const pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n      type: 'audio'\n    }); // Main loader should wait for the audio loader if audio is not pending a timeline\n    // change to the current timeline.\n    //\n    // Since the main loader is responsible for setting the timestamp offset for both\n    // audio and video, the main loader must wait for audio to be about to change to its\n    // timeline before setting the offset, otherwise, if audio is behind in loading,\n    // segments from the previous timeline would be adjusted by the new timestamp offset.\n    //\n    // This requirement means that video will not cross a timeline until the audio is\n    // about to cross to it, so that way audio and video will always cross the timeline\n    // together.\n    //\n    // In addition to normal timeline changes, these rules also apply to the start of a\n    // stream (going from a non-existent timeline, -1, to timeline 0). It's important\n    // that these rules apply to the first timeline change because if they did not, it's\n    // possible that the main loader will cross two timelines before the audio loader has\n    // crossed one. Logic may be implemented to handle the startup as a special case, but\n    // it's easier to simply treat all timeline changes the same.\n\n    if (pendingAudioTimelineChange && pendingAudioTimelineChange.to === segmentTimeline) {\n      return false;\n    }\n    return true;\n  }\n  return false;\n};\nconst shouldFixBadTimelineChanges = timelineChangeController => {\n  if (!timelineChangeController) {\n    return false;\n  }\n  const pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n    type: 'audio'\n  });\n  const pendingMainTimelineChange = timelineChangeController.pendingTimelineChange({\n    type: 'main'\n  });\n  const hasPendingTimelineChanges = pendingAudioTimelineChange && pendingMainTimelineChange;\n  const differentPendingChanges = hasPendingTimelineChanges && pendingAudioTimelineChange.to !== pendingMainTimelineChange.to;\n  const isNotInitialPendingTimelineChange = hasPendingTimelineChanges && pendingAudioTimelineChange.from !== -1 && pendingMainTimelineChange.from !== -1;\n  if (isNotInitialPendingTimelineChange && differentPendingChanges) {\n    return true;\n  }\n  return false;\n};\n/**\n * Check if the pending audio timeline change is behind the\n * pending main timeline change.\n *\n * @param {SegmentLoader} segmentLoader\n * @return {boolean}\n */\n\nconst isAudioTimelineBehind = segmentLoader => {\n  const pendingAudioTimelineChange = segmentLoader.timelineChangeController_.pendingTimelineChange({\n    type: 'audio'\n  });\n  const pendingMainTimelineChange = segmentLoader.timelineChangeController_.pendingTimelineChange({\n    type: 'main'\n  });\n  const hasPendingTimelineChanges = pendingAudioTimelineChange && pendingMainTimelineChange;\n  return hasPendingTimelineChanges && pendingAudioTimelineChange.to < pendingMainTimelineChange.to;\n};\n/**\n * A method to check if the player is waiting for a timeline change, and fixes\n * certain scenarios where the timelines need to be updated.\n *\n * @param {SegmentLoader} segmentLoader\n */\n\nconst checkAndFixTimelines = segmentLoader => {\n  const segmentInfo = segmentLoader.pendingSegment_;\n  if (!segmentInfo) {\n    return;\n  }\n  const waitingForTimelineChange = shouldWaitForTimelineChange({\n    timelineChangeController: segmentLoader.timelineChangeController_,\n    currentTimeline: segmentLoader.currentTimeline_,\n    segmentTimeline: segmentInfo.timeline,\n    loaderType: segmentLoader.loaderType_,\n    audioDisabled: segmentLoader.audioDisabled_\n  });\n  if (waitingForTimelineChange && shouldFixBadTimelineChanges(segmentLoader.timelineChangeController_)) {\n    if (isAudioTimelineBehind(segmentLoader)) {\n      segmentLoader.timelineChangeController_.trigger('audioTimelineBehind');\n      return;\n    }\n    segmentLoader.timelineChangeController_.trigger('fixBadTimelineChange');\n  }\n};\nconst mediaDuration = timingInfos => {\n  let maxDuration = 0;\n  ['video', 'audio'].forEach(function (type) {\n    const typeTimingInfo = timingInfos[`${type}TimingInfo`];\n    if (!typeTimingInfo) {\n      return;\n    }\n    const {\n      start,\n      end\n    } = typeTimingInfo;\n    let duration;\n    if (typeof start === 'bigint' || typeof end === 'bigint') {\n      duration = window$1.BigInt(end) - window$1.BigInt(start);\n    } else if (typeof start === 'number' && typeof end === 'number') {\n      duration = end - start;\n    }\n    if (typeof duration !== 'undefined' && duration > maxDuration) {\n      maxDuration = duration;\n    }\n  }); // convert back to a number if it is lower than MAX_SAFE_INTEGER\n  // as we only need BigInt when we are above that.\n\n  if (typeof maxDuration === 'bigint' && maxDuration < Number.MAX_SAFE_INTEGER) {\n    maxDuration = Number(maxDuration);\n  }\n  return maxDuration;\n};\nconst segmentTooLong = ({\n  segmentDuration,\n  maxDuration\n}) => {\n  // 0 duration segments are most likely due to metadata only segments or a lack of\n  // information.\n  if (!segmentDuration) {\n    return false;\n  } // For HLS:\n  //\n  // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1\n  // The EXTINF duration of each Media Segment in the Playlist\n  // file, when rounded to the nearest integer, MUST be less than or equal\n  // to the target duration; longer segments can trigger playback stalls\n  // or other errors.\n  //\n  // For DASH, the mpd-parser uses the largest reported segment duration as the target\n  // duration. Although that reported duration is occasionally approximate (i.e., not\n  // exact), a strict check may report that a segment is too long more often in DASH.\n\n  return Math.round(segmentDuration) > maxDuration + TIME_FUDGE_FACTOR;\n};\nconst getTroublesomeSegmentDurationMessage = (segmentInfo, sourceType) => {\n  // Right now we aren't following DASH's timing model exactly, so only perform\n  // this check for HLS content.\n  if (sourceType !== 'hls') {\n    return null;\n  }\n  const segmentDuration = mediaDuration({\n    audioTimingInfo: segmentInfo.audioTimingInfo,\n    videoTimingInfo: segmentInfo.videoTimingInfo\n  }); // Don't report if we lack information.\n  //\n  // If the segment has a duration of 0 it is either a lack of information or a\n  // metadata only segment and shouldn't be reported here.\n\n  if (!segmentDuration) {\n    return null;\n  }\n  const targetDuration = segmentInfo.playlist.targetDuration;\n  const isSegmentWayTooLong = segmentTooLong({\n    segmentDuration,\n    maxDuration: targetDuration * 2\n  });\n  const isSegmentSlightlyTooLong = segmentTooLong({\n    segmentDuration,\n    maxDuration: targetDuration\n  });\n  const segmentTooLongMessage = `Segment with index ${segmentInfo.mediaIndex} ` + `from playlist ${segmentInfo.playlist.id} ` + `has a duration of ${segmentDuration} ` + `when the reported duration is ${segmentInfo.duration} ` + `and the target duration is ${targetDuration}. ` + 'For HLS content, a duration in excess of the target duration may result in ' + 'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for ' + 'more details: ' + 'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';\n  if (isSegmentWayTooLong || isSegmentSlightlyTooLong) {\n    return {\n      severity: isSegmentWayTooLong ? 'warn' : 'info',\n      message: segmentTooLongMessage\n    };\n  }\n  return null;\n};\n/**\n *\n * @param {Object} options type of segment loader and segment either segmentInfo or simple segment\n * @return a segmentInfo payload for events or errors.\n */\n\nconst segmentInfoPayload = ({\n  type,\n  segment\n}) => {\n  if (!segment) {\n    return;\n  }\n  const isEncrypted = Boolean(segment.key || segment.map && segment.map.ke);\n  const isMediaInitialization = Boolean(segment.map && !segment.map.bytes);\n  const start = segment.startOfSegment === undefined ? segment.start : segment.startOfSegment;\n  return {\n    type: type || segment.type,\n    uri: segment.resolvedUri || segment.uri,\n    start,\n    duration: segment.duration,\n    isEncrypted,\n    isMediaInitialization\n  };\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nclass SegmentLoader extends videojs.EventTarget {\n  constructor(settings, options = {}) {\n    super(); // check pre-conditions\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n    this.bandwidth = settings.bandwidth;\n    this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    this.roundTrip = NaN;\n    this.resetStats_();\n    this.mediaIndex = null;\n    this.partIndex = null; // private settings\n\n    this.hasPlayed_ = settings.hasPlayed;\n    this.currentTime_ = settings.currentTime;\n    this.seekable_ = settings.seekable;\n    this.seeking_ = settings.seeking;\n    this.duration_ = settings.duration;\n    this.mediaSource_ = settings.mediaSource;\n    this.vhs_ = settings.vhs;\n    this.loaderType_ = settings.loaderType;\n    this.currentMediaInfo_ = void 0;\n    this.startingMediaInfo_ = void 0;\n    this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    this.goalBufferLength_ = settings.goalBufferLength;\n    this.sourceType_ = settings.sourceType;\n    this.sourceUpdater_ = settings.sourceUpdater;\n    this.inbandTextTracks_ = settings.inbandTextTracks;\n    this.state_ = 'INIT';\n    this.timelineChangeController_ = settings.timelineChangeController;\n    this.shouldSaveSegmentTimingInfo_ = true;\n    this.parse708captions_ = settings.parse708captions;\n    this.useDtsForTimestampOffset_ = settings.useDtsForTimestampOffset;\n    this.captionServices_ = settings.captionServices;\n    this.exactManifestTimings = settings.exactManifestTimings;\n    this.addMetadataToTextTrack = settings.addMetadataToTextTrack; // private instance variables\n\n    this.checkBufferTimeout_ = null;\n    this.error_ = void 0;\n    this.currentTimeline_ = -1;\n    this.shouldForceTimestampOffsetAfterResync_ = false;\n    this.pendingSegment_ = null;\n    this.xhrOptions_ = null;\n    this.pendingSegments_ = [];\n    this.audioDisabled_ = false;\n    this.isPendingTimestampOffset_ = false; // TODO possibly move gopBuffer and timeMapping info to a separate controller\n\n    this.gopBuffer_ = [];\n    this.timeMapping_ = 0;\n    this.safeAppend_ = false;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.playlistOfLastInitSegment_ = {\n      audio: null,\n      video: null\n    };\n    this.callQueue_ = []; // If the segment loader prepares to load a segment, but does not have enough\n    // information yet to start the loading process (e.g., if the audio loader wants to\n    // load a segment from the next timeline but the main loader hasn't yet crossed that\n    // timeline), then the load call will be added to the queue until it is ready to be\n    // processed.\n\n    this.loadQueue_ = [];\n    this.metadataQueue_ = {\n      id3: [],\n      caption: []\n    };\n    this.waitingOnRemove_ = false;\n    this.quotaExceededErrorRetryTimeout_ = null; // Fragmented mp4 playback\n\n    this.activeInitSegmentId_ = null;\n    this.initSegments_ = {}; // HLSe playback\n\n    this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    this.keyCache_ = {};\n    this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    this.syncController_ = settings.syncController;\n    this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n    this.transmuxer_ = this.createTransmuxer_();\n    this.triggerSyncInfoUpdate_ = () => this.trigger('syncinfoupdate');\n    this.syncController_.on('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    this.mediaSource_.addEventListener('sourceopen', () => {\n      if (!this.isEndOfStream_()) {\n        this.ended_ = false;\n      }\n    }); // ...for determining the fetch location\n\n    this.fetchAtBuffer_ = false;\n    this.logger_ = logger(`SegmentLoader[${this.loaderType_}]`);\n    Object.defineProperty(this, 'state', {\n      get() {\n        return this.state_;\n      },\n      set(newState) {\n        if (newState !== this.state_) {\n          this.logger_(`${this.state_} -> ${newState}`);\n          this.state_ = newState;\n          this.trigger('statechange');\n        }\n      }\n    });\n    this.sourceUpdater_.on('ready', () => {\n      if (this.hasEnoughInfoToAppend_()) {\n        this.processCallQueue_();\n      } else {\n        checkAndFixTimelines(this);\n      }\n    });\n    this.sourceUpdater_.on('codecschange', metadata => {\n      this.trigger(_extends({\n        type: 'codecschange'\n      }, metadata));\n    }); // Only the main loader needs to listen for pending timeline changes, as the main\n    // loader should wait for audio to be ready to change its timeline so that both main\n    // and audio timelines change together. For more details, see the\n    // shouldWaitForTimelineChange function.\n\n    if (this.loaderType_ === 'main') {\n      this.timelineChangeController_.on('pendingtimelinechange', () => {\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        } else {\n          checkAndFixTimelines(this);\n        }\n      });\n    } // The main loader only listens on pending timeline changes, but the audio loader,\n    // since its loads follow main, needs to listen on timeline changes. For more details,\n    // see the shouldWaitForTimelineChange function.\n\n    if (this.loaderType_ === 'audio') {\n      this.timelineChangeController_.on('timelinechange', metadata => {\n        this.trigger(_extends({\n          type: 'timelinechange'\n        }, metadata));\n        if (this.hasEnoughInfoToLoad_()) {\n          this.processLoadQueue_();\n        } else {\n          checkAndFixTimelines(this);\n        }\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        } else {\n          checkAndFixTimelines(this);\n        }\n      });\n    }\n  }\n  /**\n   * TODO: Current sync controller consists of many hls-specific strategies\n   * media sequence sync is also hls-specific, and we would like to be protocol-agnostic on this level\n   * this should be a part of the sync-controller and sync controller should expect different strategy list based on the protocol.\n   *\n   * @return {MediaSequenceSync|null}\n   * @private\n   */\n\n  get mediaSequenceSync_() {\n    return this.syncController_.getMediaSequenceSync(this.loaderType_);\n  }\n  createTransmuxer_() {\n    return segmentTransmuxer.createTransmuxer({\n      remux: false,\n      alignGopsAtEnd: this.safeAppend_,\n      keepOriginalTimestamps: true,\n      parse708captions: this.parse708captions_,\n      captionServices: this.captionServices_\n    });\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n  resetStats_() {\n    this.mediaBytesTransferred = 0;\n    this.mediaRequests = 0;\n    this.mediaRequestsAborted = 0;\n    this.mediaRequestsTimedout = 0;\n    this.mediaRequestsErrored = 0;\n    this.mediaTransferDuration = 0;\n    this.mediaSecondsLoaded = 0;\n    this.mediaAppends = 0;\n  }\n  /**\n   * dispose of the SegmentLoader and reset to the default state\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    this.state = 'DISPOSED';\n    this.pause();\n    this.abort_();\n    if (this.transmuxer_) {\n      this.transmuxer_.terminate();\n    }\n    this.resetStats_();\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n      this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    }\n    this.off();\n  }\n  setAudio(enable) {\n    this.audioDisabled_ = !enable;\n    if (enable) {\n      this.appendInitSegment_.audio = true;\n    } else {\n      // remove current track audio if it gets disabled\n      this.sourceUpdater_.removeAudio(0, this.duration_());\n    }\n  }\n  /**\n   * abort anything that is currently doing on with the SegmentLoader\n   * and reset to a default state\n   */\n\n  abort() {\n    if (this.state !== 'WAITING') {\n      if (this.pendingSegment_) {\n        this.pendingSegment_ = null;\n      }\n      this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\n      return;\n    }\n    this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n    // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n    // when the request is aborted. This will prevent the loader from being stuck in the\n    // WAITING state indefinitely.\n\n    this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n    // next segment\n\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * abort all pending xhr requests and null any pending segements\n   *\n   * @private\n   */\n\n  abort_() {\n    if (this.pendingSegment_ && this.pendingSegment_.abortRequests) {\n      this.pendingSegment_.abortRequests();\n    } // clear out the segment being processed\n\n    this.pendingSegment_ = null;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\n    this.waitingOnRemove_ = false;\n    window$1.clearTimeout(this.quotaExceededErrorRetryTimeout_);\n    this.quotaExceededErrorRetryTimeout_ = null;\n  }\n  checkForAbort_(requestId) {\n    // If the state is APPENDING, then aborts will not modify the state, meaning the first\n    // callback that happens should reset the state to READY so that loading can continue.\n    if (this.state === 'APPENDING' && !this.pendingSegment_) {\n      this.state = 'READY';\n      return true;\n    }\n    if (!this.pendingSegment_ || this.pendingSegment_.requestId !== requestId) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * set an error on the segment loader and null out any pending segements\n   *\n   * @param {Error} error the error to set on the SegmentLoader\n   * @return {Error} the error that was set or that is currently set\n   */\n\n  error(error) {\n    if (typeof error !== 'undefined') {\n      this.logger_('error occurred:', error);\n      this.error_ = error;\n    }\n    this.pendingSegment_ = null;\n    return this.error_;\n  }\n  endOfStream() {\n    this.ended_ = true;\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n    this.gopBuffer_.length = 0;\n    this.pause();\n    this.trigger('ended');\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  buffered_() {\n    const trackInfo = this.getMediaInfo_();\n    if (!this.sourceUpdater_ || !trackInfo) {\n      return createTimeRanges();\n    }\n    if (this.loaderType_ === 'main') {\n      const {\n        hasAudio,\n        hasVideo,\n        isMuxed\n      } = trackInfo;\n      if (hasVideo && hasAudio && !this.audioDisabled_ && !isMuxed) {\n        return this.sourceUpdater_.buffered();\n      }\n      if (hasVideo) {\n        return this.sourceUpdater_.videoBuffered();\n      }\n    } // One case that can be ignored for now is audio only with alt audio,\n    // as we don't yet have proper support for that.\n\n    return this.sourceUpdater_.audioBuffered();\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n  initSegmentForMap(map, set = false) {\n    if (!map) {\n      return null;\n    }\n    const id = initSegmentId(map);\n    let storedMap = this.initSegments_[id];\n    if (set && !storedMap && map.bytes) {\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: map.bytes,\n        tracks: map.tracks,\n        timescales: map.timescales\n      };\n    }\n    return storedMap || map;\n  }\n  /**\n   * Gets and sets key for the provided key\n   *\n   * @param {Object} key\n   *        The key object representing the key to get or set\n   * @param {boolean=} set\n   *        If true, the key for the provided key should be saved\n   * @return {Object}\n   *         Key object for desired key\n   */\n\n  segmentKey(key, set = false) {\n    if (!key) {\n      return null;\n    }\n    const id = segmentKeyId(key);\n    let storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n    if (this.cacheEncryptionKeys_ && set && !storedKey && key.bytes) {\n      this.keyCache_[id] = storedKey = {\n        resolvedUri: key.resolvedUri,\n        bytes: key.bytes\n      };\n    }\n    const result = {\n      resolvedUri: (storedKey || key).resolvedUri\n    };\n    if (storedKey) {\n      result.bytes = storedKey.bytes;\n    }\n    return result;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n  couldBeginLoading_() {\n    return this.playlist_ && !this.paused();\n  }\n  /**\n   * load a playlist and start to fill the buffer\n   */\n\n  load() {\n    // un-pause\n    this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n    // specified\n\n    if (!this.playlist_) {\n      return;\n    } // if all the configuration is ready, initialize and begin loading\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    } // if we're in the middle of processing a segment already, don't\n    // kick off an additional segment request\n\n    if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n      return;\n    }\n    this.state = 'READY';\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n  init_() {\n    this.state = 'READY'; // if this is the audio segment loader, and it hasn't been inited before, then any old\n    // audio data from the muxed content should be removed\n\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * set a playlist on the segment loader\n   *\n   * @param {PlaylistLoader} media the playlist to set on the segment loader\n   */\n\n  playlist(newPlaylist, options = {}) {\n    if (!newPlaylist) {\n      return;\n    }\n    if (this.playlist_ && this.playlist_.endList && newPlaylist.endList && this.playlist_.uri === newPlaylist.uri) {\n      // skip update if both prev and new are vod and have the same URI\n      return;\n    }\n    const oldPlaylist = this.playlist_;\n    const segmentInfo = this.pendingSegment_;\n    this.playlist_ = newPlaylist;\n    this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n    // is always our zero-time so force a sync update each time the playlist\n    // is refreshed from the server\n    //\n    // Use the INIT state to determine if playback has started, as the playlist sync info\n    // should be fixed once requests begin (as sync points are generated based on sync\n    // info), but not before then.\n\n    if (this.state === 'INIT') {\n      newPlaylist.syncInfo = {\n        mediaSequence: newPlaylist.mediaSequence,\n        time: 0\n      }; // Setting the date time mapping means mapping the program date time (if available)\n      // to time 0 on the player's timeline. The playlist's syncInfo serves a similar\n      // purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can\n      // be updated as the playlist is refreshed before the loader starts loading, the\n      // program date time mapping needs to be updated as well.\n      //\n      // This mapping is only done for the main loader because a program date time should\n      // map equivalently between playlists.\n\n      if (this.loaderType_ === 'main') {\n        this.syncController_.setDateTimeMappingForStart(newPlaylist);\n      }\n    }\n    let oldId = null;\n    if (oldPlaylist) {\n      if (oldPlaylist.id) {\n        oldId = oldPlaylist.id;\n      } else if (oldPlaylist.uri) {\n        oldId = oldPlaylist.uri;\n      }\n    }\n    this.logger_(`playlist update [${oldId} => ${newPlaylist.id || newPlaylist.uri}]`);\n    if (this.mediaSequenceSync_) {\n      this.mediaSequenceSync_.update(newPlaylist, this.currentTime_());\n      this.logger_(`Playlist update:\ncurrentTime: ${this.currentTime_()}\nbufferedEnd: ${lastBufferedEnd(this.buffered_())}\n`, this.mediaSequenceSync_.diagnostics);\n    } // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n    // in LIVE, we always want to update with new playlists (including refreshes)\n\n    this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    }\n    if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n      if (this.mediaIndex !== null) {\n        // we must reset/resync the segment loader when we switch renditions and\n        // the segment loader is already synced to the previous rendition\n        // We only want to reset the loader here for LLHLS playback, as resetLoader sets fetchAtBuffer_\n        // to false, resulting in fetching segments at currentTime and causing repeated\n        // same-segment requests on playlist change. This erroneously drives up the playback watcher\n        // stalled segment count, as re-requesting segments at the currentTime or browser cached segments\n        // will not change the buffer.\n        // Reference for LLHLS fixes: https://github.com/videojs/http-streaming/pull/1201\n        const isLLHLS = !newPlaylist.endList && typeof newPlaylist.partTargetDuration === 'number';\n        if (isLLHLS) {\n          this.resetLoader();\n        } else {\n          this.resyncLoader();\n        }\n      }\n      this.currentMediaInfo_ = void 0;\n      this.trigger('playlistupdate'); // the rest of this function depends on `oldPlaylist` being defined\n\n      return;\n    } // we reloaded the same playlist so we are in a live scenario\n    // and we will likely need to adjust the mediaIndex\n\n    const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n    this.logger_(`live window shift [${mediaSequenceDiff}]`); // update the mediaIndex on the SegmentLoader\n    // this is important because we can abort a request and this value must be\n    // equal to the last appended mediaIndex\n\n    if (this.mediaIndex !== null) {\n      this.mediaIndex -= mediaSequenceDiff; // this can happen if we are going to load the first segment, but get a playlist\n      // update during that. mediaIndex would go from 0 to -1 if mediaSequence in the\n      // new playlist was incremented by 1.\n\n      if (this.mediaIndex < 0) {\n        this.mediaIndex = null;\n        this.partIndex = null;\n      } else {\n        const segment = this.playlist_.segments[this.mediaIndex]; // partIndex should remain the same for the same segment\n        // unless parts fell off of the playlist for this segment.\n        // In that case we need to reset partIndex and resync\n\n        if (this.partIndex && (!segment.parts || !segment.parts.length || !segment.parts[this.partIndex])) {\n          const mediaIndex = this.mediaIndex;\n          this.logger_(`currently processing part (index ${this.partIndex}) no longer exists.`);\n          this.resetLoader(); // We want to throw away the partIndex and the data associated with it,\n          // as the part was dropped from our current playlists segment.\n          // The mediaIndex will still be valid so keep that around.\n\n          this.mediaIndex = mediaIndex;\n        }\n      }\n    } // update the mediaIndex on the SegmentInfo object\n    // this is important because we will update this.mediaIndex with this value\n    // in `handleAppendsDone_` after the segment has been successfully appended\n\n    if (segmentInfo) {\n      segmentInfo.mediaIndex -= mediaSequenceDiff;\n      if (segmentInfo.mediaIndex < 0) {\n        segmentInfo.mediaIndex = null;\n        segmentInfo.partIndex = null;\n      } else {\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n        if (segmentInfo.partIndex >= 0 && segmentInfo.segment.parts) {\n          segmentInfo.part = segmentInfo.segment.parts[segmentInfo.partIndex];\n        }\n      }\n    }\n    this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n  }\n  /**\n   * Prevent the loader from fetching additional segments. If there\n   * is a segment request outstanding, it will finish processing\n   * before the loader halts. A segment loader can be unpaused by\n   * calling load().\n   */\n\n  pause() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n      this.checkBufferTimeout_ = null;\n    }\n  }\n  /**\n   * Returns whether the segment loader is fetching additional\n   * segments when given the opportunity. This property can be\n   * modified through calls to pause() and load().\n   */\n\n  paused() {\n    return this.checkBufferTimeout_ === null;\n  }\n  /**\n   * Delete all the buffered data and reset the SegmentLoader\n   *\n   * @param {Function} [done] an optional callback to be executed when the remove\n   * operation is complete\n   */\n\n  resetEverything(done) {\n    this.ended_ = false;\n    this.activeInitSegmentId_ = null;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n    // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n    // we then clamp the value to duration if necessary.\n\n    this.remove(0, Infinity, done); // clears fmp4 captions\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearAllMp4Captions'\n      }); // reset the cache in the transmuxer\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n    }\n  }\n  /**\n   * Force the SegmentLoader to resync and start loading around the currentTime instead\n   * of starting at the end of the buffer\n   *\n   * Useful for fast quality changes\n   */\n\n  resetLoader() {\n    this.fetchAtBuffer_ = false;\n    if (this.mediaSequenceSync_) {\n      this.mediaSequenceSync_.resetAppendedStatus();\n    }\n    this.resyncLoader();\n  }\n  /**\n   * Force the SegmentLoader to restart synchronization and make a conservative guess\n   * before returning to the simple walk-forward method\n   */\n\n  resyncLoader() {\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n    this.mediaIndex = null;\n    this.partIndex = null;\n    this.syncPoint_ = null;\n    this.isPendingTimestampOffset_ = false; // this is mainly to sync timing-info when switching between renditions with and without timestamp-rollover,\n    // so we don't want it for DASH or fragmented mp4 segments.\n\n    const isFmp4 = this.currentMediaInfo_ && this.currentMediaInfo_.isFmp4;\n    const isHlsTs = this.sourceType_ === 'hls' && !isFmp4;\n    if (isHlsTs) {\n      this.shouldForceTimestampOffsetAfterResync_ = true;\n    }\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.abort();\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   * @param {Function} [done] - an optional callback to be executed when the remove\n   * @param {boolean} force - force all remove operations to happen\n   * operation is complete\n   */\n\n  remove(start, end, done = () => {}, force = false) {\n    // clamp end to duration if we need to remove everything.\n    // This is due to a browser bug that causes issues if we remove to Infinity.\n    // videojs/videojs-contrib-hls#1225\n    if (end === Infinity) {\n      end = this.duration_();\n    } // skip removes that would throw an error\n    // commonly happens during a rendition switch at the start of a video\n    // from start 0 to end 0\n\n    if (end <= start) {\n      this.logger_('skipping remove because end ${end} is <= start ${start}');\n      return;\n    }\n    if (!this.sourceUpdater_ || !this.getMediaInfo_()) {\n      this.logger_('skipping remove because no source updater or starting media info'); // nothing to remove if we haven't processed any media\n\n      return;\n    } // set it to one to complete this function's removes\n\n    let removesRemaining = 1;\n    const removeFinished = () => {\n      removesRemaining--;\n      if (removesRemaining === 0) {\n        done();\n      }\n    };\n    if (force || !this.audioDisabled_) {\n      removesRemaining++;\n      this.sourceUpdater_.removeAudio(start, end, removeFinished);\n    } // While it would be better to only remove video if the main loader has video, this\n    // should be safe with audio only as removeVideo will call back even if there's no\n    // video buffer.\n    //\n    // In theory we can check to see if there's video before calling the remove, but in\n    // the event that we're switching between renditions and from video to audio only\n    // (when we add support for that), we may need to clear the video contents despite\n    // what the new media will contain.\n\n    if (force || this.loaderType_ === 'main') {\n      this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      removesRemaining++;\n      this.sourceUpdater_.removeVideo(start, end, removeFinished);\n    } // remove any captions and ID3 tags\n\n    for (const track in this.inbandTextTracks_) {\n      removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_); // finished this function's removes\n\n    removeFinished();\n  }\n  /**\n   * (re-)schedule monitorBufferTick_ to run as soon as possible\n   *\n   * @private\n   */\n\n  monitorBuffer_() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n  }\n  /**\n   * As long as the SegmentLoader is in the READY state, periodically\n   * invoke fillBuffer_().\n   *\n   * @private\n   */\n\n  monitorBufferTick_() {\n    if (this.state === 'READY') {\n      this.fillBuffer_();\n    }\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n  fillBuffer_() {\n    // TODO since the source buffer maintains a queue, and we shouldn't call this function\n    // except when we're ready for the next segment, this check can most likely be removed\n    if (this.sourceUpdater_.updating()) {\n      return;\n    } // see if we need to begin loading immediately\n\n    const segmentInfo = this.chooseNextRequest_();\n    if (!segmentInfo) {\n      return;\n    }\n    const metadata = {\n      segmentInfo: segmentInfoPayload({\n        type: this.loaderType_,\n        segment: segmentInfo\n      })\n    };\n    this.trigger({\n      type: 'segmentselected',\n      metadata\n    });\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      this.isPendingTimestampOffset_ = false;\n      this.timelineChangeController_.pendingTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      });\n    }\n    this.loadSegment_(segmentInfo);\n  }\n  /**\n   * Determines if we should call endOfStream on the media source based\n   * on the state of the buffer or if appened segment was the final\n   * segment in the playlist.\n   *\n   * @param {number} [mediaIndex] the media index of segment we last appended\n   * @param {Object} [playlist] a media playlist object\n   * @return {boolean} do we need to call endOfStream on the MediaSource\n   */\n\n  isEndOfStream_(mediaIndex = this.mediaIndex, playlist = this.playlist_, partIndex = this.partIndex) {\n    if (!playlist || !this.mediaSource_) {\n      return false;\n    }\n    const segment = typeof mediaIndex === 'number' && playlist.segments[mediaIndex]; // mediaIndex is zero based but length is 1 based\n\n    const appendedLastSegment = mediaIndex + 1 === playlist.segments.length; // true if there are no parts, or this is the last part.\n\n    const appendedLastPart = !segment || !segment.parts || partIndex + 1 === segment.parts.length; // if we've buffered to the end of the video, we need to call endOfStream\n    // so that MediaSources can trigger the `ended` event when it runs out of\n    // buffered data instead of waiting for me\n\n    return playlist.endList && this.mediaSource_.readyState === 'open' && appendedLastSegment && appendedLastPart;\n  }\n  /**\n   * Determines what request should be made given current segment loader state.\n   *\n   * @return {Object} a request object that describes the segment/part to load\n   */\n\n  chooseNextRequest_() {\n    const buffered = this.buffered_();\n    const bufferedEnd = lastBufferedEnd(buffered) || 0;\n    const bufferedTime = timeAheadOf(buffered, this.currentTime_());\n    const preloaded = !this.hasPlayed_() && bufferedTime >= 1;\n    const haveEnoughBuffer = bufferedTime >= this.goalBufferLength_();\n    const segments = this.playlist_.segments; // return no segment if:\n    // 1. we don't have segments\n    // 2. The video has not yet played and we already downloaded a segment\n    // 3. we already have enough buffered time\n\n    if (!segments.length || preloaded || haveEnoughBuffer) {\n      return null;\n    }\n    this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_(), this.loaderType_);\n    const next = {\n      partIndex: null,\n      mediaIndex: null,\n      startOfSegment: null,\n      playlist: this.playlist_,\n      isSyncRequest: Boolean(!this.syncPoint_)\n    };\n    if (next.isSyncRequest) {\n      next.mediaIndex = getSyncSegmentCandidate(this.currentTimeline_, segments, bufferedEnd);\n      this.logger_(`choose next request. Can not find sync point. Fallback to media Index: ${next.mediaIndex}`);\n    } else if (this.mediaIndex !== null) {\n      const segment = segments[this.mediaIndex];\n      const partIndex = typeof this.partIndex === 'number' ? this.partIndex : -1;\n      next.startOfSegment = segment.end ? segment.end : bufferedEnd;\n      if (segment.parts && segment.parts[partIndex + 1]) {\n        next.mediaIndex = this.mediaIndex;\n        next.partIndex = partIndex + 1;\n      } else {\n        next.mediaIndex = this.mediaIndex + 1;\n      }\n    } else {\n      let segmentIndex;\n      let partIndex;\n      let startTime;\n      const targetTime = this.fetchAtBuffer_ ? bufferedEnd : this.currentTime_();\n      if (this.mediaSequenceSync_) {\n        this.logger_(`chooseNextRequest_ request after Quality Switch:\nFor TargetTime: ${targetTime}.\nCurrentTime: ${this.currentTime_()}\nBufferedEnd: ${bufferedEnd}\nFetch At Buffer: ${this.fetchAtBuffer_}\n`, this.mediaSequenceSync_.diagnostics);\n      }\n      if (this.mediaSequenceSync_ && this.mediaSequenceSync_.isReliable) {\n        const syncInfo = this.getSyncInfoFromMediaSequenceSync_(targetTime);\n        if (!syncInfo) {\n          const message = 'No sync info found while using media sequence sync';\n          this.error({\n            message,\n            metadata: {\n              errorType: videojs.Error.StreamingFailedToSelectNextSegment,\n              error: new Error(message)\n            }\n          });\n          this.logger_('chooseNextRequest_ - no sync info found using media sequence sync'); // no match\n\n          return null;\n        }\n        this.logger_(`chooseNextRequest_ mediaSequence syncInfo (${syncInfo.start} --> ${syncInfo.end})`);\n        segmentIndex = syncInfo.segmentIndex;\n        partIndex = syncInfo.partIndex;\n        startTime = syncInfo.start;\n      } else {\n        this.logger_('chooseNextRequest_ - fallback to a regular segment selection algorithm, based on a syncPoint.'); // fallback\n\n        const mediaInfoForTime = Playlist.getMediaInfoForTime({\n          exactManifestTimings: this.exactManifestTimings,\n          playlist: this.playlist_,\n          currentTime: targetTime,\n          startingPartIndex: this.syncPoint_.partIndex,\n          startingSegmentIndex: this.syncPoint_.segmentIndex,\n          startTime: this.syncPoint_.time\n        });\n        segmentIndex = mediaInfoForTime.segmentIndex;\n        partIndex = mediaInfoForTime.partIndex;\n        startTime = mediaInfoForTime.startTime;\n      }\n      next.getMediaInfoForTime = this.fetchAtBuffer_ ? `bufferedEnd ${targetTime}` : `currentTime ${targetTime}`;\n      next.mediaIndex = segmentIndex;\n      next.startOfSegment = startTime;\n      next.partIndex = partIndex;\n      this.logger_(`choose next request. Playlist switched and we have a sync point. Media Index: ${next.mediaIndex} `);\n    }\n    const nextSegment = segments[next.mediaIndex];\n    let nextPart = nextSegment && typeof next.partIndex === 'number' && nextSegment.parts && nextSegment.parts[next.partIndex]; // if the next segment index is invalid or\n    // the next partIndex is invalid do not choose a next segment.\n\n    if (!nextSegment || typeof next.partIndex === 'number' && !nextPart) {\n      return null;\n    } // if the next segment has parts, and we don't have a partIndex.\n    // Set partIndex to 0\n\n    if (typeof next.partIndex !== 'number' && nextSegment.parts) {\n      next.partIndex = 0;\n      nextPart = nextSegment.parts[0];\n    } // independentSegments applies to every segment in a playlist. If independentSegments appears in a main playlist,\n    // it applies to each segment in each media playlist.\n    // https://datatracker.ietf.org/doc/html/draft-pantos-http-live-streaming-23#section-4.3.5.1\n\n    const hasIndependentSegments = this.vhs_.playlists && this.vhs_.playlists.main && this.vhs_.playlists.main.independentSegments || this.playlist_.independentSegments; // if we have no buffered data then we need to make sure\n    // that the next part we append is \"independent\" if possible.\n    // So we check if the previous part is independent, and request\n    // it if it is.\n\n    if (!bufferedTime && nextPart && !hasIndependentSegments && !nextPart.independent) {\n      if (next.partIndex === 0) {\n        const lastSegment = segments[next.mediaIndex - 1];\n        const lastSegmentLastPart = lastSegment.parts && lastSegment.parts.length && lastSegment.parts[lastSegment.parts.length - 1];\n        if (lastSegmentLastPart && lastSegmentLastPart.independent) {\n          next.mediaIndex -= 1;\n          next.partIndex = lastSegment.parts.length - 1;\n          next.independent = 'previous segment';\n        }\n      } else if (nextSegment.parts[next.partIndex - 1].independent) {\n        next.partIndex -= 1;\n        next.independent = 'previous part';\n      }\n    }\n    const ended = this.mediaSource_ && this.mediaSource_.readyState === 'ended'; // do not choose a next segment if all of the following:\n    // 1. this is the last segment in the playlist\n    // 2. end of stream has been called on the media source already\n    // 3. the player is not seeking\n\n    if (next.mediaIndex >= segments.length - 1 && ended && !this.seeking_()) {\n      return null;\n    }\n    if (this.shouldForceTimestampOffsetAfterResync_) {\n      this.shouldForceTimestampOffsetAfterResync_ = false;\n      next.forceTimestampOffset = true;\n      this.logger_('choose next request. Force timestamp offset after loader resync');\n    }\n    return this.generateSegmentInfo_(next);\n  }\n  getSyncInfoFromMediaSequenceSync_(targetTime) {\n    if (!this.mediaSequenceSync_) {\n      return null;\n    } // we should pull the target time to the least available time if we drop out of sync for any reason\n\n    const finalTargetTime = Math.max(targetTime, this.mediaSequenceSync_.start);\n    if (targetTime !== finalTargetTime) {\n      this.logger_(`getSyncInfoFromMediaSequenceSync_. Pulled target time from ${targetTime} to ${finalTargetTime}`);\n    }\n    const mediaSequenceSyncInfo = this.mediaSequenceSync_.getSyncInfoForTime(finalTargetTime);\n    if (!mediaSequenceSyncInfo) {\n      // no match at all\n      return null;\n    }\n    if (!mediaSequenceSyncInfo.isAppended) {\n      // has a perfect match\n      return mediaSequenceSyncInfo;\n    } // has match, but segment was already appended.\n    // attempt to auto-advance to the nearest next segment:\n\n    const nextMediaSequenceSyncInfo = this.mediaSequenceSync_.getSyncInfoForTime(mediaSequenceSyncInfo.end);\n    if (!nextMediaSequenceSyncInfo) {\n      // no match at all\n      return null;\n    }\n    if (nextMediaSequenceSyncInfo.isAppended) {\n      this.logger_('getSyncInfoFromMediaSequenceSync_: We encounter unexpected scenario where next media sequence sync info is also appended!');\n    } // got match with the nearest next segment\n\n    return nextMediaSequenceSyncInfo;\n  }\n  generateSegmentInfo_(options) {\n    const {\n      independent,\n      playlist,\n      mediaIndex,\n      startOfSegment,\n      isSyncRequest,\n      partIndex,\n      forceTimestampOffset,\n      getMediaInfoForTime\n    } = options;\n    const segment = playlist.segments[mediaIndex];\n    const part = typeof partIndex === 'number' && segment.parts[partIndex];\n    const segmentInfo = {\n      requestId: 'segment-loader-' + Math.random(),\n      // resolve the segment URL relative to the playlist\n      uri: part && part.resolvedUri || segment.resolvedUri,\n      // the segment's mediaIndex at the time it was requested\n      mediaIndex,\n      partIndex: part ? partIndex : null,\n      // whether or not to update the SegmentLoader's state with this\n      // segment's mediaIndex\n      isSyncRequest,\n      startOfSegment,\n      // the segment's playlist\n      playlist,\n      // unencrypted bytes of the segment\n      bytes: null,\n      // when a key is defined for this segment, the encrypted bytes\n      encryptedBytes: null,\n      // The target timestampOffset for this segment when we append it\n      // to the source buffer\n      timestampOffset: null,\n      // The timeline that the segment is in\n      timeline: segment.timeline,\n      // The expected duration of the segment in seconds\n      duration: part && part.duration || segment.duration,\n      // retain the segment in case the playlist updates while doing an async process\n      segment,\n      part,\n      byteLength: 0,\n      transmuxer: this.transmuxer_,\n      // type of getMediaInfoForTime that was used to get this segment\n      getMediaInfoForTime,\n      independent\n    };\n    const overrideCheck = typeof forceTimestampOffset !== 'undefined' ? forceTimestampOffset : this.isPendingTimestampOffset_;\n    segmentInfo.timestampOffset = this.timestampOffsetForSegment_({\n      segmentTimeline: segment.timeline,\n      currentTimeline: this.currentTimeline_,\n      startOfSegment,\n      buffered: this.buffered_(),\n      overrideCheck\n    });\n    const audioBufferedEnd = lastBufferedEnd(this.sourceUpdater_.audioBuffered());\n    if (typeof audioBufferedEnd === 'number') {\n      // since the transmuxer is using the actual timing values, but the buffer is\n      // adjusted by the timestamp offset, we must adjust the value here\n      segmentInfo.audioAppendStart = audioBufferedEnd - this.sourceUpdater_.audioTimestampOffset();\n    }\n    if (this.sourceUpdater_.videoBuffered().length) {\n      segmentInfo.gopsToAlignWith = gopsSafeToAlignWith(this.gopBuffer_,\n      // since the transmuxer is using the actual timing values, but the time is\n      // adjusted by the timestmap offset, we must adjust the value here\n      this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_);\n    }\n    return segmentInfo;\n  } // get the timestampoffset for a segment,\n  // added so that vtt segment loader can override and prevent\n  // adding timestamp offsets.\n\n  timestampOffsetForSegment_(options) {\n    return timestampOffsetForSegment(options);\n  }\n  /**\n   * Determines if the network has enough bandwidth to complete the current segment\n   * request in a timely manner. If not, the request will be aborted early and bandwidth\n   * updated to trigger a playlist switch.\n   *\n   * @param {Object} stats\n   *        Object containing stats about the request timing and size\n   * @private\n   */\n\n  earlyAbortWhenNeeded_(stats) {\n    if (this.vhs_.tech_.paused() ||\n    // Don't abort if the current playlist is on the lowestEnabledRendition\n    // TODO: Replace using timeout with a boolean indicating whether this playlist is\n    //       the lowestEnabledRendition.\n    !this.xhrOptions_.timeout ||\n    // Don't abort if we have no bandwidth information to estimate segment sizes\n    !this.playlist_.attributes.BANDWIDTH) {\n      return;\n    } // Wait at least 1 second since the first byte of data has been received before\n    // using the calculated bandwidth from the progress event to allow the bitrate\n    // to stabilize\n\n    if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n      return;\n    }\n    const currentTime = this.currentTime_();\n    const measuredBandwidth = stats.bandwidth;\n    const segmentDuration = this.pendingSegment_.duration;\n    const requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n    // if we are only left with less than 1 second when the request completes.\n    // A negative timeUntilRebuffering indicates we are already rebuffering\n\n    const timeUntilRebuffer$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.vhs_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n    // is larger than the estimated time until the player runs out of forward buffer\n\n    if (requestTimeRemaining <= timeUntilRebuffer$1) {\n      return;\n    }\n    const switchCandidate = minRebufferMaxBandwidthSelector({\n      main: this.vhs_.playlists.main,\n      currentTime,\n      bandwidth: measuredBandwidth,\n      duration: this.duration_(),\n      segmentDuration,\n      timeUntilRebuffer: timeUntilRebuffer$1,\n      currentTimeline: this.currentTimeline_,\n      syncController: this.syncController_\n    });\n    if (!switchCandidate) {\n      return;\n    }\n    const rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$1;\n    const timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n    let minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n    // potential round trip time of the new request so that we are not too aggressive\n    // with switching to a playlist that might save us a fraction of a second.\n\n    if (timeUntilRebuffer$1 <= TIME_FUDGE_FACTOR) {\n      minimumTimeSaving = 1;\n    }\n    if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n      return;\n    } // set the bandwidth to that of the desired playlist being sure to scale by\n    // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n    // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n    this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n    this.trigger('earlyabort');\n  }\n  handleAbort_(segmentInfo) {\n    this.logger_(`Aborting ${segmentInfoString(segmentInfo)}`);\n    this.mediaRequestsAborted += 1;\n  }\n  /**\n   * XHR `progress` event handler\n   *\n   * @param {Event}\n   *        The XHR `progress` event\n   * @param {Object} simpleSegment\n   *        A simplified segment object copy\n   * @private\n   */\n\n  handleProgress_(event, simpleSegment) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    this.trigger('progress');\n  }\n  handleTrackInfo_(simpleSegment, trackInfo) {\n    const {\n      hasAudio,\n      hasVideo\n    } = trackInfo;\n    const metadata = {\n      segmentInfo: segmentInfoPayload({\n        type: this.loaderType_,\n        segment: simpleSegment\n      }),\n      trackInfo: {\n        hasAudio,\n        hasVideo\n      }\n    };\n    this.trigger({\n      type: 'segmenttransmuxingtrackinfoavailable',\n      metadata\n    });\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    if (this.checkForIllegalMediaSwitch(trackInfo)) {\n      return;\n    }\n    trackInfo = trackInfo || {}; // When we have track info, determine what media types this loader is dealing with.\n    // Guard against cases where we're not getting track info at all until we are\n    // certain that all streams will provide it.\n\n    if (!shallowEqual(this.currentMediaInfo_, trackInfo)) {\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      this.startingMediaInfo_ = trackInfo;\n      this.currentMediaInfo_ = trackInfo;\n      this.logger_('trackinfo update', trackInfo);\n      this.trigger('trackinfo');\n    } // trackinfo may cause an abort if the trackinfo\n    // causes a codec change to an unsupported codec.\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // set trackinfo on the pending segment so that\n    // it can append.\n\n    this.pendingSegment_.trackInfo = trackInfo; // check if any calls were waiting on the track info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    } else {\n      checkAndFixTimelines(this);\n    }\n  }\n  handleTimingInfo_(simpleSegment, mediaType, timeType, time) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const timingInfoProperty = timingInfoPropertyForMedia(mediaType);\n    segmentInfo[timingInfoProperty] = segmentInfo[timingInfoProperty] || {};\n    segmentInfo[timingInfoProperty][timeType] = time;\n    this.logger_(`timinginfo: ${mediaType} - ${timeType} - ${time}`); // check if any calls were waiting on the timing info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    } else {\n      checkAndFixTimelines(this);\n    }\n  }\n  handleCaptions_(simpleSegment, captionData) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // This could only happen with fmp4 segments, but\n    // should still not happen in general\n\n    if (captionData.length === 0) {\n      this.logger_('SegmentLoader received no captions from a caption event');\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // Wait until we have some video data so that caption timing\n    // can be adjusted by the timestamp offset\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, simpleSegment, captionData));\n      return;\n    }\n    const timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\n    const captionTracks = {}; // get total start/end and captions for each track/stream\n\n    captionData.forEach(caption => {\n      // caption.stream is actually a track name...\n      // set to the existing values in tracks or default values\n      captionTracks[caption.stream] = captionTracks[caption.stream] || {\n        // Infinity, as any other value will be less than this\n        startTime: Infinity,\n        captions: [],\n        // 0 as an other value will be more than this\n        endTime: 0\n      };\n      const captionTrack = captionTracks[caption.stream];\n      captionTrack.startTime = Math.min(captionTrack.startTime, caption.startTime + timestampOffset);\n      captionTrack.endTime = Math.max(captionTrack.endTime, caption.endTime + timestampOffset);\n      captionTrack.captions.push(caption);\n    });\n    Object.keys(captionTracks).forEach(trackName => {\n      const {\n        startTime,\n        endTime,\n        captions\n      } = captionTracks[trackName];\n      const inbandTextTracks = this.inbandTextTracks_;\n      this.logger_(`adding cues from ${startTime} -> ${endTime} for ${trackName}`);\n      createCaptionsTrackIfNotExists(inbandTextTracks, this.vhs_.tech_, trackName); // clear out any cues that start and end at the same time period for the same track.\n      // We do this because a rendition change that also changes the timescale for captions\n      // will result in captions being re-parsed for certain segments. If we add them again\n      // without clearing we will have two of the same captions visible.\n\n      removeCuesFromTrack(startTime, endTime, inbandTextTracks[trackName]);\n      addCaptionData({\n        captionArray: captions,\n        inbandTextTracks,\n        timestampOffset\n      });\n    }); // Reset stored captions since we added parsed\n    // captions to a text track at this point\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  handleId3_(simpleSegment, id3Frames, dispatchType) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // we need to have appended data in order for the timestamp offset to be set\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.id3.push(this.handleId3_.bind(this, simpleSegment, id3Frames, dispatchType));\n      return;\n    }\n    this.addMetadataToTextTrack(dispatchType, id3Frames, this.duration_());\n  }\n  processMetadataQueue_() {\n    this.metadataQueue_.id3.forEach(fn => fn());\n    this.metadataQueue_.caption.forEach(fn => fn());\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n  }\n  processCallQueue_() {\n    const callQueue = this.callQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.callQueue_ = [];\n    callQueue.forEach(fun => fun());\n  }\n  processLoadQueue_() {\n    const loadQueue = this.loadQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.loadQueue_ = [];\n    loadQueue.forEach(fun => fun());\n  }\n  /**\n   * Determines whether the loader has enough info to load the next segment.\n   *\n   * @return {boolean}\n   *         Whether or not the loader has enough info to load the next segment\n   */\n\n  hasEnoughInfoToLoad_() {\n    // Since primary timing goes by video, only the audio loader potentially needs to wait\n    // to load.\n    if (this.loaderType_ !== 'audio') {\n      return true;\n    }\n    const segmentInfo = this.pendingSegment_; // A fill buffer must have already run to establish a pending segment before there's\n    // enough info to load.\n\n    if (!segmentInfo) {\n      return false;\n    } // The first segment can and should be loaded immediately so that source buffers are\n    // created together (before appending). Source buffer creation uses the presence of\n    // audio and video data to determine whether to create audio/video source buffers, and\n    // uses processed (transmuxed or parsed) media to determine the types required.\n\n    if (!this.getCurrentMediaInfo_()) {\n      return true;\n    }\n    if (\n    // Technically, instead of waiting to load a segment on timeline changes, a segment\n    // can be requested and downloaded and only wait before it is transmuxed or parsed.\n    // But in practice, there are a few reasons why it is better to wait until a loader\n    // is ready to append that segment before requesting and downloading:\n    //\n    // 1. Because audio and main loaders cross discontinuities together, if this loader\n    //    is waiting for the other to catch up, then instead of requesting another\n    //    segment and using up more bandwidth, by not yet loading, more bandwidth is\n    //    allotted to the loader currently behind.\n    // 2. media-segment-request doesn't have to have logic to consider whether a segment\n    // is ready to be processed or not, isolating the queueing behavior to the loader.\n    // 3. The audio loader bases some of its segment properties on timing information\n    //    provided by the main loader, meaning that, if the logic for waiting on\n    //    processing was in media-segment-request, then it would also need to know how\n    //    to re-generate the segment information after the main loader caught up.\n    shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n    return true;\n  }\n  getCurrentMediaInfo_(segmentInfo = this.pendingSegment_) {\n    return segmentInfo && segmentInfo.trackInfo || this.currentMediaInfo_;\n  }\n  getMediaInfo_(segmentInfo = this.pendingSegment_) {\n    return this.getCurrentMediaInfo_(segmentInfo) || this.startingMediaInfo_;\n  }\n  getPendingSegmentPlaylist() {\n    return this.pendingSegment_ ? this.pendingSegment_.playlist : null;\n  }\n  hasEnoughInfoToAppend_() {\n    if (!this.sourceUpdater_.ready()) {\n      return false;\n    } // If content needs to be removed or the loader is waiting on an append reattempt,\n    // then no additional content should be appended until the prior append is resolved.\n\n    if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) {\n      return false;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const trackInfo = this.getCurrentMediaInfo_(); // no segment to append any data for or\n    // we do not have information on this specific\n    // segment yet\n\n    if (!segmentInfo || !trackInfo) {\n      return false;\n    }\n    const {\n      hasAudio,\n      hasVideo,\n      isMuxed\n    } = trackInfo;\n    if (hasVideo && !segmentInfo.videoTimingInfo) {\n      return false;\n    } // muxed content only relies on video timing information for now.\n\n    if (hasAudio && !this.audioDisabled_ && !isMuxed && !segmentInfo.audioTimingInfo) {\n      return false;\n    } // we need to allow an append here even if we're moving to different timelines.\n\n    if (shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n    return true;\n  }\n  handleData_(simpleSegment, result) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // If there's anything in the call queue, then this data came later and should be\n    // executed after the calls currently queued.\n\n    if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {\n      checkAndFixTimelines(this);\n      this.callQueue_.push(this.handleData_.bind(this, simpleSegment, result));\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // update the time mapping so we can translate from display time to media time\n\n    this.setTimeMapping_(segmentInfo.timeline); // for tracking overall stats\n\n    this.updateMediaSecondsLoaded_(segmentInfo.part || segmentInfo.segment); // Note that the state isn't changed from loading to appending. This is because abort\n    // logic may change behavior depending on the state, and changing state too early may\n    // inflate our estimates of bandwidth. In the future this should be re-examined to\n    // note more granular states.\n    // don't process and append data if the mediaSource is closed\n\n    if (this.mediaSource_.readyState === 'closed') {\n      return;\n    } // if this request included an initialization segment, save that data\n    // to the initSegment cache\n\n    if (simpleSegment.map) {\n      simpleSegment.map = this.initSegmentForMap(simpleSegment.map, true); // move over init segment properties to media request\n\n      segmentInfo.segment.map = simpleSegment.map;\n    } // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n    segmentInfo.isFmp4 = simpleSegment.isFmp4;\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    if (segmentInfo.isFmp4) {\n      this.trigger('fmp4');\n      segmentInfo.timingInfo.start = segmentInfo[timingInfoPropertyForMedia(result.type)].start;\n    } else {\n      const trackInfo = this.getCurrentMediaInfo_();\n      const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n      let firstVideoFrameTimeForData;\n      if (useVideoTimingInfo) {\n        firstVideoFrameTimeForData = segmentInfo.videoTimingInfo.start;\n      } // Segment loader knows more about segment timing than the transmuxer (in certain\n      // aspects), so make any changes required for a more accurate start time.\n      // Don't set the end time yet, as the segment may not be finished processing.\n\n      segmentInfo.timingInfo.start = this.trueSegmentStart_({\n        currentStart: segmentInfo.timingInfo.start,\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex,\n        currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),\n        useVideoTimingInfo,\n        firstVideoFrameTimeForData,\n        videoTimingInfo: segmentInfo.videoTimingInfo,\n        audioTimingInfo: segmentInfo.audioTimingInfo\n      });\n    } // Init segments for audio and video only need to be appended in certain cases. Now\n    // that data is about to be appended, we can check the final cases to determine\n    // whether we should append an init segment.\n\n    this.updateAppendInitSegmentStatus(segmentInfo, result.type); // Timestamp offset should be updated once we get new data and have its timing info,\n    // as we use the start of the segment to offset the best guess (playlist provided)\n    // timestamp offset.\n\n    this.updateSourceBufferTimestampOffset_(segmentInfo); // if this is a sync request we need to determine whether it should\n    // be appended or not.\n\n    if (segmentInfo.isSyncRequest) {\n      // first save/update our timing info for this segment.\n      // this is what allows us to choose an accurate segment\n      // and the main reason we make a sync request.\n      this.updateTimingInfoEnd_(segmentInfo);\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n      const next = this.chooseNextRequest_(); // If the sync request isn't the segment that would be requested next\n      // after taking into account its timing info, do not append it.\n\n      if (next.mediaIndex !== segmentInfo.mediaIndex || next.partIndex !== segmentInfo.partIndex) {\n        this.logger_('sync segment was incorrect, not appending');\n        return;\n      } // otherwise append it like any other segment as our guess was correct.\n\n      this.logger_('sync segment was correct, appending');\n    } // Save some state so that in the future anything waiting on first append (and/or\n    // timestamp offset(s)) can process immediately. While the extra state isn't optimal,\n    // we need some notion of whether the timestamp offset or other relevant information\n    // has had a chance to be set.\n\n    segmentInfo.hasAppendedData_ = true; // Now that the timestamp offset should be set, we can append any waiting ID3 tags.\n\n    this.processMetadataQueue_();\n    this.appendData_(segmentInfo, result);\n  }\n  updateAppendInitSegmentStatus(segmentInfo, type) {\n    // alt audio doesn't manage timestamp offset\n    if (this.loaderType_ === 'main' && typeof segmentInfo.timestampOffset === 'number' &&\n    // in the case that we're handling partial data, we don't want to append an init\n    // segment for each chunk\n    !segmentInfo.changedTimestampOffset) {\n      // if the timestamp offset changed, the timeline may have changed, so we have to re-\n      // append init segments\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n    }\n    if (this.playlistOfLastInitSegment_[type] !== segmentInfo.playlist) {\n      // make sure we append init segment on playlist changes, in case the media config\n      // changed\n      this.appendInitSegment_[type] = true;\n    }\n  }\n  getInitSegmentAndUpdateState_({\n    type,\n    initSegment,\n    map,\n    playlist\n  }) {\n    // \"The EXT-X-MAP tag specifies how to obtain the Media Initialization Section\n    // (Section 3) required to parse the applicable Media Segments.  It applies to every\n    // Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag\n    // or until the end of the playlist.\"\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5\n    if (map) {\n      const id = initSegmentId(map);\n      if (this.activeInitSegmentId_ === id) {\n        // don't need to re-append the init segment if the ID matches\n        return null;\n      } // a map-specified init segment takes priority over any transmuxed (or otherwise\n      // obtained) init segment\n      //\n      // this also caches the init segment for later use\n\n      initSegment = this.initSegmentForMap(map, true).bytes;\n      this.activeInitSegmentId_ = id;\n    } // We used to always prepend init segments for video, however, that shouldn't be\n    // necessary. Instead, we should only append on changes, similar to what we've always\n    // done for audio. This is more important (though may not be that important) for\n    // frame-by-frame appending for LHLS, simply because of the increased quantity of\n    // appends.\n\n    if (initSegment && this.appendInitSegment_[type]) {\n      // Make sure we track the playlist that we last used for the init segment, so that\n      // we can re-append the init segment in the event that we get data from a new\n      // playlist. Discontinuities and track changes are handled in other sections.\n      this.playlistOfLastInitSegment_[type] = playlist; // Disable future init segment appends for this type. Until a change is necessary.\n\n      this.appendInitSegment_[type] = false; // we need to clear out the fmp4 active init segment id, since\n      // we are appending the muxer init segment\n\n      this.activeInitSegmentId_ = null;\n      return initSegment;\n    }\n    return null;\n  }\n  handleQuotaExceededError_({\n    segmentInfo,\n    type,\n    bytes\n  }, error) {\n    const audioBuffered = this.sourceUpdater_.audioBuffered();\n    const videoBuffered = this.sourceUpdater_.videoBuffered(); // For now we're ignoring any notion of gaps in the buffer, but they, in theory,\n    // should be cleared out during the buffer removals. However, log in case it helps\n    // debug.\n\n    if (audioBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: ' + timeRangesToArray(audioBuffered).join(', '));\n    }\n    if (videoBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: ' + timeRangesToArray(videoBuffered).join(', '));\n    }\n    const audioBufferStart = audioBuffered.length ? audioBuffered.start(0) : 0;\n    const audioBufferEnd = audioBuffered.length ? audioBuffered.end(audioBuffered.length - 1) : 0;\n    const videoBufferStart = videoBuffered.length ? videoBuffered.start(0) : 0;\n    const videoBufferEnd = videoBuffered.length ? videoBuffered.end(videoBuffered.length - 1) : 0;\n    if (audioBufferEnd - audioBufferStart <= MIN_BACK_BUFFER && videoBufferEnd - videoBufferStart <= MIN_BACK_BUFFER) {\n      // Can't remove enough buffer to make room for new segment (or the browser doesn't\n      // allow for appends of segments this size). In the future, it may be possible to\n      // split up the segment and append in pieces, but for now, error out this playlist\n      // in an attempt to switch to a more manageable rendition.\n      this.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to ' + 'buffer, triggering an error. ' + `Appended byte length: ${bytes.byteLength}, ` + `audio buffer: ${timeRangesToArray(audioBuffered).join(', ')}, ` + `video buffer: ${timeRangesToArray(videoBuffered).join(', ')}, `);\n      this.error({\n        message: 'Quota exceeded error with append of a single segment of content',\n        excludeUntil: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // To try to resolve the quota exceeded error, clear back buffer and retry. This means\n    // that the segment-loader should block on future events until this one is handled, so\n    // that it doesn't keep moving onto further segments. Adding the call to the call\n    // queue will prevent further appends until waitingOnRemove_ and\n    // quotaExceededErrorRetryTimeout_ are cleared.\n    //\n    // Note that this will only block the current loader. In the case of demuxed content,\n    // the other load may keep filling as fast as possible. In practice, this should be\n    // OK, as it is a rare case when either audio has a high enough bitrate to fill up a\n    // source buffer, or video fills without enough room for audio to append (and without\n    // the availability of clearing out seconds of back buffer to make room for audio).\n    // But it might still be good to handle this case in the future as a TODO.\n\n    this.waitingOnRemove_ = true;\n    this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {\n      segmentInfo,\n      type,\n      bytes\n    }));\n    const currentTime = this.currentTime_(); // Try to remove as much audio and video as possible to make room for new content\n    // before retrying.\n\n    const timeToRemoveUntil = currentTime - MIN_BACK_BUFFER;\n    this.logger_(`On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to ${timeToRemoveUntil}`);\n    this.remove(0, timeToRemoveUntil, () => {\n      this.logger_(`On QUOTA_EXCEEDED_ERR, retrying append in ${MIN_BACK_BUFFER}s`);\n      this.waitingOnRemove_ = false; // wait the length of time alotted in the back buffer to prevent wasted\n      // attempts (since we can't clear less than the minimum)\n\n      this.quotaExceededErrorRetryTimeout_ = window$1.setTimeout(() => {\n        this.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');\n        this.quotaExceededErrorRetryTimeout_ = null;\n        this.processCallQueue_();\n      }, MIN_BACK_BUFFER * 1000);\n    }, true);\n  }\n  handleAppendError_({\n    segmentInfo,\n    type,\n    bytes\n  }, error) {\n    // if there's no error, nothing to do\n    if (!error) {\n      return;\n    }\n    if (error.code === QUOTA_EXCEEDED_ERR) {\n      this.handleQuotaExceededError_({\n        segmentInfo,\n        type,\n        bytes\n      }); // A quota exceeded error should be recoverable with a future re-append, so no need\n      // to trigger an append error.\n\n      return;\n    }\n    this.logger_('Received non QUOTA_EXCEEDED_ERR on append', error); // If an append errors, we often can't recover.\n    // (see https://w3c.github.io/media-source/#sourcebuffer-append-error).\n    //\n    // Trigger a special error so that it can be handled separately from normal,\n    // recoverable errors.\n\n    this.error({\n      message: `${type} append of ${bytes.length}b failed for segment ` + `#${segmentInfo.mediaIndex} in playlist ${segmentInfo.playlist.id}`,\n      metadata: {\n        errorType: videojs.Error.StreamingFailedToAppendSegment\n      }\n    });\n    this.trigger('appenderror');\n  }\n  appendToSourceBuffer_({\n    segmentInfo,\n    type,\n    initSegment,\n    data,\n    bytes\n  }) {\n    // If this is a re-append, bytes were already created and don't need to be recreated\n    if (!bytes) {\n      const segments = [data];\n      let byteLength = data.byteLength;\n      if (initSegment) {\n        // if the media initialization segment is changing, append it before the content\n        // segment\n        segments.unshift(initSegment);\n        byteLength += initSegment.byteLength;\n      } // Technically we should be OK appending the init segment separately, however, we\n      // haven't yet tested that, and prepending is how we have always done things.\n\n      bytes = concatSegments({\n        bytes: byteLength,\n        segments\n      });\n    }\n    const metadata = {\n      segmentInfo: segmentInfoPayload({\n        type: this.loaderType_,\n        segment: segmentInfo\n      })\n    };\n    this.trigger({\n      type: 'segmentappendstart',\n      metadata\n    });\n    this.sourceUpdater_.appendBuffer({\n      segmentInfo,\n      type,\n      bytes\n    }, this.handleAppendError_.bind(this, {\n      segmentInfo,\n      type,\n      bytes\n    }));\n  }\n  handleSegmentTimingInfo_(type, requestId, segmentTimingInfo) {\n    if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n      return;\n    }\n    const segment = this.pendingSegment_.segment;\n    const timingInfoProperty = `${type}TimingInfo`;\n    if (!segment[timingInfoProperty]) {\n      segment[timingInfoProperty] = {};\n    }\n    segment[timingInfoProperty].transmuxerPrependedSeconds = segmentTimingInfo.prependedContentDuration || 0;\n    segment[timingInfoProperty].transmuxedPresentationStart = segmentTimingInfo.start.presentation;\n    segment[timingInfoProperty].transmuxedDecodeStart = segmentTimingInfo.start.decode;\n    segment[timingInfoProperty].transmuxedPresentationEnd = segmentTimingInfo.end.presentation;\n    segment[timingInfoProperty].transmuxedDecodeEnd = segmentTimingInfo.end.decode; // mainly used as a reference for debugging\n\n    segment[timingInfoProperty].baseMediaDecodeTime = segmentTimingInfo.baseMediaDecodeTime;\n  }\n  appendData_(segmentInfo, result) {\n    const {\n      type,\n      data\n    } = result;\n    if (!data || !data.byteLength) {\n      return;\n    }\n    if (type === 'audio' && this.audioDisabled_) {\n      return;\n    }\n    const initSegment = this.getInitSegmentAndUpdateState_({\n      type,\n      initSegment: result.initSegment,\n      playlist: segmentInfo.playlist,\n      map: segmentInfo.isFmp4 ? segmentInfo.segment.map : null\n    });\n    this.appendToSourceBuffer_({\n      segmentInfo,\n      type,\n      initSegment,\n      data\n    });\n  }\n  /**\n   * load a specific segment from a request into the buffer\n   *\n   * @private\n   */\n\n  loadSegment_(segmentInfo) {\n    this.state = 'WAITING';\n    this.pendingSegment_ = segmentInfo;\n    this.trimBackBuffer_(segmentInfo);\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearAllMp4Captions'\n        });\n      }\n    }\n    if (!this.hasEnoughInfoToLoad_()) {\n      checkAndFixTimelines(this);\n      this.loadQueue_.push(() => {\n        // regenerate the audioAppendStart, timestampOffset, etc as they\n        // may have changed since this function was added to the queue.\n        const options = _extends({}, segmentInfo, {\n          forceTimestampOffset: true\n        });\n        _extends(segmentInfo, this.generateSegmentInfo_(options));\n        this.isPendingTimestampOffset_ = false;\n        this.updateTransmuxerAndRequestSegment_(segmentInfo);\n      });\n      return;\n    }\n    this.updateTransmuxerAndRequestSegment_(segmentInfo);\n  }\n  updateTransmuxerAndRequestSegment_(segmentInfo) {\n    // We'll update the source buffer's timestamp offset once we have transmuxed data, but\n    // the transmuxer still needs to be updated before then.\n    //\n    // Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp\n    // offset must be passed to the transmuxer for stream correcting adjustments.\n    if (this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)) {\n      this.gopBuffer_.length = 0; // gopsToAlignWith was set before the GOP buffer was cleared\n\n      segmentInfo.gopsToAlignWith = [];\n      this.timeMapping_ = 0; // reset values in the transmuxer since a discontinuity should start fresh\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n      this.transmuxer_.postMessage({\n        action: 'setTimestampOffset',\n        timestampOffset: segmentInfo.timestampOffset\n      });\n    }\n    const simpleSegment = this.createSimplifiedSegmentObj_(segmentInfo);\n    const isEndOfStream = this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex);\n    const isWalkingForward = this.mediaIndex !== null;\n    const isDiscontinuity = segmentInfo.timeline !== this.currentTimeline_ &&\n    // currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,\n    // the first timeline\n    segmentInfo.timeline > 0;\n    const isEndOfTimeline = isEndOfStream || isWalkingForward && isDiscontinuity;\n    this.logger_(`Requesting\n${compactSegmentUrlDescription(segmentInfo.uri)}\n${segmentInfoString(segmentInfo)}`); // If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),\n    // then this init segment has never been seen before and should be appended.\n    //\n    // At this point the content type (audio/video or both) is not yet known, but it should be safe to set\n    // both to true and leave the decision of whether to append the init segment to append time.\n\n    if (simpleSegment.map && !simpleSegment.map.bytes) {\n      this.logger_('going to request init segment.');\n      this.appendInitSegment_ = {\n        video: true,\n        audio: true\n      };\n    }\n    segmentInfo.abortRequests = mediaSegmentRequest({\n      xhr: this.vhs_.xhr,\n      xhrOptions: this.xhrOptions_,\n      decryptionWorker: this.decrypter_,\n      segment: simpleSegment,\n      abortFn: this.handleAbort_.bind(this, segmentInfo),\n      progressFn: this.handleProgress_.bind(this),\n      trackInfoFn: this.handleTrackInfo_.bind(this),\n      timingInfoFn: this.handleTimingInfo_.bind(this),\n      videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'video', segmentInfo.requestId),\n      audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'audio', segmentInfo.requestId),\n      captionsFn: this.handleCaptions_.bind(this),\n      isEndOfTimeline,\n      endedTimelineFn: () => {\n        this.logger_('received endedtimeline callback');\n      },\n      id3Fn: this.handleId3_.bind(this),\n      dataFn: this.handleData_.bind(this),\n      doneFn: this.segmentRequestFinished_.bind(this),\n      onTransmuxerLog: ({\n        message,\n        level,\n        stream\n      }) => {\n        this.logger_(`${segmentInfoString(segmentInfo)} logged from transmuxer stream ${stream} as a ${level}: ${message}`);\n      },\n      triggerSegmentEventFn: ({\n        type,\n        segment,\n        keyInfo,\n        trackInfo,\n        timingInfo\n      }) => {\n        const segInfo = segmentInfoPayload({\n          segment\n        });\n        const metadata = {\n          segmentInfo: segInfo\n        }; // add other properties if necessary.\n\n        if (keyInfo) {\n          metadata.keyInfo = keyInfo;\n        }\n        if (trackInfo) {\n          metadata.trackInfo = trackInfo;\n        }\n        if (timingInfo) {\n          metadata.timingInfo = timingInfo;\n        }\n        this.trigger({\n          type,\n          metadata\n        });\n      }\n    });\n  }\n  /**\n   * trim the back buffer so that we don't have too much data\n   * in the source buffer\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   */\n\n  trimBackBuffer_(segmentInfo) {\n    const removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n    // buffer and a very conservative \"garbage collector\"\n    // We manually clear out the old buffer to ensure\n    // we don't trigger the QuotaExceeded error\n    // on the source buffer during subsequent appends\n\n    if (removeToTime > 0) {\n      this.remove(0, removeToTime);\n    }\n  }\n  /**\n   * created a simplified copy of the segment object with just the\n   * information necessary to perform the XHR and decryption\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   * @return {Object} a simplified segment object copy\n   */\n\n  createSimplifiedSegmentObj_(segmentInfo) {\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    const isEncrypted = segmentInfo.segment.key || segmentInfo.segment.map && segmentInfo.segment.map.key;\n    const isMediaInitialization = segmentInfo.segment.map && !segmentInfo.segment.map.bytes;\n    const simpleSegment = {\n      resolvedUri: part ? part.resolvedUri : segment.resolvedUri,\n      byterange: part ? part.byterange : segment.byterange,\n      requestId: segmentInfo.requestId,\n      transmuxer: segmentInfo.transmuxer,\n      audioAppendStart: segmentInfo.audioAppendStart,\n      gopsToAlignWith: segmentInfo.gopsToAlignWith,\n      part: segmentInfo.part,\n      type: this.loaderType_,\n      start: segmentInfo.startOfSegment,\n      duration: segmentInfo.duration,\n      isEncrypted,\n      isMediaInitialization\n    };\n    const previousSegment = segmentInfo.playlist.segments[segmentInfo.mediaIndex - 1];\n    if (previousSegment && previousSegment.timeline === segment.timeline) {\n      // The baseStartTime of a segment is used to handle rollover when probing the TS\n      // segment to retrieve timing information. Since the probe only looks at the media's\n      // times (e.g., PTS and DTS values of the segment), and doesn't consider the\n      // player's time (e.g., player.currentTime()), baseStartTime should reflect the\n      // media time as well. transmuxedDecodeEnd represents the end time of a segment, in\n      // seconds of media time, so should be used here. The previous segment is used since\n      // the end of the previous segment should represent the beginning of the current\n      // segment, so long as they are on the same timeline.\n      if (previousSegment.videoTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.videoTimingInfo.transmuxedDecodeEnd;\n      } else if (previousSegment.audioTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.audioTimingInfo.transmuxedDecodeEnd;\n      }\n    }\n    if (segment.key) {\n      // if the media sequence is greater than 2^32, the IV will be incorrect\n      // assuming 10s segments, that would be about 1300 years\n      const iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n      simpleSegment.key = this.segmentKey(segment.key);\n      simpleSegment.key.iv = iv;\n    }\n    if (segment.map) {\n      simpleSegment.map = this.initSegmentForMap(segment.map);\n    }\n    return simpleSegment;\n  }\n  saveTransferStats_(stats) {\n    // every request counts as a media request even if it has been aborted\n    // or canceled due to a timeout\n    this.mediaRequests += 1;\n    if (stats) {\n      this.mediaBytesTransferred += stats.bytesReceived;\n      this.mediaTransferDuration += stats.roundTripTime;\n    }\n  }\n  saveBandwidthRelatedStats_(duration, stats) {\n    // byteLength will be used for throughput, and should be based on bytes receieved,\n    // which we only know at the end of the request and should reflect total bytes\n    // downloaded rather than just bytes processed from components of the segment\n    this.pendingSegment_.byteLength = stats.bytesReceived;\n    if (duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(`Ignoring segment's bandwidth because its duration of ${duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n      return;\n    }\n    const metadata = {\n      bandwidthInfo: {\n        from: this.bandwidth,\n        to: stats.bandwidth\n      }\n    }; // player event with payload\n\n    this.trigger({\n      type: 'bandwidthupdated',\n      metadata\n    });\n    this.bandwidth = stats.bandwidth;\n    this.roundTrip = stats.roundTripTime;\n  }\n  handleTimeout_() {\n    // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functinality between segment loaders\n    this.mediaRequestsTimedout += 1;\n    this.bandwidth = 1;\n    this.roundTrip = NaN;\n    this.trigger('bandwidthupdate');\n    this.trigger('timeout');\n  }\n  /**\n   * Handle the callback from the segmentRequest function and set the\n   * associated SegmentLoader state and errors if necessary\n   *\n   * @private\n   */\n\n  segmentRequestFinished_(error, simpleSegment, result) {\n    // TODO handle special cases, e.g., muxed audio/video but only audio in the segment\n    // check the call queue directly since this function doesn't need to deal with any\n    // data, and can continue even if the source buffers are not set up and we didn't get\n    // any data from the segment\n    if (this.callQueue_.length) {\n      this.callQueue_.push(this.segmentRequestFinished_.bind(this, error, simpleSegment, result));\n      return;\n    }\n    this.saveTransferStats_(simpleSegment.stats); // The request was aborted and the SegmentLoader has already been reset\n\n    if (!this.pendingSegment_) {\n      return;\n    } // the request was aborted and the SegmentLoader has already started\n    // another request. this can happen when the timeout for an aborted\n    // request triggers due to a limitation in the XHR library\n    // do not count this as any sort of request or we risk double-counting\n\n    if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n      return;\n    } // an error occurred from the active pendingSegment_ so reset everything\n\n    if (error) {\n      this.pendingSegment_ = null;\n      this.state = 'READY'; // aborts are not a true error condition and nothing corrective needs to be done\n\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        return;\n      }\n      this.pause(); // the error is really just that at least one of the requests timed-out\n      // set the bandwidth to a very low value and trigger an ABR switch to\n      // take emergency action\n\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n        return;\n      } // if control-flow has arrived here, then the error is real\n      // emit an error event to exclude the current playlist\n\n      this.mediaRequestsErrored += 1;\n      this.error(error);\n      this.trigger('error');\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // the response was a success so set any bandwidth stats the request\n    // generated for ABR purposes\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n    segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n    if (result.gopInfo) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, result.gopInfo, this.safeAppend_);\n    } // Although we may have already started appending on progress, we shouldn't switch the\n    // state away from loading until we are officially done loading the segment data.\n\n    this.state = 'APPENDING'; // used for testing\n\n    this.trigger('appending');\n    this.waitForAppendsToComplete_(segmentInfo);\n  }\n  setTimeMapping_(timeline) {\n    const timelineMapping = this.syncController_.mappingForTimeline(timeline);\n    if (timelineMapping !== null) {\n      this.timeMapping_ = timelineMapping;\n    }\n  }\n  updateMediaSecondsLoaded_(segment) {\n    if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n      this.mediaSecondsLoaded += segment.end - segment.start;\n    } else {\n      this.mediaSecondsLoaded += segment.duration;\n    }\n  }\n  shouldUpdateTransmuxerTimestampOffset_(timestampOffset) {\n    if (timestampOffset === null) {\n      return false;\n    } // note that we're potentially using the same timestamp offset for both video and\n    // audio\n\n    if (this.loaderType_ === 'main' && timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      return true;\n    }\n    if (!this.audioDisabled_ && timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      return true;\n    }\n    return false;\n  }\n  trueSegmentStart_({\n    currentStart,\n    playlist,\n    mediaIndex,\n    firstVideoFrameTimeForData,\n    currentVideoTimestampOffset,\n    useVideoTimingInfo,\n    videoTimingInfo,\n    audioTimingInfo\n  }) {\n    if (typeof currentStart !== 'undefined') {\n      // if start was set once, keep using it\n      return currentStart;\n    }\n    if (!useVideoTimingInfo) {\n      return audioTimingInfo.start;\n    }\n    const previousSegment = playlist.segments[mediaIndex - 1]; // The start of a segment should be the start of the first full frame contained\n    // within that segment. Since the transmuxer maintains a cache of incomplete data\n    // from and/or the last frame seen, the start time may reflect a frame that starts\n    // in the previous segment. Check for that case and ensure the start time is\n    // accurate for the segment.\n\n    if (mediaIndex === 0 || !previousSegment || typeof previousSegment.start === 'undefined' || previousSegment.end !== firstVideoFrameTimeForData + currentVideoTimestampOffset) {\n      return firstVideoFrameTimeForData;\n    }\n    return videoTimingInfo.start;\n  }\n  waitForAppendsToComplete_(segmentInfo) {\n    const trackInfo = this.getCurrentMediaInfo_(segmentInfo);\n    if (!trackInfo) {\n      this.error({\n        message: 'No starting media returned, likely due to an unsupported media format.',\n        playlistExclusionDuration: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // Although transmuxing is done, appends may not yet be finished. Throw a marker\n    // on each queue this loader is responsible for to ensure that the appends are\n    // complete.\n\n    const {\n      hasAudio,\n      hasVideo,\n      isMuxed\n    } = trackInfo;\n    const waitForVideo = this.loaderType_ === 'main' && hasVideo;\n    const waitForAudio = !this.audioDisabled_ && hasAudio && !isMuxed;\n    segmentInfo.waitingOnAppends = 0; // segments with no data\n\n    if (!segmentInfo.hasAppendedData_) {\n      if (!segmentInfo.timingInfo && typeof segmentInfo.timestampOffset === 'number') {\n        // When there's no audio or video data in the segment, there's no audio or video\n        // timing information.\n        //\n        // If there's no audio or video timing information, then the timestamp offset\n        // can't be adjusted to the appropriate value for the transmuxer and source\n        // buffers.\n        //\n        // Therefore, the next segment should be used to set the timestamp offset.\n        this.isPendingTimestampOffset_ = true;\n      } // override settings for metadata only segments\n\n      segmentInfo.timingInfo = {\n        start: 0\n      };\n      segmentInfo.waitingOnAppends++;\n      if (!this.isPendingTimestampOffset_) {\n        // update the timestampoffset\n        this.updateSourceBufferTimestampOffset_(segmentInfo); // make sure the metadata queue is processed even though we have\n        // no video/audio data.\n\n        this.processMetadataQueue_();\n      } // append is \"done\" instantly with no data.\n\n      this.checkAppendsDone_(segmentInfo);\n      return;\n    } // Since source updater could call back synchronously, do the increments first.\n\n    if (waitForVideo) {\n      segmentInfo.waitingOnAppends++;\n    }\n    if (waitForAudio) {\n      segmentInfo.waitingOnAppends++;\n    }\n    if (waitForVideo) {\n      this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n    if (waitForAudio) {\n      this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n  }\n  checkAppendsDone_(segmentInfo) {\n    if (this.checkForAbort_(segmentInfo.requestId)) {\n      return;\n    }\n    segmentInfo.waitingOnAppends--;\n    if (segmentInfo.waitingOnAppends === 0) {\n      this.handleAppendsDone_();\n    }\n  }\n  checkForIllegalMediaSwitch(trackInfo) {\n    const illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.getCurrentMediaInfo_(), trackInfo);\n    if (illegalMediaSwitchError) {\n      this.error({\n        message: illegalMediaSwitchError,\n        playlistExclusionDuration: Infinity\n      });\n      this.trigger('error');\n      return true;\n    }\n    return false;\n  }\n  updateSourceBufferTimestampOffset_(segmentInfo) {\n    if (segmentInfo.timestampOffset === null ||\n    // we don't yet have the start for whatever media type (video or audio) has\n    // priority, timing-wise, so we must wait\n    typeof segmentInfo.timingInfo.start !== 'number' ||\n    // already updated the timestamp offset for this segment\n    segmentInfo.changedTimestampOffset ||\n    // the alt audio loader should not be responsible for setting the timestamp offset\n    this.loaderType_ !== 'main') {\n      return;\n    }\n    let didChange = false; // Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that\n    // the timing info here comes from video. In the event that the audio is longer than\n    // the video, this will trim the start of the audio.\n    // This also trims any offset from 0 at the beginning of the media\n\n    segmentInfo.timestampOffset -= this.getSegmentStartTimeForTimestampOffsetCalculation_({\n      videoTimingInfo: segmentInfo.segment.videoTimingInfo,\n      audioTimingInfo: segmentInfo.segment.audioTimingInfo,\n      timingInfo: segmentInfo.timingInfo\n    }); // In the event that there are part segment downloads, each will try to update the\n    // timestamp offset. Retaining this bit of state prevents us from updating in the\n    // future (within the same segment), however, there may be a better way to handle it.\n\n    segmentInfo.changedTimestampOffset = true;\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n    if (didChange) {\n      this.trigger('timestampoffset');\n    }\n  }\n  getSegmentStartTimeForTimestampOffsetCalculation_({\n    videoTimingInfo,\n    audioTimingInfo,\n    timingInfo\n  }) {\n    if (!this.useDtsForTimestampOffset_) {\n      return timingInfo.start;\n    }\n    if (videoTimingInfo && typeof videoTimingInfo.transmuxedDecodeStart === 'number') {\n      return videoTimingInfo.transmuxedDecodeStart;\n    } // handle audio only\n\n    if (audioTimingInfo && typeof audioTimingInfo.transmuxedDecodeStart === 'number') {\n      return audioTimingInfo.transmuxedDecodeStart;\n    } // handle content not transmuxed (e.g., MP4)\n\n    return timingInfo.start;\n  }\n  updateTimingInfoEnd_(segmentInfo) {\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    const trackInfo = this.getMediaInfo_();\n    const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n    const prioritizedTimingInfo = useVideoTimingInfo && segmentInfo.videoTimingInfo ? segmentInfo.videoTimingInfo : segmentInfo.audioTimingInfo;\n    if (!prioritizedTimingInfo) {\n      return;\n    }\n    segmentInfo.timingInfo.end = typeof prioritizedTimingInfo.end === 'number' ?\n    // End time may not exist in a case where we aren't parsing the full segment (one\n    // current example is the case of fmp4), so use the rough duration to calculate an\n    // end time.\n    prioritizedTimingInfo.end : prioritizedTimingInfo.start + segmentInfo.duration;\n  }\n  /**\n   * callback to run when appendBuffer is finished. detects if we are\n   * in a good state to do things with the data we got, or if we need\n   * to wait for more\n   *\n   * @private\n   */\n\n  handleAppendsDone_() {\n    // appendsdone can cause an abort\n    if (this.pendingSegment_) {\n      const metadata = {\n        segmentInfo: segmentInfoPayload({\n          type: this.loaderType_,\n          segment: this.pendingSegment_\n        })\n      };\n      this.trigger({\n        type: 'appendsdone',\n        metadata\n      });\n    }\n    if (!this.pendingSegment_) {\n      this.state = 'READY'; // TODO should this move into this.checkForAbort to speed up requests post abort in\n      // all appending cases?\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n      return;\n    }\n    const segmentInfo = this.pendingSegment_;\n    if (segmentInfo.part && segmentInfo.part.syncInfo) {\n      // low-latency flow\n      segmentInfo.part.syncInfo.markAppended();\n    } else if (segmentInfo.segment.syncInfo) {\n      // normal flow\n      segmentInfo.segment.syncInfo.markAppended();\n    } // Now that the end of the segment has been reached, we can set the end time. It's\n    // best to wait until all appends are done so we're sure that the primary media is\n    // finished (and we have its end time).\n\n    this.updateTimingInfoEnd_(segmentInfo);\n    if (this.shouldSaveSegmentTimingInfo_) {\n      // Timeline mappings should only be saved for the main loader. This is for multiple\n      // reasons:\n      //\n      // 1) Only one mapping is saved per timeline, meaning that if both the audio loader\n      //    and the main loader try to save the timeline mapping, whichever comes later\n      //    will overwrite the first. In theory this is OK, as the mappings should be the\n      //    same, however, it breaks for (2)\n      // 2) In the event of a live stream, the initial live point will make for a somewhat\n      //    arbitrary mapping. If audio and video streams are not perfectly in-sync, then\n      //    the mapping will be off for one of the streams, dependent on which one was\n      //    first saved (see (1)).\n      // 3) Primary timing goes by video in VHS, so the mapping should be video.\n      //\n      // Since the audio loader will wait for the main loader to load the first segment,\n      // the main loader will save the first timeline mapping, and ensure that there won't\n      // be a case where audio loads two segments without saving a mapping (thus leading\n      // to missing segment timing info).\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n    }\n    const segmentDurationMessage = getTroublesomeSegmentDurationMessage(segmentInfo, this.sourceType_);\n    if (segmentDurationMessage) {\n      if (segmentDurationMessage.severity === 'warn') {\n        videojs.log.warn(segmentDurationMessage.message);\n      } else {\n        this.logger_(segmentDurationMessage.message);\n      }\n    }\n    this.recordThroughput_(segmentInfo);\n    this.pendingSegment_ = null;\n    this.state = 'READY';\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate'); // if the sync request was not appended\n      // then it was not the correct segment.\n      // throw it away and use the data it gave us\n      // to get the correct one.\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.logger_(`Throwing away un-appended sync request ${segmentInfoString(segmentInfo)}`);\n        return;\n      }\n    }\n    this.logger_(`Appended ${segmentInfoString(segmentInfo)}`);\n    this.addSegmentMetadataCue_(segmentInfo);\n    this.fetchAtBuffer_ = true;\n    if (this.currentTimeline_ !== segmentInfo.timeline) {\n      this.timelineChangeController_.lastTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      }); // If audio is not disabled, the main segment loader is responsible for updating\n      // the audio timeline as well. If the content is video only, this won't have any\n      // impact.\n\n      if (this.loaderType_ === 'main' && !this.audioDisabled_) {\n        this.timelineChangeController_.lastTimelineChange({\n          type: 'audio',\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        });\n      }\n    }\n    this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n    // the following conditional otherwise it may consider this a bad \"guess\"\n    // and attempt to resync when the post-update seekable window and live\n    // point would mean that this was the perfect segment to fetch\n\n    this.trigger('syncinfoupdate');\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    const badSegmentGuess = segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3;\n    const badPartGuess = part && part.end && this.currentTime_() - part.end > segmentInfo.playlist.partTargetDuration * 3; // If we previously appended a segment/part that ends more than 3 part/targetDurations before\n    // the currentTime_ that means that our conservative guess was too conservative.\n    // In that case, reset the loader state so that we try to use any information gained\n    // from the previous request to create a new, more accurate, sync-point.\n\n    if (badSegmentGuess || badPartGuess) {\n      this.logger_(`bad ${badSegmentGuess ? 'segment' : 'part'} ${segmentInfoString(segmentInfo)}`);\n      this.resetEverything();\n      return;\n    }\n    const isWalkingForward = this.mediaIndex !== null; // Don't do a rendition switch unless we have enough time to get a sync segment\n    // and conservatively guess\n\n    if (isWalkingForward) {\n      this.trigger('bandwidthupdate');\n    }\n    this.trigger('progress');\n    this.mediaIndex = segmentInfo.mediaIndex;\n    this.partIndex = segmentInfo.partIndex; // any time an update finishes and the last segment is in the\n    // buffer, end the stream. this ensures the \"ended\" event will\n    // fire if playback reaches that point.\n\n    if (this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex)) {\n      this.endOfStream();\n    } // used for testing\n\n    this.trigger('appended');\n    if (segmentInfo.hasAppendedData_) {\n      this.mediaAppends++;\n    }\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * Records the current throughput of the decrypt, transmux, and append\n   * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n   * moving average of the throughput. `throughput.count` is the number of\n   * data points in the average.\n   *\n   * @private\n   * @param {Object} segmentInfo the object returned by loadSegment\n   */\n\n  recordThroughput_(segmentInfo) {\n    if (segmentInfo.duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(`Ignoring segment's throughput because its duration of ${segmentInfo.duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n      return;\n    }\n    const rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n    // by zero in the case where the throughput is ridiculously high\n\n    const segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n    const segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n    //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n    this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n  }\n  /**\n   * Adds a cue to the segment-metadata track with some metadata information about the\n   * segment\n   *\n   * @private\n   * @param {Object} segmentInfo\n   *        the object returned by loadSegment\n   * @method addSegmentMetadataCue_\n   */\n\n  addSegmentMetadataCue_(segmentInfo) {\n    if (!this.segmentMetadataTrack_) {\n      return;\n    }\n    const segment = segmentInfo.segment;\n    const start = segment.start;\n    const end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n    if (!finite(start) || !finite(end)) {\n      return;\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n    const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n    const value = {\n      custom: segment.custom,\n      dateTimeObject: segment.dateTimeObject,\n      dateTimeString: segment.dateTimeString,\n      programDateTime: segment.programDateTime,\n      bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n      resolution: segmentInfo.playlist.attributes.RESOLUTION,\n      codecs: segmentInfo.playlist.attributes.CODECS,\n      byteLength: segmentInfo.byteLength,\n      uri: segmentInfo.uri,\n      timeline: segmentInfo.timeline,\n      playlist: segmentInfo.playlist.id,\n      start,\n      end\n    };\n    const data = JSON.stringify(value);\n    const cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n    // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n    cue.value = value;\n    this.segmentMetadataTrack_.addCue(cue);\n  }\n}\nfunction noop() {}\nconst toTitleCase = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toUpperCase());\n};\n\n/**\n * @file source-updater.js\n */\nconst bufferTypes = ['video', 'audio'];\nconst updating = (type, sourceUpdater) => {\n  const sourceBuffer = sourceUpdater[`${type}Buffer`];\n  return sourceBuffer && sourceBuffer.updating || sourceUpdater.queuePending[type];\n};\nconst nextQueueIndexOfType = (type, queue) => {\n  for (let i = 0; i < queue.length; i++) {\n    const queueEntry = queue[i];\n    if (queueEntry.type === 'mediaSource') {\n      // If the next entry is a media source entry (uses multiple source buffers), block\n      // processing to allow it to go through first.\n      return null;\n    }\n    if (queueEntry.type === type) {\n      return i;\n    }\n  }\n  return null;\n};\nconst shiftQueue = (type, sourceUpdater) => {\n  if (sourceUpdater.queue.length === 0) {\n    return;\n  }\n  let queueIndex = 0;\n  let queueEntry = sourceUpdater.queue[queueIndex];\n  if (queueEntry.type === 'mediaSource') {\n    if (!sourceUpdater.updating() && sourceUpdater.mediaSource.readyState !== 'closed') {\n      sourceUpdater.queue.shift();\n      queueEntry.action(sourceUpdater);\n      if (queueEntry.doneFn) {\n        queueEntry.doneFn();\n      } // Only specific source buffer actions must wait for async updateend events. Media\n      // Source actions process synchronously. Therefore, both audio and video source\n      // buffers are now clear to process the next queue entries.\n\n      shiftQueue('audio', sourceUpdater);\n      shiftQueue('video', sourceUpdater);\n    } // Media Source actions require both source buffers, so if the media source action\n    // couldn't process yet (because one or both source buffers are busy), block other\n    // queue actions until both are available and the media source action can process.\n\n    return;\n  }\n  if (type === 'mediaSource') {\n    // If the queue was shifted by a media source action (this happens when pushing a\n    // media source action onto the queue), then it wasn't from an updateend event from an\n    // audio or video source buffer, so there's no change from previous state, and no\n    // processing should be done.\n    return;\n  } // Media source queue entries don't need to consider whether the source updater is\n  // started (i.e., source buffers are created) as they don't need the source buffers, but\n  // source buffer queue entries do.\n\n  if (!sourceUpdater.ready() || sourceUpdater.mediaSource.readyState === 'closed' || updating(type, sourceUpdater)) {\n    return;\n  }\n  if (queueEntry.type !== type) {\n    queueIndex = nextQueueIndexOfType(type, sourceUpdater.queue);\n    if (queueIndex === null) {\n      // Either there's no queue entry that uses this source buffer type in the queue, or\n      // there's a media source queue entry before the next entry of this type, in which\n      // case wait for that action to process first.\n      return;\n    }\n    queueEntry = sourceUpdater.queue[queueIndex];\n  }\n  sourceUpdater.queue.splice(queueIndex, 1); // Keep a record that this source buffer type is in use.\n  //\n  // The queue pending operation must be set before the action is performed in the event\n  // that the action results in a synchronous event that is acted upon. For instance, if\n  // an exception is thrown that can be handled, it's possible that new actions will be\n  // appended to an empty queue and immediately executed, but would not have the correct\n  // pending information if this property was set after the action was performed.\n\n  sourceUpdater.queuePending[type] = queueEntry;\n  queueEntry.action(type, sourceUpdater);\n  if (!queueEntry.doneFn) {\n    // synchronous operation, process next entry\n    sourceUpdater.queuePending[type] = null;\n    shiftQueue(type, sourceUpdater);\n    return;\n  }\n};\nconst cleanupBuffer = (type, sourceUpdater) => {\n  const buffer = sourceUpdater[`${type}Buffer`];\n  const titleType = toTitleCase(type);\n  if (!buffer) {\n    return;\n  }\n  buffer.removeEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n  buffer.removeEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n  sourceUpdater.codecs[type] = null;\n  sourceUpdater[`${type}Buffer`] = null;\n};\nconst inSourceBuffers = (mediaSource, sourceBuffer) => mediaSource && sourceBuffer && Array.prototype.indexOf.call(mediaSource.sourceBuffers, sourceBuffer) !== -1;\nconst actions = {\n  appendBuffer: (bytes, segmentInfo, onError) => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Appending segment ${segmentInfo.mediaIndex}'s ${bytes.length} bytes to ${type}Buffer`);\n    try {\n      sourceBuffer.appendBuffer(bytes);\n    } catch (e) {\n      sourceUpdater.logger_(`Error with code ${e.code} ` + (e.code === QUOTA_EXCEEDED_ERR ? '(QUOTA_EXCEEDED_ERR) ' : '') + `when appending segment ${segmentInfo.mediaIndex} to ${type}Buffer`);\n      sourceUpdater.queuePending[type] = null;\n      onError(e);\n    }\n  },\n  remove: (start, end) => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Removing ${start} to ${end} from ${type}Buffer`);\n    try {\n      sourceBuffer.remove(start, end);\n    } catch (e) {\n      sourceUpdater.logger_(`Remove ${start} to ${end} from ${type}Buffer failed`);\n    }\n  },\n  timestampOffset: offset => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Setting ${type}timestampOffset to ${offset}`);\n    sourceBuffer.timestampOffset = offset;\n  },\n  callback: callback => (type, sourceUpdater) => {\n    callback();\n  },\n  endOfStream: error => sourceUpdater => {\n    if (sourceUpdater.mediaSource.readyState !== 'open') {\n      return;\n    }\n    sourceUpdater.logger_(`Calling mediaSource endOfStream(${error || ''})`);\n    try {\n      sourceUpdater.mediaSource.endOfStream(error);\n    } catch (e) {\n      videojs.log.warn('Failed to call media source endOfStream', e);\n    }\n  },\n  duration: duration => sourceUpdater => {\n    sourceUpdater.logger_(`Setting mediaSource duration to ${duration}`);\n    try {\n      sourceUpdater.mediaSource.duration = duration;\n    } catch (e) {\n      videojs.log.warn('Failed to set media source duration', e);\n    }\n  },\n  abort: () => (type, sourceUpdater) => {\n    if (sourceUpdater.mediaSource.readyState !== 'open') {\n      return;\n    }\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`calling abort on ${type}Buffer`);\n    try {\n      sourceBuffer.abort();\n    } catch (e) {\n      videojs.log.warn(`Failed to abort on ${type}Buffer`, e);\n    }\n  },\n  addSourceBuffer: (type, codec) => sourceUpdater => {\n    const titleType = toTitleCase(type);\n    const mime = getMimeForCodec(codec);\n    sourceUpdater.logger_(`Adding ${type}Buffer with codec ${codec} to mediaSource`);\n    const sourceBuffer = sourceUpdater.mediaSource.addSourceBuffer(mime);\n    sourceBuffer.addEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n    sourceBuffer.addEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n    sourceUpdater.codecs[type] = codec;\n    sourceUpdater[`${type}Buffer`] = sourceBuffer;\n  },\n  removeSourceBuffer: type => sourceUpdater => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    cleanupBuffer(type, sourceUpdater); // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Removing ${type}Buffer with codec ${sourceUpdater.codecs[type]} from mediaSource`);\n    try {\n      sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);\n    } catch (e) {\n      videojs.log.warn(`Failed to removeSourceBuffer ${type}Buffer`, e);\n    }\n  },\n  changeType: codec => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    const mime = getMimeForCodec(codec); // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    } // do not update codec if we don't need to.\n    // Only update if we change the codec base.\n    // For example, going from avc1.640028 to avc1.64001f does not require a changeType call.\n\n    const newCodecBase = codec.substring(0, codec.indexOf('.'));\n    const oldCodec = sourceUpdater.codecs[type];\n    const oldCodecBase = oldCodec.substring(0, oldCodec.indexOf('.'));\n    if (oldCodecBase === newCodecBase) {\n      return;\n    }\n    const metadata = {\n      codecsChangeInfo: {\n        from: oldCodec,\n        to: codec\n      }\n    };\n    sourceUpdater.trigger({\n      type: 'codecschange',\n      metadata\n    });\n    sourceUpdater.logger_(`changing ${type}Buffer codec from ${oldCodec} to ${codec}`); // check if change to the provided type is supported\n\n    try {\n      sourceBuffer.changeType(mime);\n      sourceUpdater.codecs[type] = codec;\n    } catch (e) {\n      metadata.errorType = videojs.Error.StreamingCodecsChangeError;\n      metadata.error = e;\n      e.metadata = metadata;\n      sourceUpdater.error_ = e;\n      sourceUpdater.trigger('error');\n      videojs.log.warn(`Failed to changeType on ${type}Buffer`, e);\n    }\n  }\n};\nconst pushQueue = ({\n  type,\n  sourceUpdater,\n  action,\n  doneFn,\n  name\n}) => {\n  sourceUpdater.queue.push({\n    type,\n    action,\n    doneFn,\n    name\n  });\n  shiftQueue(type, sourceUpdater);\n};\nconst onUpdateend = (type, sourceUpdater) => e => {\n  // Although there should, in theory, be a pending action for any updateend receieved,\n  // there are some actions that may trigger updateend events without set definitions in\n  // the w3c spec. For instance, setting the duration on the media source may trigger\n  // updateend events on source buffers. This does not appear to be in the spec. As such,\n  // if we encounter an updateend without a corresponding pending action from our queue\n  // for that source buffer type, process the next action.\n  const bufferedRangesForType = sourceUpdater[`${type}Buffered`]();\n  const descriptiveString = bufferedRangesToString(bufferedRangesForType);\n  sourceUpdater.logger_(`received \"updateend\" event for ${type} Source Buffer: `, descriptiveString);\n  if (sourceUpdater.queuePending[type]) {\n    const doneFn = sourceUpdater.queuePending[type].doneFn;\n    sourceUpdater.queuePending[type] = null;\n    if (doneFn) {\n      // if there's an error, report it\n      doneFn(sourceUpdater[`${type}Error_`]);\n    }\n  }\n  shiftQueue(type, sourceUpdater);\n};\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from\n * @param {string} mimeType the desired MIME type of the underlying SourceBuffer\n */\n\nclass SourceUpdater extends videojs.EventTarget {\n  constructor(mediaSource) {\n    super();\n    this.mediaSource = mediaSource;\n    this.sourceopenListener_ = () => shiftQueue('mediaSource', this);\n    this.mediaSource.addEventListener('sourceopen', this.sourceopenListener_);\n    this.logger_ = logger('SourceUpdater'); // initial timestamp offset is 0\n\n    this.audioTimestampOffset_ = 0;\n    this.videoTimestampOffset_ = 0;\n    this.queue = [];\n    this.queuePending = {\n      audio: null,\n      video: null\n    };\n    this.delayedAudioAppendQueue_ = [];\n    this.videoAppendQueued_ = false;\n    this.codecs = {};\n    this.onVideoUpdateEnd_ = onUpdateend('video', this);\n    this.onAudioUpdateEnd_ = onUpdateend('audio', this);\n    this.onVideoError_ = e => {\n      // used for debugging\n      this.videoError_ = e;\n    };\n    this.onAudioError_ = e => {\n      // used for debugging\n      this.audioError_ = e;\n    };\n    this.createdSourceBuffers_ = false;\n    this.initializedEme_ = false;\n    this.triggeredReady_ = false;\n  }\n  initializedEme() {\n    this.initializedEme_ = true;\n    this.triggerReady();\n  }\n  hasCreatedSourceBuffers() {\n    // if false, likely waiting on one of the segment loaders to get enough data to create\n    // source buffers\n    return this.createdSourceBuffers_;\n  }\n  hasInitializedAnyEme() {\n    return this.initializedEme_;\n  }\n  ready() {\n    return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();\n  }\n  createSourceBuffers(codecs) {\n    if (this.hasCreatedSourceBuffers()) {\n      // already created them before\n      return;\n    } // the intial addOrChangeSourceBuffers will always be\n    // two add buffers.\n\n    this.addOrChangeSourceBuffers(codecs);\n    this.createdSourceBuffers_ = true;\n    this.trigger('createdsourcebuffers');\n    this.triggerReady();\n  }\n  triggerReady() {\n    // only allow ready to be triggered once, this prevents the case\n    // where:\n    // 1. we trigger createdsourcebuffers\n    // 2. ie 11 synchronously initializates eme\n    // 3. the synchronous initialization causes us to trigger ready\n    // 4. We go back to the ready check in createSourceBuffers and ready is triggered again.\n    if (this.ready() && !this.triggeredReady_) {\n      this.triggeredReady_ = true;\n      this.trigger('ready');\n    }\n  }\n  /**\n   * Add a type of source buffer to the media source.\n   *\n   * @param {string} type\n   *        The type of source buffer to add.\n   *\n   * @param {string} codec\n   *        The codec to add the source buffer with.\n   */\n\n  addSourceBuffer(type, codec) {\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.addSourceBuffer(type, codec),\n      name: 'addSourceBuffer'\n    });\n  }\n  /**\n   * call abort on a source buffer.\n   *\n   * @param {string} type\n   *        The type of source buffer to call abort on.\n   */\n\n  abort(type) {\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.abort(type),\n      name: 'abort'\n    });\n  }\n  /**\n   * Call removeSourceBuffer and remove a specific type\n   * of source buffer on the mediaSource.\n   *\n   * @param {string} type\n   *        The type of source buffer to remove.\n   */\n\n  removeSourceBuffer(type) {\n    if (!this.canRemoveSourceBuffer()) {\n      videojs.log.error('removeSourceBuffer is not supported!');\n      return;\n    }\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.removeSourceBuffer(type),\n      name: 'removeSourceBuffer'\n    });\n  }\n  /**\n   * Whether or not the removeSourceBuffer function is supported\n   * on the mediaSource.\n   *\n   * @return {boolean}\n   *          if removeSourceBuffer can be called.\n   */\n\n  canRemoveSourceBuffer() {\n    // As of Firefox 83 removeSourceBuffer\n    // throws errors, so we report that it does not support this.\n    return !videojs.browser.IS_FIREFOX && window$1.MediaSource && window$1.MediaSource.prototype && typeof window$1.MediaSource.prototype.removeSourceBuffer === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n\n  static canChangeType() {\n    return window$1.SourceBuffer && window$1.SourceBuffer.prototype && typeof window$1.SourceBuffer.prototype.changeType === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n\n  canChangeType() {\n    return this.constructor.canChangeType();\n  }\n  /**\n   * Call the changeType function on a source buffer, given the code and type.\n   *\n   * @param {string} type\n   *        The type of source buffer to call changeType on.\n   *\n   * @param {string} codec\n   *        The codec string to change type with on the source buffer.\n   */\n\n  changeType(type, codec) {\n    if (!this.canChangeType()) {\n      videojs.log.error('changeType is not supported!');\n      return;\n    }\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.changeType(codec),\n      name: 'changeType'\n    });\n  }\n  /**\n   * Add source buffers with a codec or, if they are already created,\n   * call changeType on source buffers using changeType.\n   *\n   * @param {Object} codecs\n   *        Codecs to switch to\n   */\n\n  addOrChangeSourceBuffers(codecs) {\n    if (!codecs || typeof codecs !== 'object' || Object.keys(codecs).length === 0) {\n      throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');\n    }\n    Object.keys(codecs).forEach(type => {\n      const codec = codecs[type];\n      if (!this.hasCreatedSourceBuffers()) {\n        return this.addSourceBuffer(type, codec);\n      }\n      if (this.canChangeType()) {\n        this.changeType(type, codec);\n      }\n    });\n  }\n  /**\n   * Queue an update to append an ArrayBuffer.\n   *\n   * @param {MediaObject} object containing audioBytes and/or videoBytes\n   * @param {Function} done the function to call when done\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n   */\n\n  appendBuffer(options, doneFn) {\n    const {\n      segmentInfo,\n      type,\n      bytes\n    } = options;\n    this.processedAppend_ = true;\n    if (type === 'audio' && this.videoBuffer && !this.videoAppendQueued_) {\n      this.delayedAudioAppendQueue_.push([options, doneFn]);\n      this.logger_(`delayed audio append of ${bytes.length} until video append`);\n      return;\n    } // In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will\n    // not be fired. This means that the queue will be blocked until the next action\n    // taken by the segment-loader. Provide a mechanism for segment-loader to handle\n    // these errors by calling the doneFn with the specific error.\n\n    const onError = doneFn;\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.appendBuffer(bytes, segmentInfo || {\n        mediaIndex: -1\n      }, onError),\n      doneFn,\n      name: 'appendBuffer'\n    });\n    if (type === 'video') {\n      this.videoAppendQueued_ = true;\n      if (!this.delayedAudioAppendQueue_.length) {\n        return;\n      }\n      const queue = this.delayedAudioAppendQueue_.slice();\n      this.logger_(`queuing delayed audio ${queue.length} appendBuffers`);\n      this.delayedAudioAppendQueue_.length = 0;\n      queue.forEach(que => {\n        this.appendBuffer.apply(this, que);\n      });\n    }\n  }\n  /**\n   * Get the audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The audio buffer's buffered time range\n   */\n\n  audioBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.audioBuffer)) {\n      return createTimeRanges();\n    }\n    return this.audioBuffer.buffered ? this.audioBuffer.buffered : createTimeRanges();\n  }\n  /**\n   * Get the video buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The video buffer's buffered time range\n   */\n\n  videoBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.videoBuffer)) {\n      return createTimeRanges();\n    }\n    return this.videoBuffer.buffered ? this.videoBuffer.buffered : createTimeRanges();\n  }\n  /**\n   * Get a combined video/audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         the combined time range\n   */\n\n  buffered() {\n    const video = inSourceBuffers(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null;\n    const audio = inSourceBuffers(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;\n    if (audio && !video) {\n      return this.audioBuffered();\n    }\n    if (video && !audio) {\n      return this.videoBuffered();\n    }\n    return bufferIntersection(this.audioBuffered(), this.videoBuffered());\n  }\n  /**\n   * Add a callback to the queue that will set duration on the mediaSource.\n   *\n   * @param {number} duration\n   *        The duration to set\n   *\n   * @param {Function} [doneFn]\n   *        function to run after duration has been set.\n   */\n\n  setDuration(duration, doneFn = noop) {\n    // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.duration(duration),\n      name: 'duration',\n      doneFn\n    });\n  }\n  /**\n   * Add a mediaSource endOfStream call to the queue\n   *\n   * @param {Error} [error]\n   *        Call endOfStream with an error\n   *\n   * @param {Function} [doneFn]\n   *        A function that should be called when the\n   *        endOfStream call has finished.\n   */\n\n  endOfStream(error = null, doneFn = noop) {\n    if (typeof error !== 'string') {\n      error = undefined;\n    } // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.endOfStream(error),\n      name: 'endOfStream',\n      doneFn\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n  removeAudio(start, end, done = noop) {\n    if (!this.audioBuffered().length || this.audioBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n  removeVideo(start, end, done = noop) {\n    if (!this.videoBuffered().length || this.videoBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Whether the underlying sourceBuffer is updating or not\n   *\n   * @return {boolean} the updating status of the SourceBuffer\n   */\n\n  updating() {\n    // the audio/video source buffer is updating\n    if (updating('audio', this) || updating('video', this)) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Set/get the timestampoffset on the audio SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n\n  audioTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.audioBuffer &&\n    // no point in updating if it's the same\n    this.audioTimestampOffset_ !== offset) {\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.audioTimestampOffset_ = offset;\n    }\n    return this.audioTimestampOffset_;\n  }\n  /**\n   * Set/get the timestampoffset on the video SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n\n  videoTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.videoBuffer &&\n    // no point in updating if it's the same\n    this.videoTimestampOffset_ !== offset) {\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.videoTimestampOffset_ = offset;\n    }\n    return this.videoTimestampOffset_;\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the audio queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n\n  audioQueueCallback(callback) {\n    if (!this.audioBuffer) {\n      return;\n    }\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the video queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n\n  videoQueueCallback(callback) {\n    if (!this.videoBuffer) {\n      return;\n    }\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * dispose of the source updater and the underlying sourceBuffer\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    bufferTypes.forEach(type => {\n      this.abort(type);\n      if (this.canRemoveSourceBuffer()) {\n        this.removeSourceBuffer(type);\n      } else {\n        this[`${type}QueueCallback`](() => cleanupBuffer(type, this));\n      }\n    });\n    this.videoAppendQueued_ = false;\n    this.delayedAudioAppendQueue_.length = 0;\n    if (this.sourceopenListener_) {\n      this.mediaSource.removeEventListener('sourceopen', this.sourceopenListener_);\n    }\n    this.off();\n  }\n}\nconst uint8ToUtf8 = uintArray => decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\nconst bufferToHexString = buffer => {\n  const uInt8Buffer = new Uint8Array(buffer);\n  return Array.from(uInt8Buffer).map(byte => byte.toString(16).padStart(2, '0')).join('');\n};\n\n/**\n * @file vtt-segment-loader.js\n */\nconst VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(char => char.charCodeAt(0)));\nclass NoVttJsError extends Error {\n  constructor() {\n    super('Trying to parse received VTT cues, but there is no WebVTT. Make sure vtt.js is loaded.');\n  }\n}\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nclass VTTSegmentLoader extends SegmentLoader {\n  constructor(settings, options = {}) {\n    super(settings, options); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    this.mediaSource_ = null;\n    this.subtitlesTrack_ = null;\n    this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks;\n    this.loadVttJs = settings.loadVttJs; // The VTT segment will have its own time mappings. Saving VTT segment timing info in\n    // the sync controller leads to improper behavior.\n\n    this.shouldSaveSegmentTimingInfo_ = false;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  buffered_() {\n    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) {\n      return createTimeRanges();\n    }\n    const cues = this.subtitlesTrack_.cues;\n    const start = cues[0].startTime;\n    const end = cues[cues.length - 1].startTime;\n    return createTimeRanges([[start, end]]);\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n  initSegmentForMap(map, set = false) {\n    if (!map) {\n      return null;\n    }\n    const id = initSegmentId(map);\n    let storedMap = this.initSegments_[id];\n    if (set && !storedMap && map.bytes) {\n      // append WebVTT line terminators to the media initialization segment if it exists\n      // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n      // requires two or more WebVTT line terminators between the WebVTT header and the\n      // rest of the file\n      const combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n      const combinedSegment = new Uint8Array(combinedByteLength);\n      combinedSegment.set(map.bytes);\n      combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: combinedSegment\n      };\n    }\n    return storedMap || map;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n  couldBeginLoading_() {\n    return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n  init_() {\n    this.state = 'READY';\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * Set a subtitle track on the segment loader to add subtitles to\n   *\n   * @param {TextTrack=} track\n   *        The text track to add loaded subtitles to\n   * @return {TextTrack}\n   *        Returns the subtitles track\n   */\n\n  track(track) {\n    if (typeof track === 'undefined') {\n      return this.subtitlesTrack_;\n    }\n    this.subtitlesTrack_ = track; // if we were unpaused but waiting for a sourceUpdater, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      this.init_();\n    }\n    return this.subtitlesTrack_;\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   */\n\n  remove(start, end) {\n    removeCuesFromTrack(start, end, this.subtitlesTrack_);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n  fillBuffer_() {\n    // see if we need to begin loading immediately\n    const segmentInfo = this.chooseNextRequest_();\n    if (!segmentInfo) {\n      return;\n    }\n    if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n      // We don't have the timestamp offset that we need to sync subtitles.\n      // Rerun on a timestamp offset or user interaction.\n      const checkTimestampOffset = () => {\n        this.state = 'READY';\n        if (!this.paused()) {\n          // if not paused, queue a buffer check as soon as possible\n          this.monitorBuffer_();\n        }\n      };\n      this.syncController_.one('timestampoffset', checkTimestampOffset);\n      this.state = 'WAITING_ON_TIMELINE';\n      return;\n    }\n    this.loadSegment_(segmentInfo);\n  } // never set a timestamp offset for vtt segments.\n\n  timestampOffsetForSegment_() {\n    return null;\n  }\n  chooseNextRequest_() {\n    return this.skipEmptySegments_(super.chooseNextRequest_());\n  }\n  /**\n   * Prevents the segment loader from requesting segments we know contain no subtitles\n   * by walking forward until we find the next segment that we don't know whether it is\n   * empty or not.\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @return {Object}\n   *         a segment info object that describes the current segment\n   */\n\n  skipEmptySegments_(segmentInfo) {\n    while (segmentInfo && segmentInfo.segment.empty) {\n      // stop at the last possible segmentInfo\n      if (segmentInfo.mediaIndex + 1 >= segmentInfo.playlist.segments.length) {\n        segmentInfo = null;\n        break;\n      }\n      segmentInfo = this.generateSegmentInfo_({\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex + 1,\n        startOfSegment: segmentInfo.startOfSegment + segmentInfo.duration,\n        isSyncRequest: segmentInfo.isSyncRequest\n      });\n    }\n    return segmentInfo;\n  }\n  stopForError(error) {\n    this.error(error);\n    this.state = 'READY';\n    this.pause();\n    this.trigger('error');\n  }\n  /**\n   * append a decrypted segement to the SourceBuffer through a SourceUpdater\n   *\n   * @private\n   */\n\n  segmentRequestFinished_(error, simpleSegment, result) {\n    if (!this.subtitlesTrack_) {\n      this.state = 'READY';\n      return;\n    }\n    this.saveTransferStats_(simpleSegment.stats); // the request was aborted\n\n    if (!this.pendingSegment_) {\n      this.state = 'READY';\n      this.mediaRequestsAborted += 1;\n      return;\n    }\n    if (error) {\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n      }\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        this.mediaRequestsAborted += 1;\n      } else {\n        this.mediaRequestsErrored += 1;\n      }\n      this.stopForError(error);\n      return;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const isMp4WebVttSegmentWithCues = result.mp4VttCues && result.mp4VttCues.length;\n    if (isMp4WebVttSegmentWithCues) {\n      segmentInfo.mp4VttCues = result.mp4VttCues;\n    } // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functionality between segment loaders\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats); // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n    this.state = 'APPENDING'; // used for tests\n\n    this.trigger('appending');\n    const segment = segmentInfo.segment;\n    if (segment.map) {\n      segment.map.bytes = simpleSegment.map.bytes;\n    }\n    segmentInfo.bytes = simpleSegment.bytes; // Make sure that vttjs has loaded, otherwise, load it and wait till it finished loading\n\n    if (typeof window$1.WebVTT !== 'function' && typeof this.loadVttJs === 'function') {\n      this.state = 'WAITING_ON_VTTJS'; // should be fine to call multiple times\n      // script will be loaded once but multiple listeners will be added to the queue, which is expected.\n\n      this.loadVttJs().then(() => this.segmentRequestFinished_(error, simpleSegment, result), () => this.stopForError({\n        message: 'Error loading vtt.js'\n      }));\n      return;\n    }\n    segment.requested = true;\n    try {\n      this.parseVTTCues_(segmentInfo);\n    } catch (e) {\n      this.stopForError({\n        message: e.message,\n        metadata: {\n          errorType: videojs.Error.StreamingVttParserError,\n          error: e\n        }\n      });\n      return;\n    }\n    if (!isMp4WebVttSegmentWithCues) {\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n    }\n    if (segmentInfo.cues.length) {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.cues[0].startTime,\n        end: segmentInfo.cues[segmentInfo.cues.length - 1].endTime\n      };\n    } else {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.startOfSegment,\n        end: segmentInfo.startOfSegment + segmentInfo.duration\n      };\n    }\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate');\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n      return;\n    }\n    segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n    this.mediaSecondsLoaded += segment.duration; // Create VTTCue instances for each cue in the new segment and add them to\n    // the subtitle track\n\n    segmentInfo.cues.forEach(cue => {\n      this.subtitlesTrack_.addCue(this.featuresNativeTextTracks_ ? new window$1.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n    }); // Remove any duplicate cues from the subtitle track. The WebVTT spec allows\n    // cues to have identical time-intervals, but if the text is also identical\n    // we can safely assume it is a duplicate that can be removed (ex. when a cue\n    // \"overlaps\" VTT segments)\n\n    removeDuplicateCuesFromTrack(this.subtitlesTrack_);\n    this.handleAppendsDone_();\n  }\n  handleData_(simpleSegment, result) {\n    const isVttType = simpleSegment && simpleSegment.type === 'vtt';\n    const isTextResult = result && result.type === 'text';\n    const isFmp4VttSegment = isVttType && isTextResult; // handle segment data for fmp4 encapsulated webvtt\n\n    if (isFmp4VttSegment) {\n      super.handleData_(simpleSegment, result);\n    }\n  }\n  updateTimingInfoEnd_() {// noop\n  }\n  /**\n   * Utility function for converting mp4 webvtt cue objects into VTTCues.\n   *\n   * @param {Object} segmentInfo with mp4 webvtt cues for parsing into VTTCue objecs\n   */\n\n  parseMp4VttCues_(segmentInfo) {\n    const timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\n    segmentInfo.mp4VttCues.forEach(cue => {\n      const start = cue.start + timestampOffset;\n      const end = cue.end + timestampOffset;\n      const vttCue = new window$1.VTTCue(start, end, cue.cueText);\n      if (cue.settings) {\n        cue.settings.split(' ').forEach(cueSetting => {\n          const keyValString = cueSetting.split(':');\n          const key = keyValString[0];\n          const value = keyValString[1];\n          vttCue[key] = isNaN(value) ? value : Number(value);\n        });\n      }\n      segmentInfo.cues.push(vttCue);\n    });\n  }\n  /**\n   * Uses the WebVTT parser to parse the segment response\n   *\n   * @throws NoVttJsError\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @private\n   */\n\n  parseVTTCues_(segmentInfo) {\n    let decoder;\n    let decodeBytesToString = false;\n    if (typeof window$1.WebVTT !== 'function') {\n      // caller is responsible for exception handling.\n      throw new NoVttJsError();\n    }\n    segmentInfo.cues = [];\n    segmentInfo.timestampmap = {\n      MPEGTS: 0,\n      LOCAL: 0\n    };\n    if (segmentInfo.mp4VttCues) {\n      this.parseMp4VttCues_(segmentInfo);\n      return;\n    }\n    if (typeof window$1.TextDecoder === 'function') {\n      decoder = new window$1.TextDecoder('utf8');\n    } else {\n      decoder = window$1.WebVTT.StringDecoder();\n      decodeBytesToString = true;\n    }\n    const parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n    parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n    parser.ontimestampmap = map => {\n      segmentInfo.timestampmap = map;\n    };\n    parser.onparsingerror = error => {\n      videojs.log.warn('Error encountered when parsing cues: ' + error.message);\n    };\n    if (segmentInfo.segment.map) {\n      let mapData = segmentInfo.segment.map.bytes;\n      if (decodeBytesToString) {\n        mapData = uint8ToUtf8(mapData);\n      }\n      parser.parse(mapData);\n    }\n    let segmentData = segmentInfo.bytes;\n    if (decodeBytesToString) {\n      segmentData = uint8ToUtf8(segmentData);\n    }\n    parser.parse(segmentData);\n    parser.flush();\n  }\n  /**\n   * Updates the start and end times of any cues parsed by the WebVTT parser using\n   * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n   * from the SyncController\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @param {Object} mappingObj\n   *        object containing a mapping from TS to media time\n   * @param {Object} playlist\n   *        the playlist object containing the segment\n   * @private\n   */\n\n  updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n    const segment = segmentInfo.segment;\n    if (!mappingObj) {\n      // If the sync controller does not have a mapping of TS to Media Time for the\n      // timeline, then we don't have enough information to update the cue\n      // start/end times\n      return;\n    }\n    if (!segmentInfo.cues.length) {\n      // If there are no cues, we also do not have enough information to figure out\n      // segment timing. Mark that the segment contains no cues so we don't re-request\n      // an empty segment.\n      segment.empty = true;\n      return;\n    }\n    const {\n      MPEGTS,\n      LOCAL\n    } = segmentInfo.timestampmap;\n    /**\n     * From the spec:\n     * The MPEGTS media timestamp MUST use a 90KHz timescale,\n     * even when non-WebVTT Media Segments use a different timescale.\n     */\n\n    const mpegTsInSeconds = MPEGTS / ONE_SECOND_IN_TS;\n    const diff = mpegTsInSeconds - LOCAL + mappingObj.mapping;\n    segmentInfo.cues.forEach(cue => {\n      const duration = cue.endTime - cue.startTime;\n      const startTime = this.handleRollover_(cue.startTime + diff, mappingObj.time);\n      cue.startTime = Math.max(startTime, 0);\n      cue.endTime = Math.max(startTime + duration, 0);\n    });\n    if (!playlist.syncInfo) {\n      const firstStart = segmentInfo.cues[0].startTime;\n      const lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n      playlist.syncInfo = {\n        mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n        time: Math.min(firstStart, lastStart - segment.duration)\n      };\n    }\n  }\n  /**\n   * MPEG-TS PES timestamps are limited to 2^33.\n   * Once they reach 2^33, they roll over to 0.\n   * mux.js handles PES timestamp rollover for the following scenarios:\n   * [forward rollover(right)] ->\n   *    PES timestamps monotonically increase, and once they reach 2^33, they roll over to 0\n   * [backward rollover(left)] -->\n   *    we seek back to position before rollover.\n   *\n   * According to the HLS SPEC:\n   * When synchronizing WebVTT with PES timestamps, clients SHOULD account\n   * for cases where the 33-bit PES timestamps have wrapped and the WebVTT\n   * cue times have not.  When the PES timestamp wraps, the WebVTT Segment\n   * SHOULD have a X-TIMESTAMP-MAP header that maps the current WebVTT\n   * time to the new (low valued) PES timestamp.\n   *\n   * So we want to handle rollover here and align VTT Cue start/end time to the player's time.\n   */\n\n  handleRollover_(value, reference) {\n    if (reference === null) {\n      return value;\n    }\n    let valueIn90khz = value * ONE_SECOND_IN_TS;\n    const referenceIn90khz = reference * ONE_SECOND_IN_TS;\n    let offset;\n    if (referenceIn90khz < valueIn90khz) {\n      // - 2^33\n      offset = -8589934592;\n    } else {\n      // + 2^33\n      offset = 8589934592;\n    } // distance(value - reference) > 2^32\n\n    while (Math.abs(valueIn90khz - referenceIn90khz) > 4294967296) {\n      valueIn90khz += offset;\n    }\n    return valueIn90khz / ONE_SECOND_IN_TS;\n  }\n}\n\n/**\n * @file ad-cue-tags.js\n */\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n *\n * @param {Object} track\n *        the track to find the cue for\n *\n * @param {number} mediaTime\n *        the time to find the cue at\n *\n * @return {Object|null}\n *         the found cue or null\n */\n\nconst findAdCue = function (track, mediaTime) {\n  const cues = track.cues;\n  for (let i = 0; i < cues.length; i++) {\n    const cue = cues[i];\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\nconst updateAdCues = function (media, track, offset = 0) {\n  if (!media.segments) {\n    return;\n  }\n  let mediaTime = offset;\n  let cue;\n  for (let i = 0; i < media.segments.length; i++) {\n    const segment = media.segments[i];\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n        const [adOffset, adTotal] = segment.cueOutCont.split('/').map(parseFloat);\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\nclass SyncInfo {\n  /**\n   * @param {number} start - media sequence start\n   * @param {number} end - media sequence end\n   * @param {number} segmentIndex - index for associated segment\n   * @param {number|null} [partIndex] - index for associated part\n   * @param {boolean} [appended] - appended indicator\n   *\n   */\n  constructor({\n    start,\n    end,\n    segmentIndex,\n    partIndex = null,\n    appended = false\n  }) {\n    this.start_ = start;\n    this.end_ = end;\n    this.segmentIndex_ = segmentIndex;\n    this.partIndex_ = partIndex;\n    this.appended_ = appended;\n  }\n  isInRange(targetTime) {\n    return targetTime >= this.start && targetTime < this.end;\n  }\n  markAppended() {\n    this.appended_ = true;\n  }\n  resetAppendedStatus() {\n    this.appended_ = false;\n  }\n  get isAppended() {\n    return this.appended_;\n  }\n  get start() {\n    return this.start_;\n  }\n  get end() {\n    return this.end_;\n  }\n  get segmentIndex() {\n    return this.segmentIndex_;\n  }\n  get partIndex() {\n    return this.partIndex_;\n  }\n}\nclass SyncInfoData {\n  /**\n   *\n   * @param {SyncInfo} segmentSyncInfo - sync info for a given segment\n   * @param {Array<SyncInfo>} [partsSyncInfo] - sync infos for a list of parts for a given segment\n   */\n  constructor(segmentSyncInfo, partsSyncInfo = []) {\n    this.segmentSyncInfo_ = segmentSyncInfo;\n    this.partsSyncInfo_ = partsSyncInfo;\n  }\n  get segmentSyncInfo() {\n    return this.segmentSyncInfo_;\n  }\n  get partsSyncInfo() {\n    return this.partsSyncInfo_;\n  }\n  get hasPartsSyncInfo() {\n    return this.partsSyncInfo_.length > 0;\n  }\n  resetAppendStatus() {\n    this.segmentSyncInfo_.resetAppendedStatus();\n    this.partsSyncInfo_.forEach(partSyncInfo => partSyncInfo.resetAppendedStatus());\n  }\n}\nclass MediaSequenceSync {\n  constructor() {\n    /**\n     * @type {Map<number, SyncInfoData>}\n     * @protected\n     */\n    this.storage_ = new Map();\n    this.diagnostics_ = '';\n    this.isReliable_ = false;\n    this.start_ = -Infinity;\n    this.end_ = Infinity;\n  }\n  get start() {\n    return this.start_;\n  }\n  get end() {\n    return this.end_;\n  }\n  get diagnostics() {\n    return this.diagnostics_;\n  }\n  get isReliable() {\n    return this.isReliable_;\n  }\n  resetAppendedStatus() {\n    this.storage_.forEach(syncInfoData => syncInfoData.resetAppendStatus());\n  }\n  /**\n   * update sync storage\n   *\n   * @param {Object} playlist\n   * @param {number} currentTime\n   *\n   * @return {void}\n   */\n\n  update(playlist, currentTime) {\n    const {\n      mediaSequence,\n      segments\n    } = playlist;\n    this.isReliable_ = this.isReliablePlaylist_(mediaSequence, segments);\n    if (!this.isReliable_) {\n      return;\n    }\n    return this.updateStorage_(segments, mediaSequence, this.calculateBaseTime_(mediaSequence, segments, currentTime));\n  }\n  /**\n   * @param {number} targetTime\n   * @return {SyncInfo|null}\n   */\n\n  getSyncInfoForTime(targetTime) {\n    for (const {\n      segmentSyncInfo,\n      partsSyncInfo\n    } of this.storage_.values()) {\n      // Normal segment flow:\n      if (!partsSyncInfo.length) {\n        if (segmentSyncInfo.isInRange(targetTime)) {\n          return segmentSyncInfo;\n        }\n      } else {\n        // Low latency flow:\n        for (const partSyncInfo of partsSyncInfo) {\n          if (partSyncInfo.isInRange(targetTime)) {\n            return partSyncInfo;\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getSyncInfoForMediaSequence(mediaSequence) {\n    return this.storage_.get(mediaSequence);\n  }\n  updateStorage_(segments, startingMediaSequence, startingTime) {\n    const newStorage = new Map();\n    let newDiagnostics = '\\n';\n    let currentStart = startingTime;\n    let currentMediaSequence = startingMediaSequence;\n    this.start_ = currentStart;\n    segments.forEach((segment, segmentIndex) => {\n      const prevSyncInfoData = this.storage_.get(currentMediaSequence);\n      const segmentStart = currentStart;\n      const segmentEnd = segmentStart + segment.duration;\n      const segmentIsAppended = Boolean(prevSyncInfoData && prevSyncInfoData.segmentSyncInfo && prevSyncInfoData.segmentSyncInfo.isAppended);\n      const segmentSyncInfo = new SyncInfo({\n        start: segmentStart,\n        end: segmentEnd,\n        appended: segmentIsAppended,\n        segmentIndex\n      });\n      segment.syncInfo = segmentSyncInfo;\n      let currentPartStart = currentStart;\n      const partsSyncInfo = (segment.parts || []).map((part, partIndex) => {\n        const partStart = currentPartStart;\n        const partEnd = currentPartStart + part.duration;\n        const partIsAppended = Boolean(prevSyncInfoData && prevSyncInfoData.partsSyncInfo && prevSyncInfoData.partsSyncInfo[partIndex] && prevSyncInfoData.partsSyncInfo[partIndex].isAppended);\n        const partSyncInfo = new SyncInfo({\n          start: partStart,\n          end: partEnd,\n          appended: partIsAppended,\n          segmentIndex,\n          partIndex\n        });\n        currentPartStart = partEnd;\n        newDiagnostics += `Media Sequence: ${currentMediaSequence}.${partIndex} | Range: ${partStart} --> ${partEnd} | Appended: ${partIsAppended}\\n`;\n        part.syncInfo = partSyncInfo;\n        return partSyncInfo;\n      });\n      newStorage.set(currentMediaSequence, new SyncInfoData(segmentSyncInfo, partsSyncInfo));\n      newDiagnostics += `${compactSegmentUrlDescription(segment.resolvedUri)} | Media Sequence: ${currentMediaSequence} | Range: ${segmentStart} --> ${segmentEnd} | Appended: ${segmentIsAppended}\\n`;\n      currentMediaSequence++;\n      currentStart = segmentEnd;\n    });\n    this.end_ = currentStart;\n    this.storage_ = newStorage;\n    this.diagnostics_ = newDiagnostics;\n  }\n  calculateBaseTime_(mediaSequence, segments, fallback) {\n    if (!this.storage_.size) {\n      // Initial setup flow.\n      return 0;\n    }\n    if (this.storage_.has(mediaSequence)) {\n      // Normal flow.\n      return this.storage_.get(mediaSequence).segmentSyncInfo.start;\n    }\n    const minMediaSequenceFromStorage = Math.min(...this.storage_.keys()); // This case captures a race condition that can occur if we switch to a new media playlist that is out of date\n    // and still has an older Media Sequence. If this occurs, we extrapolate backwards to get the base time.\n\n    if (mediaSequence < minMediaSequenceFromStorage) {\n      const mediaSequenceDiff = minMediaSequenceFromStorage - mediaSequence;\n      let baseTime = this.storage_.get(minMediaSequenceFromStorage).segmentSyncInfo.start;\n      for (let i = 0; i < mediaSequenceDiff; i++) {\n        const segment = segments[i];\n        baseTime -= segment.duration;\n      }\n      return baseTime;\n    } // Fallback flow.\n    // There is a gap between last recorded playlist and a new one received.\n\n    return fallback;\n  }\n  isReliablePlaylist_(mediaSequence, segments) {\n    return mediaSequence !== undefined && mediaSequence !== null && Array.isArray(segments) && segments.length;\n  }\n}\nclass DependantMediaSequenceSync extends MediaSequenceSync {\n  constructor(parent) {\n    super();\n    this.parent_ = parent;\n  }\n  calculateBaseTime_(mediaSequence, segments, fallback) {\n    if (!this.storage_.size) {\n      const info = this.parent_.getSyncInfoForMediaSequence(mediaSequence);\n      if (info) {\n        return info.segmentSyncInfo.start;\n      }\n      return 0;\n    }\n    return super.calculateBaseTime_(mediaSequence, segments, fallback);\n  }\n}\n\n/**\n * @file sync-controller.js\n */\n// synchronize expired playlist segments.\n// the max media sequence diff is 48 hours of live stream\n// content with two second segments. Anything larger than that\n// will likely be invalid.\n\nconst MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC = 86400;\nconst syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (duration !== Infinity) {\n      const syncPoint = {\n        time: 0,\n        segmentIndex: 0,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n    return null;\n  }\n}, {\n  name: 'MediaSequence',\n  /**\n   * run media sequence strategy\n   *\n   * @param {SyncController} syncController\n   * @param {Object} playlist\n   * @param {number} duration\n   * @param {number} currentTimeline\n   * @param {number} currentTime\n   * @param {string} type\n   */\n  run: (syncController, playlist, duration, currentTimeline, currentTime, type) => {\n    const mediaSequenceSync = syncController.getMediaSequenceSync(type);\n    if (!mediaSequenceSync) {\n      return null;\n    }\n    if (!mediaSequenceSync.isReliable) {\n      return null;\n    }\n    const syncInfo = mediaSequenceSync.getSyncInfoForTime(currentTime);\n    if (!syncInfo) {\n      return null;\n    }\n    return {\n      time: syncInfo.start,\n      partIndex: syncInfo.partIndex,\n      segmentIndex: syncInfo.segmentIndex\n    };\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (!Object.keys(syncController.timelineToDatetimeMappings).length) {\n      return null;\n    }\n    let syncPoint = null;\n    let lastDistance = null;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    currentTime = currentTime || 0;\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      const partAndSegment = partsAndSegments[index];\n      const segment = partAndSegment.segment;\n      const datetimeMapping = syncController.timelineToDatetimeMappings[segment.timeline];\n      if (!datetimeMapping || !segment.dateTimeObject) {\n        continue;\n      }\n      const segmentTime = segment.dateTimeObject.getTime() / 1000;\n      let start = segmentTime + datetimeMapping; // take part duration into account.\n\n      if (segment.parts && typeof partAndSegment.partIndex === 'number') {\n        for (let z = 0; z < partAndSegment.partIndex; z++) {\n          start += segment.parts[z].duration;\n        }\n      }\n      const distance = Math.abs(currentTime - start); // Once the distance begins to increase, or if distance is 0, we have passed\n      // currentTime and can stop looking for better candidates\n\n      if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n        break;\n      }\n      lastDistance = distance;\n      syncPoint = {\n        time: start,\n        segmentIndex: partAndSegment.segmentIndex,\n        partIndex: partAndSegment.partIndex\n      };\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    let syncPoint = null;\n    let lastDistance = null;\n    currentTime = currentTime || 0;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      const partAndSegment = partsAndSegments[index];\n      const segment = partAndSegment.segment;\n      const start = partAndSegment.part && partAndSegment.part.start || segment && segment.start;\n      if (segment.timeline === currentTimeline && typeof start !== 'undefined') {\n        const distance = Math.abs(currentTime - start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: start,\n            segmentIndex: partAndSegment.segmentIndex,\n            partIndex: partAndSegment.partIndex\n          };\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    let syncPoint = null;\n    currentTime = currentTime || 0;\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      let lastDistance = null;\n      for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n        const segmentIndex = playlist.discontinuityStarts[i];\n        const discontinuity = playlist.discontinuitySequence + i + 1;\n        const discontinuitySync = syncController.discontinuities[discontinuity];\n        if (discontinuitySync) {\n          const distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex,\n              partIndex: null\n            };\n          }\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (playlist.syncInfo) {\n      const syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n    return null;\n  }\n}];\nclass SyncController extends videojs.EventTarget {\n  constructor(options = {}) {\n    super(); // ...for synching across variants\n\n    this.timelines = [];\n    this.discontinuities = [];\n    this.timelineToDatetimeMappings = {}; // TODO: this map should be only available for HLS. Since only HLS has MediaSequence.\n    //  For some reason this map helps with syncing between quality switch for MPEG-DASH as well.\n    //  Moreover if we disable this map for MPEG-DASH - quality switch will be broken.\n    //  MPEG-DASH should have its own separate sync strategy\n\n    const main = new MediaSequenceSync();\n    const audio = new DependantMediaSequenceSync(main);\n    const vtt = new DependantMediaSequenceSync(main);\n    this.mediaSequenceStorage_ = {\n      main,\n      audio,\n      vtt\n    };\n    this.logger_ = logger('SyncController');\n  }\n  /**\n   *\n   * @param {string} loaderType\n   * @return {MediaSequenceSync|null}\n   */\n\n  getMediaSequenceSync(loaderType) {\n    return this.mediaSequenceStorage_[loaderType] || null;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @param {number} currentTime\n   *        Current player's time\n   * @param {string} type\n   *        Segment loader type\n   * @return {Object}\n   *          A sync-point object\n   */\n\n  getSyncPoint(playlist, duration, currentTimeline, currentTime, type) {\n    // Always use VOD sync point for VOD\n    if (duration !== Infinity) {\n      const vodSyncPointStrategy = syncPointStrategies.find(({\n        name\n      }) => name === 'VOD');\n      return vodSyncPointStrategy.run(this, playlist, duration);\n    }\n    const syncPoints = this.runStrategies_(playlist, duration, currentTimeline, currentTime, type);\n    if (!syncPoints.length) {\n      // Signal that we need to attempt to get a sync-point manually\n      // by fetching a segment in the playlist and constructing\n      // a sync-point from that information\n      return null;\n    } // If we have exact match just return it instead of finding the nearest distance\n\n    for (const syncPointInfo of syncPoints) {\n      const {\n        syncPoint,\n        strategy\n      } = syncPointInfo;\n      const {\n        segmentIndex,\n        time\n      } = syncPoint;\n      if (segmentIndex < 0) {\n        continue;\n      }\n      const selectedSegment = playlist.segments[segmentIndex];\n      const start = time;\n      const end = start + selectedSegment.duration;\n      this.logger_(`Strategy: ${strategy}. Current time: ${currentTime}. selected segment: ${segmentIndex}. Time: [${start} -> ${end}]}`);\n      if (currentTime >= start && currentTime < end) {\n        this.logger_('Found sync point with exact match: ', syncPoint);\n        return syncPoint;\n      }\n    } // Now find the sync-point that is closest to the currentTime because\n    // that should result in the most accurate guess about which segment\n    // to fetch\n\n    return this.selectSyncPoint_(syncPoints, {\n      key: 'time',\n      value: currentTime\n    });\n  }\n  /**\n   * Calculate the amount of time that has expired off the playlist during playback\n   *\n   * @param {Playlist} playlist\n   *        Playlist object to calculate expired from\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playling a live source)\n   * @return {number|null}\n   *          The amount of time that has expired off the playlist during playback. Null\n   *          if no sync-points for the playlist can be found.\n   */\n\n  getExpiredTime(playlist, duration) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n    const syncPoints = this.runStrategies_(playlist, duration, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n    if (!syncPoints.length) {\n      return null;\n    }\n    const syncPoint = this.selectSyncPoint_(syncPoints, {\n      key: 'segmentIndex',\n      value: 0\n    }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n    // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n    if (syncPoint.segmentIndex > 0) {\n      syncPoint.time *= -1;\n    }\n    return Math.abs(syncPoint.time + sumDurations({\n      defaultDuration: playlist.targetDuration,\n      durationList: playlist.segments,\n      startIndex: syncPoint.segmentIndex,\n      endIndex: 0\n    }));\n  }\n  /**\n   * Runs each sync-point strategy and returns a list of sync-points returned by the\n   * strategies\n   *\n   * @private\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @param {number} currentTime\n   *        Current player's time\n   * @param {string} type\n   *        Segment loader type\n   * @return {Array}\n   *          A list of sync-point objects\n   */\n\n  runStrategies_(playlist, duration, currentTimeline, currentTime, type) {\n    const syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n    for (let i = 0; i < syncPointStrategies.length; i++) {\n      const strategy = syncPointStrategies[i];\n      const syncPoint = strategy.run(this, playlist, duration, currentTimeline, currentTime, type);\n      if (syncPoint) {\n        syncPoint.strategy = strategy.name;\n        syncPoints.push({\n          strategy: strategy.name,\n          syncPoint\n        });\n      }\n    }\n    return syncPoints;\n  }\n  /**\n   * Selects the sync-point nearest the specified target\n   *\n   * @private\n   * @param {Array} syncPoints\n   *        List of sync-points to select from\n   * @param {Object} target\n   *        Object specifying the property and value we are targeting\n   * @param {string} target.key\n   *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n   * @param {number} target.value\n   *        The value to target for the specified key.\n   * @return {Object}\n   *          The sync-point nearest the target\n   */\n\n  selectSyncPoint_(syncPoints, target) {\n    let bestSyncPoint = syncPoints[0].syncPoint;\n    let bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n    let bestStrategy = syncPoints[0].strategy;\n    for (let i = 1; i < syncPoints.length; i++) {\n      const newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n      if (newDistance < bestDistance) {\n        bestDistance = newDistance;\n        bestSyncPoint = syncPoints[i].syncPoint;\n        bestStrategy = syncPoints[i].strategy;\n      }\n    }\n    this.logger_(`syncPoint for [${target.key}: ${target.value}] chosen with strategy` + ` [${bestStrategy}]: [time:${bestSyncPoint.time},` + ` segmentIndex:${bestSyncPoint.segmentIndex}` + (typeof bestSyncPoint.partIndex === 'number' ? `,partIndex:${bestSyncPoint.partIndex}` : '') + ']');\n    return bestSyncPoint;\n  }\n  /**\n   * Save any meta-data present on the segments when segments leave\n   * the live window to the playlist to allow for synchronization at the\n   * playlist level later.\n   *\n   * @param {Playlist} oldPlaylist - The previous active playlist\n   * @param {Playlist} newPlaylist - The updated and most current playlist\n   */\n\n  saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n    const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // Ignore large media sequence gaps\n\n    if (mediaSequenceDiff > MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC) {\n      videojs.log.warn(`Not saving expired segment info. Media sequence gap ${mediaSequenceDiff} is too large.`);\n      return;\n    } // When a segment expires from the playlist and it has a start time\n    // save that information as a possible sync-point reference in future\n\n    for (let i = mediaSequenceDiff - 1; i >= 0; i--) {\n      const lastRemovedSegment = oldPlaylist.segments[i];\n      if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n        newPlaylist.syncInfo = {\n          mediaSequence: oldPlaylist.mediaSequence + i,\n          time: lastRemovedSegment.start\n        };\n        this.logger_(`playlist refresh sync: [time:${newPlaylist.syncInfo.time},` + ` mediaSequence: ${newPlaylist.syncInfo.mediaSequence}]`);\n        this.trigger('syncinfoupdate');\n        break;\n      }\n    }\n  }\n  /**\n   * Save the mapping from playlist's ProgramDateTime to display. This should only happen\n   * before segments start to load.\n   *\n   * @param {Playlist} playlist - The currently active playlist\n   */\n\n  setDateTimeMappingForStart(playlist) {\n    // It's possible for the playlist to be updated before playback starts, meaning time\n    // zero is not yet set. If, during these playlist refreshes, a discontinuity is\n    // crossed, then the old time zero mapping (for the prior timeline) would be retained\n    // unless the mappings are cleared.\n    this.timelineToDatetimeMappings = {};\n    if (playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n      const firstSegment = playlist.segments[0];\n      const playlistTimestamp = firstSegment.dateTimeObject.getTime() / 1000;\n      this.timelineToDatetimeMappings[firstSegment.timeline] = -playlistTimestamp;\n    }\n  }\n  /**\n   * Calculates and saves timeline mappings, playlist sync info, and segment timing values\n   * based on the latest timing information.\n   *\n   * @param {Object} options\n   *        Options object\n   * @param {SegmentInfo} options.segmentInfo\n   *        The current active request information\n   * @param {boolean} options.shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved for timeline mapping and program date time mappings.\n   */\n\n  saveSegmentTimingInfo({\n    segmentInfo,\n    shouldSaveTimelineMapping\n  }) {\n    const didCalculateSegmentTimeMapping = this.calculateSegmentTimeMapping_(segmentInfo, segmentInfo.timingInfo, shouldSaveTimelineMapping);\n    const segment = segmentInfo.segment;\n    if (didCalculateSegmentTimeMapping) {\n      this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n      // now with segment timing information\n\n      if (!segmentInfo.playlist.syncInfo) {\n        segmentInfo.playlist.syncInfo = {\n          mediaSequence: segmentInfo.playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: segment.start\n        };\n      }\n    }\n    const dateTime = segment.dateTimeObject;\n    if (segment.discontinuity && shouldSaveTimelineMapping && dateTime) {\n      this.timelineToDatetimeMappings[segment.timeline] = -(dateTime.getTime() / 1000);\n    }\n  }\n  timestampOffsetForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].time;\n  }\n  mappingForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].mapping;\n  }\n  /**\n   * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n   * save that display time to the segment.\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo\n   *        The current active request information\n   * @param {Object} timingInfo\n   *        The start and end time of the current segment in \"media time\"\n   * @param {boolean} shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved in timelines.\n   * @return {boolean}\n   *          Returns false if segment time mapping could not be calculated\n   */\n\n  calculateSegmentTimeMapping_(segmentInfo, timingInfo, shouldSaveTimelineMapping) {\n    // TODO: remove side effects\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    let mappingObj = this.timelines[segmentInfo.timeline];\n    let start;\n    let end;\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      mappingObj = {\n        time: segmentInfo.startOfSegment,\n        mapping: segmentInfo.startOfSegment - timingInfo.start\n      };\n      if (shouldSaveTimelineMapping) {\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_(`time mapping for timeline ${segmentInfo.timeline}: ` + `[time: ${mappingObj.time}] [mapping: ${mappingObj.mapping}]`);\n      }\n      start = segmentInfo.startOfSegment;\n      end = timingInfo.end + mappingObj.mapping;\n    } else if (mappingObj) {\n      start = timingInfo.start + mappingObj.mapping;\n      end = timingInfo.end + mappingObj.mapping;\n    } else {\n      return false;\n    }\n    if (part) {\n      part.start = start;\n      part.end = end;\n    } // If we don't have a segment start yet or the start value we got\n    // is less than our current segment.start value, save a new start value.\n    // We have to do this because parts will have segment timing info saved\n    // multiple times and we want segment start to be the earliest part start\n    // value for that segment.\n\n    if (!segment.start || start < segment.start) {\n      segment.start = start;\n    }\n    segment.end = end;\n    return true;\n  }\n  /**\n   * Each time we have discontinuity in the playlist, attempt to calculate the location\n   * in display of the start of the discontinuity and save that. We also save an accuracy\n   * value so that we save values with the most accuracy (closest to 0.)\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   */\n\n  saveDiscontinuitySyncInfo_(segmentInfo) {\n    const playlist = segmentInfo.playlist;\n    const segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n    // the start of the range and it's accuracy is 0 (greater accuracy values\n    // mean more approximation)\n\n    if (segment.discontinuity) {\n      this.discontinuities[segment.timeline] = {\n        time: segment.start,\n        accuracy: 0\n      };\n    } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      // Search for future discontinuities that we can provide better timing\n      // information for and save that information for sync purposes\n      for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n        const segmentIndex = playlist.discontinuityStarts[i];\n        const discontinuity = playlist.discontinuitySequence + i + 1;\n        const mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n        const accuracy = Math.abs(mediaIndexDiff);\n        if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n          let time;\n          if (mediaIndexDiff < 0) {\n            time = segment.start - sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex,\n              endIndex: segmentIndex\n            });\n          } else {\n            time = segment.end + sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex + 1,\n              endIndex: segmentIndex\n            });\n          }\n          this.discontinuities[discontinuity] = {\n            time,\n            accuracy\n          };\n        }\n      }\n    }\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.off();\n  }\n}\n\n/**\n * The TimelineChangeController acts as a source for segment loaders to listen for and\n * keep track of latest and pending timeline changes. This is useful to ensure proper\n * sync, as each loader may need to make a consideration for what timeline the other\n * loader is on before making changes which could impact the other loader's media.\n *\n * @class TimelineChangeController\n * @extends videojs.EventTarget\n */\n\nclass TimelineChangeController extends videojs.EventTarget {\n  constructor() {\n    super();\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n  }\n  clearPendingTimelineChange(type) {\n    this.pendingTimelineChanges_[type] = null;\n    this.trigger('pendingtimelinechange');\n  }\n  pendingTimelineChange({\n    type,\n    from,\n    to\n  }) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.pendingTimelineChanges_[type] = {\n        type,\n        from,\n        to\n      };\n      this.trigger('pendingtimelinechange');\n    }\n    return this.pendingTimelineChanges_[type];\n  }\n  lastTimelineChange({\n    type,\n    from,\n    to\n  }) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.lastTimelineChanges_[type] = {\n        type,\n        from,\n        to\n      };\n      delete this.pendingTimelineChanges_[type];\n      const metadata = {\n        timelineChangeInfo: {\n          from,\n          to\n        }\n      };\n      this.trigger({\n        type: 'timelinechange',\n        metadata\n      });\n    }\n    return this.lastTimelineChanges_[type];\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n    this.off();\n  }\n}\n\n/* rollup-plugin-worker-factory start for worker!/home/runner/work/http-streaming/http-streaming/src/decrypter-worker.js */\nconst workerCode = transform(getWorkerString(function () {\n  /**\n   * @file stream.js\n   */\n\n  /**\n   * A lightweight readable stream implemention that handles event dispatching.\n   *\n   * @class Stream\n   */\n\n  var Stream = /*#__PURE__*/function () {\n    function Stream() {\n      this.listeners = {};\n    }\n    /**\n     * Add a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n    var _proto = Stream.prototype;\n    _proto.on = function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n      this.listeners[type].push(listener);\n    }\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {boolean} if we could turn it off or not\n     */;\n    _proto.off = function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n      var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n      // In Video.js we slice listener functions\n      // on trigger so that it does not mess up the order\n      // while we loop through.\n      //\n      // Here we slice on off so that the loop in trigger\n      // can continue using it's old reference to loop without\n      // messing up the order.\n\n      this.listeners[type] = this.listeners[type].slice(0);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {string} type the event name\n     */;\n    _proto.trigger = function trigger(type) {\n      var callbacks = this.listeners[type];\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n      if (arguments.length === 2) {\n        var length = callbacks.length;\n        for (var i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var _length = callbacks.length;\n        for (var _i = 0; _i < _length; ++_i) {\n          callbacks[_i].apply(this, args);\n        }\n      }\n    }\n    /**\n     * Destroys the stream and cleans up.\n     */;\n    _proto.dispose = function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */;\n    _proto.pipe = function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    };\n    return Stream;\n  }();\n  /*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */\n\n  /**\n   * Returns the subarray of a Uint8Array without PKCS#7 padding.\n   *\n   * @param padded {Uint8Array} unencrypted bytes that have been padded\n   * @return {Uint8Array} the unpadded bytes\n   * @see http://tools.ietf.org/html/rfc5652\n   */\n\n  function unpad(padded) {\n    return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n  }\n  /*! @name aes-decrypter @version 4.0.2 @license Apache-2.0 */\n\n  /**\n   * @file aes.js\n   *\n   * This file contains an adaptation of the AES decryption algorithm\n   * from the Standford Javascript Cryptography Library. That work is\n   * covered by the following copyright and permissions notice:\n   *\n   * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are\n   * met:\n   *\n   * 1. Redistributions of source code must retain the above copyright\n   *    notice, this list of conditions and the following disclaimer.\n   *\n   * 2. Redistributions in binary form must reproduce the above\n   *    copyright notice, this list of conditions and the following\n   *    disclaimer in the documentation and/or other materials provided\n   *    with the distribution.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n   * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n   * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n   * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n   * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n   * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n   * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n   * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   *\n   * The views and conclusions contained in the software and documentation\n   * are those of the authors and should not be interpreted as representing\n   * official policies, either expressed or implied, of the authors.\n   */\n\n  /**\n   * Expand the S-box tables.\n   *\n   * @private\n   */\n\n  const precompute = function () {\n    const tables = [[[], [], [], [], []], [[], [], [], [], []]];\n    const encTable = tables[0];\n    const decTable = tables[1];\n    const sbox = encTable[4];\n    const sboxInv = decTable[4];\n    let i;\n    let x;\n    let xInv;\n    const d = [];\n    const th = [];\n    let x2;\n    let x4;\n    let x8;\n    let s;\n    let tEnc;\n    let tDec; // Compute double and third tables\n\n    for (i = 0; i < 256; i++) {\n      th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n    }\n    for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n      // Compute sbox\n      s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n      s = s >> 8 ^ s & 255 ^ 99;\n      sbox[x] = s;\n      sboxInv[s] = x; // Compute MixColumns\n\n      x8 = d[x4 = d[x2 = d[x]]];\n      tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n      tEnc = d[s] * 0x101 ^ s * 0x1010100;\n      for (i = 0; i < 4; i++) {\n        encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n      }\n    } // Compactify. Considerable speedup on Firefox.\n\n    for (i = 0; i < 5; i++) {\n      encTable[i] = encTable[i].slice(0);\n      decTable[i] = decTable[i].slice(0);\n    }\n    return tables;\n  };\n  let aesTables = null;\n  /**\n   * Schedule out an AES key for both encryption and decryption. This\n   * is a low-level class. Use a cipher mode to do bulk encryption.\n   *\n   * @class AES\n   * @param key {Array} The key as an array of 4, 6 or 8 words.\n   */\n\n  class AES {\n    constructor(key) {\n      /**\n      * The expanded S-box and inverse S-box tables. These will be computed\n      * on the client so that we don't have to send them down the wire.\n      *\n      * There are two tables, _tables[0] is for encryption and\n      * _tables[1] is for decryption.\n      *\n      * The first 4 sub-tables are the expanded S-box with MixColumns. The\n      * last (_tables[01][4]) is the S-box itself.\n      *\n      * @private\n      */\n      // if we have yet to precompute the S-box tables\n      // do so now\n      if (!aesTables) {\n        aesTables = precompute();\n      } // then make a copy of that object for use\n\n      this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n      let i;\n      let j;\n      let tmp;\n      const sbox = this._tables[0][4];\n      const decTable = this._tables[1];\n      const keyLen = key.length;\n      let rcon = 1;\n      if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n        throw new Error('Invalid aes key size');\n      }\n      const encKey = key.slice(0);\n      const decKey = [];\n      this._key = [encKey, decKey]; // schedule encryption keys\n\n      for (i = keyLen; i < 4 * keyLen + 28; i++) {\n        tmp = encKey[i - 1]; // apply sbox\n\n        if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n          tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n          if (i % keyLen === 0) {\n            tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n            rcon = rcon << 1 ^ (rcon >> 7) * 283;\n          }\n        }\n        encKey[i] = encKey[i - keyLen] ^ tmp;\n      } // schedule decryption keys\n\n      for (j = 0; i; j++, i--) {\n        tmp = encKey[j & 3 ? i : i - 4];\n        if (i <= 4 || j < 4) {\n          decKey[j] = tmp;\n        } else {\n          decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n        }\n      }\n    }\n    /**\n     * Decrypt 16 bytes, specified as four 32-bit words.\n     *\n     * @param {number} encrypted0 the first word to decrypt\n     * @param {number} encrypted1 the second word to decrypt\n     * @param {number} encrypted2 the third word to decrypt\n     * @param {number} encrypted3 the fourth word to decrypt\n     * @param {Int32Array} out the array to write the decrypted words\n     * into\n     * @param {number} offset the offset into the output array to start\n     * writing results\n     * @return {Array} The plaintext.\n     */\n\n    decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n      const key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n      let a = encrypted0 ^ key[0];\n      let b = encrypted3 ^ key[1];\n      let c = encrypted2 ^ key[2];\n      let d = encrypted1 ^ key[3];\n      let a2;\n      let b2;\n      let c2; // key.length === 2 ?\n\n      const nInnerRounds = key.length / 4 - 2;\n      let i;\n      let kIndex = 4;\n      const table = this._tables[1]; // load up the tables\n\n      const table0 = table[0];\n      const table1 = table[1];\n      const table2 = table[2];\n      const table3 = table[3];\n      const sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n      for (i = 0; i < nInnerRounds; i++) {\n        a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n        b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n        c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n        d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n        kIndex += 4;\n        a = a2;\n        b = b2;\n        c = c2;\n      } // Last round.\n\n      for (i = 0; i < 4; i++) {\n        out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n        a2 = a;\n        a = b;\n        b = c;\n        c = d;\n        d = a2;\n      }\n    }\n  }\n  /**\n   * @file async-stream.js\n   */\n\n  /**\n   * A wrapper around the Stream class to use setTimeout\n   * and run stream \"jobs\" Asynchronously\n   *\n   * @class AsyncStream\n   * @extends Stream\n   */\n\n  class AsyncStream extends Stream {\n    constructor() {\n      super(Stream);\n      this.jobs = [];\n      this.delay = 1;\n      this.timeout_ = null;\n    }\n    /**\n     * process an async job\n     *\n     * @private\n     */\n\n    processJob_() {\n      this.jobs.shift()();\n      if (this.jobs.length) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      } else {\n        this.timeout_ = null;\n      }\n    }\n    /**\n     * push a job into the stream\n     *\n     * @param {Function} job the job to push into the stream\n     */\n\n    push(job) {\n      this.jobs.push(job);\n      if (!this.timeout_) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      }\n    }\n  }\n  /**\n   * @file decrypter.js\n   *\n   * An asynchronous implementation of AES-128 CBC decryption with\n   * PKCS#7 padding.\n   */\n\n  /**\n   * Convert network-order (big-endian) bytes into their little-endian\n   * representation.\n   */\n\n  const ntoh = function (word) {\n    return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n  };\n  /**\n   * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * use for the first round of CBC.\n   * @return {Uint8Array} the decrypted bytes\n   *\n   * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n   * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n   * @see https://tools.ietf.org/html/rfc2315\n   */\n\n  const decrypt = function (encrypted, key, initVector) {\n    // word-level access to the encrypted bytes\n    const encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n    const decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n    const decrypted = new Uint8Array(encrypted.byteLength);\n    const decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n    // decrypted data\n\n    let init0;\n    let init1;\n    let init2;\n    let init3;\n    let encrypted0;\n    let encrypted1;\n    let encrypted2;\n    let encrypted3; // iteration variable\n\n    let wordIx; // pull out the words of the IV to ensure we don't modify the\n    // passed-in reference and easier access\n\n    init0 = initVector[0];\n    init1 = initVector[1];\n    init2 = initVector[2];\n    init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n    // to each decrypted block\n\n    for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n      // convert big-endian (network order) words into little-endian\n      // (javascript order)\n      encrypted0 = ntoh(encrypted32[wordIx]);\n      encrypted1 = ntoh(encrypted32[wordIx + 1]);\n      encrypted2 = ntoh(encrypted32[wordIx + 2]);\n      encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n      decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n      // plaintext\n\n      decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n      decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n      decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n      decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n      init0 = encrypted0;\n      init1 = encrypted1;\n      init2 = encrypted2;\n      init3 = encrypted3;\n    }\n    return decrypted;\n  };\n  /**\n   * The `Decrypter` class that manages decryption of AES\n   * data through `AsyncStream` objects and the `decrypt`\n   * function\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * @param {Function} done the function to run when done\n   * @class Decrypter\n   */\n\n  class Decrypter {\n    constructor(encrypted, key, initVector, done) {\n      const step = Decrypter.STEP;\n      const encrypted32 = new Int32Array(encrypted.buffer);\n      const decrypted = new Uint8Array(encrypted.byteLength);\n      let i = 0;\n      this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      for (i = step; i < encrypted32.length; i += step) {\n        initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      } // invoke the done() callback when everything is finished\n\n      this.asyncStream_.push(function () {\n        // remove pkcs#7 padding from the decrypted bytes\n        done(null, unpad(decrypted));\n      });\n    }\n    /**\n     * a getter for step the maximum number of bytes to process at one time\n     *\n     * @return {number} the value of step 32000\n     */\n\n    static get STEP() {\n      // 4 * 8000;\n      return 32000;\n    }\n    /**\n     * @private\n     */\n\n    decryptChunk_(encrypted, key, initVector, decrypted) {\n      return function () {\n        const bytes = decrypt(encrypted, key, initVector);\n        decrypted.set(bytes, encrypted.byteOffset);\n      };\n    }\n  }\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n  var isArrayBufferView = function isArrayBufferView(obj) {\n    if (ArrayBuffer.isView === 'function') {\n      return ArrayBuffer.isView(obj);\n    }\n    return obj && obj.buffer instanceof ArrayBuffer;\n  };\n  var BigInt = window_1.BigInt || Number;\n  [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n  (function () {\n    var a = new Uint16Array([0xFFCC]);\n    var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    if (b[0] === 0xFF) {\n      return 'big';\n    }\n    if (b[0] === 0xCC) {\n      return 'little';\n    }\n    return 'unknown';\n  })();\n  /**\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n   *\n   * @param {Object} message\n   *        Object of properties and values to send to the web worker\n   * @return {Object}\n   *         Modified message with TypedArray values expanded\n   * @function createTransferableMessage\n   */\n\n  const createTransferableMessage = function (message) {\n    const transferable = {};\n    Object.keys(message).forEach(key => {\n      const value = message[key];\n      if (isArrayBufferView(value)) {\n        transferable[key] = {\n          bytes: value.buffer,\n          byteOffset: value.byteOffset,\n          byteLength: value.byteLength\n        };\n      } else {\n        transferable[key] = value;\n      }\n    });\n    return transferable;\n  };\n  /* global self */\n\n  /**\n   * Our web worker interface so that things can talk to aes-decrypter\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   */\n\n  self.onmessage = function (event) {\n    const data = event.data;\n    const encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n    const key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n    const iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n    /* eslint-disable no-new, handle-callback-err */\n\n    new Decrypter(encrypted, key, iv, function (err, bytes) {\n      self.postMessage(createTransferableMessage({\n        source: data.source,\n        decrypted: bytes\n      }), [bytes.buffer]);\n    });\n    /* eslint-enable */\n  };\n}));\nvar Decrypter = factory(workerCode);\n/* rollup-plugin-worker-factory end for worker!/home/runner/work/http-streaming/http-streaming/src/decrypter-worker.js */\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nconst audioTrackKind_ = properties => {\n  let kind = properties.default ? 'main' : 'alternative';\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\nconst stopLoaders = (segmentLoader, mediaType) => {\n  segmentLoader.abort();\n  segmentLoader.pause();\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\nconst startLoaders = (playlistLoader, mediaType) => {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\nconst onGroupChanged = (type, settings) => () => {\n  const {\n    segmentLoaders: {\n      [type]: segmentLoader,\n      main: mainSegmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  const activeTrack = mediaType.activeTrack();\n  const activeGroup = mediaType.getActiveGroup();\n  const previousActiveLoader = mediaType.activePlaylistLoader;\n  const lastGroup = mediaType.lastGroup_; // the group did not change do nothing\n\n  if (activeGroup && lastGroup && activeGroup.id === lastGroup.id) {\n    return;\n  }\n  mediaType.lastGroup_ = activeGroup;\n  mediaType.lastTrack_ = activeTrack;\n  stopLoaders(segmentLoader, mediaType);\n  if (!activeGroup || activeGroup.isMainPlaylist) {\n    // there is no group active or active group is a main playlist and won't change\n    return;\n  }\n  if (!activeGroup.playlistLoader) {\n    if (previousActiveLoader) {\n      // The previous group had a playlist loader but the new active group does not\n      // this means we are switching from demuxed to muxed audio. In this case we want to\n      // do a destructive reset of the main segment loader and not restart the audio\n      // loaders.\n      mainSegmentLoader.resetEverything();\n    }\n    return;\n  } // Non-destructive resync\n\n  segmentLoader.resyncLoader();\n  startLoaders(activeGroup.playlistLoader, mediaType);\n};\nconst onGroupChanging = (type, settings) => () => {\n  const {\n    segmentLoaders: {\n      [type]: segmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  mediaType.lastGroup_ = null;\n  segmentLoader.abort();\n  segmentLoader.pause();\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\nconst onTrackChanged = (type, settings) => () => {\n  const {\n    mainPlaylistLoader,\n    segmentLoaders: {\n      [type]: segmentLoader,\n      main: mainSegmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  const activeTrack = mediaType.activeTrack();\n  const activeGroup = mediaType.getActiveGroup();\n  const previousActiveLoader = mediaType.activePlaylistLoader;\n  const lastTrack = mediaType.lastTrack_; // track did not change, do nothing\n\n  if (lastTrack && activeTrack && lastTrack.id === activeTrack.id) {\n    return;\n  }\n  mediaType.lastGroup_ = activeGroup;\n  mediaType.lastTrack_ = activeTrack;\n  stopLoaders(segmentLoader, mediaType);\n  if (!activeGroup) {\n    // there is no group active so we do not want to restart loaders\n    return;\n  }\n  if (activeGroup.isMainPlaylist) {\n    // track did not change, do nothing\n    if (!activeTrack || !lastTrack || activeTrack.id === lastTrack.id) {\n      return;\n    }\n    const pc = settings.vhs.playlistController_;\n    const newPlaylist = pc.selectPlaylist(); // media will not change do nothing\n\n    if (pc.media() === newPlaylist) {\n      return;\n    }\n    mediaType.logger_(`track change. Switching main audio from ${lastTrack.id} to ${activeTrack.id}`);\n    mainPlaylistLoader.pause();\n    mainSegmentLoader.resetEverything();\n    pc.fastQualityChange_(newPlaylist);\n    return;\n  }\n  if (type === 'AUDIO') {\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no\n      // playlist loader for the audio group), we want to do a destructive reset of the\n      // main segment loader and not restart the audio loaders\n      mainSegmentLoader.setAudio(true); // don't have to worry about disabling the audio of the audio segment loader since\n      // it should be stopped\n\n      mainSegmentLoader.resetEverything();\n      return;\n    } // although the segment loader is an audio segment loader, call the setAudio\n    // function to ensure it is prepared to re-append the init segment (or handle other\n    // config changes)\n\n    segmentLoader.setAudio(true);\n    mainSegmentLoader.setAudio(false);\n  }\n  if (previousActiveLoader === activeGroup.playlistLoader) {\n    // Nothing has actually changed. This can happen because track change events can fire\n    // multiple times for a \"single\" change. One for enabling the new active track, and\n    // one for disabling the track that was active\n    startLoaders(activeGroup.playlistLoader, mediaType);\n    return;\n  }\n  if (segmentLoader.track) {\n    // For WebVTT, set the new text track in the segmentloader\n    segmentLoader.track(activeTrack);\n  } // destructive reset\n\n  segmentLoader.resetEverything();\n  startLoaders(activeGroup.playlistLoader, mediaType);\n};\nconst onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is excluded) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: mediaType\n      },\n      excludePlaylist\n    } = settings; // switch back to default audio track\n\n    const activeTrack = mediaType.activeTrack();\n    const activeGroup = mediaType.activeGroup();\n    const id = (activeGroup.filter(group => group.default)[0] || activeGroup[0]).id;\n    const defaultTrack = mediaType.tracks[id];\n    if (activeTrack === defaultTrack) {\n      // Default track encountered an error. All we can do now is exclude the current\n      // rendition and hope another will switch audio groups\n      excludePlaylist({\n        error: {\n          message: 'Problem encountered loading the default audio track.'\n        }\n      });\n      return;\n    }\n    videojs.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n    for (const trackId in mediaType.tracks) {\n      mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n    }\n    mediaType.onTrackChanged();\n  },\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    videojs.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n    const track = mediaType.activeTrack();\n    if (track) {\n      track.mode = 'disabled';\n    }\n    mediaType.onTrackChanged();\n  }\n};\nconst setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: (type, playlistLoader, settings) => {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n    const {\n      tech,\n      requestOptions,\n      segmentLoaders: {\n        [type]: segmentLoader\n      }\n    } = settings;\n    playlistLoader.on('loadedmetadata', () => {\n      const media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', () => {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: (type, playlistLoader, settings) => {\n    const {\n      tech,\n      requestOptions,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    playlistLoader.on('loadedmetadata', () => {\n      const media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', () => {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nconst initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': (type, settings) => {\n    const {\n      vhs,\n      sourceType,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      requestOptions,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks,\n          logger_\n        }\n      },\n      mainPlaylistLoader\n    } = settings;\n    const audioOnlyMain = isAudioOnly(mainPlaylistLoader.main); // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          default: {\n            default: true\n          }\n        }\n      };\n      if (audioOnlyMain) {\n        mediaGroups[type].main.default.playlists = mainPlaylistLoader.main.playlists;\n      }\n    }\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        let properties = mediaGroups[type][groupId][variantLabel];\n        let playlistLoader;\n        if (audioOnlyMain) {\n          logger_(`AUDIO group '${groupId}' label '${variantLabel}' is a main playlist`);\n          properties.isMainPlaylist = true;\n          playlistLoader = null; // if vhs-json was provided as the source, and the media playlist was resolved,\n          // use the resolved media playlist object\n        } else if (sourceType === 'vhs-json' && properties.playlists) {\n          playlistLoader = new PlaylistLoader(properties.playlists[0], vhs, requestOptions);\n        } else if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions); // TODO: dash isn't the only type with properties.playlists\n          // should we even have properties.playlists in this check.\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n        properties = merge({\n          id: variantLabel,\n          playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = new videojs.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': (type, settings) => {\n    const {\n      tech,\n      vhs,\n      sourceType,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      requestOptions,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks\n        }\n      },\n      mainPlaylistLoader\n    } = settings;\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        if (!vhs.options_.useForcedSubtitles && mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n        let properties = mediaGroups[type][groupId][variantLabel];\n        let playlistLoader;\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions);\n        } else if (sourceType === 'dash') {\n          const playlists = properties.playlists.filter(p => p.excludeUntil !== Infinity);\n          if (!playlists.length) {\n            return;\n          }\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n        } else if (sourceType === 'vhs-json') {\n          playlistLoader = new PlaylistLoader(\n          // if the vhs-json object included the media playlist, use the media playlist\n          // as provided, otherwise use the resolved URI to load the playlist\n          properties.playlists ? properties.playlists[0] : properties.resolvedUri, vhs, requestOptions);\n        }\n        properties = merge({\n          id: variantLabel,\n          playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': (type, settings) => {\n    const {\n      tech,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks\n        }\n      }\n    } = settings;\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        const properties = mediaGroups[type][groupId][variantLabel]; // Look for either 608 (CCn) or 708 (SERVICEn) caption services\n\n        if (!/^(?:CC|SERVICE)/.test(properties.instreamId)) {\n          continue;\n        }\n        const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n        let newProps = {\n          label: variantLabel,\n          language: properties.language,\n          instreamId: properties.instreamId,\n          default: properties.default && properties.autoselect\n        };\n        if (captionServices[newProps.instreamId]) {\n          newProps = merge(newProps, captionServices[newProps.instreamId]);\n        }\n        if (newProps.default === undefined) {\n          delete newProps.default;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n        groups[groupId].push(merge({\n          id: variantLabel\n        }, properties));\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = tech.addRemoteTextTrack({\n            id: newProps.instreamId,\n            kind: 'captions',\n            default: newProps.default,\n            language: newProps.language,\n            label: newProps.label\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\nconst groupMatch = (list, media) => {\n  for (let i = 0; i < list.length; i++) {\n    if (playlistMatch(media, list[i])) {\n      return true;\n    }\n    if (list[i].playlists && groupMatch(list[i].playlists, media)) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nconst activeGroup = (type, settings) => track => {\n  const {\n    mainPlaylistLoader,\n    mediaTypes: {\n      [type]: {\n        groups\n      }\n    }\n  } = settings;\n  const media = mainPlaylistLoader.media();\n  if (!media) {\n    return null;\n  }\n  let variants = null; // set to variants to main media active group\n\n  if (media.attributes[type]) {\n    variants = groups[media.attributes[type]];\n  }\n  const groupKeys = Object.keys(groups);\n  if (!variants) {\n    // find the mainPlaylistLoader media\n    // that is in a media group if we are dealing\n    // with audio only\n    if (type === 'AUDIO' && groupKeys.length > 1 && isAudioOnly(settings.main)) {\n      for (let i = 0; i < groupKeys.length; i++) {\n        const groupPropertyList = groups[groupKeys[i]];\n        if (groupMatch(groupPropertyList, media)) {\n          variants = groupPropertyList;\n          break;\n        }\n      } // use the main group if it exists\n    } else if (groups.main) {\n      variants = groups.main; // only one group, use that one\n    } else if (groupKeys.length === 1) {\n      variants = groups[groupKeys[0]];\n    }\n  }\n  if (typeof track === 'undefined') {\n    return variants;\n  }\n  if (track === null || !variants) {\n    // An active track was specified so a corresponding group is expected. track === null\n    // means no track is currently active so there is no corresponding group\n    return null;\n  }\n  return variants.filter(props => props.id === track.id)[0] || null;\n};\nconst activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: {\n          tracks\n        }\n      }\n    } = settings;\n    for (const id in tracks) {\n      if (tracks[id].enabled) {\n        return tracks[id];\n      }\n    }\n    return null;\n  },\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: {\n          tracks\n        }\n      }\n    } = settings;\n    for (const id in tracks) {\n      if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n        return tracks[id];\n      }\n    }\n    return null;\n  }\n};\nconst getActiveGroup = (type, {\n  mediaTypes\n}) => () => {\n  const activeTrack_ = mediaTypes[type].activeTrack();\n  if (!activeTrack_) {\n    return null;\n  }\n  return mediaTypes[type].activeGroup(activeTrack_);\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the main manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.mainPlaylistLoader\n *        PlaylistLoader for the main source\n * @param {VhsHandler} settings.vhs\n *        VHS SourceHandler\n * @param {Object} settings.main\n *        The parsed main manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.excludePlaylist\n *        Excludes the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nconst setupMediaGroups = settings => {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n    initialize[type](type, settings);\n  });\n  const {\n    mediaTypes,\n    mainPlaylistLoader,\n    tech,\n    vhs,\n    segmentLoaders: {\n      ['AUDIO']: audioSegmentLoader,\n      main: mainSegmentLoader\n    }\n  } = settings; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(type => {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onGroupChanging = onGroupChanging(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n    mediaTypes[type].getActiveGroup = getActiveGroup(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  const audioGroup = mediaTypes.AUDIO.activeGroup();\n  if (audioGroup) {\n    const groupId = (audioGroup.filter(group => group.default)[0] || audioGroup[0]).id;\n    mediaTypes.AUDIO.tracks[groupId].enabled = true;\n    mediaTypes.AUDIO.onGroupChanged();\n    mediaTypes.AUDIO.onTrackChanged();\n    const activeAudioGroup = mediaTypes.AUDIO.getActiveGroup(); // a similar check for handling setAudio on each loader is run again each time the\n    // track is changed, but needs to be handled here since the track may not be considered\n    // changed on the first call to onTrackChanged\n\n    if (!activeAudioGroup.playlistLoader) {\n      // either audio is muxed with video or the stream is audio only\n      mainSegmentLoader.setAudio(true);\n    } else {\n      // audio is demuxed\n      mainSegmentLoader.setAudio(false);\n      audioSegmentLoader.setAudio(true);\n    }\n  }\n  mainPlaylistLoader.on('mediachange', () => {\n    ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanged());\n  });\n  mainPlaylistLoader.on('mediachanging', () => {\n    ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanging());\n  }); // custom audio track change event handler for usage event\n\n  const onAudioTrackChanged = () => {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-audio-change'\n    });\n  };\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  vhs.on('dispose', () => {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n  for (const id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\nconst createMediaTypes = () => {\n  const mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      getActiveGroup: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop,\n      lastTrack_: null,\n      logger_: logger(`MediaGroups[${type}]`)\n    };\n  });\n  return mediaTypes;\n};\n\n/**\n * A utility class for setting properties and maintaining the state of the content steering manifest.\n *\n * Content Steering manifest format:\n * VERSION: number (required) currently only version 1 is supported.\n * TTL: number in seconds (optional) until the next content steering manifest reload.\n * RELOAD-URI: string (optional) uri to fetch the next content steering manifest.\n * SERVICE-LOCATION-PRIORITY or PATHWAY-PRIORITY a non empty array of unique string values.\n * PATHWAY-CLONES: array (optional) (HLS only) pathway clone objects to copy from other playlists.\n */\n\nclass SteeringManifest {\n  constructor() {\n    this.priority_ = [];\n    this.pathwayClones_ = new Map();\n  }\n  set version(number) {\n    // Only version 1 is currently supported for both DASH and HLS.\n    if (number === 1) {\n      this.version_ = number;\n    }\n  }\n  set ttl(seconds) {\n    // TTL = time-to-live, default = 300 seconds.\n    this.ttl_ = seconds || 300;\n  }\n  set reloadUri(uri) {\n    if (uri) {\n      // reload URI can be relative to the previous reloadUri.\n      this.reloadUri_ = resolveUrl(this.reloadUri_, uri);\n    }\n  }\n  set priority(array) {\n    // priority must be non-empty and unique values.\n    if (array && array.length) {\n      this.priority_ = array;\n    }\n  }\n  set pathwayClones(array) {\n    // pathwayClones must be non-empty.\n    if (array && array.length) {\n      this.pathwayClones_ = new Map(array.map(clone => [clone.ID, clone]));\n    }\n  }\n  get version() {\n    return this.version_;\n  }\n  get ttl() {\n    return this.ttl_;\n  }\n  get reloadUri() {\n    return this.reloadUri_;\n  }\n  get priority() {\n    return this.priority_;\n  }\n  get pathwayClones() {\n    return this.pathwayClones_;\n  }\n}\n/**\n * This class represents a content steering manifest and associated state. See both HLS and DASH specifications.\n * HLS: https://developer.apple.com/streaming/HLSContentSteeringSpecification.pdf and\n * https://datatracker.ietf.org/doc/draft-pantos-hls-rfc8216bis/ section 4.4.6.6.\n * DASH: https://dashif.org/docs/DASH-IF-CTS-00XX-Content-Steering-Community-Review.pdf\n *\n * @param {function} xhr for making a network request from the browser.\n * @param {function} bandwidth for fetching the current bandwidth from the main segment loader.\n */\n\nclass ContentSteeringController extends videojs.EventTarget {\n  constructor(xhr, bandwidth) {\n    super();\n    this.currentPathway = null;\n    this.defaultPathway = null;\n    this.queryBeforeStart = false;\n    this.availablePathways_ = new Set();\n    this.steeringManifest = new SteeringManifest();\n    this.proxyServerUrl_ = null;\n    this.manifestType_ = null;\n    this.ttlTimeout_ = null;\n    this.request_ = null;\n    this.currentPathwayClones = new Map();\n    this.nextPathwayClones = new Map();\n    this.excludedSteeringManifestURLs = new Set();\n    this.logger_ = logger('Content Steering');\n    this.xhr_ = xhr;\n    this.getBandwidth_ = bandwidth;\n  }\n  /**\n   * Assigns the content steering tag properties to the steering controller\n   *\n   * @param {string} baseUrl the baseURL from the main manifest for resolving the steering manifest url\n   * @param {Object} steeringTag the content steering tag from the main manifest\n   */\n\n  assignTagProperties(baseUrl, steeringTag) {\n    this.manifestType_ = steeringTag.serverUri ? 'HLS' : 'DASH'; // serverUri is HLS serverURL is DASH\n\n    const steeringUri = steeringTag.serverUri || steeringTag.serverURL;\n    if (!steeringUri) {\n      this.logger_(`steering manifest URL is ${steeringUri}, cannot request steering manifest.`);\n      this.trigger('error');\n      return;\n    } // Content steering manifests can be encoded as a data URI. We can decode, parse and return early if that's the case.\n\n    if (steeringUri.startsWith('data:')) {\n      this.decodeDataUriManifest_(steeringUri.substring(steeringUri.indexOf(',') + 1));\n      return;\n    } // reloadUri is the resolution of the main manifest URL and steering URL.\n\n    this.steeringManifest.reloadUri = resolveUrl(baseUrl, steeringUri); // pathwayId is HLS defaultServiceLocation is DASH\n\n    this.defaultPathway = steeringTag.pathwayId || steeringTag.defaultServiceLocation; // currently only DASH supports the following properties on <ContentSteering> tags.\n\n    this.queryBeforeStart = steeringTag.queryBeforeStart;\n    this.proxyServerUrl_ = steeringTag.proxyServerURL; // trigger a steering event if we have a pathway from the content steering tag.\n    // this tells VHS which segment pathway to start with.\n    // If queryBeforeStart is true we need to wait for the steering manifest response.\n\n    if (this.defaultPathway && !this.queryBeforeStart) {\n      this.trigger('content-steering');\n    }\n  }\n  /**\n   * Requests the content steering manifest and parse the response. This should only be called after\n   * assignTagProperties was called with a content steering tag.\n   *\n   * @param {string} initialUri The optional uri to make the request with.\n   *    If set, the request should be made with exactly what is passed in this variable.\n   *    This scenario should only happen once on initalization.\n   */\n\n  requestSteeringManifest(initial) {\n    const reloadUri = this.steeringManifest.reloadUri;\n    if (!reloadUri) {\n      return;\n    } // We currently don't support passing MPD query parameters directly to the content steering URL as this requires\n    // ExtUrlQueryInfo tag support. See the DASH content steering spec section 8.1.\n    // This request URI accounts for manifest URIs that have been excluded.\n\n    const uri = initial ? reloadUri : this.getRequestURI(reloadUri); // If there are no valid manifest URIs, we should stop content steering.\n\n    if (!uri) {\n      this.logger_('No valid content steering manifest URIs. Stopping content steering.');\n      this.trigger('error');\n      this.dispose();\n      return;\n    }\n    const metadata = {\n      contentSteeringInfo: {\n        uri\n      }\n    };\n    this.trigger({\n      type: 'contentsteeringloadstart',\n      metadata\n    });\n    this.request_ = this.xhr_({\n      uri,\n      requestType: 'content-steering-manifest'\n    }, (error, errorInfo) => {\n      if (error) {\n        // If the client receives HTTP 410 Gone in response to a manifest request,\n        // it MUST NOT issue another request for that URI for the remainder of the\n        // playback session. It MAY continue to use the most-recently obtained set\n        // of Pathways.\n        if (errorInfo.status === 410) {\n          this.logger_(`manifest request 410 ${error}.`);\n          this.logger_(`There will be no more content steering requests to ${uri} this session.`);\n          this.excludedSteeringManifestURLs.add(uri);\n          return;\n        } // If the client receives HTTP 429 Too Many Requests with a Retry-After\n        // header in response to a manifest request, it SHOULD wait until the time\n        // specified by the Retry-After header to reissue the request.\n\n        if (errorInfo.status === 429) {\n          const retrySeconds = errorInfo.responseHeaders['retry-after'];\n          this.logger_(`manifest request 429 ${error}.`);\n          this.logger_(`content steering will retry in ${retrySeconds} seconds.`);\n          this.startTTLTimeout_(parseInt(retrySeconds, 10));\n          return;\n        } // If the Steering Manifest cannot be loaded and parsed correctly, the\n        // client SHOULD continue to use the previous values and attempt to reload\n        // it after waiting for the previously-specified TTL (or 5 minutes if\n        // none).\n\n        this.logger_(`manifest failed to load ${error}.`);\n        this.startTTLTimeout_();\n        return;\n      }\n      this.trigger({\n        type: 'contentsteeringloadcomplete',\n        metadata\n      });\n      let steeringManifestJson;\n      try {\n        steeringManifestJson = JSON.parse(this.request_.responseText);\n      } catch (parseError) {\n        const errorMetadata = {\n          errorType: videojs.Error.StreamingContentSteeringParserError,\n          error: parseError\n        };\n        this.trigger({\n          type: 'error',\n          metadata: errorMetadata\n        });\n      }\n      this.assignSteeringProperties_(steeringManifestJson);\n      const parsedMetadata = {\n        contentSteeringInfo: metadata.contentSteeringInfo,\n        contentSteeringManifest: {\n          version: this.steeringManifest.version,\n          reloadUri: this.steeringManifest.reloadUri,\n          priority: this.steeringManifest.priority\n        }\n      };\n      this.trigger({\n        type: 'contentsteeringparsed',\n        metadata: parsedMetadata\n      });\n      this.startTTLTimeout_();\n    });\n  }\n  /**\n   * Set the proxy server URL and add the steering manifest url as a URI encoded parameter.\n   *\n   * @param {string} steeringUrl the steering manifest url\n   * @return the steering manifest url to a proxy server with all parameters set\n   */\n\n  setProxyServerUrl_(steeringUrl) {\n    const steeringUrlObject = new window$1.URL(steeringUrl);\n    const proxyServerUrlObject = new window$1.URL(this.proxyServerUrl_);\n    proxyServerUrlObject.searchParams.set('url', encodeURI(steeringUrlObject.toString()));\n    return this.setSteeringParams_(proxyServerUrlObject.toString());\n  }\n  /**\n   * Decodes and parses the data uri encoded steering manifest\n   *\n   * @param {string} dataUri the data uri to be decoded and parsed.\n   */\n\n  decodeDataUriManifest_(dataUri) {\n    const steeringManifestJson = JSON.parse(window$1.atob(dataUri));\n    this.assignSteeringProperties_(steeringManifestJson);\n  }\n  /**\n   * Set the HLS or DASH content steering manifest request query parameters. For example:\n   * _HLS_pathway=\"<CURRENT-PATHWAY-ID>\" and _HLS_throughput=<THROUGHPUT>\n   * _DASH_pathway and _DASH_throughput\n   *\n   * @param {string} uri to add content steering server parameters to.\n   * @return a new uri as a string with the added steering query parameters.\n   */\n\n  setSteeringParams_(url) {\n    const urlObject = new window$1.URL(url);\n    const path = this.getPathway();\n    const networkThroughput = this.getBandwidth_();\n    if (path) {\n      const pathwayKey = `_${this.manifestType_}_pathway`;\n      urlObject.searchParams.set(pathwayKey, path);\n    }\n    if (networkThroughput) {\n      const throughputKey = `_${this.manifestType_}_throughput`;\n      urlObject.searchParams.set(throughputKey, networkThroughput);\n    }\n    return urlObject.toString();\n  }\n  /**\n   * Assigns the current steering manifest properties and to the SteeringManifest object\n   *\n   * @param {Object} steeringJson the raw JSON steering manifest\n   */\n\n  assignSteeringProperties_(steeringJson) {\n    this.steeringManifest.version = steeringJson.VERSION;\n    if (!this.steeringManifest.version) {\n      this.logger_(`manifest version is ${steeringJson.VERSION}, which is not supported.`);\n      this.trigger('error');\n      return;\n    }\n    this.steeringManifest.ttl = steeringJson.TTL;\n    this.steeringManifest.reloadUri = steeringJson['RELOAD-URI']; // HLS = PATHWAY-PRIORITY required. DASH = SERVICE-LOCATION-PRIORITY optional\n\n    this.steeringManifest.priority = steeringJson['PATHWAY-PRIORITY'] || steeringJson['SERVICE-LOCATION-PRIORITY']; // Pathway clones to be created/updated in HLS.\n    // See section 7.2 https://datatracker.ietf.org/doc/draft-pantos-hls-rfc8216bis/\n\n    this.steeringManifest.pathwayClones = steeringJson['PATHWAY-CLONES'];\n    this.nextPathwayClones = this.steeringManifest.pathwayClones; // 1. apply first pathway from the array.\n    // 2. if first pathway doesn't exist in manifest, try next pathway.\n    //    a. if all pathways are exhausted, ignore the steering manifest priority.\n    // 3. if segments fail from an established pathway, try all variants/renditions, then exclude the failed pathway.\n    //    a. exclude a pathway for a minimum of the last TTL duration. Meaning, from the next steering response,\n    //       the excluded pathway will be ignored.\n    //       See excludePathway usage in excludePlaylist().\n    // If there are no available pathways, we need to stop content steering.\n\n    if (!this.availablePathways_.size) {\n      this.logger_('There are no available pathways for content steering. Ending content steering.');\n      this.trigger('error');\n      this.dispose();\n    }\n    const chooseNextPathway = pathwaysByPriority => {\n      for (const path of pathwaysByPriority) {\n        if (this.availablePathways_.has(path)) {\n          return path;\n        }\n      } // If no pathway matches, ignore the manifest and choose the first available.\n\n      return [...this.availablePathways_][0];\n    };\n    const nextPathway = chooseNextPathway(this.steeringManifest.priority);\n    if (this.currentPathway !== nextPathway) {\n      this.currentPathway = nextPathway;\n      this.trigger('content-steering');\n    }\n  }\n  /**\n   * Returns the pathway to use for steering decisions\n   *\n   * @return {string} returns the current pathway or the default\n   */\n\n  getPathway() {\n    return this.currentPathway || this.defaultPathway;\n  }\n  /**\n   * Chooses the manifest request URI based on proxy URIs and server URLs.\n   * Also accounts for exclusion on certain manifest URIs.\n   *\n   * @param {string} reloadUri the base uri before parameters\n   *\n   * @return {string} the final URI for the request to the manifest server.\n   */\n\n  getRequestURI(reloadUri) {\n    if (!reloadUri) {\n      return null;\n    }\n    const isExcluded = uri => this.excludedSteeringManifestURLs.has(uri);\n    if (this.proxyServerUrl_) {\n      const proxyURI = this.setProxyServerUrl_(reloadUri);\n      if (!isExcluded(proxyURI)) {\n        return proxyURI;\n      }\n    }\n    const steeringURI = this.setSteeringParams_(reloadUri);\n    if (!isExcluded(steeringURI)) {\n      return steeringURI;\n    } // Return nothing if all valid manifest URIs are excluded.\n\n    return null;\n  }\n  /**\n   * Start the timeout for re-requesting the steering manifest at the TTL interval.\n   *\n   * @param {number} ttl time in seconds of the timeout. Defaults to the\n   *        ttl interval in the steering manifest\n   */\n\n  startTTLTimeout_(ttl = this.steeringManifest.ttl) {\n    // 300 (5 minutes) is the default value.\n    const ttlMS = ttl * 1000;\n    this.ttlTimeout_ = window$1.setTimeout(() => {\n      this.requestSteeringManifest();\n    }, ttlMS);\n  }\n  /**\n   * Clear the TTL timeout if necessary.\n   */\n\n  clearTTLTimeout_() {\n    window$1.clearTimeout(this.ttlTimeout_);\n    this.ttlTimeout_ = null;\n  }\n  /**\n   * aborts any current steering xhr and sets the current request object to null\n   */\n\n  abort() {\n    if (this.request_) {\n      this.request_.abort();\n    }\n    this.request_ = null;\n  }\n  /**\n   * aborts steering requests clears the ttl timeout and resets all properties.\n   */\n\n  dispose() {\n    this.off('content-steering');\n    this.off('error');\n    this.abort();\n    this.clearTTLTimeout_();\n    this.currentPathway = null;\n    this.defaultPathway = null;\n    this.queryBeforeStart = null;\n    this.proxyServerUrl_ = null;\n    this.manifestType_ = null;\n    this.ttlTimeout_ = null;\n    this.request_ = null;\n    this.excludedSteeringManifestURLs = new Set();\n    this.availablePathways_ = new Set();\n    this.steeringManifest = new SteeringManifest();\n  }\n  /**\n   * adds a pathway to the available pathways set\n   *\n   * @param {string} pathway the pathway string to add\n   */\n\n  addAvailablePathway(pathway) {\n    if (pathway) {\n      this.availablePathways_.add(pathway);\n    }\n  }\n  /**\n   * Clears all pathways from the available pathways set\n   */\n\n  clearAvailablePathways() {\n    this.availablePathways_.clear();\n  }\n  /**\n   * Removes a pathway from the available pathways set.\n   */\n\n  excludePathway(pathway) {\n    return this.availablePathways_.delete(pathway);\n  }\n  /**\n   * Checks the refreshed DASH manifest content steering tag for changes.\n   *\n   * @param {string} baseURL new steering tag on DASH manifest refresh\n   * @param {Object} newTag the new tag to check for changes\n   * @return a true or false whether the new tag has different values\n   */\n\n  didDASHTagChange(baseURL, newTag) {\n    return !newTag && this.steeringManifest.reloadUri || newTag && (resolveUrl(baseURL, newTag.serverURL) !== this.steeringManifest.reloadUri || newTag.defaultServiceLocation !== this.defaultPathway || newTag.queryBeforeStart !== this.queryBeforeStart || newTag.proxyServerURL !== this.proxyServerUrl_);\n  }\n  getAvailablePathways() {\n    return this.availablePathways_;\n  }\n}\nconst debounce = (callback, wait) => {\n  let timeoutId = null;\n  return (...args) => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n      callback.apply(null, args);\n    }, wait);\n  };\n};\nconst ABORT_EARLY_EXCLUSION_SECONDS = 10;\nlet Vhs$1; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nconst loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred', 'mediaAppends'];\nconst sumLoaderStat = function (stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\nconst shouldSwitchToMedia = function ({\n  currentPlaylist,\n  buffered,\n  currentTime,\n  nextPlaylist,\n  bufferLowWaterLine,\n  bufferHighWaterLine,\n  duration,\n  bufferBasedABR,\n  log\n}) {\n  // we have no other playlist to switch to\n  if (!nextPlaylist) {\n    videojs.log.warn('We received no playlist to switch to. Please check your stream.');\n    return false;\n  }\n  const sharedLogLine = `allowing switch ${currentPlaylist && currentPlaylist.id || 'null'} -> ${nextPlaylist.id}`;\n  if (!currentPlaylist) {\n    log(`${sharedLogLine} as current playlist is not set`);\n    return true;\n  } // no need to switch if playlist is the same\n\n  if (nextPlaylist.id === currentPlaylist.id) {\n    return false;\n  } // determine if current time is in a buffered range.\n\n  const isBuffered = Boolean(findRange(buffered, currentTime).length); // If the playlist is live, then we want to not take low water line into account.\n  // This is because in LIVE, the player plays 3 segments from the end of the\n  // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n  // in those segments, a viewer will never experience a rendition upswitch.\n\n  if (!currentPlaylist.endList) {\n    // For LLHLS live streams, don't switch renditions before playback has started, as it almost\n    // doubles the time to first playback.\n    if (!isBuffered && typeof currentPlaylist.partTargetDuration === 'number') {\n      log(`not ${sharedLogLine} as current playlist is live llhls, but currentTime isn't in buffered.`);\n      return false;\n    }\n    log(`${sharedLogLine} as current playlist is live`);\n    return true;\n  }\n  const forwardBuffer = timeAheadOf(buffered, currentTime);\n  const maxBufferLowWaterLine = bufferBasedABR ? Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Config.MAX_BUFFER_LOW_WATER_LINE; // For the same reason as LIVE, we ignore the low water line when the VOD\n  // duration is below the max potential low water line\n\n  if (duration < maxBufferLowWaterLine) {\n    log(`${sharedLogLine} as duration < max low water line (${duration} < ${maxBufferLowWaterLine})`);\n    return true;\n  }\n  const nextBandwidth = nextPlaylist.attributes.BANDWIDTH;\n  const currBandwidth = currentPlaylist.attributes.BANDWIDTH; // when switching down, if our buffer is lower than the high water line,\n  // we can switch down\n\n  if (nextBandwidth < currBandwidth && (!bufferBasedABR || forwardBuffer < bufferHighWaterLine)) {\n    let logLine = `${sharedLogLine} as next bandwidth < current bandwidth (${nextBandwidth} < ${currBandwidth})`;\n    if (bufferBasedABR) {\n      logLine += ` and forwardBuffer < bufferHighWaterLine (${forwardBuffer} < ${bufferHighWaterLine})`;\n    }\n    log(logLine);\n    return true;\n  } // and if our buffer is higher than the low water line,\n  // we can switch up\n\n  if ((!bufferBasedABR || nextBandwidth > currBandwidth) && forwardBuffer >= bufferLowWaterLine) {\n    let logLine = `${sharedLogLine} as forwardBuffer >= bufferLowWaterLine (${forwardBuffer} >= ${bufferLowWaterLine})`;\n    if (bufferBasedABR) {\n      logLine += ` and next bandwidth > current bandwidth (${nextBandwidth} > ${currBandwidth})`;\n    }\n    log(logLine);\n    return true;\n  }\n  log(`not ${sharedLogLine} as no switching criteria met`);\n  return false;\n};\n/**\n * the main playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a main playlist and a series of audio playlists\n * if they are available\n *\n * @class PlaylistController\n * @extends videojs.EventTarget\n */\n\nclass PlaylistController extends videojs.EventTarget {\n  constructor(options) {\n    super(); // Adding a slight debounce to avoid duplicate calls during rapid quality changes, for example:\n    // When selecting quality from the quality list,\n    // where we may have multiple bandwidth profiles for the same vertical resolution.\n\n    this.fastQualityChange_ = debounce(this.fastQualityChange_.bind(this), 100);\n    const {\n      src,\n      withCredentials,\n      tech,\n      bandwidth,\n      externVhs,\n      useCueTags,\n      playlistExclusionDuration,\n      enableLowInitialPlaylist,\n      sourceType,\n      cacheEncryptionKeys,\n      bufferBasedABR,\n      leastPixelDiffSelector,\n      captionServices,\n      experimentalUseMMS\n    } = options;\n    if (!src) {\n      throw new Error('A non-empty playlist URL or JSON manifest string is required');\n    }\n    let {\n      maxPlaylistRetries\n    } = options;\n    if (maxPlaylistRetries === null || typeof maxPlaylistRetries === 'undefined') {\n      maxPlaylistRetries = Infinity;\n    }\n    Vhs$1 = externVhs;\n    this.bufferBasedABR = Boolean(bufferBasedABR);\n    this.leastPixelDiffSelector = Boolean(leastPixelDiffSelector);\n    this.withCredentials = withCredentials;\n    this.tech_ = tech;\n    this.vhs_ = tech.vhs;\n    this.player_ = options.player_;\n    this.sourceType_ = sourceType;\n    this.useCueTags_ = useCueTags;\n    this.playlistExclusionDuration = playlistExclusionDuration;\n    this.maxPlaylistRetries = maxPlaylistRetries;\n    this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n    this.usingManagedMediaSource_ = false;\n    if (this.useCueTags_) {\n      this.cueTagsTrack_ = this.tech_.addTextTrack('metadata', 'ad-cues');\n      this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n    this.requestOptions_ = {\n      withCredentials,\n      maxPlaylistRetries,\n      timeout: null\n    };\n    this.on('error', this.pauseLoading);\n    this.mediaTypes_ = createMediaTypes();\n    if (experimentalUseMMS && window$1.ManagedMediaSource) {\n      // Airplay source not yet implemented. Remote playback must be disabled.\n      this.tech_.el_.disableRemotePlayback = true;\n      this.mediaSource = new window$1.ManagedMediaSource();\n      this.usingManagedMediaSource_ = true;\n      videojs.log('Using ManagedMediaSource');\n    } else if (window$1.MediaSource) {\n      this.mediaSource = new window$1.MediaSource();\n    }\n    this.handleDurationChange_ = this.handleDurationChange_.bind(this);\n    this.handleSourceOpen_ = this.handleSourceOpen_.bind(this);\n    this.handleSourceEnded_ = this.handleSourceEnded_.bind(this);\n    this.load = this.load.bind(this);\n    this.pause = this.pause.bind(this);\n    this.mediaSource.addEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.addEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.addEventListener('sourceended', this.handleSourceEnded_);\n    this.mediaSource.addEventListener('startstreaming', this.load);\n    this.mediaSource.addEventListener('endstreaming', this.pause); // we don't have to handle sourceclose since dispose will handle termination of\n    // everything, and the MediaSource should not be detached without a proper disposal\n\n    this.seekable_ = createTimeRanges();\n    this.hasPlayed_ = false;\n    this.syncController_ = new SyncController(options);\n    this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    this.decrypter_ = new Decrypter();\n    this.sourceUpdater_ = new SourceUpdater(this.mediaSource);\n    this.inbandTextTracks_ = {};\n    this.timelineChangeController_ = new TimelineChangeController();\n    this.keyStatusMap_ = new Map();\n    const segmentLoaderSettings = {\n      vhs: this.vhs_,\n      parse708captions: options.parse708captions,\n      useDtsForTimestampOffset: options.useDtsForTimestampOffset,\n      captionServices,\n      mediaSource: this.mediaSource,\n      currentTime: this.tech_.currentTime.bind(this.tech_),\n      seekable: () => this.seekable(),\n      seeking: () => this.tech_.seeking(),\n      duration: () => this.duration(),\n      hasPlayed: () => this.hasPlayed_,\n      goalBufferLength: () => this.goalBufferLength(),\n      bandwidth,\n      syncController: this.syncController_,\n      decrypter: this.decrypter_,\n      sourceType: this.sourceType_,\n      inbandTextTracks: this.inbandTextTracks_,\n      cacheEncryptionKeys,\n      sourceUpdater: this.sourceUpdater_,\n      timelineChangeController: this.timelineChangeController_,\n      exactManifestTimings: options.exactManifestTimings,\n      addMetadataToTextTrack: this.addMetadataToTextTrack.bind(this)\n    }; // The source type check not only determines whether a special DASH playlist loader\n    // should be used, but also covers the case where the provided src is a vhs-json\n    // manifest object (instead of a URL). In the case of vhs-json, the default\n    // PlaylistLoader should be used.\n\n    this.mainPlaylistLoader_ = this.sourceType_ === 'dash' ? new DashPlaylistLoader(src, this.vhs_, merge(this.requestOptions_, {\n      addMetadataToTextTrack: this.addMetadataToTextTrack.bind(this)\n    })) : new PlaylistLoader(src, this.vhs_, merge(this.requestOptions_, {\n      addDateRangesToTextTrack: this.addDateRangesToTextTrack_.bind(this)\n    }));\n    this.setupMainPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n    this.mainSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n      segmentMetadataTrack: this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    this.audioSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    this.subtitleSegmentLoader_ = new VTTSegmentLoader(merge(segmentLoaderSettings, {\n      loaderType: 'vtt',\n      featuresNativeTextTracks: this.tech_.featuresNativeTextTracks,\n      loadVttJs: () => new Promise((resolve, reject) => {\n        function onLoad() {\n          tech.off('vttjserror', onError);\n          resolve();\n        }\n        function onError() {\n          tech.off('vttjsloaded', onLoad);\n          reject();\n        }\n        tech.one('vttjsloaded', onLoad);\n        tech.one('vttjserror', onError); // safe to call multiple times, script will be loaded only once:\n\n        tech.addWebVttScript_();\n      })\n    }), options);\n    const getBandwidth = () => {\n      return this.mainSegmentLoader_.bandwidth;\n    };\n    this.contentSteeringController_ = new ContentSteeringController(this.vhs_.xhr, getBandwidth);\n    this.setupSegmentLoaderListeners_();\n    if (this.bufferBasedABR) {\n      this.mainPlaylistLoader_.one('loadedplaylist', () => this.startABRTimer_());\n      this.tech_.on('pause', () => this.stopABRTimer_());\n      this.tech_.on('play', () => this.startABRTimer_());\n    } // Create SegmentLoader stat-getters\n    // mediaRequests_\n    // mediaRequestsAborted_\n    // mediaRequestsTimedout_\n    // mediaRequestsErrored_\n    // mediaTransferDuration_\n    // mediaBytesTransferred_\n    // mediaAppends_\n\n    loaderStats.forEach(stat => {\n      this[stat + '_'] = sumLoaderStat.bind(this, stat);\n    });\n    this.logger_ = logger('pc');\n    this.triggeredFmp4Usage = false;\n    if (this.tech_.preload() === 'none') {\n      this.loadOnPlay_ = () => {\n        this.loadOnPlay_ = null;\n        this.mainPlaylistLoader_.load();\n      };\n      this.tech_.one('play', this.loadOnPlay_);\n    } else {\n      this.mainPlaylistLoader_.load();\n    }\n    this.timeToLoadedData__ = -1;\n    this.mainAppendsToLoadedData__ = -1;\n    this.audioAppendsToLoadedData__ = -1;\n    const event = this.tech_.preload() === 'none' ? 'play' : 'loadstart'; // start the first frame timer on loadstart or play (for preload none)\n\n    this.tech_.one(event, () => {\n      const timeToLoadedDataStart = Date.now();\n      this.tech_.one('loadeddata', () => {\n        this.timeToLoadedData__ = Date.now() - timeToLoadedDataStart;\n        this.mainAppendsToLoadedData__ = this.mainSegmentLoader_.mediaAppends;\n        this.audioAppendsToLoadedData__ = this.audioSegmentLoader_.mediaAppends;\n      });\n    });\n  }\n  mainAppendsToLoadedData_() {\n    return this.mainAppendsToLoadedData__;\n  }\n  audioAppendsToLoadedData_() {\n    return this.audioAppendsToLoadedData__;\n  }\n  appendsToLoadedData_() {\n    const main = this.mainAppendsToLoadedData_();\n    const audio = this.audioAppendsToLoadedData_();\n    if (main === -1 || audio === -1) {\n      return -1;\n    }\n    return main + audio;\n  }\n  timeToLoadedData_() {\n    return this.timeToLoadedData__;\n  }\n  /**\n   * Run selectPlaylist and switch to the new playlist if we should\n   *\n   * @param {string} [reason=abr] a reason for why the ABR check is made\n   * @private\n   */\n\n  checkABR_(reason = 'abr') {\n    const nextPlaylist = this.selectPlaylist();\n    if (nextPlaylist && this.shouldSwitchToMedia_(nextPlaylist)) {\n      this.switchMedia_(nextPlaylist, reason);\n    }\n  }\n  switchMedia_(playlist, cause, delay) {\n    const oldMedia = this.media();\n    const oldId = oldMedia && (oldMedia.id || oldMedia.uri);\n    const newId = playlist && (playlist.id || playlist.uri);\n    if (oldId && oldId !== newId) {\n      this.logger_(`switch media ${oldId} -> ${newId} from ${cause}`);\n      const metadata = {\n        renditionInfo: {\n          id: newId,\n          bandwidth: playlist.attributes.BANDWIDTH,\n          resolution: playlist.attributes.RESOLUTION,\n          codecs: playlist.attributes.CODECS\n        },\n        cause\n      };\n      this.trigger({\n        type: 'renditionselected',\n        metadata\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: `vhs-rendition-change-${cause}`\n      });\n    }\n    this.mainPlaylistLoader_.media(playlist, delay);\n  }\n  /**\n   * A function that ensures we switch our playlists inside of `mediaTypes`\n   * to match the current `serviceLocation` provided by the contentSteering controller.\n   * We want to check media types of `AUDIO`, `SUBTITLES`, and `CLOSED-CAPTIONS`.\n   *\n   * This should only be called on a DASH playback scenario while using content steering.\n   * This is necessary due to differences in how media in HLS manifests are generally tied to\n   * a video playlist, where in DASH that is not always the case.\n   */\n\n  switchMediaForDASHContentSteering_() {\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n      const mediaType = this.mediaTypes_[type];\n      const activeGroup = mediaType ? mediaType.activeGroup() : null;\n      const pathway = this.contentSteeringController_.getPathway();\n      if (activeGroup && pathway) {\n        // activeGroup can be an array or a single group\n        const mediaPlaylists = activeGroup.length ? activeGroup[0].playlists : activeGroup.playlists;\n        const dashMediaPlaylists = mediaPlaylists.filter(p => p.attributes.serviceLocation === pathway); // Switch the current active playlist to the correct CDN\n\n        if (dashMediaPlaylists.length) {\n          this.mediaTypes_[type].activePlaylistLoader.media(dashMediaPlaylists[0]);\n        }\n      }\n    });\n  }\n  /**\n   * Start a timer that periodically calls checkABR_\n   *\n   * @private\n   */\n\n  startABRTimer_() {\n    this.stopABRTimer_();\n    this.abrTimer_ = window$1.setInterval(() => this.checkABR_(), 250);\n  }\n  /**\n   * Stop the timer that periodically calls checkABR_\n   *\n   * @private\n   */\n\n  stopABRTimer_() {\n    // if we're scrubbing, we don't need to pause.\n    // This getter will be added to Video.js in version 7.11.\n    if (this.tech_.scrubbing && this.tech_.scrubbing()) {\n      return;\n    }\n    window$1.clearInterval(this.abrTimer_);\n    this.abrTimer_ = null;\n  }\n  /**\n   * Get a list of playlists for the currently selected audio playlist\n   *\n   * @return {Array} the array of audio playlists\n   */\n\n  getAudioTrackPlaylists_() {\n    const main = this.main();\n    const defaultPlaylists = main && main.playlists || []; // if we don't have any audio groups then we can only\n    // assume that the audio tracks are contained in main\n    // playlist array, use that or an empty array.\n\n    if (!main || !main.mediaGroups || !main.mediaGroups.AUDIO) {\n      return defaultPlaylists;\n    }\n    const AUDIO = main.mediaGroups.AUDIO;\n    const groupKeys = Object.keys(AUDIO);\n    let track; // get the current active track\n\n    if (Object.keys(this.mediaTypes_.AUDIO.groups).length) {\n      track = this.mediaTypes_.AUDIO.activeTrack(); // or get the default track from main if mediaTypes_ isn't setup yet\n    } else {\n      // default group is `main` or just the first group.\n      const defaultGroup = AUDIO.main || groupKeys.length && AUDIO[groupKeys[0]];\n      for (const label in defaultGroup) {\n        if (defaultGroup[label].default) {\n          track = {\n            label\n          };\n          break;\n        }\n      }\n    } // no active track no playlists.\n\n    if (!track) {\n      return defaultPlaylists;\n    }\n    const playlists = []; // get all of the playlists that are possible for the\n    // active track.\n\n    for (const group in AUDIO) {\n      if (AUDIO[group][track.label]) {\n        const properties = AUDIO[group][track.label];\n        if (properties.playlists && properties.playlists.length) {\n          playlists.push.apply(playlists, properties.playlists);\n        } else if (properties.uri) {\n          playlists.push(properties);\n        } else if (main.playlists.length) {\n          // if an audio group does not have a uri\n          // see if we have main playlists that use it as a group.\n          // if we do then add those to the playlists list.\n          for (let i = 0; i < main.playlists.length; i++) {\n            const playlist = main.playlists[i];\n            if (playlist.attributes && playlist.attributes.AUDIO && playlist.attributes.AUDIO === group) {\n              playlists.push(playlist);\n            }\n          }\n        }\n      }\n    }\n    if (!playlists.length) {\n      return defaultPlaylists;\n    }\n    return playlists;\n  }\n  /**\n   * Register event handlers on the main playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n  setupMainPlaylistLoaderListeners_() {\n    this.mainPlaylistLoader_.on('loadedmetadata', () => {\n      const media = this.mainPlaylistLoader_.media();\n      const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n        this.requestOptions_.timeout = 0;\n      } else {\n        this.requestOptions_.timeout = requestTimeout;\n      } // if this isn't a live video and preload permits, start\n      // downloading segments\n\n      if (media.endList && this.tech_.preload() !== 'none') {\n        this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n        this.mainSegmentLoader_.load();\n      }\n      setupMediaGroups({\n        sourceType: this.sourceType_,\n        segmentLoaders: {\n          AUDIO: this.audioSegmentLoader_,\n          SUBTITLES: this.subtitleSegmentLoader_,\n          main: this.mainSegmentLoader_\n        },\n        tech: this.tech_,\n        requestOptions: this.requestOptions_,\n        mainPlaylistLoader: this.mainPlaylistLoader_,\n        vhs: this.vhs_,\n        main: this.main(),\n        mediaTypes: this.mediaTypes_,\n        excludePlaylist: this.excludePlaylist.bind(this)\n      });\n      this.triggerPresenceUsage_(this.main(), media);\n      this.setupFirstPlay();\n      if (!this.mediaTypes_.AUDIO.activePlaylistLoader || this.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n        this.trigger('selectedinitialmedia');\n      } else {\n        // We must wait for the active audio playlist loader to\n        // finish setting up before triggering this event so the\n        // representations API and EME setup is correct\n        this.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', () => {\n          this.trigger('selectedinitialmedia');\n        });\n      }\n    });\n    this.mainPlaylistLoader_.on('loadedplaylist', () => {\n      if (this.loadOnPlay_) {\n        this.tech_.off('play', this.loadOnPlay_);\n      }\n      let updatedPlaylist = this.mainPlaylistLoader_.media();\n      if (!updatedPlaylist) {\n        // Add content steering listeners on first load and init.\n        this.attachContentSteeringListeners_();\n        this.initContentSteeringController_(); // exclude any variants that are not supported by the browser before selecting\n        // an initial media as the playlist selectors do not consider browser support\n\n        this.excludeUnsupportedVariants_();\n        let selectedMedia;\n        if (this.enableLowInitialPlaylist) {\n          selectedMedia = this.selectInitialPlaylist();\n        }\n        if (!selectedMedia) {\n          selectedMedia = this.selectPlaylist();\n        }\n        if (!selectedMedia || !this.shouldSwitchToMedia_(selectedMedia)) {\n          return;\n        }\n        this.initialMedia_ = selectedMedia;\n        this.switchMedia_(this.initialMedia_, 'initial'); // Under the standard case where a source URL is provided, loadedplaylist will\n        // fire again since the playlist will be requested. In the case of vhs-json\n        // (where the manifest object is provided as the source), when the media\n        // playlist's `segments` list is already available, a media playlist won't be\n        // requested, and loadedplaylist won't fire again, so the playlist handler must be\n        // called on its own here.\n\n        const haveJsonSource = this.sourceType_ === 'vhs-json' && this.initialMedia_.segments;\n        if (!haveJsonSource) {\n          return;\n        }\n        updatedPlaylist = this.initialMedia_;\n      }\n      this.handleUpdatedMediaPlaylist(updatedPlaylist);\n    });\n    this.mainPlaylistLoader_.on('error', () => {\n      const error = this.mainPlaylistLoader_.error;\n      this.excludePlaylist({\n        playlistToExclude: error.playlist,\n        error\n      });\n    });\n    this.mainPlaylistLoader_.on('mediachanging', () => {\n      this.mainSegmentLoader_.abort();\n      this.mainSegmentLoader_.pause();\n    });\n    this.mainPlaylistLoader_.on('mediachange', () => {\n      const media = this.mainPlaylistLoader_.media();\n      const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n        this.requestOptions_.timeout = 0;\n      } else {\n        this.requestOptions_.timeout = requestTimeout;\n      }\n      if (this.sourceType_ === 'dash') {\n        // we don't want to re-request the same hls playlist right after it was changed\n        // Initially it was implemented as workaround to restart playlist loader for live\n        // when playlist loader is paused because of playlist exclusions:\n        // see: https://github.com/videojs/http-streaming/pull/1339\n        // but this introduces duplicate \"loadedplaylist\" event.\n        // Ideally we want to re-think playlist loader life-cycle events,\n        // but simply checking \"paused\" state should help a lot\n        if (this.mainPlaylistLoader_.isPaused) {\n          this.mainPlaylistLoader_.load();\n        }\n      } // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `loadedplaylist`\n\n      this.mainSegmentLoader_.pause();\n      this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n      if (this.waitingForFastQualityPlaylistReceived_) {\n        this.runFastQualitySwitch_();\n      } else {\n        this.mainSegmentLoader_.load();\n      }\n      this.tech_.trigger({\n        type: 'mediachange',\n        bubbles: true\n      });\n    });\n    this.mainPlaylistLoader_.on('playlistunchanged', () => {\n      const updatedPlaylist = this.mainPlaylistLoader_.media(); // ignore unchanged playlists that have already been\n      // excluded for not-changing. We likely just have a really slowly updating\n      // playlist.\n\n      if (updatedPlaylist.lastExcludeReason_ === 'playlist-unchanged') {\n        return;\n      }\n      const playlistOutdated = this.stuckAtPlaylistEnd_(updatedPlaylist);\n      if (playlistOutdated) {\n        // Playlist has stopped updating and we're stuck at its end. Try to\n        // exclude it and switch to another playlist in the hope that that\n        // one is updating (and give the player a chance to re-adjust to the\n        // safe live point).\n        this.excludePlaylist({\n          error: {\n            message: 'Playlist no longer updating.',\n            reason: 'playlist-unchanged'\n          }\n        }); // useful for monitoring QoS\n\n        this.tech_.trigger('playliststuck');\n      }\n    });\n    this.mainPlaylistLoader_.on('renditiondisabled', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-disabled'\n      });\n    });\n    this.mainPlaylistLoader_.on('renditionenabled', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-enabled'\n      });\n    });\n    const playlistLoaderEvents = ['manifestrequeststart', 'manifestrequestcomplete', 'manifestparsestart', 'manifestparsecomplete', 'playlistrequeststart', 'playlistrequestcomplete', 'playlistparsestart', 'playlistparsecomplete', 'renditiondisabled', 'renditionenabled'];\n    playlistLoaderEvents.forEach(eventName => {\n      this.mainPlaylistLoader_.on(eventName, metadata => {\n        // trigger directly on the player to ensure early events are fired.\n        this.player_.trigger(_extends({}, metadata));\n      });\n    });\n  }\n  /**\n   * Given an updated media playlist (whether it was loaded for the first time, or\n   * refreshed for live playlists), update any relevant properties and state to reflect\n   * changes in the media that should be accounted for (e.g., cues and duration).\n   *\n   * @param {Object} updatedPlaylist the updated media playlist object\n   *\n   * @private\n   */\n\n  handleUpdatedMediaPlaylist(updatedPlaylist) {\n    if (this.useCueTags_) {\n      this.updateAdCues_(updatedPlaylist);\n    } // TODO: Create a new event on the PlaylistLoader that signals\n    // that the segments have changed in some way and use that to\n    // update the SegmentLoader instead of doing it twice here and\n    // on `mediachange`\n\n    this.mainSegmentLoader_.pause();\n    this.mainSegmentLoader_.playlist(updatedPlaylist, this.requestOptions_);\n    if (this.waitingForFastQualityPlaylistReceived_) {\n      this.runFastQualitySwitch_();\n    }\n    this.updateDuration(!updatedPlaylist.endList); // If the player isn't paused, ensure that the segment loader is running,\n    // as it is possible that it was temporarily stopped while waiting for\n    // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n    if (!this.tech_.paused()) {\n      this.mainSegmentLoader_.load();\n      if (this.audioSegmentLoader_) {\n        this.audioSegmentLoader_.load();\n      }\n    }\n  }\n  /**\n   * A helper function for triggerring presence usage events once per source\n   *\n   * @private\n   */\n\n  triggerPresenceUsage_(main, media) {\n    const mediaGroups = main.mediaGroups || {};\n    let defaultDemuxed = true;\n    const audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n    for (const mediaGroup in mediaGroups.AUDIO) {\n      for (const label in mediaGroups.AUDIO[mediaGroup]) {\n        const properties = mediaGroups.AUDIO[mediaGroup][label];\n        if (!properties.uri) {\n          defaultDemuxed = false;\n        }\n      }\n    }\n    if (defaultDemuxed) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-demuxed'\n      });\n    }\n    if (Object.keys(mediaGroups.SUBTITLES).length) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-webvtt'\n      });\n    }\n    if (Vhs$1.Playlist.isAes(media)) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-aes'\n      });\n    }\n    if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-alternate-audio'\n      });\n    }\n    if (this.useCueTags_) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-playlist-cue-tags'\n      });\n    }\n  }\n  shouldSwitchToMedia_(nextPlaylist) {\n    const currentPlaylist = this.mainPlaylistLoader_.media() || this.mainPlaylistLoader_.pendingMedia_;\n    const currentTime = this.tech_.currentTime();\n    const bufferLowWaterLine = this.bufferLowWaterLine();\n    const bufferHighWaterLine = this.bufferHighWaterLine();\n    const buffered = this.tech_.buffered();\n    return shouldSwitchToMedia({\n      buffered,\n      currentTime,\n      currentPlaylist,\n      nextPlaylist,\n      bufferLowWaterLine,\n      bufferHighWaterLine,\n      duration: this.duration(),\n      bufferBasedABR: this.bufferBasedABR,\n      log: this.logger_\n    });\n  }\n  /**\n   * Register event handlers on the segment loaders. A helper function\n   * for construction time.\n   *\n   * @private\n   */\n\n  setupSegmentLoaderListeners_() {\n    this.mainSegmentLoader_.on('bandwidthupdate', () => {\n      // Whether or not buffer based ABR or another ABR is used, on a bandwidth change it's\n      // useful to check to see if a rendition switch should be made.\n      this.checkABR_('bandwidthupdate');\n      this.tech_.trigger('bandwidthupdate');\n    });\n    this.mainSegmentLoader_.on('timeout', () => {\n      if (this.bufferBasedABR) {\n        // If a rendition change is needed, then it would've be done on `bandwidthupdate`.\n        // Here the only consideration is that for buffer based ABR there's no guarantee\n        // of an immediate switch (since the bandwidth is averaged with a timeout\n        // bandwidth value of 1), so force a load on the segment loader to keep it going.\n        this.mainSegmentLoader_.load();\n      }\n    }); // `progress` events are not reliable enough of a bandwidth measure to trigger buffer\n    // based ABR.\n\n    if (!this.bufferBasedABR) {\n      this.mainSegmentLoader_.on('progress', () => {\n        this.trigger('progress');\n      });\n    }\n    this.mainSegmentLoader_.on('error', () => {\n      const error = this.mainSegmentLoader_.error();\n      this.excludePlaylist({\n        playlistToExclude: error.playlist,\n        error\n      });\n    });\n    this.mainSegmentLoader_.on('appenderror', () => {\n      this.error = this.mainSegmentLoader_.error_;\n      this.trigger('error');\n    });\n    this.mainSegmentLoader_.on('syncinfoupdate', () => {\n      this.onSyncInfoUpdate_();\n    });\n    this.mainSegmentLoader_.on('timestampoffset', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-timestamp-offset'\n      });\n    });\n    this.audioSegmentLoader_.on('syncinfoupdate', () => {\n      this.onSyncInfoUpdate_();\n    });\n    this.audioSegmentLoader_.on('appenderror', () => {\n      this.error = this.audioSegmentLoader_.error_;\n      this.trigger('error');\n    });\n    this.mainSegmentLoader_.on('ended', () => {\n      this.logger_('main segment loader ended');\n      this.onEndOfStream();\n    }); // There is the possibility of the video segment and the audio segment\n    // at a current time to be on different timelines. When this occurs, the player\n    // forwards playback to a point where these two segment types are back on the same\n    // timeline. This time will be just after the end of the audio segment that is on\n    // a previous timeline.\n\n    this.timelineChangeController_.on('audioTimelineBehind', () => {\n      const segmentInfo = this.audioSegmentLoader_.pendingSegment_;\n      if (!segmentInfo || !segmentInfo.segment || !segmentInfo.segment.syncInfo) {\n        return;\n      } // Update the current time to just after the faulty audio segment.\n      // This moves playback to a spot where both audio and video segments\n      // are on the same timeline.\n\n      const newTime = segmentInfo.segment.syncInfo.end + 0.01;\n      this.tech_.setCurrentTime(newTime);\n    });\n    this.timelineChangeController_.on('fixBadTimelineChange', () => {\n      // pause, reset-everything and load for all segment-loaders\n      this.logger_('Fix bad timeline change. Restarting al segment loaders...');\n      this.mainSegmentLoader_.pause();\n      this.mainSegmentLoader_.resetEverything();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n        this.audioSegmentLoader_.resetEverything();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n        this.subtitleSegmentLoader_.resetEverything();\n      } // start segment loader loading in case they are paused\n\n      this.load();\n    });\n    this.mainSegmentLoader_.on('earlyabort', event => {\n      // never try to early abort with the new ABR algorithm\n      if (this.bufferBasedABR) {\n        return;\n      }\n      this.delegateLoaders_('all', ['abort']);\n      this.excludePlaylist({\n        error: {\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete ' + 'the request without rebuffering.'\n        },\n        playlistExclusionDuration: ABORT_EARLY_EXCLUSION_SECONDS\n      });\n    });\n    const updateCodecs = () => {\n      if (!this.sourceUpdater_.hasCreatedSourceBuffers()) {\n        return this.tryToCreateSourceBuffers_();\n      }\n      const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n      if (!codecs) {\n        return;\n      }\n      this.sourceUpdater_.addOrChangeSourceBuffers(codecs);\n    };\n    this.mainSegmentLoader_.on('trackinfo', updateCodecs);\n    this.audioSegmentLoader_.on('trackinfo', updateCodecs);\n    this.mainSegmentLoader_.on('fmp4', () => {\n      if (!this.triggeredFmp4Usage) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n        this.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('fmp4', () => {\n      if (!this.triggeredFmp4Usage) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n        this.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('ended', () => {\n      this.logger_('audioSegmentLoader ended');\n      this.onEndOfStream();\n    });\n    const segmentLoaderEvents = ['segmentselected', 'segmentloadstart', 'segmentloaded', 'segmentkeyloadstart', 'segmentkeyloadcomplete', 'segmentdecryptionstart', 'segmentdecryptioncomplete', 'segmenttransmuxingstart', 'segmenttransmuxingcomplete', 'segmenttransmuxingtrackinfoavailable', 'segmenttransmuxingtiminginfoavailable', 'segmentappendstart', 'appendsdone', 'bandwidthupdated', 'timelinechange', 'codecschange'];\n    segmentLoaderEvents.forEach(eventName => {\n      this.mainSegmentLoader_.on(eventName, metadata => {\n        this.player_.trigger(_extends({}, metadata));\n      });\n      this.audioSegmentLoader_.on(eventName, metadata => {\n        this.player_.trigger(_extends({}, metadata));\n      });\n      this.subtitleSegmentLoader_.on(eventName, metadata => {\n        this.player_.trigger(_extends({}, metadata));\n      });\n    });\n  }\n  mediaSecondsLoaded_() {\n    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n  }\n  /**\n   * Call load on our SegmentLoaders\n   */\n\n  load() {\n    this.mainSegmentLoader_.load();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.load();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.load();\n    }\n  }\n  /**\n   * Call pause on our SegmentLoaders\n   */\n\n  pause() {\n    this.mainSegmentLoader_.pause();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.pause();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.pause();\n    }\n  }\n  /**\n   * Re-tune playback quality level for the current player\n   * conditions. This method will perform destructive actions like removing\n   * already buffered content in order to readjust the currently active\n   * playlist quickly. This is good for manual quality changes\n   *\n   * @private\n   */\n\n  fastQualityChange_(media = this.selectPlaylist()) {\n    if (media && media === this.mainPlaylistLoader_.media()) {\n      this.logger_('skipping fastQualityChange because new media is same as old');\n      return;\n    }\n    this.switchMedia_(media, 'fast-quality'); // we would like to avoid race condition when we call fastQuality,\n    // reset everything and start loading segments from prev segments instead of new because new playlist is not received yet\n\n    this.waitingForFastQualityPlaylistReceived_ = true;\n  }\n  runFastQualitySwitch_() {\n    this.waitingForFastQualityPlaylistReceived_ = false;\n    this.mainSegmentLoader_.pause();\n    this.mainSegmentLoader_.resetEverything();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.pause();\n      this.audioSegmentLoader_.resetEverything();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.pause();\n      this.subtitleSegmentLoader_.resetEverything();\n    } // start segment loader loading in case they are paused\n\n    this.load();\n  }\n  /**\n   * Begin playback.\n   */\n\n  play() {\n    if (this.setupFirstPlay()) {\n      return;\n    }\n    if (this.tech_.ended()) {\n      this.tech_.setCurrentTime(0);\n    }\n    if (this.hasPlayed_) {\n      this.load();\n    }\n    const seekable = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n    // seek forward to the live point\n\n    if (this.tech_.duration() === Infinity) {\n      if (this.tech_.currentTime() < seekable.start(0)) {\n        return this.tech_.setCurrentTime(seekable.end(seekable.length - 1));\n      }\n    }\n  }\n  /**\n   * Seek to the latest media position if this is a live video and the\n   * player and video are loaded and initialized.\n   */\n\n  setupFirstPlay() {\n    const media = this.mainPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n    //  If 1) there is no active media\n    //     2) the player is paused\n    //     3) the first play has already been setup\n    // then exit early\n\n    if (!media || this.tech_.paused() || this.hasPlayed_) {\n      return false;\n    } // when the video is a live stream and/or has a start time\n\n    if (!media.endList || media.start) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        // without a seekable range, the player cannot seek to begin buffering at the\n        // live or start point\n        return false;\n      }\n      const seekableEnd = seekable.end(0);\n      let startPoint = seekableEnd;\n      if (media.start) {\n        const offset = media.start.timeOffset;\n        if (offset < 0) {\n          startPoint = Math.max(seekableEnd + offset, seekable.start(0));\n        } else {\n          startPoint = Math.min(seekableEnd, offset);\n        }\n      } // trigger firstplay to inform the source handler to ignore the next seek event\n\n      this.trigger('firstplay'); // seek to the live point\n\n      this.tech_.setCurrentTime(startPoint);\n    }\n    this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n    this.load();\n    return true;\n  }\n  /**\n   * handle the sourceopen event on the MediaSource\n   *\n   * @private\n   */\n\n  handleSourceOpen_() {\n    // Only attempt to create the source buffer if none already exist.\n    // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n    // after `endOfStream` has been called (in response to a seek for instance)\n    this.tryToCreateSourceBuffers_(); // if autoplay is enabled, begin playback. This is duplicative of\n    // code in video.js but is required because play() must be invoked\n    // *after* the media source has opened.\n\n    if (this.tech_.autoplay()) {\n      const playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n      // on browsers which return a promise\n\n      if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n        playPromise.then(null, e => {});\n      }\n    }\n    this.trigger('sourceopen');\n  }\n  /**\n   * handle the sourceended event on the MediaSource\n   *\n   * @private\n   */\n\n  handleSourceEnded_() {\n    if (!this.inbandTextTracks_.metadataTrack_) {\n      return;\n    }\n    const cues = this.inbandTextTracks_.metadataTrack_.cues;\n    if (!cues || !cues.length) {\n      return;\n    }\n    const duration = this.duration();\n    cues[cues.length - 1].endTime = isNaN(duration) || Math.abs(duration) === Infinity ? Number.MAX_VALUE : duration;\n  }\n  /**\n   * handle the durationchange event on the MediaSource\n   *\n   * @private\n   */\n\n  handleDurationChange_() {\n    this.tech_.trigger('durationchange');\n  }\n  /**\n   * Calls endOfStream on the media source when all active stream types have called\n   * endOfStream\n   *\n   * @param {string} streamType\n   *        Stream type of the segment loader that called endOfStream\n   * @private\n   */\n\n  onEndOfStream() {\n    let isEndOfStream = this.mainSegmentLoader_.ended_;\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      const mainMediaInfo = this.mainSegmentLoader_.getCurrentMediaInfo_(); // if the audio playlist loader exists, then alternate audio is active\n\n      if (!mainMediaInfo || mainMediaInfo.hasVideo) {\n        // if we do not know if the main segment loader contains video yet or if we\n        // definitively know the main segment loader contains video, then we need to wait\n        // for both main and audio segment loaders to call endOfStream\n        isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n      } else {\n        // otherwise just rely on the audio loader\n        isEndOfStream = this.audioSegmentLoader_.ended_;\n      }\n    }\n    if (!isEndOfStream) {\n      return;\n    }\n    this.stopABRTimer_();\n    this.sourceUpdater_.endOfStream();\n  }\n  /**\n   * Check if a playlist has stopped being updated\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist has stopped being updated or not\n   */\n\n  stuckAtPlaylistEnd_(playlist) {\n    const seekable = this.seekable();\n    if (!seekable.length) {\n      // playlist doesn't have enough information to determine whether we are stuck\n      return false;\n    }\n    const expired = this.syncController_.getExpiredTime(playlist, this.duration());\n    if (expired === null) {\n      return false;\n    } // does not use the safe live end to calculate playlist end, since we\n    // don't want to say we are stuck while there is still content\n\n    const absolutePlaylistEnd = Vhs$1.Playlist.playlistEnd(playlist, expired);\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    if (!buffered.length) {\n      // return true if the playhead reached the absolute end of the playlist\n      return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n    }\n    const bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n    // end of playlist\n\n    return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n  }\n  /**\n   * Exclude a playlist for a set amount of time, making it unavailable for selection by\n   * the rendition selection algorithm, then force a new playlist (rendition) selection.\n   *\n   * @param {Object=} playlistToExclude\n   *                  the playlist to exclude, defaults to the currently selected playlist\n   * @param {Object=} error\n   *                  an optional error\n   * @param {number=} playlistExclusionDuration\n   *                  an optional number of seconds to exclude the playlist\n   */\n\n  excludePlaylist({\n    playlistToExclude = this.mainPlaylistLoader_.media(),\n    error = {},\n    playlistExclusionDuration\n  }) {\n    // If the `error` was generated by the playlist loader, it will contain\n    // the playlist we were trying to load (but failed) and that should be\n    // excluded instead of the currently selected playlist which is likely\n    // out-of-date in this scenario\n    playlistToExclude = playlistToExclude || this.mainPlaylistLoader_.media();\n    playlistExclusionDuration = playlistExclusionDuration || error.playlistExclusionDuration || this.playlistExclusionDuration; // If there is no current playlist, then an error occurred while we were\n    // trying to load the main OR while we were disposing of the tech\n\n    if (!playlistToExclude) {\n      this.error = error;\n      if (this.mediaSource.readyState !== 'open') {\n        this.trigger('error');\n      } else {\n        this.sourceUpdater_.endOfStream('network');\n      }\n      return;\n    }\n    playlistToExclude.playlistErrors_++;\n    const playlists = this.mainPlaylistLoader_.main.playlists;\n    const enabledPlaylists = playlists.filter(isEnabled);\n    const isFinalRendition = enabledPlaylists.length === 1 && enabledPlaylists[0] === playlistToExclude; // Don't exclude the only playlist unless it was excluded\n    // forever\n\n    if (playlists.length === 1 && playlistExclusionDuration !== Infinity) {\n      videojs.log.warn(`Problem encountered with playlist ${playlistToExclude.id}. ` + 'Trying again since it is the only playlist.');\n      this.tech_.trigger('retryplaylist'); // if this is a final rendition, we should delay\n\n      return this.mainPlaylistLoader_.load(isFinalRendition);\n    }\n    if (isFinalRendition) {\n      // If we're content steering, try other pathways.\n      if (this.main().contentSteering) {\n        const pathway = this.pathwayAttribute_(playlistToExclude); // Ignore at least 1 steering manifest refresh.\n\n        const reIncludeDelay = this.contentSteeringController_.steeringManifest.ttl * 1000;\n        this.contentSteeringController_.excludePathway(pathway);\n        this.excludeThenChangePathway_();\n        setTimeout(() => {\n          this.contentSteeringController_.addAvailablePathway(pathway);\n        }, reIncludeDelay);\n        return;\n      } // Since we're on the final non-excluded playlist, and we're about to exclude\n      // it, instead of erring the player or retrying this playlist, clear out the current\n      // exclusion list. This allows other playlists to be attempted in case any have been\n      // fixed.\n\n      let reincluded = false;\n      playlists.forEach(playlist => {\n        // skip current playlist which is about to be excluded\n        if (playlist === playlistToExclude) {\n          return;\n        }\n        const excludeUntil = playlist.excludeUntil; // a playlist cannot be reincluded if it wasn't excluded to begin with.\n\n        if (typeof excludeUntil !== 'undefined' && excludeUntil !== Infinity) {\n          reincluded = true;\n          delete playlist.excludeUntil;\n        }\n      });\n      if (reincluded) {\n        videojs.log.warn('Removing other playlists from the exclusion list because the last ' + 'rendition is about to be excluded.'); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      }\n    } // Exclude this playlist\n\n    let excludeUntil;\n    if (playlistToExclude.playlistErrors_ > this.maxPlaylistRetries) {\n      excludeUntil = Infinity;\n    } else {\n      excludeUntil = Date.now() + playlistExclusionDuration * 1000;\n    }\n    playlistToExclude.excludeUntil = excludeUntil;\n    if (error.reason) {\n      playlistToExclude.lastExcludeReason_ = error.reason;\n    }\n    this.tech_.trigger('excludeplaylist');\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-rendition-excluded'\n    }); // TODO: only load a new playlist if we're excluding the current playlist\n    // If this function was called with a playlist that's not the current active playlist\n    // (e.g., media().id !== playlistToExclude.id),\n    // then a new playlist should not be selected and loaded, as there's nothing wrong with the current playlist.\n\n    const nextPlaylist = this.selectPlaylist();\n    if (!nextPlaylist) {\n      this.error = 'Playback cannot continue. No available working or supported playlists.';\n      this.trigger('error');\n      return;\n    }\n    const logFn = error.internal ? this.logger_ : videojs.log.warn;\n    const errorMessage = error.message ? ' ' + error.message : '';\n    logFn(`${error.internal ? 'Internal problem' : 'Problem'} encountered with playlist ${playlistToExclude.id}.` + `${errorMessage} Switching to playlist ${nextPlaylist.id}.`); // if audio group changed reset audio loaders\n\n    if (nextPlaylist.attributes.AUDIO !== playlistToExclude.attributes.AUDIO) {\n      this.delegateLoaders_('audio', ['abort', 'pause']);\n    } // if subtitle group changed reset subtitle loaders\n\n    if (nextPlaylist.attributes.SUBTITLES !== playlistToExclude.attributes.SUBTITLES) {\n      this.delegateLoaders_('subtitle', ['abort', 'pause']);\n    }\n    this.delegateLoaders_('main', ['abort', 'pause']);\n    const delayDuration = nextPlaylist.targetDuration / 2 * 1000 || 5 * 1000;\n    const shouldDelay = typeof nextPlaylist.lastRequest === 'number' && Date.now() - nextPlaylist.lastRequest <= delayDuration; // delay if it's a final rendition or if the last refresh is sooner than half targetDuration\n\n    return this.switchMedia_(nextPlaylist, 'exclude', isFinalRendition || shouldDelay);\n  }\n  /**\n   * Pause all segment/playlist loaders\n   */\n\n  pauseLoading() {\n    this.delegateLoaders_('all', ['abort', 'pause']);\n    this.stopABRTimer_();\n  }\n  /**\n   * Call a set of functions in order on playlist loaders, segment loaders,\n   * or both types of loaders.\n   *\n   * @param {string} filter\n   *        Filter loaders that should call fnNames using a string. Can be:\n   *        * all - run on all loaders\n   *        * audio - run on all audio loaders\n   *        * subtitle - run on all subtitle loaders\n   *        * main - run on the main loaders\n   *\n   * @param {Array|string} fnNames\n   *        A string or array of function names to call.\n   */\n\n  delegateLoaders_(filter, fnNames) {\n    const loaders = [];\n    const dontFilterPlaylist = filter === 'all';\n    if (dontFilterPlaylist || filter === 'main') {\n      loaders.push(this.mainPlaylistLoader_);\n    }\n    const mediaTypes = [];\n    if (dontFilterPlaylist || filter === 'audio') {\n      mediaTypes.push('AUDIO');\n    }\n    if (dontFilterPlaylist || filter === 'subtitle') {\n      mediaTypes.push('CLOSED-CAPTIONS');\n      mediaTypes.push('SUBTITLES');\n    }\n    mediaTypes.forEach(mediaType => {\n      const loader = this.mediaTypes_[mediaType] && this.mediaTypes_[mediaType].activePlaylistLoader;\n      if (loader) {\n        loaders.push(loader);\n      }\n    });\n    ['main', 'audio', 'subtitle'].forEach(name => {\n      const loader = this[`${name}SegmentLoader_`];\n      if (loader && (filter === name || filter === 'all')) {\n        loaders.push(loader);\n      }\n    });\n    loaders.forEach(loader => fnNames.forEach(fnName => {\n      if (typeof loader[fnName] === 'function') {\n        loader[fnName]();\n      }\n    }));\n  }\n  /**\n   * set the current time on all segment loaders\n   *\n   * @param {TimeRange} currentTime the current time to set\n   * @return {TimeRange} the current time\n   */\n\n  setCurrentTime(currentTime) {\n    const buffered = findRange(this.tech_.buffered(), currentTime);\n    if (!(this.mainPlaylistLoader_ && this.mainPlaylistLoader_.media())) {\n      // return immediately if the metadata is not ready yet\n      return 0;\n    } // it's clearly an edge-case but don't thrown an error if asked to\n    // seek within an empty playlist\n\n    if (!this.mainPlaylistLoader_.media().segments) {\n      return 0;\n    } // if the seek location is already buffered, continue buffering as usual\n\n    if (buffered && buffered.length) {\n      return currentTime;\n    } // cancel outstanding requests so we begin buffering at the new\n    // location\n\n    this.mainSegmentLoader_.pause();\n    this.mainSegmentLoader_.resetEverything();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.pause();\n      this.audioSegmentLoader_.resetEverything();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.pause();\n      this.subtitleSegmentLoader_.resetEverything();\n    } // start segment loader loading in case they are paused\n\n    this.load();\n  }\n  /**\n   * get the current duration\n   *\n   * @return {TimeRange} the duration\n   */\n\n  duration() {\n    if (!this.mainPlaylistLoader_) {\n      return 0;\n    }\n    const media = this.mainPlaylistLoader_.media();\n    if (!media) {\n      // no playlists loaded yet, so can't determine a duration\n      return 0;\n    } // Don't rely on the media source for duration in the case of a live playlist since\n    // setting the native MediaSource's duration to infinity ends up with consequences to\n    // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n    //\n    // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n    // however, few browsers have support for setLiveSeekableRange()\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n    //\n    // Until a time when the duration of the media source can be set to infinity, and a\n    // seekable range specified across browsers, just return Infinity.\n\n    if (!media.endList) {\n      return Infinity;\n    } // Since this is a VOD video, it is safe to rely on the media source's duration (if\n    // available). If it's not available, fall back to a playlist-calculated estimate.\n\n    if (this.mediaSource) {\n      return this.mediaSource.duration;\n    }\n    return Vhs$1.Playlist.duration(media);\n  }\n  /**\n   * check the seekable range\n   *\n   * @return {TimeRange} the seekable range\n   */\n\n  seekable() {\n    return this.seekable_;\n  }\n  getSeekableRange_(playlistLoader, mediaType) {\n    const media = playlistLoader.media();\n    if (!media) {\n      return null;\n    }\n    const mediaSequenceSync = this.syncController_.getMediaSequenceSync(mediaType);\n    if (mediaSequenceSync && mediaSequenceSync.isReliable) {\n      const start = mediaSequenceSync.start;\n      const end = mediaSequenceSync.end;\n      if (!isFinite(start) || !isFinite(end)) {\n        return null;\n      }\n      const liveEdgeDelay = Vhs$1.Playlist.liveEdgeDelay(this.mainPlaylistLoader_.main, media); // Make sure our seekable end is not negative\n\n      const calculatedEnd = Math.max(0, end - liveEdgeDelay);\n      if (calculatedEnd < start) {\n        return null;\n      }\n      return createTimeRanges([[start, calculatedEnd]]);\n    }\n    const expired = this.syncController_.getExpiredTime(media, this.duration());\n    if (expired === null) {\n      return null;\n    }\n    const seekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(this.mainPlaylistLoader_.main, media));\n    return seekable.length ? seekable : null;\n  }\n  computeFinalSeekable_(mainSeekable, audioSeekable) {\n    if (!audioSeekable) {\n      return mainSeekable;\n    }\n    const mainStart = mainSeekable.start(0);\n    const mainEnd = mainSeekable.end(0);\n    const audioStart = audioSeekable.start(0);\n    const audioEnd = audioSeekable.end(0);\n    if (audioStart > mainEnd || mainStart > audioEnd) {\n      // Seekables are far apart, rely on main\n      return mainSeekable;\n    } // Return the overlapping seekable range\n\n    return createTimeRanges([[Math.max(mainStart, audioStart), Math.min(mainEnd, audioEnd)]]);\n  }\n  onSyncInfoUpdate_() {\n    // TODO check for creation of both source buffers before updating seekable\n    //\n    // A fix was made to this function where a check for\n    // this.sourceUpdater_.hasCreatedSourceBuffers\n    // was added to ensure that both source buffers were created before seekable was\n    // updated. However, it originally had a bug where it was checking for a true and\n    // returning early instead of checking for false. Setting it to check for false to\n    // return early though created other issues. A call to play() would check for seekable\n    // end without verifying that a seekable range was present. In addition, even checking\n    // for that didn't solve some issues, as handleFirstPlay is sometimes worked around\n    // due to a media update calling load on the segment loaders, skipping a seek to live,\n    // thereby starting live streams at the beginning of the stream rather than at the end.\n    //\n    // This conditional should be fixed to wait for the creation of two source buffers at\n    // the same time as the other sections of code are fixed to properly seek to live and\n    // not throw an error due to checking for a seekable end when no seekable range exists.\n    //\n    // For now, fall back to the older behavior, with the understanding that the seekable\n    // range may not be completely correct, leading to a suboptimal initial live point.\n    if (!this.mainPlaylistLoader_) {\n      return;\n    }\n    const mainSeekable = this.getSeekableRange_(this.mainPlaylistLoader_, 'main');\n    if (!mainSeekable) {\n      return;\n    }\n    let audioSeekable;\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      audioSeekable = this.getSeekableRange_(this.mediaTypes_.AUDIO.activePlaylistLoader, 'audio');\n      if (!audioSeekable) {\n        return;\n      }\n    }\n    const oldSeekable = this.seekable_;\n    this.seekable_ = this.computeFinalSeekable_(mainSeekable, audioSeekable);\n    if (!this.seekable_) {\n      return;\n    }\n    if (oldSeekable && oldSeekable.length && this.seekable_.length) {\n      if (oldSeekable.start(0) === this.seekable_.start(0) && oldSeekable.end(0) === this.seekable_.end(0)) {\n        // Seekable range hasn't changed\n        return;\n      }\n    }\n    this.logger_(`seekable updated [${printableRange(this.seekable_)}]`);\n    const metadata = {\n      seekableRanges: this.seekable_\n    };\n    this.trigger({\n      type: 'seekablerangeschanged',\n      metadata\n    });\n    this.tech_.trigger('seekablechanged');\n  }\n  /**\n   * Update the player duration\n   */\n\n  updateDuration(isLive) {\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n      this.updateDuration_ = null;\n    }\n    if (this.mediaSource.readyState !== 'open') {\n      this.updateDuration_ = this.updateDuration.bind(this, isLive);\n      this.mediaSource.addEventListener('sourceopen', this.updateDuration_);\n      return;\n    }\n    if (isLive) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        return;\n      } // Even in the case of a live playlist, the native MediaSource's duration should not\n      // be set to Infinity (even though this would be expected for a live playlist), since\n      // setting the native MediaSource's duration to infinity ends up with consequences to\n      // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n      //\n      // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n      // however, few browsers have support for setLiveSeekableRange()\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n      //\n      // Until a time when the duration of the media source can be set to infinity, and a\n      // seekable range specified across browsers, the duration should be greater than or\n      // equal to the last possible seekable value.\n      // MediaSource duration starts as NaN\n      // It is possible (and probable) that this case will never be reached for many\n      // sources, since the MediaSource reports duration as the highest value without\n      // accounting for timestamp offset. For example, if the timestamp offset is -100 and\n      // we buffered times 0 to 100 with real times of 100 to 200, even though current\n      // time will be between 0 and 100, the native media source may report the duration\n      // as 200. However, since we report duration separate from the media source (as\n      // Infinity), and as long as the native media source duration value is greater than\n      // our reported seekable range, seeks will work as expected. The large number as\n      // duration for live is actually a strategy used by some players to work around the\n      // issue of live seekable ranges cited above.\n\n      if (isNaN(this.mediaSource.duration) || this.mediaSource.duration < seekable.end(seekable.length - 1)) {\n        this.sourceUpdater_.setDuration(seekable.end(seekable.length - 1));\n      }\n      return;\n    }\n    const buffered = this.tech_.buffered();\n    let duration = Vhs$1.Playlist.duration(this.mainPlaylistLoader_.media());\n    if (buffered.length > 0) {\n      duration = Math.max(duration, buffered.end(buffered.length - 1));\n    }\n    if (this.mediaSource.duration !== duration) {\n      this.sourceUpdater_.setDuration(duration);\n    }\n  }\n  /**\n   * dispose of the PlaylistController and everything\n   * that it controls\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    this.decrypter_.terminate();\n    this.mainPlaylistLoader_.dispose();\n    this.mainSegmentLoader_.dispose();\n    this.contentSteeringController_.dispose();\n    this.keyStatusMap_.clear();\n    if (this.loadOnPlay_) {\n      this.tech_.off('play', this.loadOnPlay_);\n    }\n    ['AUDIO', 'SUBTITLES'].forEach(type => {\n      const groups = this.mediaTypes_[type].groups;\n      for (const id in groups) {\n        groups[id].forEach(group => {\n          if (group.playlistLoader) {\n            group.playlistLoader.dispose();\n          }\n        });\n      }\n    });\n    this.audioSegmentLoader_.dispose();\n    this.subtitleSegmentLoader_.dispose();\n    this.sourceUpdater_.dispose();\n    this.timelineChangeController_.dispose();\n    this.stopABRTimer_();\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n    }\n    this.mediaSource.removeEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.removeEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.removeEventListener('sourceended', this.handleSourceEnded_);\n    this.off();\n  }\n  /**\n   * return the main playlist object if we have one\n   *\n   * @return {Object} the main playlist object that we parsed\n   */\n\n  main() {\n    return this.mainPlaylistLoader_.main;\n  }\n  /**\n   * return the currently selected playlist\n   *\n   * @return {Object} the currently selected playlist object that we parsed\n   */\n\n  media() {\n    // playlist loader will not return media if it has not been fully loaded\n    return this.mainPlaylistLoader_.media() || this.initialMedia_;\n  }\n  areMediaTypesKnown_() {\n    const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    const hasMainMediaInfo = !!this.mainSegmentLoader_.getCurrentMediaInfo_(); // if we are not using an audio loader, then we have audio media info\n    // otherwise check on the segment loader.\n\n    const hasAudioMediaInfo = !usingAudioLoader ? true : !!this.audioSegmentLoader_.getCurrentMediaInfo_(); // one or both loaders has not loaded sufficently to get codecs\n\n    if (!hasMainMediaInfo || !hasAudioMediaInfo) {\n      return false;\n    }\n    return true;\n  } // find from and to for codec switch event\n\n  getCodecsOrExclude_() {\n    const media = {\n      main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},\n      audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}\n    };\n    const playlist = this.mainSegmentLoader_.getPendingSegmentPlaylist() || this.media(); // set \"main\" media equal to video\n\n    media.video = media.main;\n    const playlistCodecs = codecsForPlaylist(this.main(), playlist);\n    const codecs = {};\n    const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    if (media.main.hasVideo) {\n      codecs.video = playlistCodecs.video || media.main.videoCodec || DEFAULT_VIDEO_CODEC;\n    }\n    if (media.main.isMuxed) {\n      codecs.video += `,${playlistCodecs.audio || media.main.audioCodec || DEFAULT_AUDIO_CODEC}`;\n    }\n    if (media.main.hasAudio && !media.main.isMuxed || media.audio.hasAudio || usingAudioLoader) {\n      codecs.audio = playlistCodecs.audio || media.main.audioCodec || media.audio.audioCodec || DEFAULT_AUDIO_CODEC; // set audio isFmp4 so we use the correct \"supports\" function below\n\n      media.audio.isFmp4 = media.main.hasAudio && !media.main.isMuxed ? media.main.isFmp4 : media.audio.isFmp4;\n    } // no codecs, no playback.\n\n    if (!codecs.audio && !codecs.video) {\n      this.excludePlaylist({\n        playlistToExclude: playlist,\n        error: {\n          message: 'Could not determine codecs for playlist.'\n        },\n        playlistExclusionDuration: Infinity\n      });\n      return;\n    } // fmp4 relies on browser support, while ts relies on muxer support\n\n    const supportFunction = (isFmp4, codec) => isFmp4 ? browserSupportsCodec(codec, this.usingManagedMediaSource_) : muxerSupportsCodec(codec);\n    const unsupportedCodecs = {};\n    let unsupportedAudio;\n    ['video', 'audio'].forEach(function (type) {\n      if (codecs.hasOwnProperty(type) && !supportFunction(media[type].isFmp4, codecs[type])) {\n        const supporter = media[type].isFmp4 ? 'browser' : 'muxer';\n        unsupportedCodecs[supporter] = unsupportedCodecs[supporter] || [];\n        unsupportedCodecs[supporter].push(codecs[type]);\n        if (type === 'audio') {\n          unsupportedAudio = supporter;\n        }\n      }\n    });\n    if (usingAudioLoader && unsupportedAudio && playlist.attributes.AUDIO) {\n      const audioGroup = playlist.attributes.AUDIO;\n      this.main().playlists.forEach(variant => {\n        const variantAudioGroup = variant.attributes && variant.attributes.AUDIO;\n        if (variantAudioGroup === audioGroup && variant !== playlist) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n      this.logger_(`excluding audio group ${audioGroup} as ${unsupportedAudio} does not support codec(s): \"${codecs.audio}\"`);\n    } // if we have any unsupported codecs exclude this playlist.\n\n    if (Object.keys(unsupportedCodecs).length) {\n      const message = Object.keys(unsupportedCodecs).reduce((acc, supporter) => {\n        if (acc) {\n          acc += ', ';\n        }\n        acc += `${supporter} does not support codec(s): \"${unsupportedCodecs[supporter].join(',')}\"`;\n        return acc;\n      }, '') + '.';\n      this.excludePlaylist({\n        playlistToExclude: playlist,\n        error: {\n          internal: true,\n          message\n        },\n        playlistExclusionDuration: Infinity\n      });\n      return;\n    } // check if codec switching is happening\n\n    if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {\n      const switchMessages = [];\n      ['video', 'audio'].forEach(type => {\n        const newCodec = (parseCodecs(this.sourceUpdater_.codecs[type] || '')[0] || {}).type;\n        const oldCodec = (parseCodecs(codecs[type] || '')[0] || {}).type;\n        if (newCodec && oldCodec && newCodec.toLowerCase() !== oldCodec.toLowerCase()) {\n          switchMessages.push(`\"${this.sourceUpdater_.codecs[type]}\" -> \"${codecs[type]}\"`);\n        }\n      });\n      if (switchMessages.length) {\n        this.excludePlaylist({\n          playlistToExclude: playlist,\n          error: {\n            message: `Codec switching not supported: ${switchMessages.join(', ')}.`,\n            internal: true\n          },\n          playlistExclusionDuration: Infinity\n        });\n        return;\n      }\n    } // TODO: when using the muxer shouldn't we just return\n    // the codecs that the muxer outputs?\n\n    return codecs;\n  }\n  /**\n   * Create source buffers and exlude any incompatible renditions.\n   *\n   * @private\n   */\n\n  tryToCreateSourceBuffers_() {\n    // media source is not ready yet or sourceBuffers are already\n    // created.\n    if (this.mediaSource.readyState !== 'open' || this.sourceUpdater_.hasCreatedSourceBuffers()) {\n      return;\n    }\n    if (!this.areMediaTypesKnown_()) {\n      return;\n    }\n    const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n    if (!codecs) {\n      return;\n    }\n    this.sourceUpdater_.createSourceBuffers(codecs);\n    const codecString = [codecs.video, codecs.audio].filter(Boolean).join(',');\n    this.excludeIncompatibleVariants_(codecString);\n  }\n  /**\n   * Excludes playlists with codecs that are unsupported by the muxer and browser.\n   */\n\n  excludeUnsupportedVariants_() {\n    const playlists = this.main().playlists;\n    const ids = []; // TODO: why don't we have a property to loop through all\n    // playlist? Why did we ever mix indexes and keys?\n\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key]; // check if we already processed this playlist.\n\n      if (ids.indexOf(variant.id) !== -1) {\n        return;\n      }\n      ids.push(variant.id);\n      const codecs = codecsForPlaylist(this.main, variant);\n      const unsupported = [];\n      if (codecs.audio && !muxerSupportsCodec(codecs.audio) && !browserSupportsCodec(codecs.audio, this.usingManagedMediaSource_)) {\n        unsupported.push(`audio codec ${codecs.audio}`);\n      }\n      if (codecs.video && !muxerSupportsCodec(codecs.video) && !browserSupportsCodec(codecs.video, this.usingManagedMediaSource_)) {\n        unsupported.push(`video codec ${codecs.video}`);\n      }\n      if (codecs.text && codecs.text === 'stpp.ttml.im1t') {\n        unsupported.push(`text codec ${codecs.text}`);\n      }\n      if (unsupported.length) {\n        variant.excludeUntil = Infinity;\n        this.logger_(`excluding ${variant.id} for unsupported: ${unsupported.join(', ')}`);\n      }\n    });\n  }\n  /**\n   * Exclude playlists that are known to be codec or\n   * stream-incompatible with the SourceBuffer configuration. For\n   * instance, Media Source Extensions would cause the video element to\n   * stall waiting for video data if you switched from a variant with\n   * video and audio to an audio-only one.\n   *\n   * @param {Object} media a media playlist compatible with the current\n   * set of SourceBuffers. Variants in the current main playlist that\n   * do not appear to have compatible codec or stream configurations\n   * will be excluded from the default playlist selection algorithm\n   * indefinitely.\n   * @private\n   */\n\n  excludeIncompatibleVariants_(codecString) {\n    const ids = [];\n    const playlists = this.main().playlists;\n    const codecs = unwrapCodecList(parseCodecs(codecString));\n    const codecCount_ = codecCount(codecs);\n    const videoDetails = codecs.video && parseCodecs(codecs.video)[0] || null;\n    const audioDetails = codecs.audio && parseCodecs(codecs.audio)[0] || null;\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key]; // check if we already processed this playlist.\n      // or it if it is already excluded forever.\n\n      if (ids.indexOf(variant.id) !== -1 || variant.excludeUntil === Infinity) {\n        return;\n      }\n      ids.push(variant.id);\n      const exclusionReasons = []; // get codecs from the playlist for this variant\n\n      const variantCodecs = codecsForPlaylist(this.mainPlaylistLoader_.main, variant);\n      const variantCodecCount = codecCount(variantCodecs); // if no codecs are listed, we cannot determine that this\n      // variant is incompatible. Wait for mux.js to probe\n\n      if (!variantCodecs.audio && !variantCodecs.video) {\n        return;\n      } // TODO: we can support this by removing the\n      // old media source and creating a new one, but it will take some work.\n      // The number of streams cannot change\n\n      if (variantCodecCount !== codecCount_) {\n        exclusionReasons.push(`codec count \"${variantCodecCount}\" !== \"${codecCount_}\"`);\n      } // only exclude playlists by codec change, if codecs cannot switch\n      // during playback.\n\n      if (!this.sourceUpdater_.canChangeType()) {\n        const variantVideoDetails = variantCodecs.video && parseCodecs(variantCodecs.video)[0] || null;\n        const variantAudioDetails = variantCodecs.audio && parseCodecs(variantCodecs.audio)[0] || null; // the video codec cannot change\n\n        if (variantVideoDetails && videoDetails && variantVideoDetails.type.toLowerCase() !== videoDetails.type.toLowerCase()) {\n          exclusionReasons.push(`video codec \"${variantVideoDetails.type}\" !== \"${videoDetails.type}\"`);\n        } // the audio codec cannot change\n\n        if (variantAudioDetails && audioDetails && variantAudioDetails.type.toLowerCase() !== audioDetails.type.toLowerCase()) {\n          exclusionReasons.push(`audio codec \"${variantAudioDetails.type}\" !== \"${audioDetails.type}\"`);\n        }\n      }\n      if (exclusionReasons.length) {\n        variant.excludeUntil = Infinity;\n        this.logger_(`excluding ${variant.id}: ${exclusionReasons.join(' && ')}`);\n      }\n    });\n  }\n  updateAdCues_(media) {\n    let offset = 0;\n    const seekable = this.seekable();\n    if (seekable.length) {\n      offset = seekable.start(0);\n    }\n    updateAdCues(media, this.cueTagsTrack_, offset);\n  }\n  /**\n   * Calculates the desired forward buffer length based on current time\n   *\n   * @return {number} Desired forward buffer length in seconds\n   */\n\n  goalBufferLength() {\n    const currentTime = this.tech_.currentTime();\n    const initial = Config.GOAL_BUFFER_LENGTH;\n    const rate = Config.GOAL_BUFFER_LENGTH_RATE;\n    const max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n    return Math.min(initial + currentTime * rate, max);\n  }\n  /**\n   * Calculates the desired buffer low water line based on current time\n   *\n   * @return {number} Desired buffer low water line in seconds\n   */\n\n  bufferLowWaterLine() {\n    const currentTime = this.tech_.currentTime();\n    const initial = Config.BUFFER_LOW_WATER_LINE;\n    const rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n    const max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n    const newMax = Math.max(initial, Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);\n    return Math.min(initial + currentTime * rate, this.bufferBasedABR ? newMax : max);\n  }\n  bufferHighWaterLine() {\n    return Config.BUFFER_HIGH_WATER_LINE;\n  }\n  addDateRangesToTextTrack_(dateRanges) {\n    createMetadataTrackIfNotExists(this.inbandTextTracks_, 'com.apple.streaming', this.tech_);\n    addDateRangeMetadata({\n      inbandTextTracks: this.inbandTextTracks_,\n      dateRanges\n    });\n  }\n  addMetadataToTextTrack(dispatchType, metadataArray, videoDuration) {\n    const timestampOffset = this.sourceUpdater_.videoBuffer ? this.sourceUpdater_.videoTimestampOffset() : this.sourceUpdater_.audioTimestampOffset(); // There's potentially an issue where we could double add metadata if there's a muxed\n    // audio/video source with a metadata track, and an alt audio with a metadata track.\n    // However, this probably won't happen, and if it does it can be handled then.\n\n    createMetadataTrackIfNotExists(this.inbandTextTracks_, dispatchType, this.tech_);\n    addMetadata({\n      inbandTextTracks: this.inbandTextTracks_,\n      metadataArray,\n      timestampOffset,\n      videoDuration\n    });\n  }\n  /**\n   * Utility for getting the pathway or service location from an HLS or DASH playlist.\n   *\n   * @param {Object} playlist for getting pathway from.\n   * @return the pathway attribute of a playlist\n   */\n\n  pathwayAttribute_(playlist) {\n    return playlist.attributes['PATHWAY-ID'] || playlist.attributes.serviceLocation;\n  }\n  /**\n   * Initialize available pathways and apply the tag properties.\n   */\n\n  initContentSteeringController_() {\n    const main = this.main();\n    if (!main.contentSteering) {\n      return;\n    }\n    for (const playlist of main.playlists) {\n      this.contentSteeringController_.addAvailablePathway(this.pathwayAttribute_(playlist));\n    }\n    this.contentSteeringController_.assignTagProperties(main.uri, main.contentSteering); // request the steering manifest immediately if queryBeforeStart is set.\n\n    if (this.contentSteeringController_.queryBeforeStart) {\n      // When queryBeforeStart is true, initial request should omit steering parameters.\n      this.contentSteeringController_.requestSteeringManifest(true);\n      return;\n    } // otherwise start content steering after playback starts\n\n    this.tech_.one('canplay', () => {\n      this.contentSteeringController_.requestSteeringManifest();\n    });\n  }\n  /**\n   * Reset the content steering controller and re-init.\n   */\n\n  resetContentSteeringController_() {\n    this.contentSteeringController_.clearAvailablePathways();\n    this.contentSteeringController_.dispose();\n    this.initContentSteeringController_();\n  }\n  /**\n   * Attaches the listeners for content steering.\n   */\n\n  attachContentSteeringListeners_() {\n    this.contentSteeringController_.on('content-steering', this.excludeThenChangePathway_.bind(this));\n    const contentSteeringEvents = ['contentsteeringloadstart', 'contentsteeringloadcomplete', 'contentsteeringparsed'];\n    contentSteeringEvents.forEach(eventName => {\n      this.contentSteeringController_.on(eventName, metadata => {\n        this.trigger(_extends({}, metadata));\n      });\n    });\n    if (this.sourceType_ === 'dash') {\n      this.mainPlaylistLoader_.on('loadedplaylist', () => {\n        const main = this.main(); // check if steering tag or pathways changed.\n\n        const didDashTagChange = this.contentSteeringController_.didDASHTagChange(main.uri, main.contentSteering);\n        const didPathwaysChange = () => {\n          const availablePathways = this.contentSteeringController_.getAvailablePathways();\n          const newPathways = [];\n          for (const playlist of main.playlists) {\n            const serviceLocation = playlist.attributes.serviceLocation;\n            if (serviceLocation) {\n              newPathways.push(serviceLocation);\n              if (!availablePathways.has(serviceLocation)) {\n                return true;\n              }\n            }\n          } // If we have no new serviceLocations and previously had availablePathways\n\n          if (!newPathways.length && availablePathways.size) {\n            return true;\n          }\n          return false;\n        };\n        if (didDashTagChange || didPathwaysChange()) {\n          this.resetContentSteeringController_();\n        }\n      });\n    }\n  }\n  /**\n   * Simple exclude and change playlist logic for content steering.\n   */\n\n  excludeThenChangePathway_() {\n    const currentPathway = this.contentSteeringController_.getPathway();\n    if (!currentPathway) {\n      return;\n    }\n    this.handlePathwayClones_();\n    const main = this.main();\n    const playlists = main.playlists;\n    const ids = new Set();\n    let didEnablePlaylists = false;\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key];\n      const pathwayId = this.pathwayAttribute_(variant);\n      const differentPathwayId = pathwayId && currentPathway !== pathwayId;\n      const steeringExclusion = variant.excludeUntil === Infinity && variant.lastExcludeReason_ === 'content-steering';\n      if (steeringExclusion && !differentPathwayId) {\n        delete variant.excludeUntil;\n        delete variant.lastExcludeReason_;\n        didEnablePlaylists = true;\n      }\n      const noExcludeUntil = !variant.excludeUntil && variant.excludeUntil !== Infinity;\n      const shouldExclude = !ids.has(variant.id) && differentPathwayId && noExcludeUntil;\n      if (!shouldExclude) {\n        return;\n      }\n      ids.add(variant.id);\n      variant.excludeUntil = Infinity;\n      variant.lastExcludeReason_ = 'content-steering'; // TODO: kind of spammy, maybe move this.\n\n      this.logger_(`excluding ${variant.id} for ${variant.lastExcludeReason_}`);\n    });\n    if (this.contentSteeringController_.manifestType_ === 'DASH') {\n      Object.keys(this.mediaTypes_).forEach(key => {\n        const type = this.mediaTypes_[key];\n        if (type.activePlaylistLoader) {\n          const currentPlaylist = type.activePlaylistLoader.media_; // Check if the current media playlist matches the current CDN\n\n          if (currentPlaylist && currentPlaylist.attributes.serviceLocation !== currentPathway) {\n            didEnablePlaylists = true;\n          }\n        }\n      });\n    }\n    if (didEnablePlaylists) {\n      this.changeSegmentPathway_();\n    }\n  }\n  /**\n   * Add, update, or delete playlists and media groups for\n   * the pathway clones for HLS Content Steering.\n   *\n   * See https://datatracker.ietf.org/doc/draft-pantos-hls-rfc8216bis/\n   *\n   * NOTE: Pathway cloning does not currently support the `PER_VARIANT_URIS` and\n   * `PER_RENDITION_URIS` as we do not handle `STABLE-VARIANT-ID` or\n   * `STABLE-RENDITION-ID` values.\n   */\n\n  handlePathwayClones_() {\n    const main = this.main();\n    const playlists = main.playlists;\n    const currentPathwayClones = this.contentSteeringController_.currentPathwayClones;\n    const nextPathwayClones = this.contentSteeringController_.nextPathwayClones;\n    const hasClones = currentPathwayClones && currentPathwayClones.size || nextPathwayClones && nextPathwayClones.size;\n    if (!hasClones) {\n      return;\n    }\n    for (const [id, clone] of currentPathwayClones.entries()) {\n      const newClone = nextPathwayClones.get(id); // Delete the old pathway clone.\n\n      if (!newClone) {\n        this.mainPlaylistLoader_.updateOrDeleteClone(clone);\n        this.contentSteeringController_.excludePathway(id);\n      }\n    }\n    for (const [id, clone] of nextPathwayClones.entries()) {\n      const oldClone = currentPathwayClones.get(id); // Create a new pathway if it is a new pathway clone object.\n\n      if (!oldClone) {\n        const playlistsToClone = playlists.filter(p => {\n          return p.attributes['PATHWAY-ID'] === clone['BASE-ID'];\n        });\n        playlistsToClone.forEach(p => {\n          this.mainPlaylistLoader_.addClonePathway(clone, p);\n        });\n        this.contentSteeringController_.addAvailablePathway(id);\n        continue;\n      } // There have not been changes to the pathway clone object, so skip.\n\n      if (this.equalPathwayClones_(oldClone, clone)) {\n        continue;\n      } // Update a preexisting cloned pathway.\n      // True is set for the update flag.\n\n      this.mainPlaylistLoader_.updateOrDeleteClone(clone, true);\n      this.contentSteeringController_.addAvailablePathway(id);\n    } // Deep copy contents of next to current pathways.\n\n    this.contentSteeringController_.currentPathwayClones = new Map(JSON.parse(JSON.stringify([...nextPathwayClones])));\n  }\n  /**\n   * Determines whether two pathway clone objects are equivalent.\n   *\n   * @param {Object} a The first pathway clone object.\n   * @param {Object} b The second pathway clone object.\n   * @return {boolean} True if the pathway clone objects are equal, false otherwise.\n   */\n\n  equalPathwayClones_(a, b) {\n    if (a['BASE-ID'] !== b['BASE-ID'] || a.ID !== b.ID || a['URI-REPLACEMENT'].HOST !== b['URI-REPLACEMENT'].HOST) {\n      return false;\n    }\n    const aParams = a['URI-REPLACEMENT'].PARAMS;\n    const bParams = b['URI-REPLACEMENT'].PARAMS; // We need to iterate through both lists of params because one could be\n    // missing a parameter that the other has.\n\n    for (const p in aParams) {\n      if (aParams[p] !== bParams[p]) {\n        return false;\n      }\n    }\n    for (const p in bParams) {\n      if (aParams[p] !== bParams[p]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Changes the current playlists for audio, video and subtitles after a new pathway\n   * is chosen from content steering.\n   */\n\n  changeSegmentPathway_() {\n    const nextPlaylist = this.selectPlaylist();\n    this.pauseLoading(); // Switch audio and text track playlists if necessary in DASH\n\n    if (this.contentSteeringController_.manifestType_ === 'DASH') {\n      this.switchMediaForDASHContentSteering_();\n    }\n    this.switchMedia_(nextPlaylist, 'content-steering');\n  }\n  /**\n   * Iterates through playlists and check their keyId set and compare with the\n   * keyStatusMap, only enable playlists that have a usable key. If the playlist\n   * has no keyId leave it enabled by default.\n   */\n\n  excludeNonUsablePlaylistsByKeyId_() {\n    if (!this.mainPlaylistLoader_ || !this.mainPlaylistLoader_.main) {\n      return;\n    }\n    let nonUsableKeyStatusCount = 0;\n    const NON_USABLE = 'non-usable';\n    this.mainPlaylistLoader_.main.playlists.forEach(playlist => {\n      const keyIdSet = this.mainPlaylistLoader_.getKeyIdSet(playlist); // If the playlist doesn't have keyIDs lets not exclude it.\n\n      if (!keyIdSet || !keyIdSet.size) {\n        return;\n      }\n      keyIdSet.forEach(key => {\n        const USABLE = 'usable';\n        const hasUsableKeyStatus = this.keyStatusMap_.has(key) && this.keyStatusMap_.get(key) === USABLE;\n        const nonUsableExclusion = playlist.lastExcludeReason_ === NON_USABLE && playlist.excludeUntil === Infinity;\n        if (!hasUsableKeyStatus) {\n          // Only exclude playlists that haven't already been excluded as non-usable.\n          if (playlist.excludeUntil !== Infinity && playlist.lastExcludeReason_ !== NON_USABLE) {\n            playlist.excludeUntil = Infinity;\n            playlist.lastExcludeReason_ = NON_USABLE;\n            this.logger_(`excluding playlist ${playlist.id} because the key ID ${key} doesn't exist in the keyStatusMap or is not ${USABLE}`);\n          } // count all nonUsableKeyStatus\n\n          nonUsableKeyStatusCount++;\n        } else if (hasUsableKeyStatus && nonUsableExclusion) {\n          delete playlist.excludeUntil;\n          delete playlist.lastExcludeReason_;\n          this.logger_(`enabling playlist ${playlist.id} because key ID ${key} is ${USABLE}`);\n        }\n      });\n    }); // If for whatever reason every playlist has a non usable key status. Lets try re-including the SD renditions as a failsafe.\n\n    if (nonUsableKeyStatusCount >= this.mainPlaylistLoader_.main.playlists.length) {\n      this.mainPlaylistLoader_.main.playlists.forEach(playlist => {\n        const isNonHD = playlist && playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height < 720;\n        const excludedForNonUsableKey = playlist.excludeUntil === Infinity && playlist.lastExcludeReason_ === NON_USABLE;\n        if (isNonHD && excludedForNonUsableKey) {\n          // Only delete the excludeUntil so we don't try and re-exclude these playlists.\n          delete playlist.excludeUntil;\n          videojs.log.warn(`enabling non-HD playlist ${playlist.id} because all playlists were excluded due to ${NON_USABLE} key IDs`);\n        }\n      });\n    }\n  }\n  /**\n   * Adds a keystatus to the keystatus map, tries to convert to string if necessary.\n   *\n   * @param {any} keyId the keyId to add a status for\n   * @param {string} status the status of the keyId\n   */\n\n  addKeyStatus_(keyId, status) {\n    const isString = typeof keyId === 'string';\n    const keyIdHexString = isString ? keyId : bufferToHexString(keyId);\n    const formattedKeyIdString = keyIdHexString.slice(0, 32).toLowerCase();\n    this.logger_(`KeyStatus '${status}' with key ID ${formattedKeyIdString} added to the keyStatusMap`);\n    this.keyStatusMap_.set(formattedKeyIdString, status);\n  }\n  /**\n   * Utility function for adding key status to the keyStatusMap and filtering usable encrypted playlists.\n   *\n   * @param {any} keyId the keyId from the keystatuschange event\n   * @param {string} status the key status string\n   */\n\n  updatePlaylistByKeyStatus(keyId, status) {\n    this.addKeyStatus_(keyId, status);\n    if (!this.waitingForFastQualityPlaylistReceived_) {\n      this.excludeNonUsableThenChangePlaylist_();\n    } // Listen to loadedplaylist with a single listener and check for new contentProtection elements when a playlist is updated.\n\n    this.mainPlaylistLoader_.off('loadedplaylist', this.excludeNonUsableThenChangePlaylist_.bind(this));\n    this.mainPlaylistLoader_.on('loadedplaylist', this.excludeNonUsableThenChangePlaylist_.bind(this));\n  }\n  excludeNonUsableThenChangePlaylist_() {\n    this.excludeNonUsablePlaylistsByKeyId_();\n    this.fastQualityChange_();\n  }\n}\n\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The main playlist loader\n * @param {string} playlistID - id of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\nconst enableFunction = (loader, playlistID, changePlaylistFn) => enable => {\n  const playlist = loader.main.playlists[playlistID];\n  const incompatible = isIncompatible(playlist);\n  const currentlyEnabled = isEnabled(playlist);\n  if (typeof enable === 'undefined') {\n    return currentlyEnabled;\n  }\n  if (enable) {\n    delete playlist.disabled;\n  } else {\n    playlist.disabled = true;\n  }\n  const metadata = {\n    renditionInfo: {\n      id: playlistID,\n      bandwidth: playlist.attributes.BANDWIDTH,\n      resolution: playlist.attributes.RESOLUTION,\n      codecs: playlist.attributes.CODECS\n    },\n    cause: 'fast-quality'\n  };\n  if (enable !== currentlyEnabled && !incompatible) {\n    // Ensure the outside world knows about our changes\n    if (enable) {\n      // call fast quality change only when the playlist is enabled\n      changePlaylistFn(playlist);\n      loader.trigger({\n        type: 'renditionenabled',\n        metadata\n      });\n    } else {\n      loader.trigger({\n        type: 'renditiondisabled',\n        metadata\n      });\n    }\n  }\n  return enable;\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nclass Representation {\n  constructor(vhsHandler, playlist, id) {\n    const {\n      playlistController_: pc\n    } = vhsHandler;\n    const qualityChangeFunction = pc.fastQualityChange_.bind(pc); // some playlist attributes are optional\n\n    if (playlist.attributes) {\n      const resolution = playlist.attributes.RESOLUTION;\n      this.width = resolution && resolution.width;\n      this.height = resolution && resolution.height;\n      this.bandwidth = playlist.attributes.BANDWIDTH;\n      this.frameRate = playlist.attributes['FRAME-RATE'];\n    }\n    this.codecs = codecsForPlaylist(pc.main(), playlist);\n    this.playlist = playlist; // The id is simply the ordinality of the media playlist\n    // within the main playlist\n\n    this.id = id; // Partially-apply the enableFunction to create a playlist-\n    // specific variant\n\n    this.enabled = enableFunction(vhsHandler.playlists, playlist.id, qualityChangeFunction);\n  }\n}\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the VhsHandler class\n *\n * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the\n * representation API into\n */\n\nconst renditionSelectionMixin = function (vhsHandler) {\n  // Add a single API-specific function to the VhsHandler instance\n  vhsHandler.representations = () => {\n    const main = vhsHandler.playlistController_.main();\n    const playlists = isAudioOnly(main) ? vhsHandler.playlistController_.getAudioTrackPlaylists_() : main.playlists;\n    if (!playlists) {\n      return [];\n    }\n    return playlists.filter(media => !isIncompatible(media)).map((e, i) => new Representation(vhsHandler, e, e.id));\n  };\n};\n\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\nconst timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nclass PlaybackWatcher extends videojs.EventTarget {\n  /**\n   * Represents an PlaybackWatcher object.\n   *\n   * @class\n   * @param {Object} options an object that includes the tech and settings\n   */\n  constructor(options) {\n    super();\n    this.playlistController_ = options.playlistController;\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.liveRangeSafeTimeDelta = options.liveRangeSafeTimeDelta;\n    this.media = options.media;\n    this.playedRanges_ = [];\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n    const playHandler = () => this.monitorCurrentTime_();\n    const canPlayHandler = () => this.monitorCurrentTime_();\n    const waitingHandler = () => this.techWaiting_();\n    const cancelTimerHandler = () => this.resetTimeUpdate_();\n    const pc = this.playlistController_;\n    const loaderTypes = ['main', 'subtitle', 'audio'];\n    const loaderChecks = {};\n    loaderTypes.forEach(type => {\n      loaderChecks[type] = {\n        reset: () => this.resetSegmentDownloads_(type),\n        updateend: () => this.checkSegmentDownloads_(type)\n      };\n      pc[`${type}SegmentLoader_`].on('appendsdone', loaderChecks[type].updateend); // If a rendition switch happens during a playback stall where the buffer\n      // isn't changing we want to reset. We cannot assume that the new rendition\n      // will also be stalled, until after new appends.\n\n      pc[`${type}SegmentLoader_`].on('playlistupdate', loaderChecks[type].reset); // Playback stalls should not be detected right after seeking.\n      // This prevents one segment playlists (single vtt or single segment content)\n      // from being detected as stalling. As the buffer will not change in those cases, since\n      // the buffer is the entire video duration.\n\n      this.tech_.on(['seeked', 'seeking'], loaderChecks[type].reset);\n    });\n    /**\n     * We check if a seek was into a gap through the following steps:\n     * 1. We get a seeking event and we do not get a seeked event. This means that\n     *    a seek was attempted but not completed.\n     * 2. We run `fixesBadSeeks_` on segment loader appends. This means that we already\n     *    removed everything from our buffer and appended a segment, and should be ready\n     *    to check for gaps.\n     */\n\n    const setSeekingHandlers = fn => {\n      ['main', 'audio'].forEach(type => {\n        pc[`${type}SegmentLoader_`][fn]('appended', this.seekingAppendCheck_);\n      });\n    };\n    this.seekingAppendCheck_ = () => {\n      if (this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        setSeekingHandlers('off');\n      }\n    };\n    this.clearSeekingAppendCheck_ = () => setSeekingHandlers('off');\n    this.watchForBadSeeking_ = () => {\n      this.clearSeekingAppendCheck_();\n      setSeekingHandlers('on');\n    };\n    this.tech_.on('seeked', this.clearSeekingAppendCheck_);\n    this.tech_.on('seeking', this.watchForBadSeeking_);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n    /*\n      An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case\n      is surfaced in one of two ways:\n       1)  The `waiting` event is fired before the player has buffered content, making it impossible\n          to find or skip the gap. The `waiting` event is followed by a `play` event. On first play\n          we can check if playback is stalled due to a gap, and skip the gap if necessary.\n      2)  A source with a gap at the beginning of the stream is loaded programatically while the player\n          is in a playing state. To catch this case, it's important that our one-time play listener is setup\n          even if the player is in a playing state\n    */\n\n    this.tech_.one('play', playHandler); // Define the dispose function to clean up our events\n\n    this.dispose = () => {\n      this.clearSeekingAppendCheck_();\n      this.logger_('dispose');\n      this.tech_.off('waiting', waitingHandler);\n      this.tech_.off(timerCancelEvents, cancelTimerHandler);\n      this.tech_.off('canplay', canPlayHandler);\n      this.tech_.off('play', playHandler);\n      this.tech_.off('seeking', this.watchForBadSeeking_);\n      this.tech_.off('seeked', this.clearSeekingAppendCheck_);\n      loaderTypes.forEach(type => {\n        pc[`${type}SegmentLoader_`].off('appendsdone', loaderChecks[type].updateend);\n        pc[`${type}SegmentLoader_`].off('playlistupdate', loaderChecks[type].reset);\n        this.tech_.off(['seeked', 'seeking'], loaderChecks[type].reset);\n      });\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      }\n      this.resetTimeUpdate_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n  monitorCurrentTime_() {\n    this.checkCurrentTime_();\n    if (this.checkCurrentTimeTimeout_) {\n      window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n    } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n    this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n  }\n  /**\n   * Reset stalled download stats for a specific type of loader\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#playlistupdate\n   * @listens Tech#seeking\n   * @listens Tech#seeked\n   */\n\n  resetSegmentDownloads_(type) {\n    const loader = this.playlistController_[`${type}SegmentLoader_`];\n    if (this[`${type}StalledDownloads_`] > 0) {\n      this.logger_(`resetting possible stalled download count for ${type} loader`);\n    }\n    this[`${type}StalledDownloads_`] = 0;\n    this[`${type}Buffered_`] = loader.buffered_();\n  }\n  /**\n   * Checks on every segment `appendsdone` to see\n   * if segment appends are making progress. If they are not\n   * and we are still downloading bytes. We exclude the playlist.\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#appendsdone\n   */\n\n  checkSegmentDownloads_(type) {\n    const pc = this.playlistController_;\n    const loader = pc[`${type}SegmentLoader_`];\n    const buffered = loader.buffered_();\n    const isBufferedDifferent = isRangeDifferent(this[`${type}Buffered_`], buffered);\n    this[`${type}Buffered_`] = buffered; // if another watcher is going to fix the issue or\n    // the buffered value for this loader changed\n    // appends are working\n\n    if (isBufferedDifferent) {\n      const metadata = {\n        bufferedRanges: buffered\n      };\n      pc.trigger({\n        type: 'bufferedrangeschanged',\n        metadata\n      });\n      this.resetSegmentDownloads_(type);\n      return;\n    }\n    this[`${type}StalledDownloads_`]++;\n    this.logger_(`found #${this[`${type}StalledDownloads_`]} ${type} appends that did not increase buffer (possible stalled download)`, {\n      playlistId: loader.playlist_ && loader.playlist_.id,\n      buffered: timeRangesToArray(buffered)\n    }); // after 10 possibly stalled appends with no reset, exclude\n\n    if (this[`${type}StalledDownloads_`] < 10) {\n      return;\n    }\n    this.logger_(`${type} loader stalled download exclusion`);\n    this.resetSegmentDownloads_(type);\n    this.tech_.trigger({\n      type: 'usage',\n      name: `vhs-${type}-download-exclusion`\n    });\n    if (type === 'subtitle') {\n      return;\n    } // TODO: should we exclude audio tracks rather than main tracks\n    // when type is audio?\n\n    pc.excludePlaylist({\n      error: {\n        message: `Excessive ${type} segment downloading detected.`\n      },\n      playlistExclusionDuration: Infinity\n    });\n  }\n  /**\n   * The purpose of this function is to emulate the \"waiting\" event on\n   * browsers that do not emit it when they are waiting for more\n   * data to continue playback\n   *\n   * @private\n   */\n\n  checkCurrentTime_() {\n    if (this.tech_.paused() || this.tech_.seeking()) {\n      return;\n    }\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n      // If current time is at the end of the final buffered region, then any playback\n      // stall is most likely caused by buffering in a low bandwidth environment. The tech\n      // should fire a `waiting` event in this scenario, but due to browser and tech\n      // inconsistencies. Calling `techWaiting_` here allows us to simulate\n      // responding to a native `waiting` event when the tech fails to emit one.\n      return this.techWaiting_();\n    }\n    if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n      this.waiting_();\n    } else if (currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n    } else {\n      this.playedRanges_.push(createTimeRanges([this.lastRecordedTime, currentTime]));\n      const metadata = {\n        playedRanges: this.playedRanges_\n      };\n      this.playlistController_.trigger({\n        type: 'playedrangeschanged',\n        metadata\n      });\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = currentTime;\n    }\n  }\n  /**\n   * Resets the 'timeupdate' mechanism designed to detect that we are stalled\n   *\n   * @private\n   */\n\n  resetTimeUpdate_() {\n    this.consecutiveUpdates = 0;\n  }\n  /**\n   * Fixes situations where there's a bad seek\n   *\n   * @return {boolean} whether an action was taken to fix the seek\n   * @private\n   */\n\n  fixesBadSeeks_() {\n    const seeking = this.tech_.seeking();\n    if (!seeking) {\n      return false;\n    } // TODO: It's possible that these seekable checks should be moved out of this function\n    // and into a function that runs on seekablechange. It's also possible that we only need\n    // afterSeekableWindow as the buffered check at the bottom is good enough to handle before\n    // seekable range.\n\n    const seekable = this.seekable();\n    const currentTime = this.tech_.currentTime();\n    const isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n    let seekTo;\n    if (isAfterSeekableRange) {\n      const seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n      seekTo = seekableEnd;\n    }\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      const seekableStart = seekable.start(0); // sync to the beginning of the live window\n      // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n      seekTo = seekableStart + (\n      // if the playlist is too short and the seekable range is an exact time (can\n      // happen in live with a 3 segment playlist), then don't use a time delta\n      seekableStart === seekable.end(0) ? 0 : SAFE_TIME_DELTA);\n    }\n    if (typeof seekTo !== 'undefined') {\n      this.logger_(`Trying to seek outside of seekable at time ${currentTime} with ` + `seekable range ${printableRange(seekable)}. Seeking to ` + `${seekTo}.`);\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n    const sourceUpdater = this.playlistController_.sourceUpdater_;\n    const buffered = this.tech_.buffered();\n    const audioBuffered = sourceUpdater.audioBuffer ? sourceUpdater.audioBuffered() : null;\n    const videoBuffered = sourceUpdater.videoBuffer ? sourceUpdater.videoBuffered() : null;\n    const media = this.media(); // verify that at least two segment durations or one part duration have been\n    // appended before checking for a gap.\n\n    const minAppendedDuration = media.partTargetDuration ? media.partTargetDuration : (media.targetDuration - TIME_FUDGE_FACTOR) * 2; // verify that at least two segment durations have been\n    // appended before checking for a gap.\n\n    const bufferedToCheck = [audioBuffered, videoBuffered];\n    for (let i = 0; i < bufferedToCheck.length; i++) {\n      // skip null buffered\n      if (!bufferedToCheck[i]) {\n        continue;\n      }\n      const timeAhead = timeAheadOf(bufferedToCheck[i], currentTime); // if we are less than two video/audio segment durations or one part\n      // duration behind we haven't appended enough to call this a bad seek.\n\n      if (timeAhead < minAppendedDuration) {\n        return false;\n      }\n    }\n    const nextRange = findNextRange(buffered, currentTime); // we have appended enough content, but we don't have anything buffered\n    // to seek over the gap\n\n    if (nextRange.length === 0) {\n      return false;\n    }\n    seekTo = nextRange.start(0) + SAFE_TIME_DELTA;\n    this.logger_(`Buffered region starts (${nextRange.start(0)}) ` + ` just beyond seek point (${currentTime}). Seeking to ${seekTo}.`);\n    this.tech_.setCurrentTime(seekTo);\n    return true;\n  }\n  /**\n   * Handler for situations when we determine the player is waiting.\n   *\n   * @private\n   */\n\n  waiting_() {\n    if (this.techWaiting_()) {\n      return;\n    } // All tech waiting checks failed. Use last resort correction\n\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    const currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n    // region with no indication that anything is amiss (seen in Firefox). Seeking to\n    // currentTime is usually enough to kickstart the player. This checks that the player\n    // is currently within a buffered region before attempting a corrective seek.\n    // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n    // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n    // make sure there is ~3 seconds of forward buffer before taking any corrective action\n    // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n    if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(currentTime);\n      this.logger_(`Stopped at ${currentTime} while inside a buffered region ` + `[${currentRange.start(0)} -> ${currentRange.end(0)}]. Attempting to resume ` + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-unknown-waiting'\n      });\n      return;\n    }\n  }\n  /**\n   * Handler for situations when the tech fires a `waiting` event\n   *\n   * @return {boolean}\n   *         True if an action (or none) was needed to correct the waiting. False if no\n   *         checks passed\n   * @private\n   */\n\n  techWaiting_() {\n    const seekable = this.seekable();\n    const currentTime = this.tech_.currentTime();\n    if (this.tech_.seeking()) {\n      // Tech is seeking or already waiting on another action, no action needed\n      return true;\n    }\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      const livePoint = seekable.end(seekable.length - 1);\n      this.logger_(`Fell out of live window at time ${currentTime}. Seeking to ` + `live point (seekable end) ${livePoint}`);\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-live-resync'\n      });\n      return true;\n    }\n    const sourceUpdater = this.tech_.vhs.playlistController_.sourceUpdater_;\n    const buffered = this.tech_.buffered();\n    const videoUnderflow = this.videoUnderflow_({\n      audioBuffered: sourceUpdater.audioBuffered(),\n      videoBuffered: sourceUpdater.videoBuffered(),\n      currentTime\n    });\n    if (videoUnderflow) {\n      // Even though the video underflowed and was stuck in a gap, the audio overplayed\n      // the gap, leading currentTime into a buffered range. Seeking to currentTime\n      // allows the video to catch up to the audio position without losing any audio\n      // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-video-underflow'\n      });\n      return true;\n    }\n    const nextRange = findNextRange(buffered, currentTime); // check for gap\n\n    if (nextRange.length > 0) {\n      this.logger_(`Stopped at ${currentTime} and seeking to ${nextRange.start(0)}`);\n      this.resetTimeUpdate_();\n      this.skipTheGap_(currentTime);\n      return true;\n    } // All checks failed. Returning false to indicate failure to correct waiting\n\n    return false;\n  }\n  afterSeekableWindow_(seekable, currentTime, playlist, allowSeeksWithinUnsafeLiveWindow = false) {\n    if (!seekable.length) {\n      // we can't make a solid case if there's no seekable, default to false\n      return false;\n    }\n    let allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n    const isLive = !playlist.endList;\n    const isLLHLS = typeof playlist.partTargetDuration === 'number';\n    if (isLive && (isLLHLS || allowSeeksWithinUnsafeLiveWindow)) {\n      allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n    }\n    if (currentTime > allowedEnd) {\n      return true;\n    }\n    return false;\n  }\n  beforeSeekableWindow_(seekable, currentTime) {\n    if (seekable.length &&\n    // can't fall before 0 and 0 seekable start identifies VOD stream\n    seekable.start(0) > 0 && currentTime < seekable.start(0) - this.liveRangeSafeTimeDelta) {\n      return true;\n    }\n    return false;\n  }\n  videoUnderflow_({\n    videoBuffered,\n    audioBuffered,\n    currentTime\n  }) {\n    // audio only content will not have video underflow :)\n    if (!videoBuffered) {\n      return;\n    }\n    let gap; // find a gap in demuxed content.\n\n    if (videoBuffered.length && audioBuffered.length) {\n      // in Chrome audio will continue to play for ~3s when we run out of video\n      // so we have to check that the video buffer did have some buffer in the\n      // past.\n      const lastVideoRange = findRange(videoBuffered, currentTime - 3);\n      const videoRange = findRange(videoBuffered, currentTime);\n      const audioRange = findRange(audioBuffered, currentTime);\n      if (audioRange.length && !videoRange.length && lastVideoRange.length) {\n        gap = {\n          start: lastVideoRange.end(0),\n          end: audioRange.end(0)\n        };\n      } // find a gap in muxed content.\n    } else {\n      const nextRange = findNextRange(videoBuffered, currentTime); // Even if there is no available next range, there is still a possibility we are\n      // stuck in a gap due to video underflow.\n\n      if (!nextRange.length) {\n        gap = this.gapFromVideoUnderflow_(videoBuffered, currentTime);\n      }\n    }\n    if (gap) {\n      this.logger_(`Encountered a gap in video from ${gap.start} to ${gap.end}. ` + `Seeking to current time ${currentTime}`);\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Timer callback. If playback still has not proceeded, then we seek\n   * to the start of the next buffered region.\n   *\n   * @private\n   */\n\n  skipTheGap_(scheduledCurrentTime) {\n    const buffered = this.tech_.buffered();\n    const currentTime = this.tech_.currentTime();\n    const nextRange = findNextRange(buffered, currentTime);\n    this.resetTimeUpdate_();\n    if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n      return;\n    }\n    this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n    this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n    const metadata = {\n      gapInfo: {\n        from: currentTime,\n        to: nextRange.start(0)\n      }\n    };\n    this.playlistController_.trigger({\n      type: 'gapjumped',\n      metadata\n    });\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-gap-skip'\n    });\n  }\n  gapFromVideoUnderflow_(buffered, currentTime) {\n    // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n    // playing for ~3 seconds after the video gap starts. This is done to account for\n    // video buffer underflow/underrun (note that this is not done when there is audio\n    // buffer underflow/underrun -- in that case the video will stop as soon as it\n    // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n    // video stalls). The player's time will reflect the playthrough of audio, so the\n    // time will appear as if we are in a buffered region, even if we are stuck in a\n    // \"gap.\"\n    //\n    // Example:\n    // video buffer:   0 => 10.1, 10.2 => 20\n    // audio buffer:   0 => 20\n    // overall buffer: 0 => 10.1, 10.2 => 20\n    // current time: 13\n    //\n    // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n    // however, the audio continued playing until it reached ~3 seconds past the gap\n    // (13 seconds), at which point it stops as well. Since current time is past the\n    // gap, findNextRange will return no ranges.\n    //\n    // To check for this issue, we see if there is a gap that starts somewhere within\n    // a 3 second range (3 seconds +/- 1 second) back from our current time.\n    const gaps = findGaps(buffered);\n    for (let i = 0; i < gaps.length; i++) {\n      const start = gaps.start(i);\n      const end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n      if (currentTime - start < 4 && currentTime - start > 2) {\n        return {\n          start,\n          end\n        };\n      }\n    }\n    return null;\n  }\n}\nconst defaultOptions = {\n  errorInterval: 30,\n  getSource(next) {\n    const tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    const sourceObj = tech.currentSource_ || this.currentSource();\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nconst initPlugin = function (player, options) {\n  let lastCalled = 0;\n  let seekTo = 0;\n  const localOptions = merge(defaultOptions, options);\n  player.ready(() => {\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  const loadedMetadataHandler = function () {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n  const setSource = function (sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n  const errorHandler = function () {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload-canceled'\n      });\n      return;\n    }\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n  const cleanupEvents = function () {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n  const reinitPlugin = function (newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\nconst reloadSourceOnError = function (options) {\n  initPlugin(this, options);\n};\nvar version$4 = \"3.16.2\";\nvar version$3 = \"7.1.0\";\nvar version$2 = \"1.3.1\";\nvar version$1 = \"7.2.0\";\nvar version = \"4.0.2\";\nconst Vhs = {\n  PlaylistLoader,\n  Playlist,\n  utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  lastBandwidthSelector,\n  movingAverageBandwidthSelector,\n  comparePlaylistBandwidth,\n  comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properties\n\nObject.keys(Config).forEach(prop => {\n  Object.defineProperty(Vhs, prop, {\n    get() {\n      videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n      return Config[prop];\n    },\n    set(value) {\n      videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n      if (typeof value !== 'number' || value < 0) {\n        videojs.log.warn(`value of Vhs.${prop} must be greater than or equal to 0`);\n        return;\n      }\n      Config[prop] = value;\n    }\n  });\n});\nconst LOCAL_STORAGE_KEY = 'videojs-vhs';\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleVhsMediaChange\n */\n\nconst handleVhsMediaChange = function (qualityLevels, playlistLoader) {\n  const newPlaylist = playlistLoader.media();\n  let selectedIndex = -1;\n  for (let i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.id) {\n      selectedIndex = i;\n      break;\n    }\n  }\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} vhs Vhs object to listen to for media events.\n * @function handleVhsLoadedMetadata\n */\n\nconst handleVhsLoadedMetadata = function (qualityLevels, vhs) {\n  vhs.representations().forEach(rep => {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleVhsMediaChange(qualityLevels, vhs.playlists);\n}; // VHS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\nVhs.canPlaySource = function () {\n  return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\nconst emeKeySystems = (keySystemOptions, mainPlaylist, audioPlaylist) => {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n  let codecs = {};\n  if (mainPlaylist && mainPlaylist.attributes && mainPlaylist.attributes.CODECS) {\n    codecs = unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));\n  }\n  if (audioPlaylist && audioPlaylist.attributes && audioPlaylist.attributes.CODECS) {\n    codecs.audio = audioPlaylist.attributes.CODECS;\n  }\n  const videoContentType = getMimeForCodec(codecs.video);\n  const audioContentType = getMimeForCodec(codecs.audio); // upsert the content types based on the selected playlist\n\n  const keySystemContentTypes = {};\n  for (const keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {};\n    if (audioContentType) {\n      keySystemContentTypes[keySystem].audioContentType = audioContentType;\n    }\n    if (videoContentType) {\n      keySystemContentTypes[keySystem].videoContentType = videoContentType;\n    } // Default to using the video playlist's PSSH even though they may be different, as\n    // videojs-contrib-eme will only accept one in the options.\n    //\n    // This shouldn't be an issue for most cases as early intialization will handle all\n    // unique PSSH values, and if they aren't, then encrypted events should have the\n    // specific information needed for the unique license.\n\n    if (mainPlaylist.contentProtection && mainPlaylist.contentProtection[keySystem] && mainPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = mainPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n  return merge(keySystemOptions, keySystemContentTypes);\n};\n/**\n * @typedef {Object} KeySystems\n *\n * keySystems configuration for https://github.com/videojs/videojs-contrib-eme\n * Note: not all options are listed here.\n *\n * @property {Uint8Array} [pssh]\n *           Protection System Specific Header\n */\n\n/**\n * Goes through all the playlists and collects an array of KeySystems options objects\n * containing each playlist's keySystems and their pssh values, if available.\n *\n * @param {Object[]} playlists\n *        The playlists to look through\n * @param {string[]} keySystems\n *        The keySystems to collect pssh values for\n *\n * @return {KeySystems[]}\n *         An array of KeySystems objects containing available key systems and their\n *         pssh values\n */\n\nconst getAllPsshKeySystemsOptions = (playlists, keySystems) => {\n  return playlists.reduce((keySystemsArr, playlist) => {\n    if (!playlist.contentProtection) {\n      return keySystemsArr;\n    }\n    const keySystemsOptions = keySystems.reduce((keySystemsObj, keySystem) => {\n      const keySystemOptions = playlist.contentProtection[keySystem];\n      if (keySystemOptions && keySystemOptions.pssh) {\n        keySystemsObj[keySystem] = {\n          pssh: keySystemOptions.pssh\n        };\n      }\n      return keySystemsObj;\n    }, {});\n    if (Object.keys(keySystemsOptions).length) {\n      keySystemsArr.push(keySystemsOptions);\n    }\n    return keySystemsArr;\n  }, []);\n};\n/**\n * Returns a promise that waits for the\n * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.\n *\n * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11\n * browsers.\n *\n * As per the above ticket, this is particularly important for Chrome, where, if\n * unencrypted content is appended before encrypted content and the key session has not\n * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached\n * during playback.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n * @param {Object[]} mainPlaylists\n *        The playlists found on the main playlist object\n *\n * @return {Object}\n *         Promise that resolves when the key session has been created\n */\n\nconst waitForKeySessionCreation = ({\n  player,\n  sourceKeySystems,\n  audioMedia,\n  mainPlaylists\n}) => {\n  if (!player.eme.initializeMediaKeys) {\n    return Promise.resolve();\n  } // TODO should all audio PSSH values be initialized for DRM?\n  //\n  // All unique video rendition pssh values are initialized for DRM, but here only\n  // the initial audio playlist license is initialized. In theory, an encrypted\n  // event should be fired if the user switches to an alternative audio playlist\n  // where a license is required, but this case hasn't yet been tested. In addition, there\n  // may be many alternate audio playlists unlikely to be used (e.g., multiple different\n  // languages).\n\n  const playlists = audioMedia ? mainPlaylists.concat([audioMedia]) : mainPlaylists;\n  const keySystemsOptionsArr = getAllPsshKeySystemsOptions(playlists, Object.keys(sourceKeySystems));\n  const initializationFinishedPromises = [];\n  const keySessionCreatedPromises = []; // Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The\n  // only place where it should not be deduped is for ms-prefixed APIs, but\n  // the existence of modern EME APIs in addition to\n  // ms-prefixed APIs on Edge should prevent this from being a concern.\n  // initializeMediaKeys also won't use the webkit-prefixed APIs.\n\n  keySystemsOptionsArr.forEach(keySystemsOptions => {\n    keySessionCreatedPromises.push(new Promise((resolve, reject) => {\n      player.tech_.one('keysessioncreated', resolve);\n    }));\n    initializationFinishedPromises.push(new Promise((resolve, reject) => {\n      player.eme.initializeMediaKeys({\n        keySystems: keySystemsOptions\n      }, err => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve();\n      });\n    }));\n  }); // The reasons Promise.race is chosen over Promise.any:\n  //\n  // * Promise.any is only available in Safari 14+.\n  // * None of these promises are expected to reject. If they do reject, it might be\n  //   better here for the race to surface the rejection, rather than mask it by using\n  //   Promise.any.\n\n  return Promise.race([\n  // If a session was previously created, these will all finish resolving without\n  // creating a new session, otherwise it will take until the end of all license\n  // requests, which is why the key session check is used (to make setup much faster).\n  Promise.all(initializationFinishedPromises),\n  // Once a single session is created, the browser knows DRM will be used.\n  Promise.race(keySessionCreatedPromises)]);\n};\n/**\n * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and\n * there are keySystems on the source, sets up source options to prepare the source for\n * eme.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} media\n *        The active media playlist\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n *\n * @return {boolean}\n *         Whether or not options were configured and EME is available\n */\n\nconst setupEmeOptions = ({\n  player,\n  sourceKeySystems,\n  media,\n  audioMedia\n}) => {\n  const sourceOptions = emeKeySystems(sourceKeySystems, media, audioMedia);\n  if (!sourceOptions) {\n    return false;\n  }\n  player.currentSource().keySystems = sourceOptions; // eme handles the rest of the setup, so if it is missing\n  // do nothing.\n\n  if (sourceOptions && !player.eme) {\n    videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');\n    return false;\n  }\n  return true;\n};\nconst getVhsLocalStorage = () => {\n  if (!window$1.localStorage) {\n    return null;\n  }\n  const storedObject = window$1.localStorage.getItem(LOCAL_STORAGE_KEY);\n  if (!storedObject) {\n    return null;\n  }\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\nconst updateVhsLocalStorage = options => {\n  if (!window$1.localStorage) {\n    return false;\n  }\n  let objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? merge(objectToStore, options) : options;\n  try {\n    window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n  return objectToStore;\n};\n/**\n * Parses VHS-supported media types from data URIs. See\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n * for information on data URIs.\n *\n * @param {string} dataUri\n *        The data URI\n *\n * @return {string|Object}\n *         The parsed object/string, or the original string if no supported media type\n *         was found\n */\n\nconst expandDataUri = dataUri => {\n  if (dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,') === 0) {\n    return JSON.parse(dataUri.substring(dataUri.indexOf(',') + 1));\n  } // no known case for this data URI, return the string as-is\n\n  return dataUri;\n};\n/**\n * Adds a request hook to an xhr object\n *\n * @param {Object} xhr object to add the onRequest hook to\n * @param {function} callback hook function for an xhr request\n */\n\nconst addOnRequestHook = (xhr, callback) => {\n  if (!xhr._requestCallbackSet) {\n    xhr._requestCallbackSet = new Set();\n  }\n  xhr._requestCallbackSet.add(callback);\n};\n/**\n * Adds a response hook to an xhr object\n *\n * @param {Object} xhr object to add the onResponse hook to\n * @param {function} callback hook function for an xhr response\n */\n\nconst addOnResponseHook = (xhr, callback) => {\n  if (!xhr._responseCallbackSet) {\n    xhr._responseCallbackSet = new Set();\n  }\n  xhr._responseCallbackSet.add(callback);\n};\n/**\n * Removes a request hook on an xhr object, deletes the onRequest set if empty.\n *\n * @param {Object} xhr object to remove the onRequest hook from\n * @param {function} callback hook function to remove\n */\n\nconst removeOnRequestHook = (xhr, callback) => {\n  if (!xhr._requestCallbackSet) {\n    return;\n  }\n  xhr._requestCallbackSet.delete(callback);\n  if (!xhr._requestCallbackSet.size) {\n    delete xhr._requestCallbackSet;\n  }\n};\n/**\n * Removes a response hook on an xhr object, deletes the onResponse set if empty.\n *\n * @param {Object} xhr object to remove the onResponse hook from\n * @param {function} callback hook function to remove\n */\n\nconst removeOnResponseHook = (xhr, callback) => {\n  if (!xhr._responseCallbackSet) {\n    return;\n  }\n  xhr._responseCallbackSet.delete(callback);\n  if (!xhr._responseCallbackSet.size) {\n    delete xhr._responseCallbackSet;\n  }\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\nVhs.supportsNativeHls = function () {\n  if (!document$1 || !document$1.createElement) {\n    return false;\n  }\n  const video = document$1.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n  const canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\nVhs.supportsNativeDash = function () {\n  if (!document$1 || !document$1.createElement || !videojs.getTech('Html5').isSupported()) {\n    return false;\n  }\n  return /maybe|probably/i.test(document$1.createElement('video').canPlayType('application/dash+xml'));\n}();\nVhs.supportsTypeNatively = type => {\n  if (type === 'hls') {\n    return Vhs.supportsNativeHls;\n  }\n  if (type === 'dash') {\n    return Vhs.supportsNativeDash;\n  }\n  return false;\n};\n/**\n * VHS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\nVhs.isSupported = function () {\n  return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n/**\n * A global function for setting an onRequest hook\n *\n * @param {function} callback for request modifiction\n */\n\nVhs.xhr.onRequest = function (callback) {\n  addOnRequestHook(Vhs.xhr, callback);\n};\n/**\n * A global function for setting an onResponse hook\n *\n * @param {callback} callback for response data retrieval\n */\n\nVhs.xhr.onResponse = function (callback) {\n  addOnResponseHook(Vhs.xhr, callback);\n};\n/**\n * Deletes a global onRequest callback if it exists\n *\n * @param {function} callback to delete from the global set\n */\n\nVhs.xhr.offRequest = function (callback) {\n  removeOnRequestHook(Vhs.xhr, callback);\n};\n/**\n * Deletes a global onResponse callback if it exists\n *\n * @param {function} callback to delete from the global set\n */\n\nVhs.xhr.offResponse = function (callback) {\n  removeOnResponseHook(Vhs.xhr, callback);\n};\nconst Component = videojs.getComponent('Component');\n/**\n * The Vhs Handler object, where we orchestrate all of the parts\n * of VHS to interact with video.js\n *\n * @class VhsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nclass VhsHandler extends Component {\n  constructor(source, tech, options) {\n    super(tech, options.vhs); // if a tech level `initialBandwidth` option was passed\n    // use that over the VHS level `bandwidth` option\n\n    if (typeof options.initialBandwidth === 'number') {\n      this.options_.bandwidth = options.initialBandwidth;\n    }\n    this.logger_ = logger('VhsHandler'); // we need access to the player in some cases,\n    // so, get it from Video.js via the `playerId`\n\n    if (tech.options_ && tech.options_.playerId) {\n      const _player = videojs.getPlayer(tech.options_.playerId);\n      this.player_ = _player;\n    }\n    this.tech_ = tech;\n    this.source_ = source;\n    this.stats = {};\n    this.ignoreNextSeekingEvent_ = false;\n    this.setOptions_();\n    if (this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native VHS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native VHS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n    this.on(document$1, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], event => {\n      const fullscreenElement = document$1.fullscreenElement || document$1.webkitFullscreenElement || document$1.mozFullScreenElement || document$1.msFullscreenElement;\n      if (fullscreenElement && fullscreenElement.contains(this.tech_.el())) {\n        this.playlistController_.fastQualityChange_();\n      } else {\n        // When leaving fullscreen, since the in page pixel dimensions should be smaller\n        // than full screen, see if there should be a rendition switch down to preserve\n        // bandwidth.\n        this.playlistController_.checkABR_();\n      }\n    });\n    this.on(this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n    this.on(this.tech_, 'error', function () {\n      // verify that the error was real and we are loaded\n      // enough to have pc loaded.\n      if (this.tech_.error() && this.playlistController_) {\n        this.playlistController_.pauseLoading();\n      }\n    });\n    this.on(this.tech_, 'play', this.play);\n  }\n  /**\n   * Set VHS options based on options from configuration, as well as partial\n   * options to be passed at a later time.\n   *\n   * @param {Object} options A partial chunk of config options\n   */\n\n  setOptions_(options = {}) {\n    this.options_ = merge(this.options_, options); // defaults\n\n    this.options_.withCredentials = this.options_.withCredentials || false;\n    this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n    this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n    this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n    this.options_.useForcedSubtitles = this.options_.useForcedSubtitles || false;\n    this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || false;\n    this.options_.useDtsForTimestampOffset = this.options_.useDtsForTimestampOffset || false;\n    this.options_.customTagParsers = this.options_.customTagParsers || [];\n    this.options_.customTagMappers = this.options_.customTagMappers || [];\n    this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n    this.options_.llhls = this.options_.llhls === false ? false : true;\n    this.options_.bufferBasedABR = this.options_.bufferBasedABR || false;\n    if (typeof this.options_.playlistExclusionDuration !== 'number') {\n      this.options_.playlistExclusionDuration = 60;\n    }\n    if (typeof this.options_.bandwidth !== 'number') {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        const storedObject = getVhsLocalStorage();\n        if (storedObject && storedObject.bandwidth) {\n          this.options_.bandwidth = storedObject.bandwidth;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-bandwidth-from-local-storage'\n          });\n        }\n        if (storedObject && storedObject.throughput) {\n          this.options_.throughput = storedObject.throughput;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-throughput-from-local-storage'\n          });\n        }\n      }\n    } // if bandwidth was not set by options or pulled from local storage, start playlist\n    // selection at a reasonable bandwidth\n\n    if (typeof this.options_.bandwidth !== 'number') {\n      this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n    } // If the bandwidth number is unchanged from the initial setting\n    // then this takes precedence over the enableLowInitialPlaylist option\n\n    this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n    ['withCredentials', 'useDevicePixelRatio', 'customPixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'customTagParsers', 'customTagMappers', 'cacheEncryptionKeys', 'playlistSelector', 'initialPlaylistSelector', 'bufferBasedABR', 'liveRangeSafeTimeDelta', 'llhls', 'useForcedSubtitles', 'useNetworkInformationApi', 'useDtsForTimestampOffset', 'exactManifestTimings', 'leastPixelDiffSelector'].forEach(option => {\n      if (typeof this.source_[option] !== 'undefined') {\n        this.options_[option] = this.source_[option];\n      }\n    });\n    this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n    const customPixelRatio = this.options_.customPixelRatio; // Ensure the custom pixel ratio is a number greater than or equal to 0\n\n    if (typeof customPixelRatio === 'number' && customPixelRatio >= 0) {\n      this.customPixelRatio = customPixelRatio;\n    }\n  } // alias for public method to set options\n\n  setOptions(options = {}) {\n    this.setOptions_(options);\n  }\n  /**\n   * called when player.src gets called, handle a new source\n   *\n   * @param {Object} src the source object to handle\n   */\n\n  src(src, type) {\n    // do nothing if the src is falsey\n    if (!src) {\n      return;\n    }\n    this.setOptions_(); // add main playlist controller options\n\n    this.options_.src = expandDataUri(this.source_.src);\n    this.options_.tech = this.tech_;\n    this.options_.externVhs = Vhs;\n    this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n    this.options_.seekTo = time => {\n      this.tech_.setCurrentTime(time);\n    }; // pass player to allow for player level eventing on construction.\n\n    this.options_.player_ = this.player_;\n    this.playlistController_ = new PlaylistController(this.options_);\n    const playbackWatcherOptions = merge({\n      liveRangeSafeTimeDelta: SAFE_TIME_DELTA\n    }, this.options_, {\n      seekable: () => this.seekable(),\n      media: () => this.playlistController_.media(),\n      playlistController: this.playlistController_\n    });\n    this.playbackWatcher_ = new PlaybackWatcher(playbackWatcherOptions);\n    this.attachStreamingEventListeners_();\n    this.playlistController_.on('error', () => {\n      const player = videojs.players[this.tech_.options_.playerId];\n      let error = this.playlistController_.error;\n      if (typeof error === 'object' && !error.code) {\n        error.code = 3;\n      } else if (typeof error === 'string') {\n        error = {\n          message: error,\n          code: 3\n        };\n      }\n      player.error(error);\n    });\n    const defaultSelector = this.options_.bufferBasedABR ? Vhs.movingAverageBandwidthSelector(0.55) : Vhs.STANDARD_PLAYLIST_SELECTOR; // `this` in selectPlaylist should be the VhsHandler for backwards\n    // compatibility with < v2\n\n    this.playlistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : defaultSelector.bind(this);\n    this.playlistController_.selectInitialPlaylist = Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n    this.playlists = this.playlistController_.mainPlaylistLoader_;\n    this.mediaSource = this.playlistController_.mediaSource; // Proxy assignment of some properties to the main playlist\n    // controller. Using a custom property for backwards compatibility\n    // with < v2\n\n    Object.defineProperties(this, {\n      selectPlaylist: {\n        get() {\n          return this.playlistController_.selectPlaylist;\n        },\n        set(selectPlaylist) {\n          this.playlistController_.selectPlaylist = selectPlaylist.bind(this);\n        }\n      },\n      throughput: {\n        get() {\n          return this.playlistController_.mainSegmentLoader_.throughput.rate;\n        },\n        set(throughput) {\n          this.playlistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n          // for the cumulative average\n\n          this.playlistController_.mainSegmentLoader_.throughput.count = 1;\n        }\n      },\n      bandwidth: {\n        get() {\n          let playerBandwidthEst = this.playlistController_.mainSegmentLoader_.bandwidth;\n          const networkInformation = window$1.navigator.connection || window$1.navigator.mozConnection || window$1.navigator.webkitConnection;\n          const tenMbpsAsBitsPerSecond = 10e6;\n          if (this.options_.useNetworkInformationApi && networkInformation) {\n            // downlink returns Mbps\n            // https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink\n            const networkInfoBandwidthEstBitsPerSec = networkInformation.downlink * 1000 * 1000; // downlink maxes out at 10 Mbps. In the event that both networkInformationApi and the player\n            // estimate a bandwidth greater than 10 Mbps, use the larger of the two estimates to ensure that\n            // high quality streams are not filtered out.\n\n            if (networkInfoBandwidthEstBitsPerSec >= tenMbpsAsBitsPerSecond && playerBandwidthEst >= tenMbpsAsBitsPerSecond) {\n              playerBandwidthEst = Math.max(playerBandwidthEst, networkInfoBandwidthEstBitsPerSec);\n            } else {\n              playerBandwidthEst = networkInfoBandwidthEstBitsPerSec;\n            }\n          }\n          return playerBandwidthEst;\n        },\n        set(bandwidth) {\n          this.playlistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n          // `count` is set to zero that current value of `rate` isn't included\n          // in the cumulative average\n\n          this.playlistController_.mainSegmentLoader_.throughput = {\n            rate: 0,\n            count: 0\n          };\n        }\n      },\n      /**\n       * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n       * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n       * the entire process after that - decryption, transmuxing, and appending - provided\n       * by `throughput`.\n       *\n       * Since the two process are serial, the overall system bandwidth is given by:\n       *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n       */\n      systemBandwidth: {\n        get() {\n          const invBandwidth = 1 / (this.bandwidth || 1);\n          let invThroughput;\n          if (this.throughput > 0) {\n            invThroughput = 1 / this.throughput;\n          } else {\n            invThroughput = 0;\n          }\n          const systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n          return systemBitrate;\n        },\n        set() {\n          videojs.log.error('The \"systemBandwidth\" property is read-only');\n        }\n      }\n    });\n    if (this.options_.bandwidth) {\n      this.bandwidth = this.options_.bandwidth;\n    }\n    if (this.options_.throughput) {\n      this.throughput = this.options_.throughput;\n    }\n    Object.defineProperties(this.stats, {\n      bandwidth: {\n        get: () => this.bandwidth || 0,\n        enumerable: true\n      },\n      mediaRequests: {\n        get: () => this.playlistController_.mediaRequests_() || 0,\n        enumerable: true\n      },\n      mediaRequestsAborted: {\n        get: () => this.playlistController_.mediaRequestsAborted_() || 0,\n        enumerable: true\n      },\n      mediaRequestsTimedout: {\n        get: () => this.playlistController_.mediaRequestsTimedout_() || 0,\n        enumerable: true\n      },\n      mediaRequestsErrored: {\n        get: () => this.playlistController_.mediaRequestsErrored_() || 0,\n        enumerable: true\n      },\n      mediaTransferDuration: {\n        get: () => this.playlistController_.mediaTransferDuration_() || 0,\n        enumerable: true\n      },\n      mediaBytesTransferred: {\n        get: () => this.playlistController_.mediaBytesTransferred_() || 0,\n        enumerable: true\n      },\n      mediaSecondsLoaded: {\n        get: () => this.playlistController_.mediaSecondsLoaded_() || 0,\n        enumerable: true\n      },\n      mediaAppends: {\n        get: () => this.playlistController_.mediaAppends_() || 0,\n        enumerable: true\n      },\n      mainAppendsToLoadedData: {\n        get: () => this.playlistController_.mainAppendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      audioAppendsToLoadedData: {\n        get: () => this.playlistController_.audioAppendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      appendsToLoadedData: {\n        get: () => this.playlistController_.appendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      timeToLoadedData: {\n        get: () => this.playlistController_.timeToLoadedData_() || 0,\n        enumerable: true\n      },\n      buffered: {\n        get: () => timeRangesToArray(this.tech_.buffered()),\n        enumerable: true\n      },\n      currentTime: {\n        get: () => this.tech_.currentTime(),\n        enumerable: true\n      },\n      currentSource: {\n        get: () => this.tech_.currentSource_,\n        enumerable: true\n      },\n      currentTech: {\n        get: () => this.tech_.name_,\n        enumerable: true\n      },\n      duration: {\n        get: () => this.tech_.duration(),\n        enumerable: true\n      },\n      main: {\n        get: () => this.playlists.main,\n        enumerable: true\n      },\n      playerDimensions: {\n        get: () => this.tech_.currentDimensions(),\n        enumerable: true\n      },\n      seekable: {\n        get: () => timeRangesToArray(this.tech_.seekable()),\n        enumerable: true\n      },\n      timestamp: {\n        get: () => Date.now(),\n        enumerable: true\n      },\n      videoPlaybackQuality: {\n        get: () => this.tech_.getVideoPlaybackQuality(),\n        enumerable: true\n      }\n    });\n    this.tech_.one('canplay', this.playlistController_.setupFirstPlay.bind(this.playlistController_));\n    this.tech_.on('bandwidthupdate', () => {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        updateVhsLocalStorage({\n          bandwidth: this.bandwidth,\n          throughput: Math.round(this.throughput)\n        });\n      }\n    });\n    this.playlistController_.on('selectedinitialmedia', () => {\n      // Add the manual rendition mix-in to VhsHandler\n      renditionSelectionMixin(this);\n    });\n    this.playlistController_.sourceUpdater_.on('createdsourcebuffers', () => {\n      this.setupEme_();\n    }); // the bandwidth of the primary segment loader is our best\n    // estimate of overall bandwidth\n\n    this.on(this.playlistController_, 'progress', function () {\n      this.tech_.trigger('progress');\n    }); // In the live case, we need to ignore the very first `seeking` event since\n    // that will be the result of the seek-to-live behavior\n\n    this.on(this.playlistController_, 'firstplay', function () {\n      this.ignoreNextSeekingEvent_ = true;\n    });\n    this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n    // this can occur if someone sets the src in player.ready(), for instance\n\n    if (!this.tech_.el()) {\n      return;\n    }\n    this.mediaSourceUrl_ = window$1.URL.createObjectURL(this.playlistController_.mediaSource); // If we are playing HLS with MSE in Safari, add source elements for both the blob and manifest URLs.\n    // The latter will enable Airplay playback on receiver devices.\n\n    if ((videojs.browser.IS_ANY_SAFARI || videojs.browser.IS_IOS) && this.options_.overrideNative && this.options_.sourceType === 'hls' && typeof this.tech_.addSourceElement === 'function') {\n      this.tech_.addSourceElement(this.mediaSourceUrl_);\n      this.tech_.addSourceElement(this.source_.src);\n    } else {\n      this.tech_.src(this.mediaSourceUrl_);\n    }\n  }\n  createKeySessions_() {\n    const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    this.logger_('waiting for EME key session creation');\n    waitForKeySessionCreation({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media(),\n      mainPlaylists: this.playlists.main.playlists\n    }).then(() => {\n      this.logger_('created EME key session');\n      this.playlistController_.sourceUpdater_.initializedEme();\n    }).catch(err => {\n      this.logger_('error while creating EME key session', err);\n      this.player_.error({\n        message: 'Failed to initialize media keys for EME',\n        code: 3\n      });\n    });\n  }\n  handleWaitingForKey_() {\n    // If waitingforkey is fired, it's possible that the data that's necessary to retrieve\n    // the key is in the manifest. While this should've happened on initial source load, it\n    // may happen again in live streams where the keys change, and the manifest info\n    // reflects the update.\n    //\n    // Because videojs-contrib-eme compares the PSSH data we send to that of PSSH data it's\n    // already requested keys for, we don't have to worry about this generating extraneous\n    // requests.\n    this.logger_('waitingforkey fired, attempting to create any new key sessions');\n    this.createKeySessions_();\n  }\n  /**\n   * If necessary and EME is available, sets up EME options and waits for key session\n   * creation.\n   *\n   * This function also updates the source updater so taht it can be used, as for some\n   * browsers, EME must be configured before content is appended (if appending unencrypted\n   * content before encrypted content).\n   */\n\n  setupEme_() {\n    const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    const didSetupEmeOptions = setupEmeOptions({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      media: this.playlists.media(),\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media()\n    });\n    this.player_.tech_.on('keystatuschange', e => {\n      this.playlistController_.updatePlaylistByKeyStatus(e.keyId, e.status);\n    });\n    this.handleWaitingForKey_ = this.handleWaitingForKey_.bind(this);\n    this.player_.tech_.on('waitingforkey', this.handleWaitingForKey_);\n    if (!didSetupEmeOptions) {\n      // If EME options were not set up, we've done all we could to initialize EME.\n      this.playlistController_.sourceUpdater_.initializedEme();\n      return;\n    }\n    this.createKeySessions_();\n  }\n  /**\n   * Initializes the quality levels and sets listeners to update them.\n   *\n   * @method setupQualityLevels_\n   * @private\n   */\n\n  setupQualityLevels_() {\n    const player = videojs.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n    // or qualityLevels_ listeners have already been setup, do nothing.\n\n    if (!player || !player.qualityLevels || this.qualityLevels_) {\n      return;\n    }\n    this.qualityLevels_ = player.qualityLevels();\n    this.playlistController_.on('selectedinitialmedia', () => {\n      handleVhsLoadedMetadata(this.qualityLevels_, this);\n    });\n    this.playlists.on('mediachange', () => {\n      handleVhsMediaChange(this.qualityLevels_, this.playlists);\n    });\n  }\n  /**\n   * return the version\n   */\n\n  static version() {\n    return {\n      '@videojs/http-streaming': version$4,\n      'mux.js': version$3,\n      'mpd-parser': version$2,\n      'm3u8-parser': version$1,\n      'aes-decrypter': version\n    };\n  }\n  /**\n   * return the version\n   */\n\n  version() {\n    return this.constructor.version();\n  }\n  canChangeType() {\n    return SourceUpdater.canChangeType();\n  }\n  /**\n   * Begin playing the video.\n   */\n\n  play() {\n    this.playlistController_.play();\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  setCurrentTime(currentTime) {\n    this.playlistController_.setCurrentTime(currentTime);\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  duration() {\n    return this.playlistController_.duration();\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  seekable() {\n    return this.playlistController_.seekable();\n  }\n  /**\n   * Abort all outstanding work and cleanup.\n   */\n\n  dispose() {\n    if (this.playbackWatcher_) {\n      this.playbackWatcher_.dispose();\n    }\n    if (this.playlistController_) {\n      this.playlistController_.dispose();\n    }\n    if (this.qualityLevels_) {\n      this.qualityLevels_.dispose();\n    }\n    if (this.tech_ && this.tech_.vhs) {\n      delete this.tech_.vhs;\n    }\n    if (this.mediaSourceUrl_ && window$1.URL.revokeObjectURL) {\n      window$1.URL.revokeObjectURL(this.mediaSourceUrl_);\n      this.mediaSourceUrl_ = null;\n    }\n    if (this.tech_) {\n      this.tech_.off('waitingforkey', this.handleWaitingForKey_);\n    }\n    super.dispose();\n  }\n  convertToProgramTime(time, callback) {\n    return getProgramTime({\n      playlist: this.playlistController_.media(),\n      time,\n      callback\n    });\n  } // the player must be playing before calling this\n\n  seekToProgramTime(programTime, callback, pauseAfterSeek = true, retryCount = 2) {\n    return seekToProgramTime({\n      programTime,\n      playlist: this.playlistController_.media(),\n      retryCount,\n      pauseAfterSeek,\n      seekTo: this.options_.seekTo,\n      tech: this.options_.tech,\n      callback\n    });\n  }\n  /**\n   * Adds the onRequest, onResponse, offRequest and offResponse functions\n   * to the VhsHandler xhr Object.\n   */\n\n  setupXhrHooks_() {\n    /**\n     * A player function for setting an onRequest hook\n     *\n     * @param {function} callback for request modifiction\n     */\n    this.xhr.onRequest = callback => {\n      addOnRequestHook(this.xhr, callback);\n    };\n    /**\n     * A player function for setting an onResponse hook\n     *\n     * @param {callback} callback for response data retrieval\n     */\n\n    this.xhr.onResponse = callback => {\n      addOnResponseHook(this.xhr, callback);\n    };\n    /**\n     * Deletes a player onRequest callback if it exists\n     *\n     * @param {function} callback to delete from the player set\n     */\n\n    this.xhr.offRequest = callback => {\n      removeOnRequestHook(this.xhr, callback);\n    };\n    /**\n     * Deletes a player onResponse callback if it exists\n     *\n     * @param {function} callback to delete from the player set\n     */\n\n    this.xhr.offResponse = callback => {\n      removeOnResponseHook(this.xhr, callback);\n    }; // Trigger an event on the player to notify the user that vhs is ready to set xhr hooks.\n    // This allows hooks to be set before the source is set to vhs when handleSource is called.\n\n    this.player_.trigger('xhr-hooks-ready');\n  }\n  attachStreamingEventListeners_() {\n    const playlistControllerEvents = ['seekablerangeschanged', 'bufferedrangeschanged', 'contentsteeringloadstart', 'contentsteeringloadcomplete', 'contentsteeringparsed'];\n    const playbackWatcher = ['gapjumped', 'playedrangeschanged']; // re-emit streaming events and payloads on the player.\n\n    playlistControllerEvents.forEach(eventName => {\n      this.playlistController_.on(eventName, metadata => {\n        this.player_.trigger(_extends({}, metadata));\n      });\n    });\n    playbackWatcher.forEach(eventName => {\n      this.playbackWatcher_.on(eventName, metadata => {\n        this.player_.trigger(_extends({}, metadata));\n      });\n    });\n  }\n}\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\nconst VhsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$4,\n  canHandleSource(srcObj, options = {}) {\n    const localOptions = merge(videojs.options, options); // If not opting to experimentalUseMMS, and playback is only supported with MediaSource, cannot handle source\n\n    if (!localOptions.vhs.experimentalUseMMS && !browserSupportsCodec('avc1.4d400d,mp4a.40.2', false)) {\n      return false;\n    }\n    return VhsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource(source, tech, options = {}) {\n    const localOptions = merge(videojs.options, options);\n    tech.vhs = new VhsHandler(source, tech, localOptions);\n    tech.vhs.xhr = xhrFactory();\n    tech.vhs.setupXhrHooks_();\n    tech.vhs.src(source.src, source.type);\n    return tech.vhs;\n  },\n  canPlayType(type, options) {\n    const simpleType = simpleTypeFromSourceType(type);\n    if (!simpleType) {\n      return '';\n    }\n    const overrideNative = VhsSourceHandler.getOverrideNative(options);\n    const supportsTypeNatively = Vhs.supportsTypeNatively(simpleType);\n    const canUseMsePlayback = !supportsTypeNatively || overrideNative;\n    return canUseMsePlayback ? 'maybe' : '';\n  },\n  getOverrideNative(options = {}) {\n    const {\n      vhs = {}\n    } = options;\n    const defaultOverrideNative = !(videojs.browser.IS_ANY_SAFARI || videojs.browser.IS_IOS);\n    const {\n      overrideNative = defaultOverrideNative\n    } = vhs;\n    return overrideNative;\n  }\n};\n/**\n * Check to see if either the native MediaSource or ManagedMediaSource\n * objectx exist and support an MP4 container with both H.264 video\n * and AAC-LC audio.\n *\n * @return {boolean} if  native media sources are supported\n */\n\nconst supportsNativeMediaSources = () => {\n  return browserSupportsCodec('avc1.4d400d,mp4a.40.2', true);\n}; // register source handlers with the appropriate techs\n\nif (supportsNativeMediaSources()) {\n  videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler, 0);\n}\nvideojs.VhsHandler = VhsHandler;\nvideojs.VhsSourceHandler = VhsSourceHandler;\nvideojs.Vhs = Vhs;\nif (!videojs.use) {\n  videojs.registerComponent('Vhs', Vhs);\n}\nvideojs.options.vhs = videojs.options.vhs || {};\nif (!videojs.getPlugin || !videojs.getPlugin('reloadSourceOnError')) {\n  videojs.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport { videojs as default };\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63m2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71M4.27 3 3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9zM12 4 9.91 6.09 12 8.18z\"\n}), 'VolumeOff');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 9v6h4l5 5V4L7 9zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02M14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77\"\n}), 'VolumeUp');","\"use client\"\r\nimport React, { useState, useEffect } from \"react\";\r\nimport VolumeOffIcon from \"@mui/icons-material/VolumeOff\";\r\nimport VolumeUpIcon from \"@mui/icons-material/VolumeUp\";\r\nimport Player from \"video.js/dist/types/player\";\r\n\r\ninterface MuteButtonProps {\r\n  playerRef: React.RefObject<Player | null>;\r\n}\r\n\r\nconst MuteButton = ({ playerRef }: MuteButtonProps) => {\r\n  const [isMuted, setIsMuted] = useState<boolean>(true); // Make sure the state is always boolean\r\n\r\n  // Update the mute state when the player is ready\r\n  useEffect(() => {\r\n    if (playerRef.current) {\r\n      setIsMuted(playerRef.current.muted() || false); // Ensure isMuted is always a boolean\r\n    }\r\n  }, [playerRef]);\r\n\r\n  // Toggle the mute state when the button is clicked\r\n  const toggleMute = (event: React.MouseEvent) => {\r\n    event.stopPropagation()\r\n    if (playerRef.current) {\r\n      const newMuteState = !playerRef.current.muted();\r\n      playerRef.current.muted(newMuteState);\r\n      setIsMuted(newMuteState); // Ensure the mute state is a boolean\r\n    }\r\n  };\r\n\r\n  const getVolumeIcon = () => {\r\n    return isMuted ? <VolumeOffIcon sx={{ color: \"white\" }} /> : <VolumeUpIcon sx={{ color: \"white\" }} />;\r\n  };\r\n\r\n  return (\r\n    <button\r\n      onClick={toggleMute}\r\n      style={{\r\n        position: \"absolute\",\r\n        bottom: \"10px\",\r\n        right: \"10px\",\r\n        background: \"rgba(0, 0, 0, 0.6)\",\r\n        border: \"none\",\r\n        borderRadius: \"50%\",\r\n        padding: \"10px\",\r\n        cursor: \"pointer\",\r\n      }}\r\n    >\r\n      {getVolumeIcon()}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default MuteButton;\r\n","\"use client\";\r\nimport { Box } from \"@mui/material\";\r\nimport React, { LegacyRef, useEffect, useRef, useState } from \"react\";\r\nimport videojs from \"video.js\";\r\nimport \"video.js/dist/video-js.css\";\r\nimport Player from \"video.js/dist/types/player\";\r\nimport VolumeOffIcon from \"@mui/icons-material/VolumeOff\";\r\nimport VolumeUpIcon from \"@mui/icons-material/VolumeUp\";\r\nimport Image from \"./Image\";\r\nimport { GetCookiesValue } from \"../utils/cookie\";\r\nimport MuteButton from \"./VolumeButton\";\r\n\r\nfunction checkLiveOrStage() {\r\n  // const env =\r\n  //   window.location.hostname === \"pre.binge.buzz\" ||\r\n  //   window.location.hostname.includes(\"localhost\")\r\n  //     ? \"staging\"\r\n  //     : \"production\";\r\n  // return env;\r\n  return \"staging\";\r\n}\r\n\r\nfunction drmCall(bingeToken: string) {\r\n  //@ts-ignore\r\n  videojs.Vhs.xhr.beforeRequest = (options) => {\r\n    const modifiedOptions = { ...options };\r\n    if (modifiedOptions.uri.startsWith(\"https://ss.binge.buzz/binge-drm\")) {\r\n      const search = new URL(options.uri);\r\n      const searchParam = search.searchParams.get(\"r\");\r\n      if (checkLiveOrStage() === \"staging\") {\r\n        modifiedOptions.uri = `https://ss-staging.binge.buzz/binge-drm/secured?r=${searchParam}&drmtoken=${bingeToken}`;\r\n      }\r\n      modifiedOptions.headers = modifiedOptions.headers || {};\r\n      modifiedOptions.headers.Authorization = `Bearer ${bingeToken}`;\r\n      videojs.xhr(\r\n        {\r\n          uri: modifiedOptions.uri,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${bingeToken}`,\r\n          },\r\n        },\r\n        (err, resp) => {\r\n          if (resp.statusCode === 429) {\r\n            // handleCloseContentError();\r\n          } else if (resp.statusCode === 401) {\r\n            // handleUnauthorizedError();\r\n          } else if (resp.statusCode !== 200) {\r\n            // fireError();\r\n          }\r\n        }\r\n      );\r\n    }\r\n    return modifiedOptions;\r\n  };\r\n}\r\n\r\nconst checkValidSource = async (src: string): Promise<boolean> => {\r\n  if (!src) {\r\n    console.log(\"Source URL is invalid or missing.\");\r\n    return false;\r\n  }\r\n  try {\r\n    const res = await fetch(src, { method: \"HEAD\" });\r\n    console.log(res, \"fetch response\");\r\n    return res.ok;\r\n  } catch (error) {\r\n    console.error(\"Error checking source\", error);\r\n    return false;\r\n  }\r\n};\r\n\r\nconst VideoJSPlayer = ({\r\n  videoId,\r\n  _hlsStreamUrl,\r\n  isActive,\r\n  redirectPath,\r\n  initialTime,\r\n  onTimeUpdate,\r\n  path,\r\n}: {\r\n  initialTime: number;\r\n  onTimeUpdate: (time: any) => void;\r\n  videoId: number;\r\n  _hlsStreamUrl: string;\r\n  isActive: boolean;\r\n  redirectPath: string;\r\n  path: string;\r\n}) => {\r\n  const playerRef = useRef<Player | null>(null);\r\n\r\n  const [isValid, setIsValid] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    console.log(_hlsStreamUrl, \"streamUrl\");\r\n    const fetchValidSource = async () => {\r\n      const valid = await checkValidSource(_hlsStreamUrl);\r\n      setIsValid(valid); // Update state with the result\r\n    };\r\n\r\n    fetchValidSource();\r\n  }, [_hlsStreamUrl]);\r\n\r\n  const handlePlayerReady = (player: Player | null) => {\r\n    playerRef.current = player;\r\n\r\n    // You can handle player events here, for example:\r\n    player?.on(\"waiting\", () => {\r\n      videojs.log(\"player is waiting\");\r\n    });\r\n\r\n    player?.on(\"dispose\", () => {\r\n      videojs.log(\"player will dispose\");\r\n    });\r\n  };\r\n\r\n  const videoJsOptions = {\r\n    autoplay: isActive,\r\n    // muted: isActive,\r\n    controls: false,\r\n    responsive: true,\r\n    fluid: true,\r\n    experimentalSvgIcons: true,\r\n    // playbackRates: [0.5, 1, 1.5, 2],\r\n    // controlBar: {\r\n    //   skipButtons: {\r\n    //     forward: 10,\r\n    //     backward: 10,\r\n    //   },\r\n    // },\r\n    sources: [\r\n      {\r\n        src: _hlsStreamUrl,\r\n        type: _hlsStreamUrl?.endsWith(\".mpd\")\r\n          ? \"application/dash+xml\"\r\n          : \"application/x-mpegURL\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (playerRef.current && initialTime > 0) {\r\n      playerRef.current.currentTime(initialTime);\r\n    }\r\n  }, [initialTime]);\r\n\r\n  const VideoPlayer = (props: {\r\n    options: any;\r\n    onReady: any;\r\n    isValid: boolean;\r\n  }) => {\r\n    const videoRef = useRef<HTMLElement | null>(null);\r\n    const playerRef = useRef<Player | null>(null);\r\n    const [playbackRate, setPlaybackRate] = useState(1);\r\n    const { options, onReady } = props;\r\n    // const [isValidSource, setIsValidSource] = useState<boolean | null>(null);\r\n\r\n    const bingeToken = GetCookiesValue(\"annonJwtToken\", false);\r\n\r\n    useEffect(() => {\r\n      if (!isValid || typeof window === \"undefined\") return;\r\n\r\n      if (!playerRef.current) {\r\n        const videoElement = document.createElement(\"video-js\");\r\n        videoElement.setAttribute(\"crossorigin\", \"anonymous\");\r\n\r\n        videoElement.classList.add(\"vjs-big-play-centered\");\r\n        videoRef.current!.appendChild(videoElement);\r\n\r\n        const player = ((playerRef.current as any) = videojs(\r\n          videoElement,\r\n          options,\r\n          () => {\r\n            videojs.log(\"player is ready\");\r\n            onReady && onReady(player);\r\n            player.muted(true);\r\n          }\r\n        ));\r\n        player.on(\"loadstart\", function (_e: any) {\r\n          drmCall(bingeToken);\r\n        });\r\n        player.on(\"error\", function () {\r\n          console.warn(\"Video.js encountered an error but will retry.\");\r\n          setTimeout(() => player.src(options.sources), 3000); // Retry after 3s\r\n        });\r\n      } else {\r\n        const player = playerRef.current;\r\n\r\n        (playerRef.current as Player).autoplay(options.autoplay);\r\n        player.src(options.sources);\r\n      }\r\n    }, [options, videoRef, isValid]);\r\n\r\n    useEffect(() => {\r\n      if (typeof window !== \"undefined\") {\r\n        if (playerRef.current) {\r\n          playerRef?.current?.playbackRate(playbackRate);\r\n        }\r\n      }\r\n    }, [playbackRate]);\r\n\r\n    useEffect(() => {\r\n      const player = playerRef.current;\r\n\r\n      return () => {\r\n        if (player && !player.isDisposed()) {\r\n          player.dispose();\r\n          playerRef.current = null;\r\n        }\r\n      };\r\n    }, [playerRef]);\r\n\r\n    return (\r\n      <>\r\n        {isValid ? (\r\n          <div style={{ position: \"relative\", width: \"100%\", height: \"100%\" }}>\r\n            <div data-vjs-player style={{ width: \"100%\", height: \"100%\" }}>\r\n              <div ref={videoRef as LegacyRef<HTMLDivElement> | undefined} />\r\n            </div>{\" \"}\r\n            <MuteButton playerRef={playerRef} />\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Image\r\n              path={path}\r\n              sx={{\r\n                borderRadius: \"16px\",\r\n                width: \"100%\",\r\n                aspectRatio: \"16/9\",\r\n                objectFit: \"contain\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <VideoPlayer\r\n        options={videoJsOptions}\r\n        onReady={handlePlayerReady}\r\n        isValid={isValid}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoJSPlayer;\r\n"],"names":["win","global","window_1","topLevel","minDoc","require$$0","doccy","document_1","isFunction_1","isFunction","toString","fn","string","_createForOfIteratorHelperLoose","o","allowArrayLike","it","_unsupportedIterableToArray","i","minLen","_arrayLikeToArray","n","arr","len","arr2","InterceptorsStorage","_proto","type","interceptor","interceptorsSet","payload","interceptors","_iterator","_step","RetryManager","maxAttempts","delayFactor","fuzzFactor","initialDelay","_temp","_ref","Retry","options","_proto2","delayDelta","lowValue","highValue","retry","window","httpResponseHandler","callback","decodeResponseBody","err","response","responseBody","cause","charset","getCharset","contentTypeHeader","contentType","_contentType$split","value","httpHandler","_extends","require$$1","require$$2","require$$3","require$$4","createXHR","require$$5","parseHeaders","headers","result","row","index","key","libModule","noop","forEachArray","method","uri","initParams","_createXHR","array","iterator","isEmpty","obj","params","requestInterceptorPayload","updatedPayload","called","body","readystatechange","xhr","loadFunc","getBody","getXml","isJson","errorFunc","evt","timeoutTimer","aborted","responseInterceptorPayload","failureResponse","_updatedPayload","status","_updatedPayload2","sync","e","firefoxBugTakenEffect","document","_objCreate","F","ParsingError","errorData","message","parseTimeStamp","input","computeSeconds","h","m","s","f","Settings","k","v","dflt","defaultKey","a","parseOptions","keyValueDelim","groupDelim","groups","kv","parseCue","cue","regionList","oInput","consumeTimeStamp","ts","consumeCueSettings","settings","vals","vals0","skipWhitespace","TEXTAREA_ELEMENT","TAG_NAME","DEFAULT_COLOR_CLASS","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","consume","unescape","shouldAdd","current","element","createElement","annotation","tagName","name","rootDiv","t","tagStack","node","classes","cl","bgColor","colorName","propName","propValue","strongRTLRanges","isStrongRTLChar","charCode","currentRange","determineBidi","cueDiv","nodeStack","text","pushNodes","nextTextNode","computeLinePos","track","trackList","count","StyleBox","styles","div","prop","val","unit","CueStyleBox","styleOptions","textPos","box","BoxPosition","lh","height","width","top","rects","axis","toMove","b2","boxes","container","x","y","intersectArea","reference","ret","moveBoxToLinePosition","styleBox","containerBox","boxPositions","findBestPosition","b","bestPosition","specifiedPosition","percentage","p","boxPosition","linePos","size","step","position","maxPosition","initialAxis","calculatedPercentage","WebVTT","data","cuetext","FONT_SIZE_PERCENT","FONT_STYLE","CUE_BACKGROUND_PADDING","cues","overlay","paddedOverlay","shouldCompute","fontSize","vttjs","decoder","self","collectNextLine","buffer","pos","line","parseRegion","xy","anchor","region","parseTimestampMap","parseHeader","alreadyCollectedLine","hasSubstring","vtt","autoKeyword","directionSetting","alignSetting","findDirectionSetting","dir","findAlignSetting","align","VTTCue","startTime","endTime","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","setting","vttcue","scrollSetting","findScrollSetting","scroll","isValidPercentValue","VTTRegion","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","vttregion","browserIndexModule","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","DEFAULT_LOCATION","resolveUrl","baseUrl","relativeUrl","protocolLess","removeLocation","newUrl","Stream","listener","callbacks","length","args","_length","_i","destination","atob","decodeB64ToUint8Array","b64Text","decodedString","LineStream","nextNewline","TAB","parseByterange","byterangeString","match","attributeSeparator","keyvalue","parseAttributes","attributes","attrs","attr","parseResolution","resolution","split","ParseStream","event","acc","mapper","mappedLine","newLine","subkey","clientAttributePattern","isHexaDecimal","isDecimalFloating","expression","customType","dataParser","segment","map","mapFn","camelCase","str","camelCaseKeys","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","tag","hb","phb","minTargetDuration","minPartDuration","Parser","opts","uris","currentUri","currentMap","hasParts","defaultMediaGroups","widevineUuid","currentTimeline","lastByterangeEnd","lastPartByterangeEnd","dateRangeTags","entry","mediaGroup","rendition","def","byterange","mediaGroupType","lastProgramDateTime","programDateTime","segmentIndex","part","partIndex","r","hint","isPart","otherHint","report","required","dateRange","endOnNextYes","newDateInSeconds","attribute","dateRangeWithSameId","dateRangeToFind","addDef","currentVersion","targetVersion","identifier","missing","chunk","regexs","mediaTypes","upperMediaTypes","translateLegacyCodec","codec","orig","profile","avcLevel","profileHex","avcLevelHex","parseCodecs","codecString","codecs","codecType","details","codecsFromDefault","master","audioGroupId","audioGroup","audioType","isAudioCodec","isTextCodec","getMimeForCodec","c","browserSupportsCodec","withMMS","muxerSupportsCodec","DEFAULT_AUDIO_CODEC","DEFAULT_VIDEO_CODEC","MPEGURL_REGEX","DASH_REGEX","simpleTypeFromSourceType","countBits","countBytes","isArrayBufferView","isTypedArray","toUint8","bytes","BigInt","BYTE_TABLE","bytesToNumber","_ref$signed","signed","_ref$le","le","number","total","byte","exponent","max","numberToBytes","_temp2","_ref2","_ref2$le","byteCount","byteIndex","stringToBytes","stringIsBytes","view","concatTypedArrays","_len","buffers","_key","totalLen","buf","tempBuffer","offset","bytesMatch","_temp3","_ref3","_ref3$offset","_ref3$mask","mask","bByte","aByte","forEachMediaGroup","mediaType","groupKey","labelKey","mediaProperties","find","list","predicate","ac","item","freeze","object","oc","assign","target","source","MIME_TYPE","NAMESPACE","conventions","notEmptyString","splitOnASCIIWhitespace","orderedSetReducer","toOrderedSet","arrayIncludes","copy","src","dest","Class","Super","pt","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","NOT_FOUND_ERR","INUSE_ATTRIBUTE_ERR","DOMException","code","error","NodeList","isHTML","nodeFilter","serializeToString","LiveNodeList","refresh","_updateLiveList","inc","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","el","newAttr","oldAttr","doc","_onRemoveAttribute","_onAddAttribute","_removeNamedNode","lastIndex","namespaceURI","localName","DOMImplementation","feature","version","qualifiedName","doctype","Document","root","publicId","systemId","DocumentType","Node","newChild","refChild","_insertBefore","oldChild","assertPreReplacementValidityInDocument","_removeChild","deep","cloneNode","child","next","prefix","_xmlEncoder","_visitNode","ns","remove","_onUpdateChild","cs","parentNode","previous","hasValidParentNodeType","hasInsertableNodeType","isElementNode","isTextNode","isDocTypeNode","isElementInsertionPossible","parentChildNodes","docTypeNode","isElementReplacementPossible","hasElementChildThatIsNotChild","assertPreInsertionValidity1to5","parent","assertPreInsertionValidityInDocument","nodeChildNodes","nodeChildElements","parentElementChild","_inDocumentAssertion","cp","newFirst","newLast","pre","_appendSingleChild","importedNode","importNode","id","rtv","classNames","classNamesSet","base","nodeClassNames","matches","nodeClassNamesSet","Element","DocumentFragment","Text","Comment","CDATASection","ProcessingInstruction","Attr","EntityReference","pl","old","CharacterData","start","end","newText","newNode","Notation","Entity","XMLSerializer","isHtml","nodeSerializeToString","refNode","visibleNamespaces","needNamespaceDefine","addSerializedAttribute","nodeName","prefixedNodeName","defaultNS","ai","nsi","namespace","pubid","sysid","sub","node2","attrs2","getTextContent","dom","exports","nameStartChar","nameChar","tagNamePattern","S_TAG","S_ATTR","S_ATTR_SPACE","S_EQ","S_ATTR_NOQUOT_VALUE","S_ATTR_END","S_TAG_SPACE","S_TAG_CLOSE","ParseError","locator","XMLReader","defaultNSMap","entityMap","domBuilder","_copy","parse","defaultNSMapCopy","errorHandler","fixedFromCharCode","surrogate1","surrogate2","entityReplacer","appendText","xt","lineEnd","linePattern","lineStart","parseStack","closeMap","tagStart","config","localNSMap","endMatch","endIgnoreCaseMach","parseInstruction","parseDCC","ElementAttributes","currentNSMap","parseElementStartPart","fixSelfClosed","locator2","copyLocator","appendElement","parseHtmlSpecialContent","addAttribute","qname","startIndex","attrName","qName","nsp","nsPrefix","elStartEnd","elEndStart","matchs","lastMatch","reg","sax","entities","normalizeLineEndings","DOMParser","mimeType","DOMHandler","buildErrorHandler","normalize","errorImpl","isCallback","build","msg","_locator","ins","ch","chars","_toString","charNode","comm","impl","dt","l","hander","domParser","lib","isObject","merge","objects","values","range","flatten","lists","from","findIndexes","union","keyFunction","errors","urlTypeToSegment","indexRange","ranges","startRange","endRange","byteRangeToString","parseEndNumber","endNumber","segmentRange","duration","timescale","sourceDuration","periodDuration","segmentDuration","NOW","clientOffset","availabilityStartTime","periodStart","minimumUpdatePeriod","timeShiftBufferDepth","now","periodStartWC","segmentCount","availableStart","availableEnd","toSegments","startNumber","parseByDuration","segments","sectionDuration","segmentsFromBase","initialization","presentationTime","initSegment","segmentTimeInfo","addSidxSegmentsToPlaylist$1","playlist","sidx","timeline","sidxByteRange","sidxEnd","mediaReferences","endIndex","SUPPORTED_MEDIA_TYPES","TIME_FUDGE","getUniqueTimelineStarts","timelineStarts","findPlaylistWithName","playlists","getMediaGroupPlaylists","mediaGroupPlaylists","properties","group","label","updateMediaSequenceForPlaylist","mediaSequence","updateSequenceNumbers","oldPlaylists","newPlaylists","oldPlaylist","firstNewSegment","oldMatchingSegmentIndex","oldSegment","positionManifestOnTimeline","oldManifest","newManifest","generateSidxKey","mergeDiscontiguousPlaylists","playlistsByBaseUrl","cur","allPlaylists","playlistGroup","mergedPlaylists","addSidxSegmentsToPlaylist","sidxMapping","sidxKey","sidxMatch","addSidxSegmentsToPlaylists","formatAudioPlaylist","discontinuitySequence","discontinuityStarts","isAudioOnly","formatVttPlaylist","m3u8Attributes","vttPlaylist","organizeAudioPlaylists","mainPlaylist","formattedPlaylists","role","language","roleLabel","formatted","firstLabel","organizeVttPlaylists","organizeCaptionServices","captionServices","svcObj","svc","service","channel","formatVideoPlaylist","videoOnly","audioOnly","vttOnly","addMediaSequenceValues","flattenMediaGroupPlaylists","mediaGroupObject","labelContents","toM3u8","dashPlaylists","locations","contentSteering","previousManifest","eventStream","suggestedPresentationDelay","videoPlaylists","audioPlaylists","vttPlaylists","captions","organizedAudioGroup","organizedVttGroup","playlistTimelineStarts","getLiveRValue","time","parseByTimeline","segmentTimeline","media","sIndex","S","repeat","segmentTime","nextS","identifierPattern","identifierReplacement","format","constructTemplateUrl","url","parseTemplateInfo","segmentsFromTemplate","templateValues","mapSegment","presentationTimeOffset","SegmentURLToSegmentObject","segmentUrl","segmentsFromList","segmentUrls","segmentUrlMap","segmentUrlObject","generateSegments","segmentInfo","segmentAttributes","segmentsFn","segmentsInfo","toPlaylists","representations","findChildren","getContent","parseDivisionValue","prev","parseDuration","year","month","day","hour","minute","second","parseDate","parsers","parsedValue","parseFn","keySystemsMap","buildBaseUrls","references","baseUrlElements","baseUrlElement","initialBaseUrl","resolvedBaseUrl","finalBaseUrl","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","template","inheritBaseUrls","adaptationSetAttributes","adaptationSetBaseUrls","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","generateKeySystemInformation","contentProtectionNodes","keySystem","psshNode","pssh","parseCaptionServiceMetadata","flags","opt","toEventStream","period","eventStreamAttributes","schemeIdUri","eventAttributes","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","roleAttributes","accessibility","labelVal","contentProtection","toAdaptationSets","mpdAttributes","mpdBaseUrls","adaptationSets","generateContentSteeringInformation","contentSteeringNodes","eventHandler","infoFromContentSteeringTag","getPeriodStart","priorPeriodAttributes","mpdType","inheritAttributes","mpd","manifestUri","periodNodes","periods","priorPeriod","stringToMpdXml","manifestString","parser","xml","parseUTCTimingScheme","UTCTimingNode","parsedManifestInfo","parseUTCTiming","MAX_UINT32","getUint64","uint8","dv","numbers","parseSidx","referenceCount","parseSidx_1","ID3","getId3Size","returnSize","footerPresent","getId3Offset","normalizePath","path","normalizePaths","paths","findBox","complete","results","EBML_TAGS","LENGTH_TABLE","getLength","getvint","removeLength","valueBytes","getInfinityDataSize","innerid","dataHeader","findEbml","dataStart","dataEnd","totalLength","NAL_TYPE_ONE","NAL_TYPE_TWO","EMULATION_PREVENTION","discardEmulationPreventionBytes","positions","newLength","newData","sourceIndex","findNal","dataType","types","nalLimit","nalStart","nalsFound","nalOffset","nalType","findH264Nal","findH265Nal","CONSTANTS","_isLikely","docType","isLikelyTypes","isLikelyFn","isLikely","detectContainerForBytes","isLikelyFmp4MediaSegment","ONE_SECOND_IN_TS","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","seconds","sampleRate","timestamp","timelineStartPts","keepOriginalTimestamps","clock","version$6","hooks_","hooks","hook","removeHook","hookOnce","original","wrapper","FullscreenApi","apiMap","specApi","browserApi","document$1","history","LogByTypeFactory","log","level","lvl","lvlRegExp","resultName","splice","window$1","createLogger$1","delimiter","logByType","subName","subDelimiter","subStyles","resultDelimiter","resultStyles","newName","newDelimiter","newStyles","fname","historyItem","log$1","createLogger","keys","each","reduce","initial","accum","isPlain","merge$1","sources","defineLazyProperty","getValue","setter","set","Obj","IS_IPOD","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","IS_FIREFOX","IS_EDGE","IS_CHROMIUM","IS_CHROME","CHROMIUM_VERSION","CHROME_VERSION","IS_CHROMECAST_RECEIVER","IE_VERSION","IS_SAFARI","IS_WINDOWS","IS_IPAD","IS_IPHONE","IS_TIZEN","IS_WEBOS","IS_SMART_TV","TOUCH_ENABLED","isReal","UAD","USER_AGENT","major","minor","IS_IOS","IS_ANY_SAFARI","browser","isNonBlankString","throwIfWhitespace","isEl","isInFrame","createQuerier","selector","context","ctx","createEl","content","textContent","appendContent","prependTo","hasClass","classToCheck","addClass","classesToAdd","removeClass","classesToRemove","toggleClass","classToToggle","className","setAttributes","attrValue","getAttributes","knownBooleans","attrVal","getAttribute","setAttribute","removeAttribute","blockTextSelection","unblockTextSelection","getBoundingClientRect","rect","computedStyle","findPosition","left","getPointerPosition","translated","transform","transformValue","matrix","boxTarget","boxW","boxH","offsetY","offsetX","emptyEl","normalizeContent","insertContent","isSingleLeftClick","$","$$","computedStyleValue","copyStyleSheetsToWindow","styleSheet","cssRules","rule","style","link","Dom","_windowLoaded","videojs$1","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","wait","vjs","setWindowLoaded","createStyleElement","setTextContent","DomData","_initialGuid","_guid","newGUID","_cleanUpEvents","elem","_handleMultipleEvents","fixEvent","returnTrue","returnFalse","deprecatedProps","_supportsPassive","supportsPassive","passiveEvents","on","hash","handlers","handlersCopy","off","removeType","trigger","elemData","targetData","one","func","any","Events","UPDATE_REFRESH_INTERVAL","bind_","uid","bound","throttle","last","debounce$1","immediate","timeout","cancel","debounced","later","Fn","EVENT_MAP","EventTarget$2","ael","oldTimeout","objName","isEvented","addEventedCallback","isValidEventType","validateTarget","fnName","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","removeListenerOnDispose","removeRemoverOnTargetDispose","largs","targetOrType","typeOrListener","evented","eventBusKey","StatefulMixin","stateUpdates","changes","stateful","defaultState","toLowerCase","w","toTitleCase$1","titleCaseEquals","str1","str2","Str","Component$1","player","ready","tokens","defaultValue","languages","primaryCode","primaryLang","localizedString","names","currentChild","iconName","xmlnsURL","iconContainer","svgEl","useEl","component","componentName","componentClassName","ComponentClass","childFound","compEl","children","parentOptions","handleAdd","workingChildren","Tech","wchild","readyQueue","num","skipListeners","widthOrHeight","pxIndex","computedWidthOrHeight","boundingClientRect","center","touchStart","firstTouch","tapMovementThreshold","touchTimeThreshold","couldBeTap","xdiff","ydiff","noTap","touchHolding","touchEnd","timeoutId","interval","intervalId","idName","cancelName","isVisibleStyleProperty","elementStyle","thisVisibility","isBeingRendered","isVisible","elementCenter","pointContainer","ComponentToRegister","isTech","isComp","reason","Player","players","playerNames","pname","rangeCheck","maxIndex","getRange","valueIndex","rangeIndex","createTimeRangesObj","timeRangesObj","createTimeRanges$1","defaultImplementation","guide","gm","gh","implementation","setFormatTime","customImplementation","resetFormatTime","formatTime","Time","bufferedPercent","buffered","bufferedDuration","MediaError","isPromise","silencePromise","trackToJson_","textTracksToJson","tech","trackEls","trackObjs","trackEl","json","jsonToTextTracks","addedTrack","textTrackConverter","MODAL_CLASS_NAME","ModalDialog","desc","closeable","close","temp","contentEl","parentEl","nextSiblingEl","closeButton","activeEl","playerEl","focusableEls","focusIndex","allChildren","TrackList","tracks","rtrack","disableOthers$1","AudioTrackList","disableOthers","VideoTrackList","TextTrackList","HtmlTrackElementList","trackElements","trackElement","trackElement_","TextTrackCueList","oldLength","defineProp","VideoTrackKind","AudioTrackKind","TextTrackKind","TextTrackMode","Track","trackProps","newLabel","parseUrl","getAbsoluteURL","getFileExtension","pathParts","isCrossOrigin","winLoc","Url","parseCues","srcContent","loadTrack","crossOrigin","withCredentials","XHR","TextTrack","mode","default_","activeCues","changed","disposeHandler","newMode","ct","active","originalCue","removeCue","AudioTrack","enabled","newEnabled","VideoTrack","selected","newSelected","HTMLTrackElement","readyState","NORMAL","REMOTE","ALL","createTrackHelper","kind","props","numBufferedPercent","_isScrubbing","_seconds","trackListChanges","script","remoteTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","manualCleanup","htmlTrackElement","cb","override","_type","srcObj","_Tech","handler","can","sh","originalFn","middlewares","middlewareInstances","TERMINATOR","use","middleware","setSource","setSourceHelper","setTech","mw","get","middlewareIterator","arg","mediate","callMethod","middlewareValue","terminated","returnValue","executeRight","allowedGetters","allowedSetters","allowedMediators","mws","clearCacheForPlayer","getOrCreateFactory","mwFactory","mwf","mwi","lastRun","mwrest","_src","MimetypesKind","getMimetype","ext","findMimetype","matchingSources","filterSource","newsrc","srcobj","fixSource","mimetype","icons","backKeyCode","SpatialNavKeyCodes","keyName","STEP_SECONDS$1","SpatialNavigation","actualEvent","direction","action","nextFocusedElement","isChildrenOfPlayer","currentComponent","focusableComponents","searchForChildrenCandidates","componentsArray","buttonContainer","searchForSuitableChild","suitableChild","curComp","currentFocusedComponent","currentPositions","candidates","bestCandidate","currentCenter","minDistance","candidate","candidateCenter","distance","srcRect","targetRect","center1","center2","dx","dy","spatialNavigation","MediaLoader","options_","j","techName","ClickableComponent","localizedText","PosterImage","darkGray","lightGray","fontMap","constructColor","color","opacity","hex","tryUpdateStyle","getCSSPositionValue","TextTrackDisplay","updateDisplayTextHandler","updateDisplayHandler","screenOrientation","changeOrientationEvent","modes","userPref","firstDesc","firstCaptions","preferredTrack","allowMultipleShowingTracks","showingTracks","descriptionsTrack","captionsSubtitlesTrack","textTrackDisplay","vjsTextTrackCues","controlBarHeight","playerHeight","vjsTextTrackCue","insetStyles","playerWidth","playerAspectRatio","videoAspectRatio","insetInlineMatch","insetBlockMatch","overrides","cueEl","LoadingSpinner","isAudio","playerType","controlText","Button","BigPlayButton","playPromise","playToggle","playFocus","CloseButton","PlayToggle","TimeDisplay","span","oldNode","CurrentTimeDisplay","DurationDisplay","updateContent","TimeDivider","RemainingTimeDisplay","LiveDisplay","SeekToLive","clamp","min","Num","Slider","progress","sizeKey","spatialNavOptions","spatialNavEnabled","horizontalSeek","bool","percentify","LoadProgressBar","loadedText","separator","liveTracker","bufferedEnd","percent","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","STEP_SECONDS","PAGE_KEY_MULTIPLIER","SeekBar","shouldDisableSeekWhileScrubbingOnMobile","currentTime","mouseDown","newTime","seekableStart","seekableEnd","mouseTimeDisplay","gotoFraction","ProgressControl","seekBar","playProgressBar","seekBarEl","PictureInPictureToggle","FullscreenToggle","checkVolumeSupport","VolumeLevel","VolumeLevelTooltip","rangeBarRect","rangeBarPoint","vertical","volumeBarPointPx","volume","MouseVolumeLevelDisplay","VolumeBar","mouseVolumeLevelDisplay","volumeBarEl","volumeBarRect","volumeBarPoint","ariaValue","volumeBeforeDrag","VolumeControl","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","VolumePanel","SkipForward","playerOptions","currentVideoTime","SkipBackward","Menu","childComponent","contentElType","relatedTarget","btn","childComponents","foundComponent","stepChild","MenuButton","buttonClass","handleClick","menu","titleEl","titleComponent","menuButtonClass","TrackButton","updateHandler","MenuItem","menuItemEl","TextTrackMenuItem","changeHandler","selectedLanguageChangeHandler","referenceTrack","shouldBeSelected","selectedLanguage","OffTextTrackMenuItem","allHidden","TextTrackButton","items","TrackMenuItem","ChaptersTrackMenuItem","ChaptersButton","remoteTextTrackEl","mi","DescriptionsButton","disabled","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","parentSpan","SubsCapsButton","AudioTrackMenuItem","AudioTrackButton","PlaybackRateMenuItem","rate","PlaybackRateMenuButton","rates","Spacer","CustomControlSpacer","ControlBar","ErrorDisplay","TextTrackSelect","optionText","optionId","option","TextTrackFieldset","legendElement","selects","selectConfig","selectClassName","guid","textTrackSelect","TextTrackSettingsColors","id_","ElFgColorFieldset","ElBgColorFieldset","ElWinColorFieldset","TextTrackSettingsFont","TrackSettingsControls","defaultsDescription","resetButton","doneButton","LOCAL_STORAGE_KEY$1","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","getSelectedOptionValue","setSelectedOption","TextTrackSettings","textTrackSettingsColors","textTrackSettingsFont","trackSettingsControls","ttDisplay","ResizeManager","RESIZE_OBSERVER_AVAILABLE","debouncedHandler_","unloadListener_","defaults$1","LiveTracker","seekable","deltaTime","liveCurrentTime","isBehind","timeDiff","seekableEnds","seekableStarts","TitleBar","techEl","techAriaAttrs","techAriaAttr","defaults","TransientButton","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","dummy","docFrag","getDescriptor","priority","descriptor","getInnerHTMLDescriptor","firstSourceWatch","innerDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","getSrcDescriptor","setupSourceset","srcDescriptor","oldSetAttribute","oldLoad","Html5","crossoriginTracks","nodes","nodesLength","removeNodes","textTracks","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","restoreTrackMode","storedTrack","lowerCaseType","eventName","elTracks","techTracks","listeners","removeOldTracks","removeTracks","found","clone","tagAttributes","settingsAttrs","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","checkProgress","endFn","beginFn","video","srcUrl","sourceAttributes","sourceElement","sourceElements","videoPlaybackQuality","canControl","muted","playbackRate","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","closest","languagesToLower","playerOptionsCopy","parsedSVG","sprite","majorVersion","playerElIngest","divEmbed","deviceClassNames","defaultsStyleEl","head","links","linkEl","dimension","privDimension","parsedVal","ratio","aspectRatio","idClass","ratioParts","ratioMultiplier","titleTechName","camelTechName","autoplay","techOptions","TechClass","eventObj","safety","resolveMuted","previouslyMuted","restoreMuted","mutedPromise","promise","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","eventSrc","techSrc","request","queued","timeWhenWaiting","timeUpdateListener","targetPlayer","isFs","resolve","isSrcReady","isSafariOrIOS","queue","q","percentAsDecimal","defaultMuted","isFS","oldValue","fullscreenOptions","reject","offHandler","fsOptions","isPiP","pipContainer","pipWindow","pipVideo","userActions","allowedInputTypes","hotkeys","fullscreenKey","keydownEvent","muteKey","playPauseKey","FSToggle","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","foundSourceAndTech","flip","finder","isRetry","middlewareSource","stopListeningForErrors","sourceTech","currentTimeDisplay","durationDisplay","progressControl","remainingTimeDisplay","techAutoplay","newPoster","hookFunction","newErr","triggerSuppressedError","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseMove","handleMouseDown","handleMouseUpAndMouseLeave","controlBar","inactivityTimeout","activityCheck","playerChildren","exitPromises","modal","currentBreakpoint","currentWidth","candidateBreakpoint","maxWidth","breakpoints","artist","artwork","description","poster","title","tt","baseOptions","tagOptions","dataSetup","childName","newRates","navigator","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createBasicPlugin","plugin","basicPluginWrapper","instance","createPluginFactory","PluginSubClass","Plugin","deprecate","warned","deprecateForMajor","oldName","VjsErrors","normalizeId","videojs","rootNode","PlayerComponent","nId","playerId","comp","QualityLevel","enable","QualityLevelList","qualityLevel","removed","version$5","initPlugin$1","originalPluginFn","qualityLevelList","qualityLevels","_resolveUrl","resolveManifestRedirect","req","logger","createTimeRanges","bufferedRangesToString","bufferedRangesStr","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","findRange","findNextRange","findGaps","bufferIntersection","bufferA","bufferB","arity","extents","printableRange","strArr","timeUntilRebuffer","timeRangesToArray","timeRangesList","isRangeDifferent","lastBufferedEnd","timeAheadOf","segmentDurationWithParts","getPartsAndSegments","si","pi","getLastParts","lastSegment","getKnownPartCount","preloadSegment","parts","preloadHints","partCount","liveEdgeDelay","main","backwardDuration","endSequence","forwardDuration","intervalDuration","expired","backward","forward","sumDurations","defaultDuration","durationList","durations","playlistEnd","useSafeLiveEnd","liveEdgePadding","lastSegmentEndTime","getMediaInfoForTime","startingSegmentIndex","startingPartIndex","exactManifestTimings","partsAndSegments","partAndSegment","canUseFudgeFactor","isExactlyAtTheEnd","isExtremelyCloseToTheEnd","isExcluded","isIncompatible","isEnabled","excluded","isDisabled","isAes","hasAttribute","estimateSegmentRequestTime","bandwidth","bytesReceived","isLowestEnabledRendition","currentBandwidth","playlistMatch","someAudioVariant","AUDIO","groupName","variant","CODECS","Playlist","createPlaylistID","groupID","parseManifest","onwarn","oninfo","customTagParsers","customTagMappers","llhls","customParser","setupMediaPlaylist","setupMediaPlaylists","resolveMediaGroupUris","mainForMedia","addPropertiesToMain","createGroupID","phonyUri","audioOnlyMain","groupId","DateRangesStorage","firstSegment","dateRanges","pendingDateRange","dateRangeClasses","dateRangesToProcess","classList","QUOTA_EXCEEDED_ERR","getStreamingNetworkErrorMetadata","requestType","parseFailure","isBadStatus","isFailure","errorMetadata","isBadStatusOrParseFailure","errorType","EventTarget$1","addLLHLSQueryDirectives","parameters","nextMSN","nextPart","parsedUri","updateSegment","updateSegments","update","oldSegments","newSegments","newIndex","newSegment","resolveSegmentUris","baseUri","getAllSegments","isPlaylistUnchanged","updateMain$1","newMedia","unchangedCheck","oldMedia","mergedPlaylist","refreshDelay","lastPart","lastDuration","playlistMetadataPayload","isLive","renditions","BANDWIDTH","RESOLUTION","PlaylistLoader","vhs","vhsOptions","mediaPlaylist","availableDateRanges","startingState","playlistString","playlistObject","metadata","oldRequest","shouldDelay","delay","mediaChange","mainPlaylistRef","isUpdate","pathway","oldPlaylistUri","oldPlaylistId","newPlaylistUri","newPlaylistId","updatedPlaylist","oldMediaPlaylist","basePlaylist","playlistId","baseID","newUri","newPlaylistID","newMediaPlaylist","newProps","baseURI","oldAttributes","keyIds","keysystem","keyId","callbackWrapper","reqResponse","callAllRequestHooks","requestSet","newOptions","requestCallback","callAllResponseHooks","responseSet","responseCallback","xhrFactory","XhrFunction","beforeRequest","_requestCallbackSet","_responseCallbackSet","xhrMethod","beforeRequestOptions","originalAbort","byterangeStr","byterangeEnd","byterangeStart","segmentXhrHeaders","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","initSegmentId","segmentKeyId","hexDump","ascii","tagDump","textRanges","utils","SEGMENT_END_FUDGE_PERCENT","playerTimeToProgramTime","playerTime","transmuxerPrependedSeconds","startOfSegment","offsetFromSegmentStart","originalSegmentVideoDuration","videoTimingInfo","findSegmentForProgramTime","programTime","dateTimeObject","nextSegmentStart","lastSegmentStart","lastSegmentDuration","lastSegmentEnd","findSegmentForPlayerTime","segmentEnd","getOffsetFromTimestamp","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","verifyProgramDateTimeTags","getProgramTime","matchedSegment","programTimeObject","seekToProgramTime","retryCount","seekTo","pauseAfterSeek","mediaOffset","seekToTime","seekedCallback","callbackOnCompleted","containerRequest","id3Offset","finished","endRequestAndCallback","_bytes","progressListener","newPart","loaded","EventTarget","dashPlaylistUnchanged","aSegment","bSegment","aByterange","bByterange","dashGroupId","parseMainXml","mainXml","removeOldMediaGroupLabels","newMain","updateMain","oldMain","noChanges","playlistUpdate","equivalentSidx","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","filterChangedSidxMappings","mediaGroupSidx","DashPlaylistLoader","srcUrlOrPlaylist","mainPlaylistLoader","fin","REQUEST_TYPE","sidxContainer","sidxChanged","isFinalRendition","mainChanged","done","utcTiming","serverTime","location","endList","parsedManifest","mpl","mup","mediaID","mediaChanged","createMediaUpdateTimeout","metadataArray","eventStreamNode","defaultKID","Config","stringToArrayBuffer","browserWorkerPolyFill","workerObj","createObjectURL","blob","factory","objectUrl","worker","terminate","getWorkerString","workerCode$1","commonjsGlobal","Stream$8","flushSource","stream","MAX_UINT32$1","getUint64$5","dinf","esds","ftyp","mdat","mfhd","minf","moof","moov","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun$1","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","sequenceNumber","trackFragments","samples","videoSample","audioSample","sps","pps","sequenceParameterSets","pictureParameterSets","avc1Box","hSpacing","vSpacing","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","dataOffset","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","bytesOffest","header","sample","mp4Generator","fileType","movie","groupNalsIntoFrames","nalUnits","currentNal","currentFrame","frames","groupFramesIntoGops","currentGop","gops","extendFirstKeyFrame","createDefaultSample","sampleForFrame","frame","generateSampleTable$1","baseDataOffset","concatenateNalData","nalsByteLength","numberOfNals","totalByteLength","generateSampleTableForFrame","concatenateNalDataForFrame","frameUtils$1","highPrefix","lowPrefix","zeroFill","makeTable","metaTable","silence","silence_1","coneOfSilence","ONE_SECOND_IN_TS$4","clock$2","clock$1","sumFrameByteLengths","currentObj","sum","prefixWithSilence","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","audioGapDuration","audioFillFrameCount","audioFillDuration","silentFrame","firstFrame","trimAdtsFramesByEarliestDts","adtsFrames","earliestAllowedDts","generateSampleTable","concatenateFrameData","audioFrameUtils$1","ONE_SECOND_IN_TS$3","collectDtsInfo","clearDtsInfo","calculateTrackBaseMediaDecodeTime","baseMediaDecodeTime","scale","minSegmentDts","trackDecodeInfo$1","USER_DATA_REGISTERED_ITU_T_T35","RBSP_TRAILING_BITS","parseSei","payloadType","payloadSize","userIdentifier","parseUserData","sei","parseCaptionPackets","pts","userData","discardEmulationPreventionBytes$1","emulationPreventionBytesPositions","captionPacketParser","Stream$7","cea708Parser","CaptionStream$2","Cea608Stream","Cea708Stream","cc","newCaptionPackets","flushType","idx","packet","ccStream","CHARACTER_TRANSLATION_708","get708CharFromCode","newCode","within708TextBlock","Cea708Window","windowNum","Cea708Service","serviceNum","encoding","beforeRowOverflow","captionServiceEncodings","serviceProps","serviceName","byte0","byte1","packet708","packetData","blockSize","isExtended","isMultiByte","extended","currentByte","nextByte","char","charCodeArray","toHexString","byteArray","unicode","firstByte","secondByte","winAttr","displayedText","winId","penAttr","penColor","penLoc","CHARACTER_TRANSLATION","getCharFromCode","BOTTOM_ROW","ROWS","createDisplayBuffer","field","dataChannel","swap","char0","char1","indentations","logWarning","newBaseRow","baseRow","captionStream","streamTypes","Stream$6","MAX_TS","RO_THRESH","TYPE_SHARED","handleRollover$1","TimestampRolloverStream$1","lastDTS","referenceDTS","timestampRolloverStream","typedArrayIndexOf$1","typedArray","fromIndex","currentIndex","typedArrayIndexOf","textEncodingDescriptionByte","percentEncode$1","parseUtf8","parseIso88591$1","parseSyncSafeInteger$1","frameParsers","mimeTypeEndIndex","descriptionEndIndex","LINK_MIME_TYPE","parseId3Frames$1","frameSize","frameHeader","frameStart","tagSize","hasExtendedHeader","parseId3","Stream$5","StreamTypes$3","id3","MetadataStream","bufferSize","d","metadataStream","Stream$4","CaptionStream$1","StreamTypes$2","TimestampRolloverStream","TransportPacketStream","TransportParseStream","ElementaryStream","MP2T_PACKET_LENGTH$1","SYNC_BYTE$1","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","psi","pat","pmt","sectionLength","tableEnd","programInfoLength","streamType","pid","segmentHadPmt","audio","timedMetadata","programMapTable","parsePes","pes","ptsDtsFlags","startPrefix","flushStream","forceFlush","packetFlushable","fragment","m2ts$1","m2ts_1","Stream$3","ONE_SECOND_IN_TS$2","AdtsStream$1","ADTS_SAMPLING_FREQUENCIES$1","handlePartialSegments","frameNum","frameLength","protectionSkipBytes","oldBuffer","sampleCount","adtsFrameDuration","skip","adts","ExpGolomb$1","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","workingBytes","availableBytes","skipBytes","bits","valu","leadingZeroCount","clz","expGolomb","Stream$2","ExpGolomb","H264Stream$1","NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","syncPoint","swapBuffer","nalByteStream","trackId","currentPts","currentDts","readSequenceParameterSet","skipScalingList","expGolombDecoder","lastScale","nextScale","deltaScale","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","profileIdc","levelIdc","profileCompatibility","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","aspectRatioIdc","h264","ADTS_SAMPLING_FREQUENCIES","parseId3TagSize","isLikelyAacData$1","parseSyncSafeInteger","percentEncode","parseIso88591","parseAdtsSize","lowThree","middle","highTwo","parseType$5","parseSampleRate","parseAacTimestamp","owner","Stream$1","aacUtils","AacStream$1","timeStamp","bytesLeft","tempLength","aac","AUDIO_PROPERTIES$1","audioProperties","VIDEO_PROPERTIES$1","videoProperties","mp4","frameUtils","audioFrameUtils","trackDecodeInfo","m2ts","AdtsStream","H264Stream","AacStream","isLikelyAacData","ONE_SECOND_IN_TS$1","AUDIO_PROPERTIES","VIDEO_PROPERTIES","VideoSegmentStream","AudioSegmentStream","Transmuxer","CoalesceStream","retriggerForStream","addPipelineLogRetriggers","transmuxer","pipeline","arrayEquals","generateSegmentTimingInfo","startDts","startPts","endDts","endPts","prependedContentDuration","ptsOffsetFromDts","decodeDuration","presentationDuration","earliestDts","videoClockCyclesOfSilencePrefixed","gopsToAlignWith","nalUnit","gopForFusion","firstGop","lastGop","alignedGops","gop","halfSecond","nearestDistance","dtsDistance","nearestGopObj","currentGopObj","alignIndex","gopIndex","byteLength","nalCount","alignEndIndex","matchFound","trimIndex","newGopsToAlignWith","output","caption","hasFlushed","videoTrack","audioTrack","timelineStartInfo","id3Frame","isAac","toUnsigned$3","toHexString$1","bin","parseType$4","parseType_1","toUnsigned$2","parseType$3","findBox$5","subresults","findBox_1","toUnsigned$1","getUint64$4","tfdt","parseTfdt$3","tfhd","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","parseTfhd$2","parseSampleFlags$1","parseSampleFlags_1","parseSampleFlags","trun","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","parseTrun$2","mp4Inspector","uint8ToCString$1","curChar","retString","uint8ToCString","getUint64$1","parseEmsgBox","boxData","scheme_id_uri","presentation_time","presentation_time_delta","event_duration","message_data","emsgBox","isValidEmsgBox","scaleTime","timeDelta","emsg","hasScheme","isValidV0Box","isDefined","isValidV1Box","emsg$1","toUnsigned","findBox$3","parseType$1","parseTfhd$1","parseTrun$1","parseTfdt$2","compositionStartTime","getVideoTrackIds","getTracks","getTimescaleFromMediaHeader$1","getEmsgID3","window$2","parseId3Frames","init","traks","trafs","lowestTime","baseTime","timescales","trafBoxes","parsedTfhd","parsedTfdt","parsedTrun","videoTrackIds","hdlrs","tkhds","handlerType","tkhdVersion","sampleDescriptions","codecBox","codecConfig","codecConfigType","segmentData","emsgBoxes","parsedBox","parsedId3Frames","probe$2","parseTrun","findBox$2","getMdatTrafPairs$2","mdats","mdatTrafPairs","matchingTraf","parseSamples$2","truns","defaultSampleDuration","defaultSampleSize","allSamples","trackRun","CaptionStream","findBox$1","parseTfdt$1","parseTfhd","getMdatTrafPairs$1","parseSamples$1","mapToSample","approximateOffset","findSeiNals","avcStream","avcView","seiNal","lastMatchedSample","matchingSample","parseCaptionNals","videoTrackId","captionNals","pair","headerInfo","parseEmbeddedCaptions","trackNals","CaptionParser","isInitialized","segmentCache","parsedCaptions","parsingPartial","parsedData","cachedSegment","nals","nal","captionParser","parseTfdt","getTimescaleFromMediaHeader","parseSamples","getMdatTrafPairs","webvttParser","vttCues","mdatBox","trafBox","tfdtBox","tfhdBox","trunBoxes","mdatOffset","UTF_8","textDecoder","sampleData","vttcBox","paylBox","sttgBox","cueText","StreamTypes$1","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","parseType","pmtPid","pusi","payloadOffset","parsePesType","parsePesTime","parseNalUnitType","videoPacketContainsKeyFrame","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","probe$1","StreamTypes","handleRollover","probe","MP2T_PACKET_LENGTH","SYNC_BYTE","parsePsi_","table","parseAudioPes_","pesType","parsed","endLoop","parseVideoPes_","firstKeyFrame","adjustTimestamp_","baseTimestamp","audioBaseTimestamp","info","videoBaseTimestamp","inspectAac_","audioCount","audioTimescale","inspectTs_","inspect","isAacData","tsInspector","wireTransmuxerEvents","initArray","gopInfo","timingInfo","videoSegmentTimingInfo","audioSegmentTimingInfo","trackInfo","audioTimingInfo","MessageHandlers","id3Frames","baseStartTime","tsStartTime","timeInfo","timestampOffset","TransmuxWorker","handleData_","transmuxedData","captionStreams","videoFrameDtsTime","videoFramePtsTime","handleDone_","handleGopInfo_","processTransmux","audioAppendStart","remux","onData","onTrackInfo","onAudioTimingInfo","onVideoTimingInfo","onVideoSegmentTimingInfo","onAudioSegmentTimingInfo","onId3","onCaptions","onDone","onEndedTimeline","onTransmuxerLog","isEndOfTimeline","triggerSegmentEventFn","waitForEndedTimelineEvent","handleMessage","dequeue","handleError","segmentInfoPayload","byteOffset","processAction","enqueueAction","reset","endTimeline","transmux","createTransmuxer","term","segmentTransmuxer","workerCallback","endAction","listenForEndEvent","isArrayBuffer","transfers","REQUEST_ERRORS","WEB_VTT_CODEC","abortAll","activeXhrs","getRequestStats","getProgressStats","progressEvent","stats","handleErrors","handleKeyResponse","finishProcessingFn","errorObj","keyInfo","initMp4Text","parseMp4TextSegment","doneFn","mp4VttCues","parseInitSegment","handleInitSegmentResponse","parseError","handleSegmentResponse","responseType","newBytes","transmuxAndNotify","trackInfoFn","timingInfoFn","videoSegmentTimingInfoFn","audioSegmentTimingInfoFn","id3Fn","captionsFn","endedTimelineFn","dataFn","fmp4Tracks","isMuxed","audioStartFn","audioEndFn","videoStartFn","videoEndFn","finish","dispatchType","probeResult","handleSegmentBytes","bytesAsUint8Array","finishLoading","emsgData","decrypt","encryptedBytes","decryptionWorker","decryptionHandler","decrypted","decryptError","keyBytes","decryptSegment","decryptedBytes","waitForCompletion","didError","segmentFinish","handleLoadEnd","loadendState","abortFn","handleProgress","progressFn","mediaSegmentRequest","xhrOptions","keyRequestOptions","keyRequestCallback","keyXhr","mapKeyRequestOptions","mapKeyRequestCallback","mapKeyXhr","initSegmentOptions","initSegmentRequestCallback","initSegmentXhr","segmentRequestOptions","segmentRequestCallback","segmentXhr","activeXhr","logFn$1","getCodecs","mediaAttributes","isMaat","unwrapCodecList","codecList","codecCount","codecObj","codecsForPlaylist","codecInfo","defaultCodecs","logFn","representationToString","safeGetComputedStyle","property","stableSort","sortFn","newArray","right","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","comparePlaylistResolution","leftWidth","rightWidth","simpleSelector","playerBandwidth","limitRenditionByPlayerDimensions","playlistController","sortedPlaylistReps","rep","enabledPlaylistReps","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","leastPixelDiffRep","leastPixelDiffList","lastBandwidthSelector","pixelRatio","movingAverageBandwidthSelector","decay","average","lastSystemBandwidth","minRebufferMaxBandwidthSelector","syncController","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","lowestBitrateCompatibleVariantSelector","concatSegments","segmentObj","compactSegmentUrlDescription","resolvedUri","createCaptionsTrackIfNotExists","inbandTextTracks","instreamId","captionService","addCaptionData","captionArray","Cue","deprecateOldCue","addMetadata","videoDuration","metadataTrack","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","finiteDuration","nextTime","dateRangeAttr","dateRangeKeysToOmit","addDateRangeMetadata","createMetadataTrackIfNotExists","removeCuesFromTrack","removeDuplicateCuesFromTrack","uniqueCues","cueKey","gopsSafeToAlignWith","mapping","currentTimePts","updateGopBuffer","replace","removeGopBuffer","updatedBuffer","shallowEqual","akeys","bkeys","getSyncSegmentCandidate","targetTime","timelineSegments","MIN_BACK_BUFFER","CHECK_BUFFER_DELAY","finite","MIN_SEGMENT_DURATION_TO_SAVE_STATS","illegalMediaSwitch","loaderType","startingMedia","safeBackBufferTrimTime","trimTime","maxTrimTime","segmentInfoString","seq","segmentLen","selection","hasPartIndex","zeroBasedPartCount","timingInfoPropertyForMedia","timestampOffsetForSegment","overrideCheck","shouldWaitForTimelineChange","timelineChangeController","audioDisabled","lastMainTimelineChange","pendingAudioTimelineChange","shouldFixBadTimelineChanges","pendingMainTimelineChange","hasPendingTimelineChanges","differentPendingChanges","isAudioTimelineBehind","segmentLoader","checkAndFixTimelines","mediaDuration","timingInfos","maxDuration","typeTimingInfo","segmentTooLong","getTroublesomeSegmentDurationMessage","sourceType","isSegmentWayTooLong","isSegmentSlightlyTooLong","segmentTooLongMessage","isEncrypted","isMediaInitialization","SegmentLoader","newState","requestId","hasAudio","hasVideo","storedMap","storedKey","newPlaylist","oldId","mediaSequenceDiff","mediaIndex","isFmp4","force","removesRemaining","removeFinished","appendedLastSegment","appendedLastPart","bufferedTime","preloaded","haveEnoughBuffer","syncInfo","mediaInfoForTime","nextSegment","hasIndependentSegments","lastSegmentLastPart","ended","finalTargetTime","mediaSequenceSyncInfo","nextMediaSequenceSyncInfo","independent","isSyncRequest","forceTimestampOffset","audioBufferedEnd","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$1","switchCandidate","timeSavedBySwitching","minimumTimeSaving","simpleSegment","timeType","timingInfoProperty","captionData","captionTracks","captionTrack","trackName","callQueue","fun","loadQueue","useVideoTimingInfo","firstVideoFrameTimeForData","audioBuffered","videoBuffered","audioBufferStart","audioBufferEnd","videoBufferStart","videoBufferEnd","timeToRemoveUntil","segmentTimingInfo","isEndOfStream","isWalkingForward","isDiscontinuity","removeToTime","previousSegment","iv","timelineMapping","currentStart","currentVideoTimestampOffset","waitForVideo","waitForAudio","illegalMediaSwitchError","didChange","prioritizedTimingInfo","segmentDurationMessage","badSegmentGuess","badPartGuess","segmentProcessingTime","segmentProcessingThroughput","toTitleCase","bufferTypes","updating","sourceUpdater","sourceBuffer","nextQueueIndexOfType","queueEntry","shiftQueue","queueIndex","cleanupBuffer","titleType","inSourceBuffers","mediaSource","actions","onError","mime","newCodecBase","oldCodec","pushQueue","onUpdateend","bufferedRangesForType","descriptiveString","SourceUpdater","que","uint8ToUtf8","uintArray","bufferToHexString","uInt8Buffer","VTT_LINE_TERMINATORS","NoVttJsError","VTTSegmentLoader","combinedByteLength","combinedSegment","checkTimestampOffset","isMp4WebVttSegmentWithCues","isVttType","isTextResult","vttCue","cueSetting","keyValString","decodeBytesToString","mapData","mappingObj","MPEGTS","LOCAL","diff","firstStart","lastStart","valueIn90khz","referenceIn90khz","findAdCue","mediaTime","updateAdCues","adOffset","adTotal","SyncInfo","appended","SyncInfoData","segmentSyncInfo","partsSyncInfo","partSyncInfo","MediaSequenceSync","syncInfoData","startingMediaSequence","startingTime","newStorage","newDiagnostics","currentMediaSequence","prevSyncInfoData","segmentStart","segmentIsAppended","currentPartStart","partStart","partEnd","partIsAppended","fallback","minMediaSequenceFromStorage","DependantMediaSequenceSync","MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC","syncPointStrategies","mediaSequenceSync","lastDistance","datetimeMapping","z","discontinuity","discontinuitySync","SyncController","syncPoints","syncPointInfo","strategy","selectedSegment","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","shouldSaveTimelineMapping","didCalculateSegmentTimeMapping","dateTime","mediaIndexDiff","accuracy","TimelineChangeController","to","workerCode","unpad","padded","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","x8","tEnc","tDec","aesTables","AES","tmp","keyLen","rcon","encKey","decKey","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","AsyncStream","job","ntoh","word","encrypted","initVector","encrypted32","decipher","decrypted32","init0","init1","init2","init3","wordIx","Decrypter","audioTrackKind_","stopLoaders","startLoaders","playlistLoader","onGroupChanged","mainSegmentLoader","activeTrack","activeGroup","previousActiveLoader","lastGroup","onGroupChanging","onTrackChanged","lastTrack","pc","excludePlaylist","defaultTrack","setupListeners","requestOptions","initialize","mediaGroups","logger_","variantLabel","groupMatch","variants","groupKeys","groupPropertyList","getActiveGroup","activeTrack_","setupMediaGroups","audioSegmentLoader","onAudioTrackChanged","createMediaTypes","SteeringManifest","ContentSteeringController","steeringTag","steeringUri","reloadUri","errorInfo","retrySeconds","steeringManifestJson","parsedMetadata","steeringUrl","steeringUrlObject","proxyServerUrlObject","dataUri","urlObject","networkThroughput","pathwayKey","throughputKey","steeringJson","nextPathway","pathwaysByPriority","proxyURI","steeringURI","ttl","ttlMS","baseURL","newTag","debounce","ABORT_EARLY_EXCLUSION_SECONDS","Vhs$1","loaderStats","sumLoaderStat","stat","shouldSwitchToMedia","currentPlaylist","nextPlaylist","bufferLowWaterLine","bufferHighWaterLine","bufferBasedABR","sharedLogLine","isBuffered","forwardBuffer","maxBufferLowWaterLine","nextBandwidth","currBandwidth","logLine","PlaylistController","externVhs","useCueTags","playlistExclusionDuration","enableLowInitialPlaylist","cacheEncryptionKeys","leastPixelDiffSelector","experimentalUseMMS","maxPlaylistRetries","segmentLoaderSettings","onLoad","getBandwidth","timeToLoadedDataStart","newId","dashMediaPlaylists","defaultPlaylists","defaultGroup","requestTimeout","selectedMedia","defaultDemuxed","audioGroupKeys","updateCodecs","startPoint","mainMediaInfo","absolutePlaylistEnd","playlistToExclude","reIncludeDelay","reincluded","excludeUntil","errorMessage","delayDuration","filter","fnNames","loaders","dontFilterPlaylist","loader","calculatedEnd","mainSeekable","audioSeekable","mainStart","mainEnd","audioStart","audioEnd","oldSeekable","usingAudioLoader","hasMainMediaInfo","hasAudioMediaInfo","playlistCodecs","supportFunction","unsupportedCodecs","unsupportedAudio","supporter","switchMessages","newCodec","ids","unsupported","codecCount_","videoDetails","audioDetails","exclusionReasons","variantCodecs","variantCodecCount","variantVideoDetails","variantAudioDetails","newMax","availablePathways","newPathways","serviceLocation","currentPathway","didEnablePlaylists","pathwayId","differentPathwayId","noExcludeUntil","currentPathwayClones","nextPathwayClones","oldClone","aParams","bParams","nonUsableKeyStatusCount","NON_USABLE","keyIdSet","USABLE","hasUsableKeyStatus","nonUsableExclusion","isNonHD","excludedForNonUsableKey","formattedKeyIdString","enableFunction","playlistID","changePlaylistFn","incompatible","currentlyEnabled","Representation","vhsHandler","qualityChangeFunction","renditionSelectionMixin","timerCancelEvents","PlaybackWatcher","playHandler","canPlayHandler","waitingHandler","cancelTimerHandler","loaderTypes","loaderChecks","setSeekingHandlers","isBufferedDifferent","isAfterSeekableRange","minAppendedDuration","bufferedToCheck","nextRange","livePoint","allowSeeksWithinUnsafeLiveWindow","allowedEnd","isLLHLS","gap","lastVideoRange","videoRange","audioRange","scheduledCurrentTime","gaps","defaultOptions","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reinitPlugin","reloadSourceOnError","version$4","version$3","version$2","version$1","Vhs","LOCAL_STORAGE_KEY","handleVhsMediaChange","selectedIndex","handleVhsLoadedMetadata","emeKeySystems","keySystemOptions","audioPlaylist","videoContentType","audioContentType","keySystemContentTypes","getAllPsshKeySystemsOptions","keySystems","keySystemsArr","keySystemsOptions","keySystemsObj","waitForKeySessionCreation","sourceKeySystems","audioMedia","mainPlaylists","keySystemsOptionsArr","initializationFinishedPromises","keySessionCreatedPromises","setupEmeOptions","sourceOptions","getVhsLocalStorage","storedObject","updateVhsLocalStorage","objectToStore","expandDataUri","addOnRequestHook","addOnResponseHook","removeOnRequestHook","removeOnResponseHook","canItPlay","Component","VhsHandler","_player","fullscreenElement","customPixelRatio","playbackWatcherOptions","defaultSelector","selectPlaylist","throughput","playerBandwidthEst","networkInformation","tenMbpsAsBitsPerSecond","networkInfoBandwidthEstBitsPerSec","invBandwidth","invThroughput","audioPlaylistLoader","didSetupEmeOptions","playlistControllerEvents","playbackWatcher","VhsSourceHandler","simpleType","overrideNative","defaultOverrideNative","supportsNativeMediaSources","_interopRequireDefault","VolumeOff","_createSvgIcon","_jsxRuntime","VolumeUp","MuteButton","playerRef","isMuted","setIsMuted","useState","useEffect","jsx","newMuteState","VolumeOffIcon","VolumeUpIcon","drmCall","bingeToken","modifiedOptions","searchParam","resp","checkValidSource","res","VideoJSPlayer","videoId","_hlsStreamUrl","isActive","redirectPath","initialTime","onTimeUpdate","useRef","isValid","setIsValid","valid","handlePlayerReady","videoJsOptions","videoRef","setPlaybackRate","onReady","GetCookiesValue","videoElement","_e","Fragment","jsxs","Image"],"mappings":"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A,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAAA,IAER,KAAQ;AAAA;AAA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36]}